using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace PhoneDictionary.Data.Infrastructure.Migrations
{
    public partial class Initial : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Moderators",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Login = table.Column<string>(type: "TEXT", nullable: true),
                    Password = table.Column<string>(type: "TEXT", maxLength: 32, nullable: true),
                    CreatedAt = table.Column<DateTime>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Moderators", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Users",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Name = table.Column<string>(type: "TEXT", nullable: true),
                    CreatedAt = table.Column<DateTime>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Users", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Contacts",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Value = table.Column<string>(type: "TEXT", nullable: true),
                    ContactType = table.Column<int>(type: "INTEGER", nullable: false),
                    UserId = table.Column<int>(type: "INTEGER", nullable: false),
                    ContactInfoId = table.Column<int>(type: "INTEGER", nullable: true),
                    CreatedAt = table.Column<DateTime>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Contacts", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Contacts_Users_UserId",
                        column: x => x.UserId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Tags",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Text = table.Column<string>(type: "TEXT", nullable: true),
                    Color = table.Column<string>(type: "TEXT", nullable: true),
                    UserId = table.Column<int>(type: "INTEGER", nullable: false),
                    CreatedAt = table.Column<DateTime>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Tags", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Tags_Users_UserId",
                        column: x => x.UserId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ContactInfos",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Country = table.Column<string>(type: "TEXT", nullable: true),
                    City = table.Column<string>(type: "TEXT", nullable: true),
                    Provider = table.Column<string>(type: "TEXT", nullable: true),
                    ContactId = table.Column<int>(type: "INTEGER", nullable: false),
                    CreatedAt = table.Column<DateTime>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ContactInfos", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ContactInfos_Contacts_ContactId",
                        column: x => x.ContactId,
                        principalTable: "Contacts",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "Moderators",
                columns: new[] { "Id", "CreatedAt", "Login", "Password" },
                values: new object[] { 1, new DateTime(2021, 3, 3, 12, 13, 33, 159, DateTimeKind.Local).AddTicks(4255), "admin", "qwerty" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 203, new DateTime(2020, 9, 6, 2, 40, 59, 373, DateTimeKind.Local).AddTicks(6355), "Устим Ромей" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 202, new DateTime(2020, 10, 16, 2, 20, 25, 918, DateTimeKind.Local).AddTicks(9791), "Наталія Москалюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 201, new DateTime(2020, 6, 24, 21, 25, 48, 281, DateTimeKind.Local).AddTicks(9766), "Лук’ян Корнїйчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 200, new DateTime(2020, 9, 7, 21, 57, 38, 973, DateTimeKind.Local).AddTicks(81), "Оріяна Сідлецька" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 199, new DateTime(2020, 5, 4, 7, 8, 19, 199, DateTimeKind.Local).AddTicks(563), "Аркадія Унич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 198, new DateTime(2021, 1, 7, 16, 56, 15, 342, DateTimeKind.Local).AddTicks(1627), "Зоремир Марків" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 204, new DateTime(2020, 3, 21, 7, 32, 59, 236, DateTimeKind.Local).AddTicks(7660), "Добромила Юрчишина" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 197, new DateTime(2020, 11, 3, 7, 48, 32, 19, DateTimeKind.Local).AddTicks(8248), "Антонія Данилко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 195, new DateTime(2020, 3, 22, 9, 44, 3, 591, DateTimeKind.Local).AddTicks(1085), "Макар Горовий" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 194, new DateTime(2021, 1, 19, 20, 52, 50, 173, DateTimeKind.Local).AddTicks(89), "Болеслав Петрин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 193, new DateTime(2020, 5, 15, 0, 8, 16, 239, DateTimeKind.Local).AddTicks(5019), "Градимир Дідух" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 192, new DateTime(2021, 2, 3, 8, 58, 59, 955, DateTimeKind.Local).AddTicks(3591), "Борислава Мотрієнко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 191, new DateTime(2020, 7, 13, 13, 48, 33, 0, DateTimeKind.Local).AddTicks(8757), "Марко Сірко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 190, new DateTime(2020, 4, 14, 21, 58, 39, 295, DateTimeKind.Local).AddTicks(7526), "Петро Ногачевський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 196, new DateTime(2021, 1, 31, 10, 42, 19, 99, DateTimeKind.Local).AddTicks(6746), "Степан Могилевський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 205, new DateTime(2021, 1, 16, 19, 27, 9, 18, DateTimeKind.Local).AddTicks(365), "Листвич Балабан" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 206, new DateTime(2021, 1, 28, 6, 29, 42, 857, DateTimeKind.Local).AddTicks(1314), "Добромисла Могилевська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 207, new DateTime(2020, 3, 20, 5, 18, 42, 947, DateTimeKind.Local).AddTicks(8262), "Аврора Демків" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 222, new DateTime(2020, 5, 17, 7, 24, 12, 602, DateTimeKind.Local).AddTicks(524), "Жозефіна Спотикач" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 221, new DateTime(2020, 4, 18, 14, 3, 6, 433, DateTimeKind.Local).AddTicks(2635), "Афанасій Мазило" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 220, new DateTime(2020, 10, 7, 4, 52, 3, 256, DateTimeKind.Local).AddTicks(4806), "Тиміш Ліхно" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 219, new DateTime(2020, 8, 13, 15, 58, 30, 184, DateTimeKind.Local).AddTicks(7749), "Лада Дурдинець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 218, new DateTime(2020, 8, 26, 11, 46, 10, 264, DateTimeKind.Local).AddTicks(5592), "Руслана Гнатишина" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 217, new DateTime(2020, 10, 2, 8, 21, 3, 478, DateTimeKind.Local).AddTicks(1187), "Альбіна Волощук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 216, new DateTime(2020, 3, 22, 0, 0, 25, 61, DateTimeKind.Local).AddTicks(3139), "Мирослав Москалюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 215, new DateTime(2020, 6, 4, 12, 37, 36, 348, DateTimeKind.Local).AddTicks(8107), "Ксенія Корнїйчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 214, new DateTime(2020, 11, 19, 13, 33, 46, 602, DateTimeKind.Local).AddTicks(8048), "Пантелеймон Коломієць" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 213, new DateTime(2020, 6, 17, 12, 53, 2, 112, DateTimeKind.Local).AddTicks(6789), "Арсен Горбач" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 212, new DateTime(2021, 2, 9, 15, 2, 34, 898, DateTimeKind.Local).AddTicks(7020), "Ореста Башук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 211, new DateTime(2020, 5, 26, 21, 21, 22, 179, DateTimeKind.Local).AddTicks(8360), "Родослав Троян" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 210, new DateTime(2020, 11, 9, 15, 0, 22, 664, DateTimeKind.Local).AddTicks(8800), "Стожар Борецький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 209, new DateTime(2020, 11, 28, 22, 47, 33, 969, DateTimeKind.Local).AddTicks(7121), "Радимир Дзюба" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 208, new DateTime(2020, 7, 25, 8, 41, 22, 399, DateTimeKind.Local).AddTicks(5863), "Даромир Сідляк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 189, new DateTime(2020, 7, 1, 13, 53, 20, 506, DateTimeKind.Local).AddTicks(8792), "Руслана Щербак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 188, new DateTime(2020, 10, 3, 15, 27, 33, 488, DateTimeKind.Local).AddTicks(9041), "Діяна Поривайло" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 187, new DateTime(2020, 10, 17, 19, 35, 11, 415, DateTimeKind.Local).AddTicks(3763), "Славолюб Карпух" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 186, new DateTime(2020, 11, 11, 6, 25, 0, 984, DateTimeKind.Local).AddTicks(2528), "Лариса Іванишина" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 166, new DateTime(2020, 9, 3, 12, 4, 41, 867, DateTimeKind.Local).AddTicks(7756), "Борис Гордійчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 165, new DateTime(2020, 4, 15, 11, 28, 43, 931, DateTimeKind.Local).AddTicks(1901), "Божен Лучко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 164, new DateTime(2020, 6, 11, 3, 51, 34, 319, DateTimeKind.Local).AddTicks(7078), "Аскольд Яловий" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 163, new DateTime(2020, 6, 23, 8, 14, 48, 474, DateTimeKind.Local).AddTicks(9987), "Віліна Вередун" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 162, new DateTime(2020, 11, 11, 18, 47, 19, 8, DateTimeKind.Local).AddTicks(7013), "Божена Бандера" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 161, new DateTime(2020, 5, 13, 12, 16, 34, 286, DateTimeKind.Local).AddTicks(212), "Злат Ганич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 160, new DateTime(2020, 5, 3, 15, 46, 26, 686, DateTimeKind.Local).AddTicks(9715), "Станислава Глинська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 159, new DateTime(2020, 6, 26, 16, 39, 34, 888, DateTimeKind.Local).AddTicks(1573), "Мечислава Городоцька" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 158, new DateTime(2020, 12, 15, 4, 4, 38, 455, DateTimeKind.Local).AddTicks(583), "Ярослав Брицький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 157, new DateTime(2020, 8, 5, 14, 43, 14, 25, DateTimeKind.Local).AddTicks(2577), "Раїна Янюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 156, new DateTime(2020, 11, 27, 23, 15, 8, 621, DateTimeKind.Local).AddTicks(3070), "Немира Демків" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 155, new DateTime(2021, 2, 25, 8, 48, 33, 376, DateTimeKind.Local).AddTicks(3559), "Охрім Шумило" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 154, new DateTime(2020, 9, 19, 10, 37, 5, 360, DateTimeKind.Local).AddTicks(23), "Роксолана Розпутня" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 153, new DateTime(2021, 2, 20, 18, 9, 33, 774, DateTimeKind.Local).AddTicks(2239), "Володислав Яворівський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 152, new DateTime(2020, 11, 12, 14, 21, 37, 48, DateTimeKind.Local).AddTicks(924), "Пантелеймон Зварич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 167, new DateTime(2020, 6, 3, 0, 40, 26, 637, DateTimeKind.Local).AddTicks(6552), "Діяна Міняйло" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 223, new DateTime(2020, 5, 15, 4, 7, 39, 703, DateTimeKind.Local).AddTicks(630), "Святополк Ликович" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 168, new DateTime(2020, 3, 8, 21, 54, 36, 140, DateTimeKind.Local).AddTicks(1811), "Христина Горова" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 170, new DateTime(2020, 12, 24, 1, 51, 0, 885, DateTimeKind.Local).AddTicks(3646), "Корнелій Лящук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 185, new DateTime(2020, 5, 31, 5, 37, 1, 823, DateTimeKind.Local).AddTicks(6942), "Любислава Скоропадська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 184, new DateTime(2020, 6, 13, 15, 0, 14, 605, DateTimeKind.Local).AddTicks(7090), "Степан Єрмак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 183, new DateTime(2020, 3, 21, 10, 48, 12, 947, DateTimeKind.Local).AddTicks(6816), "Руслана Лахман" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 182, new DateTime(2020, 11, 28, 8, 4, 58, 753, DateTimeKind.Local).AddTicks(9377), "Дмитро Бондаренко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 181, new DateTime(2020, 10, 26, 15, 1, 12, 735, DateTimeKind.Local).AddTicks(7436), "Ізяслав Кандиба" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 180, new DateTime(2020, 3, 25, 14, 31, 0, 93, DateTimeKind.Local).AddTicks(3212), "Зорина Ліхно" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 179, new DateTime(2020, 7, 31, 15, 6, 55, 796, DateTimeKind.Local).AddTicks(6664), "Любомила Негода" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 178, new DateTime(2020, 12, 27, 8, 48, 49, 200, DateTimeKind.Local).AddTicks(7549), "Купава Поривай" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 177, new DateTime(2020, 6, 24, 5, 44, 44, 92, DateTimeKind.Local).AddTicks(4942), "Георгій Мазайло" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 176, new DateTime(2021, 2, 12, 18, 31, 4, 444, DateTimeKind.Local).AddTicks(9017), "Аркадія Ялова" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 175, new DateTime(2020, 6, 19, 17, 39, 13, 175, DateTimeKind.Local).AddTicks(2791), "Добромила Яворівська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 174, new DateTime(2020, 3, 19, 17, 28, 20, 648, DateTimeKind.Local).AddTicks(6246), "Калина Левадовська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 173, new DateTime(2020, 7, 27, 20, 59, 10, 148, DateTimeKind.Local).AddTicks(8445), "Лаврентій Павлишин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 172, new DateTime(2020, 9, 25, 1, 50, 33, 537, DateTimeKind.Local).AddTicks(4405), "Злат Мазило" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 171, new DateTime(2020, 8, 20, 10, 30, 47, 678, DateTimeKind.Local).AddTicks(7574), "Радим Маринич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 169, new DateTime(2020, 7, 12, 3, 47, 0, 118, DateTimeKind.Local).AddTicks(9196), "Афанасій Гордійчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 224, new DateTime(2020, 6, 25, 1, 55, 40, 479, DateTimeKind.Local).AddTicks(8665), "Ольга Лобачевська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 225, new DateTime(2020, 5, 23, 21, 45, 31, 842, DateTimeKind.Local).AddTicks(3377), "Подолян Петренко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 226, new DateTime(2020, 7, 6, 13, 57, 32, 3, DateTimeKind.Local).AddTicks(4393), "Панас Ковальський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 279, new DateTime(2021, 2, 11, 1, 27, 18, 418, DateTimeKind.Local).AddTicks(4607), "Всеволод Борецький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 278, new DateTime(2021, 2, 28, 9, 22, 12, 152, DateTimeKind.Local).AddTicks(2398), "Тамара Степанець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 277, new DateTime(2020, 5, 13, 22, 20, 33, 98, DateTimeKind.Local).AddTicks(3184), "Ангеліна Поліщук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 276, new DateTime(2020, 12, 16, 12, 44, 50, 723, DateTimeKind.Local).AddTicks(5677), "Зореслава Башук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 275, new DateTime(2020, 10, 8, 1, 34, 9, 453, DateTimeKind.Local).AddTicks(6214), "Ілля Латанський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 274, new DateTime(2020, 9, 6, 23, 14, 22, 488, DateTimeKind.Local).AddTicks(8500), "Сніжан Хитрово" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 273, new DateTime(2020, 9, 7, 6, 41, 57, 76, DateTimeKind.Local).AddTicks(7858), "Пелагея Петришина" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 272, new DateTime(2020, 3, 5, 10, 46, 48, 683, DateTimeKind.Local).AddTicks(901), "Андрій Забіла" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 271, new DateTime(2020, 3, 25, 16, 12, 44, 796, DateTimeKind.Local).AddTicks(4120), "Ярослава Скиба" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 270, new DateTime(2020, 5, 19, 17, 45, 10, 221, DateTimeKind.Local).AddTicks(8934), "Ілля Лагойда" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 269, new DateTime(2020, 3, 5, 11, 55, 51, 10, DateTimeKind.Local).AddTicks(2091), "Юхим Петренко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 268, new DateTime(2020, 7, 14, 20, 54, 31, 578, DateTimeKind.Local).AddTicks(4747), "Юліан Гордійчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 267, new DateTime(2020, 6, 12, 17, 43, 51, 7, DateTimeKind.Local).AddTicks(5338), "Потішана Галатей" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 266, new DateTime(2021, 2, 15, 14, 30, 51, 111, DateTimeKind.Local).AddTicks(6673), "Михайло Громико" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 265, new DateTime(2020, 10, 14, 7, 3, 47, 410, DateTimeKind.Local).AddTicks(6778), "Альберт Стахів" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 280, new DateTime(2020, 8, 24, 11, 1, 2, 817, DateTimeKind.Local).AddTicks(7200), "Далемир Гришко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 264, new DateTime(2021, 2, 22, 10, 50, 26, 583, DateTimeKind.Local).AddTicks(5940), "Звенигор Поривайло" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 281, new DateTime(2020, 5, 26, 13, 58, 18, 52, DateTimeKind.Local).AddTicks(4094), "Яна Лахман" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 283, new DateTime(2021, 1, 15, 4, 35, 23, 278, DateTimeKind.Local).AddTicks(604), "Зорян Ящук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 298, new DateTime(2020, 10, 30, 23, 46, 0, 914, DateTimeKind.Local).AddTicks(7168), "Микита Спотикач" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 297, new DateTime(2021, 2, 10, 13, 8, 55, 927, DateTimeKind.Local).AddTicks(7864), "Аполлінарія Стигайло" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 296, new DateTime(2020, 12, 17, 3, 30, 42, 43, DateTimeKind.Local).AddTicks(6640), "Родіон Ящук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 295, new DateTime(2021, 1, 24, 0, 47, 42, 79, DateTimeKind.Local).AddTicks(6909), "Мечислав Балабан" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 294, new DateTime(2021, 2, 2, 4, 41, 41, 667, DateTimeKind.Local).AddTicks(6060), "Ада Боярчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 293, new DateTime(2020, 8, 15, 5, 48, 16, 803, DateTimeKind.Local).AddTicks(6613), "Вікторія Коломієць" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 292, new DateTime(2020, 7, 22, 23, 3, 1, 890, DateTimeKind.Local).AddTicks(2417), "Добринка Мамій" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 291, new DateTime(2020, 11, 3, 17, 37, 15, 38, DateTimeKind.Local).AddTicks(7167), "Антін Махно" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 290, new DateTime(2021, 3, 2, 0, 8, 53, 609, DateTimeKind.Local).AddTicks(94), "В’ячеслав Федоришин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 289, new DateTime(2020, 11, 7, 17, 10, 20, 847, DateTimeKind.Local).AddTicks(6579), "Яромил Сторчак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 288, new DateTime(2020, 8, 7, 17, 26, 36, 149, DateTimeKind.Local).AddTicks(374), "Петро Пасічник" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 287, new DateTime(2020, 7, 3, 11, 23, 11, 257, DateTimeKind.Local).AddTicks(3690), "Софія Романишина" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 286, new DateTime(2020, 7, 1, 7, 13, 10, 986, DateTimeKind.Local).AddTicks(7705), "Анастасій Кулинич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 285, new DateTime(2020, 7, 16, 1, 20, 15, 189, DateTimeKind.Local).AddTicks(576), "Валентин Єрмак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 284, new DateTime(2020, 4, 25, 11, 41, 35, 48, DateTimeKind.Local).AddTicks(1105), "Катерина Коцюбинська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 282, new DateTime(2020, 3, 25, 20, 24, 32, 734, DateTimeKind.Local).AddTicks(2320), "Мстислав Витребенько" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 151, new DateTime(2020, 5, 17, 2, 34, 13, 976, DateTimeKind.Local).AddTicks(1851), "Сологуб Євпак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 263, new DateTime(2020, 8, 31, 9, 6, 59, 270, DateTimeKind.Local).AddTicks(3775), "Тур Розпутній" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 261, new DateTime(2020, 9, 2, 7, 17, 55, 200, DateTimeKind.Local).AddTicks(3499), "Гліб Петрів" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 241, new DateTime(2020, 11, 6, 8, 43, 12, 210, DateTimeKind.Local).AddTicks(2134), "Дарина Сушко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 240, new DateTime(2020, 4, 1, 7, 0, 8, 789, DateTimeKind.Local).AddTicks(7665), "Добромисла Петренко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 239, new DateTime(2020, 3, 29, 19, 30, 58, 393, DateTimeKind.Local).AddTicks(5279), "Біляна Сторожук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 238, new DateTime(2020, 9, 4, 5, 46, 31, 877, DateTimeKind.Local).AddTicks(2595), "Сергій Луцьків" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 237, new DateTime(2020, 5, 21, 22, 44, 49, 449, DateTimeKind.Local).AddTicks(5342), "Нестор Петик" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 236, new DateTime(2020, 5, 28, 9, 10, 19, 542, DateTimeKind.Local).AddTicks(3539), "Станіслав Компанієць" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 235, new DateTime(2021, 2, 9, 10, 49, 7, 809, DateTimeKind.Local).AddTicks(7067), "Станислава Притула" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 234, new DateTime(2020, 4, 5, 6, 13, 20, 861, DateTimeKind.Local).AddTicks(7502), "Братимир Гречко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 233, new DateTime(2020, 11, 15, 8, 54, 57, 115, DateTimeKind.Local).AddTicks(1431), "Любомира Горова" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 232, new DateTime(2021, 1, 14, 5, 9, 5, 791, DateTimeKind.Local).AddTicks(2630), "Влада Ломова" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 231, new DateTime(2020, 9, 27, 17, 44, 33, 591, DateTimeKind.Local).AddTicks(7336), "Пантелеймон Ломовий" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 230, new DateTime(2020, 8, 9, 9, 9, 37, 345, DateTimeKind.Local).AddTicks(7550), "Щек Кулинич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 229, new DateTime(2020, 4, 25, 21, 7, 6, 511, DateTimeKind.Local).AddTicks(1933), "Валентина Федоришина" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 228, new DateTime(2020, 4, 29, 16, 30, 52, 629, DateTimeKind.Local).AddTicks(2526), "Ірина Шумило" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 227, new DateTime(2020, 11, 20, 19, 42, 8, 965, DateTimeKind.Local).AddTicks(4449), "Наталія Боровська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 242, new DateTime(2021, 1, 28, 1, 25, 36, 174, DateTimeKind.Local).AddTicks(8152), "Левко Сплюх" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 262, new DateTime(2020, 10, 19, 13, 35, 25, 100, DateTimeKind.Local).AddTicks(3518), "Анастасія Скиба" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 243, new DateTime(2021, 1, 26, 8, 3, 3, 999, DateTimeKind.Local).AddTicks(8336), "Ромена Євенко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 245, new DateTime(2021, 2, 24, 2, 46, 27, 811, DateTimeKind.Local).AddTicks(3820), "Аделіна Забіла" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 260, new DateTime(2020, 11, 21, 22, 16, 19, 316, DateTimeKind.Local).AddTicks(6916), "Буйтур Маковецький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 259, new DateTime(2020, 4, 1, 2, 31, 9, 79, DateTimeKind.Local).AddTicks(3920), "Чорнота Ющук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 258, new DateTime(2020, 8, 15, 11, 22, 38, 446, DateTimeKind.Local).AddTicks(2106), "Діяна Пасічник" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 257, new DateTime(2020, 4, 5, 19, 59, 10, 398, DateTimeKind.Local).AddTicks(3028), "Подолян Данилишин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 256, new DateTime(2020, 9, 23, 15, 11, 36, 193, DateTimeKind.Local).AddTicks(1902), "Дарина Притула" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 255, new DateTime(2020, 6, 30, 17, 38, 23, 424, DateTimeKind.Local).AddTicks(1622), "Листвич Сідлецький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 254, new DateTime(2020, 5, 21, 6, 13, 20, 177, DateTimeKind.Local).AddTicks(4990), "Єремій Василишин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 253, new DateTime(2020, 5, 4, 5, 46, 5, 378, DateTimeKind.Local).AddTicks(3741), "Біломир Яцишин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 252, new DateTime(2021, 2, 7, 16, 26, 5, 480, DateTimeKind.Local).AddTicks(5213), "Інна Калач" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 251, new DateTime(2020, 7, 10, 22, 38, 54, 41, DateTimeKind.Local).AddTicks(516), "Олександр Троян" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 250, new DateTime(2020, 3, 7, 14, 43, 15, 456, DateTimeKind.Local).AddTicks(4785), "Звенислава Гладківська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 249, new DateTime(2020, 11, 13, 0, 42, 50, 321, DateTimeKind.Local).AddTicks(474), "Сніжана Лугова" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 248, new DateTime(2020, 10, 30, 22, 14, 17, 583, DateTimeKind.Local).AddTicks(8029), "Володислав Шиндарей" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 247, new DateTime(2021, 1, 18, 5, 53, 30, 720, DateTimeKind.Local).AddTicks(4358), "Мечислава Пендик" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 246, new DateTime(2020, 9, 7, 18, 36, 11, 689, DateTimeKind.Local).AddTicks(8838), "Родіон Трясило" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 244, new DateTime(2020, 10, 3, 12, 1, 17, 277, DateTimeKind.Local).AddTicks(2369), "Яромир Шупик" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 299, new DateTime(2021, 1, 27, 23, 51, 12, 226, DateTimeKind.Local).AddTicks(2047), "Лада Демків" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 150, new DateTime(2020, 8, 11, 13, 46, 42, 868, DateTimeKind.Local).AddTicks(6417), "Марко Сторчак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 148, new DateTime(2020, 10, 13, 11, 20, 13, 252, DateTimeKind.Local).AddTicks(2882), "Антоніна Тиндарей" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 52, new DateTime(2020, 5, 24, 16, 35, 44, 482, DateTimeKind.Local).AddTicks(4216), "Добромисла Дзюб’як" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 51, new DateTime(2020, 4, 30, 18, 29, 48, 164, DateTimeKind.Local).AddTicks(9296), "Квітослава Ємець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 50, new DateTime(2021, 1, 4, 6, 26, 42, 662, DateTimeKind.Local).AddTicks(5703), "Злата Шевченко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 49, new DateTime(2020, 8, 9, 11, 1, 37, 980, DateTimeKind.Local).AddTicks(8421), "Боримир Гаман" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 48, new DateTime(2021, 2, 15, 8, 7, 25, 294, DateTimeKind.Local).AddTicks(9576), "Синьоок Павленко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 47, new DateTime(2020, 12, 13, 17, 15, 43, 619, DateTimeKind.Local).AddTicks(959), "Богдан Барановський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 53, new DateTime(2020, 11, 16, 10, 18, 12, 826, DateTimeKind.Local).AddTicks(7517), "Ратибор Міняйло" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 46, new DateTime(2020, 8, 24, 18, 15, 23, 145, DateTimeKind.Local).AddTicks(4560), "Ірма Коров’як" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 44, new DateTime(2020, 5, 29, 0, 25, 31, 281, DateTimeKind.Local).AddTicks(6069), "Таїсія Зінкевич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 43, new DateTime(2020, 11, 10, 0, 32, 30, 911, DateTimeKind.Local).AddTicks(3231), "Альбіна Павлів" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 42, new DateTime(2020, 9, 21, 1, 45, 58, 55, DateTimeKind.Local).AddTicks(7321), "Павліна Боярчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 41, new DateTime(2021, 1, 15, 16, 5, 12, 978, DateTimeKind.Local).AddTicks(7484), "Христина Горова" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 40, new DateTime(2020, 11, 16, 5, 34, 34, 666, DateTimeKind.Local).AddTicks(5019), "Вікторія Осадко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 39, new DateTime(2021, 2, 22, 20, 52, 38, 830, DateTimeKind.Local).AddTicks(9241), "Галина Могилевська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 45, new DateTime(2020, 10, 30, 18, 17, 50, 137, DateTimeKind.Local).AddTicks(9966), "Ігор Янюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 54, new DateTime(2020, 10, 20, 12, 40, 46, 581, DateTimeKind.Local).AddTicks(6330), "Микола Левадовський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 55, new DateTime(2020, 7, 28, 14, 23, 41, 658, DateTimeKind.Local).AddTicks(7743), "Захарій Гайчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 56, new DateTime(2020, 8, 12, 18, 21, 54, 94, DateTimeKind.Local).AddTicks(982), "Вілена Ющик" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 71, new DateTime(2020, 8, 11, 2, 22, 37, 657, DateTimeKind.Local).AddTicks(243), "Геннадій Ялюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 70, new DateTime(2020, 8, 3, 14, 11, 28, 65, DateTimeKind.Local).AddTicks(2369), "Світлана Пригода" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 69, new DateTime(2020, 12, 1, 12, 22, 51, 129, DateTimeKind.Local).AddTicks(6855), "Орхип Ломовий" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 68, new DateTime(2020, 8, 24, 7, 0, 2, 595, DateTimeKind.Local).AddTicks(4757), "Аркадій Пендик" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 67, new DateTime(2021, 1, 27, 21, 54, 54, 645, DateTimeKind.Local).AddTicks(5028), "Раїна Дзюба" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 66, new DateTime(2020, 9, 3, 4, 36, 9, 853, DateTimeKind.Local).AddTicks(7883), "Світлана Боярчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 65, new DateTime(2020, 8, 9, 23, 1, 40, 17, DateTimeKind.Local).AddTicks(97), "Матвій Гаман" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 64, new DateTime(2020, 4, 17, 8, 1, 55, 508, DateTimeKind.Local).AddTicks(3960), "Олексій Яворівський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 63, new DateTime(2020, 11, 20, 14, 32, 43, 499, DateTimeKind.Local).AddTicks(2818), "Пилип Шухевич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 62, new DateTime(2020, 5, 24, 7, 29, 6, 279, DateTimeKind.Local).AddTicks(3933), "Соломія Поліщук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 61, new DateTime(2020, 11, 14, 16, 0, 2, 98, DateTimeKind.Local).AddTicks(8564), "Захар Свидригайло" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 60, new DateTime(2020, 3, 3, 20, 4, 25, 287, DateTimeKind.Local).AddTicks(6956), "Влад Кульчицький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 59, new DateTime(2020, 10, 22, 13, 28, 37, 786, DateTimeKind.Local).AddTicks(9338), "Боримир Павленко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 58, new DateTime(2021, 2, 10, 12, 10, 0, 532, DateTimeKind.Local).AddTicks(7393), "Ярополк Савицький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 57, new DateTime(2020, 10, 29, 18, 26, 48, 903, DateTimeKind.Local).AddTicks(2295), "Олелько Яцьків" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 38, new DateTime(2020, 5, 4, 13, 34, 37, 567, DateTimeKind.Local).AddTicks(7562), "Ладо Паламарчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 37, new DateTime(2020, 9, 19, 9, 59, 32, 790, DateTimeKind.Local).AddTicks(3275), "Біломир Осадко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 36, new DateTime(2020, 9, 5, 5, 54, 3, 35, DateTimeKind.Local).AddTicks(2254), "Юліанна Сторожук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 35, new DateTime(2020, 10, 30, 22, 56, 15, 239, DateTimeKind.Local).AddTicks(8338), "Матвій Громико" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 15, new DateTime(2020, 8, 29, 17, 24, 22, 649, DateTimeKind.Local).AddTicks(1276), "Орина Гайова" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 14, new DateTime(2021, 1, 5, 9, 56, 19, 94, DateTimeKind.Local).AddTicks(6800), "Градимир Андрухович" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 13, new DateTime(2020, 7, 26, 8, 41, 3, 400, DateTimeKind.Local).AddTicks(1743), "Іннеса Кулинич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 12, new DateTime(2020, 8, 1, 3, 26, 25, 196, DateTimeKind.Local).AddTicks(6345), "Доброслав Трясило" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 11, new DateTime(2020, 5, 16, 11, 59, 14, 548, DateTimeKind.Local).AddTicks(2424), "Марічка Гладух" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 10, new DateTime(2020, 3, 30, 21, 58, 19, 672, DateTimeKind.Local).AddTicks(6323), "Федора Троян" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 9, new DateTime(2021, 1, 13, 10, 10, 52, 347, DateTimeKind.Local).AddTicks(4393), "Остап Бондаренко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 8, new DateTime(2020, 10, 30, 16, 14, 46, 146, DateTimeKind.Local).AddTicks(8713), "Мстислава Петришина" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 7, new DateTime(2020, 6, 14, 0, 42, 29, 169, DateTimeKind.Local).AddTicks(5540), "Немира Шухевич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 6, new DateTime(2020, 5, 14, 16, 33, 30, 262, DateTimeKind.Local).AddTicks(7725), "Геннадій Гладківський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 5, new DateTime(2021, 2, 13, 9, 55, 24, 262, DateTimeKind.Local).AddTicks(706), "Роксолан Корнїйчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 4, new DateTime(2020, 6, 7, 10, 15, 16, 91, DateTimeKind.Local).AddTicks(2552), "Тетяна Червоній" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 3, new DateTime(2020, 11, 2, 2, 0, 51, 826, DateTimeKind.Local).AddTicks(2966), "Оріяна Павленко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 2, new DateTime(2020, 12, 16, 19, 18, 38, 284, DateTimeKind.Local).AddTicks(9469), "Слава Москалюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 1, new DateTime(2020, 11, 30, 23, 7, 23, 233, DateTimeKind.Local).AddTicks(2108), "Ликера Петришина" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 16, new DateTime(2020, 9, 3, 8, 11, 7, 944, DateTimeKind.Local).AddTicks(9021), "Роксолана Григоришина" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 72, new DateTime(2020, 5, 19, 3, 12, 1, 867, DateTimeKind.Local).AddTicks(6471), "Дарина Сірко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 17, new DateTime(2021, 1, 15, 4, 30, 52, 553, DateTimeKind.Local).AddTicks(8470), "Герасим Кульчицький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 19, new DateTime(2020, 12, 23, 23, 10, 21, 20, DateTimeKind.Local).AddTicks(5683), "Алевтин Ганич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 34, new DateTime(2020, 8, 4, 6, 54, 53, 513, DateTimeKind.Local).AddTicks(3326), "Віола Левадовська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 33, new DateTime(2021, 1, 4, 21, 41, 53, 856, DateTimeKind.Local).AddTicks(4471), "Остап Плаксій" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 32, new DateTime(2020, 5, 24, 20, 20, 34, 693, DateTimeKind.Local).AddTicks(3358), "Добромира Витребенько" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 31, new DateTime(2021, 1, 9, 21, 57, 33, 111, DateTimeKind.Local).AddTicks(9212), "Квітка Шестак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 30, new DateTime(2020, 12, 4, 6, 51, 46, 357, DateTimeKind.Local).AddTicks(2022), "Всеслава Пагутяк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 29, new DateTime(2021, 1, 10, 22, 15, 58, 5, DateTimeKind.Local).AddTicks(9371), "Щастислав Дідух" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 28, new DateTime(2020, 8, 27, 15, 20, 53, 2, DateTimeKind.Local).AddTicks(192), "Славолюб Маринич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 27, new DateTime(2020, 4, 9, 22, 48, 14, 531, DateTimeKind.Local).AddTicks(2798), "Всевлад Гриневський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 26, new DateTime(2020, 7, 1, 14, 21, 1, 379, DateTimeKind.Local).AddTicks(3941), "Надія Вітряк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 25, new DateTime(2020, 9, 24, 18, 21, 36, 555, DateTimeKind.Local).AddTicks(5125), "Наталія Кордун" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 24, new DateTime(2020, 10, 6, 3, 41, 57, 62, DateTimeKind.Local).AddTicks(164), "Яромил Ющук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 23, new DateTime(2020, 5, 6, 21, 7, 7, 50, DateTimeKind.Local).AddTicks(7786), "Віолетта Галатей" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 22, new DateTime(2021, 2, 4, 13, 56, 10, 719, DateTimeKind.Local).AddTicks(2870), "Радослава Зварич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 21, new DateTime(2020, 7, 20, 15, 44, 55, 723, DateTimeKind.Local).AddTicks(3741), "Славомир Юрчишин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 20, new DateTime(2020, 3, 30, 9, 21, 37, 869, DateTimeKind.Local).AddTicks(9184), "Горислав Іванишин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 18, new DateTime(2020, 9, 16, 11, 46, 25, 307, DateTimeKind.Local).AddTicks(4759), "Зоремир Ялюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 73, new DateTime(2020, 6, 10, 13, 19, 45, 331, DateTimeKind.Local).AddTicks(4267), "Нестор Ромей" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 74, new DateTime(2020, 10, 12, 11, 55, 47, 429, DateTimeKind.Local).AddTicks(3078), "Олеся Розпутня" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 75, new DateTime(2020, 9, 24, 15, 13, 58, 774, DateTimeKind.Local).AddTicks(6958), "Алевтина Паламарчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 128, new DateTime(2020, 8, 29, 20, 46, 46, 774, DateTimeKind.Local).AddTicks(9833), "Горислав Бердник" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 127, new DateTime(2021, 2, 2, 17, 44, 22, 663, DateTimeKind.Local).AddTicks(5181), "Квітка Ялюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 126, new DateTime(2020, 10, 29, 3, 33, 28, 460, DateTimeKind.Local).AddTicks(6304), "Ярослава Петик" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 125, new DateTime(2020, 7, 14, 19, 15, 22, 974, DateTimeKind.Local).AddTicks(1645), "Анжела Шестак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 124, new DateTime(2020, 5, 28, 7, 10, 57, 995, DateTimeKind.Local).AddTicks(5397), "Руслан Гриневецький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 123, new DateTime(2020, 9, 25, 3, 15, 21, 654, DateTimeKind.Local).AddTicks(7084), "Квітка Силецька" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 122, new DateTime(2020, 7, 22, 17, 41, 36, 457, DateTimeKind.Local).AddTicks(4410), "Артем Сосюра" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 121, new DateTime(2020, 12, 25, 10, 56, 27, 395, DateTimeKind.Local).AddTicks(2034), "Лаврін Потоцький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 120, new DateTime(2020, 4, 14, 16, 7, 12, 904, DateTimeKind.Local).AddTicks(9536), "Максим Бондаренко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 119, new DateTime(2021, 1, 19, 14, 41, 59, 341, DateTimeKind.Local).AddTicks(9915), "Мечислав Єрмак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 118, new DateTime(2020, 10, 9, 3, 29, 21, 880, DateTimeKind.Local).AddTicks(203), "Мирослава Прядун" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 117, new DateTime(2020, 6, 9, 15, 46, 25, 404, DateTimeKind.Local).AddTicks(4976), "Костянтин Василишин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 116, new DateTime(2021, 1, 31, 1, 7, 27, 625, DateTimeKind.Local).AddTicks(3994), "Жанна Ящук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 115, new DateTime(2020, 10, 16, 6, 31, 39, 985, DateTimeKind.Local).AddTicks(8901), "Василина Ярмак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 114, new DateTime(2021, 2, 18, 6, 39, 56, 942, DateTimeKind.Local).AddTicks(846), "Добромира Дмитрук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 129, new DateTime(2020, 5, 28, 23, 0, 58, 204, DateTimeKind.Local).AddTicks(3727), "Агата Потоцька" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 113, new DateTime(2020, 12, 14, 16, 49, 38, 944, DateTimeKind.Local).AddTicks(541), "Зоремир Кононець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 130, new DateTime(2020, 3, 23, 21, 52, 43, 449, DateTimeKind.Local).AddTicks(6342), "Алла Ткаченко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 132, new DateTime(2020, 12, 13, 22, 1, 31, 336, DateTimeKind.Local).AddTicks(4753), "Добромира Василишина" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 147, new DateTime(2020, 4, 11, 3, 49, 20, 394, DateTimeKind.Local).AddTicks(9220), "Георгій Бердник" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 146, new DateTime(2020, 3, 8, 5, 34, 47, 682, DateTimeKind.Local).AddTicks(1242), "Болеслава Білич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 145, new DateTime(2021, 1, 24, 19, 4, 30, 734, DateTimeKind.Local).AddTicks(6322), "Ореста Сідляк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 144, new DateTime(2020, 7, 15, 14, 51, 43, 342, DateTimeKind.Local).AddTicks(5144), "Святослава Тарасюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 143, new DateTime(2020, 5, 13, 7, 42, 31, 2, DateTimeKind.Local).AddTicks(7740), "Лариса Семеночко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 142, new DateTime(2020, 4, 14, 15, 8, 27, 720, DateTimeKind.Local).AddTicks(3147), "Руслан Роменець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 141, new DateTime(2020, 5, 13, 12, 54, 45, 717, DateTimeKind.Local).AddTicks(3617), "Мальва Гордійчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 140, new DateTime(2020, 5, 14, 11, 34, 39, 552, DateTimeKind.Local).AddTicks(5651), "Пантелеймон Гриневецький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 139, new DateTime(2020, 3, 19, 9, 29, 59, 480, DateTimeKind.Local).AddTicks(8886), "Світлана Карпух" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 138, new DateTime(2020, 3, 29, 16, 31, 17, 15, DateTimeKind.Local).AddTicks(8187), "Ігор Червоній" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 137, new DateTime(2021, 2, 28, 20, 21, 47, 839, DateTimeKind.Local).AddTicks(8651), "Братомил Вітряк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 136, new DateTime(2020, 9, 25, 22, 0, 1, 573, DateTimeKind.Local).AddTicks(3452), "Орислава Дмитришина" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 135, new DateTime(2020, 3, 27, 12, 47, 11, 30, DateTimeKind.Local).AddTicks(1406), "Потішана Ковальська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 134, new DateTime(2020, 10, 4, 12, 8, 42, 949, DateTimeKind.Local).AddTicks(5687), "Аліна Гладух" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 133, new DateTime(2021, 1, 19, 0, 22, 11, 458, DateTimeKind.Local).AddTicks(2683), "Аврелія Спотикач" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 131, new DateTime(2021, 1, 16, 23, 4, 43, 488, DateTimeKind.Local).AddTicks(9179), "Ганна Боярчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 149, new DateTime(2020, 5, 14, 14, 54, 59, 273, DateTimeKind.Local).AddTicks(5534), "Сніжана Дмитришина" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 112, new DateTime(2020, 8, 6, 6, 20, 42, 89, DateTimeKind.Local).AddTicks(3090), "Галина Гречко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 110, new DateTime(2020, 6, 9, 15, 32, 9, 307, DateTimeKind.Local).AddTicks(620), "Юхим Василишин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 90, new DateTime(2020, 10, 25, 16, 11, 46, 116, DateTimeKind.Local).AddTicks(4289), "Юстина Петрів" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 89, new DateTime(2021, 2, 24, 0, 18, 23, 552, DateTimeKind.Local).AddTicks(9679), "Станислава Євенко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 88, new DateTime(2020, 4, 17, 19, 45, 48, 182, DateTimeKind.Local).AddTicks(897), "Стожар Ярмак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 87, new DateTime(2020, 11, 9, 1, 33, 55, 93, DateTimeKind.Local).AddTicks(8696), "Дарій Волощук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 86, new DateTime(2020, 9, 27, 7, 39, 51, 265, DateTimeKind.Local).AddTicks(4227), "Антон Калач" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 85, new DateTime(2020, 4, 8, 20, 7, 10, 213, DateTimeKind.Local).AddTicks(6267), "Соломія Кулинич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 84, new DateTime(2020, 6, 28, 1, 8, 39, 851, DateTimeKind.Local).AddTicks(9096), "Далемир Сторожук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 83, new DateTime(2020, 11, 2, 10, 3, 40, 971, DateTimeKind.Local).AddTicks(4738), "Віктор Павленко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 82, new DateTime(2020, 4, 1, 17, 52, 49, 166, DateTimeKind.Local).AddTicks(9585), "Сологуб Юхно" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 81, new DateTime(2020, 5, 16, 22, 6, 58, 831, DateTimeKind.Local).AddTicks(9117), "Неля Павлів" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 80, new DateTime(2020, 3, 15, 15, 19, 14, 949, DateTimeKind.Local).AddTicks(9860), "Ладо Петрів" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 79, new DateTime(2020, 8, 28, 4, 56, 17, 601, DateTimeKind.Local).AddTicks(5615), "Ликера Кулинич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 78, new DateTime(2020, 5, 18, 15, 40, 49, 32, DateTimeKind.Local).AddTicks(2297), "Борислава Головець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 77, new DateTime(2021, 2, 11, 23, 9, 8, 670, DateTimeKind.Local).AddTicks(2960), "Зоряна Гаман" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 76, new DateTime(2020, 12, 15, 0, 23, 51, 231, DateTimeKind.Local).AddTicks(293), "Неля Яворівська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 91, new DateTime(2021, 1, 10, 4, 3, 32, 956, DateTimeKind.Local).AddTicks(6196), "Альбіна Михайлюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 111, new DateTime(2020, 5, 15, 14, 12, 40, 587, DateTimeKind.Local).AddTicks(4717), "Братислав Сідляк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 92, new DateTime(2020, 3, 19, 5, 42, 51, 798, DateTimeKind.Local).AddTicks(295), "Тихон Лучко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 94, new DateTime(2021, 2, 12, 14, 13, 30, 227, DateTimeKind.Local).AddTicks(4730), "Пилип Поривай" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 109, new DateTime(2021, 1, 15, 21, 9, 23, 897, DateTimeKind.Local).AddTicks(9145), "Валентин Стигайло" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 108, new DateTime(2020, 11, 24, 23, 15, 3, 103, DateTimeKind.Local).AddTicks(9519), "Ян Сплюх" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 107, new DateTime(2020, 5, 22, 8, 42, 48, 679, DateTimeKind.Local).AddTicks(4988), "Лілія Лучко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 106, new DateTime(2020, 9, 16, 10, 37, 31, 283, DateTimeKind.Local).AddTicks(4608), "Ілля Янюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 105, new DateTime(2020, 7, 28, 11, 23, 44, 872, DateTimeKind.Local).AddTicks(6574), "Яромир Плаксій" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 104, new DateTime(2020, 9, 19, 15, 31, 50, 424, DateTimeKind.Local).AddTicks(6890), "Артем Мазун" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 103, new DateTime(2020, 10, 22, 17, 7, 2, 386, DateTimeKind.Local).AddTicks(5618), "Калина Пасічник" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 102, new DateTime(2020, 5, 2, 13, 28, 39, 295, DateTimeKind.Local).AddTicks(4578), "Леся Тиндарей" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 101, new DateTime(2020, 6, 1, 20, 33, 10, 955, DateTimeKind.Local).AddTicks(2672), "Арсен Гойко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 100, new DateTime(2020, 11, 19, 2, 50, 32, 125, DateTimeKind.Local).AddTicks(5020), "Лідія Коваленко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 99, new DateTime(2020, 11, 10, 11, 8, 26, 961, DateTimeKind.Local).AddTicks(1038), "Любава Прядун" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 98, new DateTime(2020, 3, 12, 11, 33, 35, 184, DateTimeKind.Local).AddTicks(6231), "Омелян Маковецький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 97, new DateTime(2020, 5, 31, 5, 15, 9, 909, DateTimeKind.Local).AddTicks(7835), "Любислава Мазун" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 96, new DateTime(2020, 12, 3, 1, 12, 30, 351, DateTimeKind.Local).AddTicks(7001), "Віолетта Паращук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 95, new DateTime(2020, 10, 15, 13, 46, 50, 358, DateTimeKind.Local).AddTicks(9392), "Ілона Бамбула" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 93, new DateTime(2020, 6, 12, 15, 40, 23, 598, DateTimeKind.Local).AddTicks(4298), "Лариса Сірко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 300, new DateTime(2020, 11, 17, 10, 1, 13, 569, DateTimeKind.Local).AddTicks(2698), "Любослава Андрухович" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 25, null, 0, new DateTime(2020, 5, 15, 22, 40, 13, 449, DateTimeKind.Local).AddTicks(6503), 1, "(073) 957-53-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 225, null, 0, new DateTime(2020, 4, 25, 20, 34, 29, 994, DateTimeKind.Local).AddTicks(5599), 171, "(093) 571-00-80" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 124, null, 0, new DateTime(2020, 9, 10, 15, 29, 45, 214, DateTimeKind.Local).AddTicks(7247), 171, "(099) 072-48-84" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 80, null, 0, new DateTime(2021, 1, 7, 13, 10, 41, 113, DateTimeKind.Local).AddTicks(1255), 171, "(098) 121-32-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1403, null, 0, new DateTime(2020, 10, 22, 3, 1, 22, 840, DateTimeKind.Local).AddTicks(6762), 170, "(063) 430-84-64" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1150, null, 0, new DateTime(2020, 4, 30, 13, 4, 23, 786, DateTimeKind.Local).AddTicks(4699), 170, "(073) 408-03-69" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 543, null, 1, new DateTime(2020, 12, 13, 14, 7, 50, 615, DateTimeKind.Local).AddTicks(1772), 170, "Maryana_Yushuk70@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 457, null, 1, new DateTime(2020, 9, 23, 11, 14, 42, 28, DateTimeKind.Local).AddTicks(1486), 170, "Anfisa62@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 145, null, 1, new DateTime(2020, 6, 8, 18, 13, 8, 206, DateTimeKind.Local).AddTicks(4775), 170, "Daleslava85@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 105, null, 1, new DateTime(2020, 5, 19, 10, 26, 21, 804, DateTimeKind.Local).AddTicks(8959), 170, "Orest.Openko@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 974, null, 1, new DateTime(2020, 10, 29, 14, 58, 52, 751, DateTimeKind.Local).AddTicks(7062), 169, "Panteleimon.Romochko@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 727, null, 1, new DateTime(2021, 2, 8, 0, 41, 21, 953, DateTimeKind.Local).AddTicks(7382), 169, "Yustina_Porivailo63@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 478, null, 1, new DateTime(2020, 3, 19, 9, 5, 19, 180, DateTimeKind.Local).AddTicks(9276), 169, "Vyacheslava.Slobodyan84@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 437, null, 1, new DateTime(2020, 11, 18, 19, 14, 59, 894, DateTimeKind.Local).AddTicks(1370), 169, "Kharitina.Miloslavskii@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 363, null, 1, new DateTime(2020, 10, 4, 19, 33, 41, 377, DateTimeKind.Local).AddTicks(3450), 169, "Viola42@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 119, null, 1, new DateTime(2021, 1, 16, 2, 37, 34, 216, DateTimeKind.Local).AddTicks(8813), 169, "Mikita.Gaiduk@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 692, null, 1, new DateTime(2020, 11, 13, 0, 55, 55, 821, DateTimeKind.Local).AddTicks(9961), 168, "Zoya.Vergun96@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1415, null, 0, new DateTime(2020, 11, 1, 8, 35, 51, 88, DateTimeKind.Local).AddTicks(1930), 167, "(063) 480-74-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1170, null, 1, new DateTime(2020, 12, 7, 2, 47, 6, 511, DateTimeKind.Local).AddTicks(8414), 167, "Zinayida7@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1011, null, 1, new DateTime(2020, 8, 22, 7, 59, 8, 405, DateTimeKind.Local).AddTicks(3885), 167, "Snizhana77@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 710, null, 0, new DateTime(2021, 2, 12, 22, 46, 21, 689, DateTimeKind.Local).AddTicks(1011), 167, "(050) 794-03-05" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 589, null, 1, new DateTime(2020, 12, 18, 22, 33, 8, 136, DateTimeKind.Local).AddTicks(6231), 167, "Slava69@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1108, null, 0, new DateTime(2020, 4, 1, 14, 54, 34, 815, DateTimeKind.Local).AddTicks(8467), 166, "(099) 637-14-38" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 747, null, 1, new DateTime(2020, 12, 8, 7, 52, 40, 249, DateTimeKind.Local).AddTicks(6008), 165, "Boleslav71@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 609, null, 1, new DateTime(2020, 9, 3, 2, 37, 2, 464, DateTimeKind.Local).AddTicks(7161), 165, "Gnat.Romanishina@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 282, null, 1, new DateTime(2020, 6, 23, 13, 11, 36, 514, DateTimeKind.Local).AddTicks(5228), 165, "Snizhana.Berdnik@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 529, null, 0, new DateTime(2021, 2, 22, 18, 31, 42, 869, DateTimeKind.Local).AddTicks(1019), 171, "(050) 870-99-47" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 642, null, 1, new DateTime(2020, 9, 18, 19, 41, 17, 94, DateTimeKind.Local).AddTicks(243), 171, "Bratomil42@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1280, null, 0, new DateTime(2020, 6, 13, 11, 41, 23, 205, DateTimeKind.Local).AddTicks(2652), 171, "(098) 678-92-51" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 470, null, 0, new DateTime(2020, 4, 5, 18, 0, 16, 357, DateTimeKind.Local).AddTicks(8596), 172, "(094) 871-32-44" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 709, null, 0, new DateTime(2020, 4, 23, 5, 18, 44, 361, DateTimeKind.Local).AddTicks(9305), 177, "(098) 865-78-83" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 705, null, 1, new DateTime(2020, 11, 27, 11, 45, 33, 17, DateTimeKind.Local).AddTicks(5211), 177, "Georgii58@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 618, null, 0, new DateTime(2020, 5, 5, 0, 8, 27, 316, DateTimeKind.Local).AddTicks(8737), 177, "(095) 489-11-65" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 594, null, 0, new DateTime(2020, 9, 5, 0, 4, 57, 181, DateTimeKind.Local).AddTicks(146), 177, "(097) 366-49-32" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 177, null, 1, new DateTime(2020, 5, 18, 15, 5, 54, 1, DateTimeKind.Local).AddTicks(7621), 177, "Pelageya.Borecka48@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1387, null, 0, new DateTime(2021, 2, 8, 22, 17, 0, 74, DateTimeKind.Local).AddTicks(9540), 176, "(050) 943-31-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1293, null, 0, new DateTime(2020, 6, 14, 7, 56, 15, 402, DateTimeKind.Local).AddTicks(6489), 176, "(092) 805-41-16" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 698, null, 1, new DateTime(2020, 10, 25, 2, 8, 20, 113, DateTimeKind.Local).AddTicks(2177), 176, "Dobroslav73@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 568, null, 1, new DateTime(2021, 1, 29, 20, 32, 20, 890, DateTimeKind.Local).AddTicks(7855), 176, "Ada.Markiv@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1352, null, 0, new DateTime(2020, 8, 31, 6, 49, 3, 28, DateTimeKind.Local).AddTicks(7599), 175, "(044) 420-24-65" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1317, null, 1, new DateTime(2020, 10, 3, 7, 11, 7, 201, DateTimeKind.Local).AddTicks(7580), 175, "Glib99@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 319, null, 1, new DateTime(2020, 9, 22, 19, 47, 15, 652, DateTimeKind.Local).AddTicks(1355), 175, "Grigorii.Romei@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 152, null, 1, new DateTime(2020, 8, 29, 19, 10, 48, 822, DateTimeKind.Local).AddTicks(8919), 165, "Oksana_Semeshuk1@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1312, null, 1, new DateTime(2020, 5, 23, 4, 10, 23, 784, DateTimeKind.Local).AddTicks(8167), 174, "Burevist43@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1047, null, 1, new DateTime(2020, 10, 26, 12, 14, 45, 243, DateTimeKind.Local).AddTicks(9844), 174, "Zakhar90@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 549, null, 1, new DateTime(2021, 1, 12, 4, 30, 51, 500, DateTimeKind.Local).AddTicks(4293), 174, "Zvenimir.Slobodyan86@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 403, null, 0, new DateTime(2020, 10, 3, 17, 34, 55, 609, DateTimeKind.Local).AddTicks(4725), 174, "(050) 622-63-17" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 367, null, 1, new DateTime(2021, 2, 10, 15, 18, 21, 277, DateTimeKind.Local).AddTicks(4891), 174, "Bratomil_Balabukh@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 154, null, 0, new DateTime(2020, 8, 29, 13, 59, 1, 393, DateTimeKind.Local).AddTicks(871), 174, "(096) 707-04-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1489, null, 0, new DateTime(2020, 11, 9, 1, 25, 47, 46, DateTimeKind.Local).AddTicks(9091), 173, "(044) 599-79-24" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1331, null, 1, new DateTime(2020, 9, 22, 4, 7, 12, 722, DateTimeKind.Local).AddTicks(8509), 173, "Ratimir_Priimak14@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 802, null, 1, new DateTime(2020, 4, 2, 22, 24, 29, 602, DateTimeKind.Local).AddTicks(7511), 173, "Vilina49@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 349, null, 1, new DateTime(2020, 6, 5, 9, 50, 22, 931, DateTimeKind.Local).AddTicks(8455), 173, "Slava_Luchenko@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 554, null, 1, new DateTime(2020, 8, 14, 16, 1, 57, 669, DateTimeKind.Local).AddTicks(3319), 172, "Yuliya59@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 531, null, 1, new DateTime(2021, 2, 26, 15, 49, 39, 290, DateTimeKind.Local).AddTicks(699), 172, "Oles.Garai91@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 522, null, 1, new DateTime(2020, 6, 25, 18, 47, 57, 849, DateTimeKind.Local).AddTicks(8327), 172, "Milodara_Grigorishin@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1285, null, 0, new DateTime(2020, 5, 8, 6, 4, 48, 620, DateTimeKind.Local).AddTicks(747), 174, "(094) 550-88-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 101, null, 1, new DateTime(2020, 12, 16, 14, 33, 49, 999, DateTimeKind.Local).AddTicks(6563), 165, "Artem17@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1423, null, 0, new DateTime(2020, 12, 16, 18, 52, 32, 65, DateTimeKind.Local).AddTicks(3965), 164, "(073) 880-50-18" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1366, null, 1, new DateTime(2020, 5, 29, 13, 3, 14, 556, DateTimeKind.Local).AddTicks(5700), 164, "Georgii_Polishuk64@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1236, null, 1, new DateTime(2020, 11, 14, 9, 34, 21, 736, DateTimeKind.Local).AddTicks(357), 158, "Biloslava.Motriyenko10@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1155, null, 0, new DateTime(2020, 12, 26, 17, 30, 29, 158, DateTimeKind.Local).AddTicks(7770), 158, "(091) 457-35-15" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 935, null, 1, new DateTime(2020, 11, 2, 18, 38, 58, 581, DateTimeKind.Local).AddTicks(5559), 158, "Oresta.Spotikach@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 509, null, 0, new DateTime(2020, 12, 25, 1, 45, 20, 237, DateTimeKind.Local).AddTicks(1837), 158, "(050) 385-16-84" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 215, null, 0, new DateTime(2020, 9, 26, 20, 10, 21, 375, DateTimeKind.Local).AddTicks(5931), 158, "(044) 261-46-22" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1258, null, 0, new DateTime(2020, 3, 10, 12, 58, 5, 218, DateTimeKind.Local).AddTicks(5945), 157, "(091) 769-52-32" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 981, null, 1, new DateTime(2020, 10, 24, 21, 58, 54, 65, DateTimeKind.Local).AddTicks(4852), 157, "Olga_Troyan2@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 742, null, 0, new DateTime(2020, 4, 11, 19, 17, 43, 839, DateTimeKind.Local).AddTicks(286), 157, "(098) 901-15-54" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 465, null, 1, new DateTime(2021, 1, 31, 4, 16, 1, 69, DateTimeKind.Local).AddTicks(3102), 157, "Ognyana41@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 88, null, 0, new DateTime(2020, 10, 18, 22, 29, 41, 709, DateTimeKind.Local).AddTicks(463), 157, "(091) 451-51-80" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 755, null, 1, new DateTime(2020, 5, 25, 19, 55, 50, 234, DateTimeKind.Local).AddTicks(7624), 156, "Kornii.Negoda@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 748, null, 0, new DateTime(2020, 9, 5, 3, 27, 35, 926, DateTimeKind.Local).AddTicks(2104), 156, "(097) 045-59-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 141, null, 0, new DateTime(2020, 12, 8, 11, 54, 23, 596, DateTimeKind.Local).AddTicks(8076), 159, "(091) 382-91-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 658, null, 1, new DateTime(2020, 12, 26, 19, 36, 2, 109, DateTimeKind.Local).AddTicks(5999), 156, "Mariya_Yanyuk@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1482, null, 1, new DateTime(2020, 8, 7, 1, 35, 20, 397, DateTimeKind.Local).AddTicks(9221), 155, "Yukhima_Luchenko@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 843, null, 0, new DateTime(2020, 3, 7, 18, 35, 1, 429, DateTimeKind.Local).AddTicks(3321), 155, "(091) 149-60-09" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 792, null, 0, new DateTime(2020, 6, 27, 17, 25, 7, 906, DateTimeKind.Local).AddTicks(4198), 155, "(066) 343-94-97" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1428, null, 1, new DateTime(2020, 9, 24, 23, 17, 24, 315, DateTimeKind.Local).AddTicks(8288), 154, "Zorina_Gladukh81@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1391, null, 1, new DateTime(2020, 10, 12, 18, 16, 34, 614, DateTimeKind.Local).AddTicks(4081), 154, "Kornelii_Pryadun@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 944, null, 1, new DateTime(2021, 1, 25, 14, 18, 41, 165, DateTimeKind.Local).AddTicks(899), 154, "Maryan.Petrishin@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 715, null, 1, new DateTime(2021, 1, 5, 10, 16, 12, 740, DateTimeKind.Local).AddTicks(7612), 154, "Yaroslava.Serdyuk@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 348, null, 1, new DateTime(2021, 1, 3, 22, 11, 44, 298, DateTimeKind.Local).AddTicks(3555), 154, "Mstislava51@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 81, null, 0, new DateTime(2020, 3, 19, 0, 39, 57, 351, DateTimeKind.Local).AddTicks(1113), 154, "(066) 961-17-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1314, null, 0, new DateTime(2020, 3, 9, 1, 40, 43, 924, DateTimeKind.Local).AddTicks(2584), 153, "(095) 383-47-27" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 966, null, 0, new DateTime(2020, 4, 7, 16, 43, 24, 423, DateTimeKind.Local).AddTicks(9422), 153, "(097) 892-84-76" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 587, null, 0, new DateTime(2021, 1, 12, 8, 57, 40, 838, DateTimeKind.Local).AddTicks(1007), 153, "(095) 994-83-94" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 286, null, 1, new DateTime(2020, 5, 17, 23, 2, 56, 717, DateTimeKind.Local).AddTicks(5857), 156, "Nemir27@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 800, null, 0, new DateTime(2020, 4, 21, 21, 0, 47, 653, DateTimeKind.Local).AddTicks(1922), 177, "(050) 938-56-10" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 409, null, 0, new DateTime(2020, 6, 18, 11, 31, 16, 231, DateTimeKind.Local).AddTicks(9438), 159, "(093) 758-65-45" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 688, null, 0, new DateTime(2020, 8, 22, 9, 8, 28, 205, DateTimeKind.Local).AddTicks(8898), 159, "(095) 588-71-49" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 652, null, 1, new DateTime(2021, 2, 23, 2, 23, 31, 722, DateTimeKind.Local).AddTicks(8362), 164, "Ada62@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 505, null, 0, new DateTime(2020, 9, 20, 14, 19, 32, 513, DateTimeKind.Local).AddTicks(2309), 164, "(066) 180-57-69" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 110, null, 0, new DateTime(2020, 6, 23, 23, 28, 35, 169, DateTimeKind.Local).AddTicks(1677), 164, "(094) 369-38-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1356, null, 1, new DateTime(2020, 3, 7, 0, 34, 39, 61, DateTimeKind.Local).AddTicks(8665), 163, "Darislava.Borecka@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1311, null, 0, new DateTime(2020, 7, 5, 3, 21, 54, 298, DateTimeKind.Local).AddTicks(382), 163, "(091) 318-74-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1219, null, 0, new DateTime(2020, 9, 4, 4, 8, 45, 959, DateTimeKind.Local).AddTicks(8572), 163, "(066) 490-88-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1072, null, 0, new DateTime(2020, 4, 4, 12, 0, 33, 911, DateTimeKind.Local).AddTicks(4226), 163, "(095) 273-55-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 782, null, 0, new DateTime(2020, 6, 6, 1, 5, 57, 919, DateTimeKind.Local).AddTicks(9031), 163, "(095) 281-88-36" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 781, null, 1, new DateTime(2020, 6, 24, 11, 18, 55, 253, DateTimeKind.Local).AddTicks(4809), 163, "Solomiya_Shindarei84@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 719, null, 1, new DateTime(2020, 4, 1, 3, 8, 42, 120, DateTimeKind.Local).AddTicks(240), 163, "Fedora_Dovgalevskii@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 413, null, 1, new DateTime(2020, 12, 5, 23, 21, 4, 694, DateTimeKind.Local).AddTicks(6200), 163, "Avgustin.Karpukh@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 268, null, 1, new DateTime(2020, 11, 18, 15, 36, 4, 369, DateTimeKind.Local).AddTicks(6027), 163, "Shastislav_Petrenko86@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 677, null, 0, new DateTime(2020, 6, 27, 6, 21, 23, 383, DateTimeKind.Local).AddTicks(5758), 159, "(093) 695-62-36" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1351, null, 1, new DateTime(2020, 11, 24, 5, 56, 3, 889, DateTimeKind.Local).AddTicks(4876), 162, "Khoriv54@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 117, null, 1, new DateTime(2020, 11, 8, 11, 28, 37, 744, DateTimeKind.Local).AddTicks(2356), 162, "Vilena_Kordun@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 100, null, 1, new DateTime(2020, 10, 16, 17, 54, 1, 45, DateTimeKind.Local).AddTicks(6262), 162, "Aelina.Luckii@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1360, null, 0, new DateTime(2020, 9, 2, 3, 29, 34, 666, DateTimeKind.Local).AddTicks(8963), 161, "(094) 835-26-68" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1061, null, 1, new DateTime(2020, 7, 20, 19, 9, 6, 953, DateTimeKind.Local).AddTicks(5764), 161, "Lad.Yevenko40@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1492, null, 0, new DateTime(2020, 10, 29, 23, 48, 45, 117, DateTimeKind.Local).AddTicks(9371), 160, "(095) 623-77-81" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1442, null, 1, new DateTime(2020, 8, 5, 21, 7, 54, 829, DateTimeKind.Local).AddTicks(7988), 160, "Orkhip74@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 900, null, 1, new DateTime(2020, 7, 27, 7, 4, 1, 363, DateTimeKind.Local).AddTicks(5333), 160, "Albina.Gladukh26@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 659, null, 1, new DateTime(2021, 2, 28, 3, 50, 15, 45, DateTimeKind.Local).AddTicks(3038), 160, "Vladislava48@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 318, null, 1, new DateTime(2020, 6, 17, 14, 52, 16, 157, DateTimeKind.Local).AddTicks(554), 160, "Levko.Balabukha@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 134, null, 1, new DateTime(2020, 4, 3, 11, 56, 44, 653, DateTimeKind.Local).AddTicks(4495), 160, "Yukhimiya_Savicka59@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1254, null, 0, new DateTime(2020, 12, 25, 20, 20, 5, 17, DateTimeKind.Local).AddTicks(76), 159, "(097) 707-35-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 911, null, 1, new DateTime(2020, 3, 29, 0, 48, 1, 944, DateTimeKind.Local).AddTicks(4273), 159, "Anastas_Pogiba61@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 231, null, 1, new DateTime(2020, 12, 11, 8, 50, 26, 214, DateTimeKind.Local).AddTicks(520), 162, "Snizhana.Pritula37@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1040, null, 0, new DateTime(2020, 9, 21, 23, 31, 33, 46, DateTimeKind.Local).AddTicks(370), 177, "(099) 095-29-03" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1177, null, 0, new DateTime(2020, 12, 30, 2, 42, 55, 303, DateTimeKind.Local).AddTicks(6030), 177, "(096) 769-79-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1393, null, 0, new DateTime(2020, 9, 23, 21, 20, 3, 353, DateTimeKind.Local).AddTicks(8688), 177, "(093) 028-58-32" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1201, null, 1, new DateTime(2020, 3, 14, 16, 6, 55, 732, DateTimeKind.Local).AddTicks(4036), 196, "Rodion.Glinskii47@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 764, null, 1, new DateTime(2020, 8, 5, 22, 17, 49, 358, DateTimeKind.Local).AddTicks(2393), 196, "Agnesa_Kovalenko@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 612, null, 0, new DateTime(2020, 11, 22, 4, 12, 36, 446, DateTimeKind.Local).AddTicks(5165), 196, "(066) 258-82-36" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 302, null, 0, new DateTime(2020, 5, 21, 1, 35, 32, 352, DateTimeKind.Local).AddTicks(3861), 196, "(091) 967-86-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 131, null, 0, new DateTime(2021, 1, 31, 6, 57, 49, 926, DateTimeKind.Local).AddTicks(778), 196, "(066) 147-99-21" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1184, null, 0, new DateTime(2020, 12, 16, 1, 12, 37, 822, DateTimeKind.Local).AddTicks(1799), 195, "(097) 591-02-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 956, null, 0, new DateTime(2020, 5, 2, 9, 5, 38, 54, DateTimeKind.Local).AddTicks(4436), 195, "(063) 801-63-38" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 939, null, 0, new DateTime(2020, 9, 30, 20, 26, 3, 438, DateTimeKind.Local).AddTicks(9506), 195, "(044) 703-57-62" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 695, null, 1, new DateTime(2020, 7, 28, 1, 11, 2, 521, DateTimeKind.Local).AddTicks(4217), 195, "Liliya_Vergun47@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 519, null, 0, new DateTime(2020, 9, 22, 18, 1, 31, 663, DateTimeKind.Local).AddTicks(6348), 195, "(044) 987-12-27" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1269, null, 0, new DateTime(2020, 9, 19, 23, 41, 54, 281, DateTimeKind.Local).AddTicks(890), 194, "(066) 765-05-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1075, null, 1, new DateTime(2020, 12, 14, 12, 53, 21, 109, DateTimeKind.Local).AddTicks(7986), 194, "Listvich_Gromiko23@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 332, null, 0, new DateTime(2020, 4, 29, 6, 11, 28, 599, DateTimeKind.Local).AddTicks(7504), 197, "(098) 025-76-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 844, null, 0, new DateTime(2020, 9, 22, 12, 39, 36, 948, DateTimeKind.Local).AddTicks(6118), 194, "(066) 384-15-42" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 897, null, 1, new DateTime(2020, 11, 25, 2, 27, 30, 602, DateTimeKind.Local).AddTicks(4726), 193, "Vyacheslava_Kivach@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 537, null, 1, new DateTime(2020, 3, 21, 17, 29, 12, 285, DateTimeKind.Local).AddTicks(6406), 193, "Tamara68@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 530, null, 1, new DateTime(2020, 10, 1, 1, 38, 36, 580, DateTimeKind.Local).AddTicks(7204), 193, "Daromir54@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 454, null, 1, new DateTime(2020, 12, 20, 6, 55, 25, 64, DateTimeKind.Local).AddTicks(7776), 193, "Roksolan_Grishko56@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 221, null, 1, new DateTime(2020, 7, 6, 10, 28, 44, 788, DateTimeKind.Local).AddTicks(9543), 193, "Yaropolk_Sidleckii@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 171, null, 0, new DateTime(2020, 6, 5, 2, 12, 24, 769, DateTimeKind.Local).AddTicks(3714), 193, "(097) 542-60-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 93, null, 1, new DateTime(2020, 11, 8, 11, 51, 50, 155, DateTimeKind.Local).AddTicks(3556), 193, "Orkhip.Kandiba64@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1281, null, 0, new DateTime(2020, 9, 11, 20, 37, 18, 632, DateTimeKind.Local).AddTicks(1606), 192, "(092) 600-60-51" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1181, null, 0, new DateTime(2020, 12, 20, 13, 50, 48, 802, DateTimeKind.Local).AddTicks(8386), 192, "(094) 022-80-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1147, null, 1, new DateTime(2021, 1, 28, 7, 14, 36, 574, DateTimeKind.Local).AddTicks(7468), 192, "Varvara_Umanec@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1016, null, 1, new DateTime(2021, 1, 1, 6, 39, 49, 949, DateTimeKind.Local).AddTicks(8764), 192, "Bozhemir_Vitryak@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 906, null, 1, new DateTime(2020, 5, 3, 11, 46, 39, 703, DateTimeKind.Local).AddTicks(1027), 192, "Svitlana_Cimbalistii@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 504, null, 0, new DateTime(2020, 6, 9, 11, 13, 59, 590, DateTimeKind.Local).AddTicks(9422), 194, "(063) 927-08-72" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 317, null, 0, new DateTime(2020, 3, 7, 2, 23, 55, 743, DateTimeKind.Local).AddTicks(7185), 192, "(093) 237-31-20" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1237, null, 1, new DateTime(2021, 1, 25, 8, 48, 5, 275, DateTimeKind.Local).AddTicks(7879), 197, "Zinovii.Vasilkivska2@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 153, null, 1, new DateTime(2020, 9, 8, 1, 23, 26, 709, DateTimeKind.Local).AddTicks(1640), 198, "Anfisa_Kovalenko@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 947, null, 1, new DateTime(2020, 6, 18, 22, 10, 21, 763, DateTimeKind.Local).AddTicks(2588), 203, "Zvenislav_Kornyiichuk@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 758, null, 1, new DateTime(2020, 5, 13, 21, 52, 55, 188, DateTimeKind.Local).AddTicks(7946), 203, "Radoslava.Gnatishina@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 40, null, 1, new DateTime(2020, 7, 27, 21, 16, 48, 235, DateTimeKind.Local).AddTicks(1462), 203, "Yeremii.Steckiv@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 36, null, 0, new DateTime(2020, 10, 10, 3, 27, 23, 769, DateTimeKind.Local).AddTicks(9920), 203, "(094) 660-19-33" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1452, null, 0, new DateTime(2021, 3, 3, 4, 10, 32, 936, DateTimeKind.Local).AddTicks(4238), 202, "(073) 189-17-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1185, null, 0, new DateTime(2020, 8, 26, 20, 40, 7, 76, DateTimeKind.Local).AddTicks(3048), 202, "(098) 998-57-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 988, null, 1, new DateTime(2020, 11, 29, 1, 45, 32, 603, DateTimeKind.Local).AddTicks(3286), 202, "Dobromisla_Kononec31@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 327, null, 1, new DateTime(2020, 5, 22, 9, 53, 6, 402, DateTimeKind.Local).AddTicks(8187), 202, "Maryan_Gordiichuk6@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 280, null, 1, new DateTime(2020, 11, 27, 8, 53, 19, 128, DateTimeKind.Local).AddTicks(726), 202, "Nemir89@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 850, null, 1, new DateTime(2020, 7, 31, 11, 29, 17, 665, DateTimeKind.Local).AddTicks(1911), 201, "Angelina41@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 736, null, 1, new DateTime(2021, 1, 27, 20, 5, 53, 311, DateTimeKind.Local).AddTicks(658), 201, "Potap.Grishko6@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 660, null, 0, new DateTime(2020, 6, 24, 15, 27, 28, 406, DateTimeKind.Local).AddTicks(5551), 201, "(073) 456-38-27" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1357, null, 1, new DateTime(2021, 2, 14, 13, 5, 5, 450, DateTimeKind.Local).AddTicks(6243), 197, "Anna_Kulchickii@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1396, null, 1, new DateTime(2020, 10, 6, 15, 20, 52, 523, DateTimeKind.Local).AddTicks(6321), 200, "Bozhen68@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 558, null, 1, new DateTime(2020, 10, 22, 8, 47, 52, 317, DateTimeKind.Local).AddTicks(6382), 200, "Avrora_Silecka13@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 918, null, 0, new DateTime(2020, 3, 26, 21, 15, 30, 20, DateTimeKind.Local).AddTicks(6399), 199, "(099) 747-92-68" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 581, null, 1, new DateTime(2021, 2, 10, 14, 25, 32, 30, DateTimeKind.Local).AddTicks(1883), 199, "Yana.Koreckii@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 293, null, 0, new DateTime(2020, 8, 31, 6, 17, 20, 38, DateTimeKind.Local).AddTicks(7636), 199, "(073) 816-74-86" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 137, null, 1, new DateTime(2020, 12, 4, 19, 29, 50, 477, DateTimeKind.Local).AddTicks(4609), 199, "Dobroslav.Andrukhovich@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 53, null, 1, new DateTime(2020, 5, 10, 13, 39, 0, 289, DateTimeKind.Local).AddTicks(1631), 199, "Marichka.Borovska@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1131, null, 1, new DateTime(2020, 12, 28, 23, 58, 14, 875, DateTimeKind.Local).AddTicks(7654), 198, "Stozhar.Priimak@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 849, null, 0, new DateTime(2020, 6, 24, 3, 57, 52, 831, DateTimeKind.Local).AddTicks(3531), 198, "(099) 185-66-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 743, null, 0, new DateTime(2020, 7, 11, 4, 35, 12, 787, DateTimeKind.Local).AddTicks(7765), 198, "(066) 177-66-83" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 538, null, 1, new DateTime(2020, 10, 20, 16, 41, 33, 771, DateTimeKind.Local).AddTicks(395), 198, "Fedora.Vitrebenko19@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 420, null, 1, new DateTime(2020, 11, 15, 21, 5, 15, 507, DateTimeKind.Local).AddTicks(3355), 198, "Polina.Sherbak@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 391, null, 0, new DateTime(2021, 2, 3, 9, 2, 54, 76, DateTimeKind.Local).AddTicks(9152), 198, "(097) 112-21-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1229, null, 0, new DateTime(2020, 3, 5, 12, 53, 54, 3, DateTimeKind.Local).AddTicks(5201), 200, "(091) 185-37-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 386, null, 0, new DateTime(2020, 3, 15, 5, 25, 50, 253, DateTimeKind.Local).AddTicks(7342), 153, "(098) 485-34-56" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 113, null, 0, new DateTime(2020, 6, 28, 22, 30, 26, 266, DateTimeKind.Local).AddTicks(7695), 192, "(073) 319-06-91" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1015, null, 0, new DateTime(2020, 8, 18, 23, 50, 2, 366, DateTimeKind.Local).AddTicks(6674), 191, "(092) 620-64-24" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1141, null, 0, new DateTime(2020, 5, 16, 11, 9, 12, 651, DateTimeKind.Local).AddTicks(2151), 182, "(050) 722-77-71" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1139, null, 0, new DateTime(2021, 1, 8, 16, 42, 23, 656, DateTimeKind.Local).AddTicks(745), 182, "(094) 253-38-91" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 929, null, 0, new DateTime(2021, 2, 24, 15, 27, 25, 294, DateTimeKind.Local).AddTicks(1085), 182, "(044) 184-19-32" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 840, null, 1, new DateTime(2021, 1, 5, 19, 34, 29, 192, DateTimeKind.Local).AddTicks(1772), 182, "Feodosiya24@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 706, null, 1, new DateTime(2020, 11, 20, 17, 20, 13, 839, DateTimeKind.Local).AddTicks(7813), 182, "Arsen_Sushko35@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 701, null, 1, new DateTime(2020, 4, 6, 19, 54, 30, 145, DateTimeKind.Local).AddTicks(473), 182, "Ustina.Prigoda0@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 622, null, 0, new DateTime(2020, 4, 7, 21, 32, 40, 852, DateTimeKind.Local).AddTicks(1627), 182, "(095) 814-55-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 248, null, 1, new DateTime(2020, 5, 19, 17, 52, 0, 29, DateTimeKind.Local).AddTicks(1606), 182, "Makar.Garun2@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 136, null, 0, new DateTime(2020, 5, 7, 20, 17, 15, 471, DateTimeKind.Local).AddTicks(7637), 182, "(097) 365-57-91" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 32, null, 0, new DateTime(2020, 10, 14, 15, 54, 2, 979, DateTimeKind.Local).AddTicks(8641), 182, "(066) 884-93-88" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1444, null, 0, new DateTime(2020, 5, 29, 17, 32, 49, 483, DateTimeKind.Local).AddTicks(6332), 181, "(050) 117-12-32" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 561, null, 0, new DateTime(2020, 9, 2, 2, 55, 46, 694, DateTimeKind.Local).AddTicks(1548), 181, "(092) 340-07-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1244, null, 0, new DateTime(2020, 10, 23, 7, 19, 26, 129, DateTimeKind.Local).AddTicks(9944), 182, "(095) 905-03-91" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 423, null, 0, new DateTime(2021, 2, 2, 21, 20, 22, 26, DateTimeKind.Local).AddTicks(3566), 181, "(096) 122-73-64" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1086, null, 1, new DateTime(2020, 5, 2, 12, 13, 27, 528, DateTimeKind.Local).AddTicks(8918), 179, "Dana.Yurchishina70@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 799, null, 0, new DateTime(2021, 2, 3, 22, 38, 15, 959, DateTimeKind.Local).AddTicks(1886), 179, "(099) 710-30-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 665, null, 1, new DateTime(2020, 7, 30, 2, 44, 11, 290, DateTimeKind.Local).AddTicks(9807), 179, "Zinovii36@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 385, null, 0, new DateTime(2020, 5, 8, 23, 15, 13, 580, DateTimeKind.Local).AddTicks(7248), 179, "(097) 670-89-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 96, null, 0, new DateTime(2020, 8, 5, 12, 22, 57, 319, DateTimeKind.Local).AddTicks(6616), 179, "(098) 896-20-09" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1418, null, 0, new DateTime(2020, 4, 3, 7, 32, 18, 63, DateTimeKind.Local).AddTicks(9858), 178, "(073) 029-21-63" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1346, null, 0, new DateTime(2020, 9, 14, 17, 28, 1, 848, DateTimeKind.Local).AddTicks(4283), 178, "(094) 696-89-82" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1262, null, 1, new DateTime(2020, 12, 1, 13, 49, 37, 183, DateTimeKind.Local).AddTicks(8591), 178, "Antoniya98@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1088, null, 0, new DateTime(2020, 6, 4, 3, 7, 35, 939, DateTimeKind.Local).AddTicks(2449), 178, "(098) 128-86-09" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1078, null, 1, new DateTime(2020, 12, 1, 12, 25, 36, 847, DateTimeKind.Local).AddTicks(1124), 178, "Burevist_Suchak@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 493, null, 0, new DateTime(2020, 12, 6, 20, 35, 5, 839, DateTimeKind.Local).AddTicks(3591), 178, "(095) 744-78-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 142, null, 0, new DateTime(2020, 8, 30, 0, 41, 34, 685, DateTimeKind.Local).AddTicks(2002), 178, "(097) 876-78-27" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1327, null, 0, new DateTime(2020, 3, 16, 5, 4, 30, 89, DateTimeKind.Local).AddTicks(4168), 179, "(094) 042-32-15" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1336, null, 0, new DateTime(2020, 11, 17, 23, 13, 40, 8, DateTimeKind.Local).AddTicks(9487), 191, "(098) 146-52-17" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1465, null, 0, new DateTime(2020, 8, 31, 16, 45, 30, 340, DateTimeKind.Local).AddTicks(1097), 182, "(094) 822-66-04" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 315, null, 1, new DateTime(2020, 11, 8, 19, 41, 46, 742, DateTimeKind.Local).AddTicks(2401), 183, "Radimir23@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 915, null, 0, new DateTime(2020, 5, 7, 20, 13, 30, 193, DateTimeKind.Local).AddTicks(3212), 191, "(063) 387-87-41" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 339, null, 1, new DateTime(2020, 7, 16, 10, 2, 46, 739, DateTimeKind.Local).AddTicks(3573), 190, "Nelya.Petrishina31@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 273, null, 0, new DateTime(2021, 2, 1, 2, 33, 13, 594, DateTimeKind.Local).AddTicks(8196), 190, "(093) 881-00-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1321, null, 0, new DateTime(2020, 7, 31, 11, 47, 28, 682, DateTimeKind.Local).AddTicks(6879), 189, "(096) 511-55-94" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1091, null, 1, new DateTime(2020, 5, 26, 1, 10, 21, 9, DateTimeKind.Local).AddTicks(1223), 189, "Vasil_Brickii62@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 696, null, 0, new DateTime(2020, 4, 23, 11, 27, 9, 614, DateTimeKind.Local).AddTicks(1182), 189, "(098) 260-71-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 144, null, 1, new DateTime(2021, 1, 20, 8, 44, 51, 295, DateTimeKind.Local).AddTicks(7637), 189, "Bilyana.Sosyura29@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1161, null, 1, new DateTime(2020, 10, 12, 14, 3, 16, 465, DateTimeKind.Local).AddTicks(4255), 188, "Chornota_Baranovska21@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1265, null, 1, new DateTime(2020, 11, 4, 10, 38, 46, 139, DateTimeKind.Local).AddTicks(5286), 187, "Romena_Lugova25@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 546, null, 1, new DateTime(2020, 4, 28, 4, 59, 41, 769, DateTimeKind.Local).AddTicks(3563), 187, "Yustina_Miklashevskii@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 419, null, 1, new DateTime(2020, 7, 10, 17, 50, 36, 799, DateTimeKind.Local).AddTicks(2286), 187, "Violetta77@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 361, null, 0, new DateTime(2020, 6, 16, 21, 5, 57, 342, DateTimeKind.Local).AddTicks(4757), 187, "(097) 960-25-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 233, null, 0, new DateTime(2021, 1, 11, 18, 15, 13, 522, DateTimeKind.Local).AddTicks(463), 183, "(066) 868-29-84" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 148, null, 1, new DateTime(2020, 9, 6, 20, 8, 26, 681, DateTimeKind.Local).AddTicks(9592), 187, "Svitlana_Shiyan@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1420, null, 0, new DateTime(2020, 8, 6, 3, 40, 45, 213, DateTimeKind.Local).AddTicks(7801), 186, "(093) 078-13-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1210, null, 0, new DateTime(2020, 10, 19, 9, 33, 2, 155, DateTimeKind.Local).AddTicks(4291), 186, "(099) 813-82-66" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1063, null, 0, new DateTime(2021, 2, 19, 8, 55, 12, 889, DateTimeKind.Local).AddTicks(5174), 186, "(073) 938-33-17" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 960, null, 0, new DateTime(2020, 8, 27, 12, 42, 35, 415, DateTimeKind.Local).AddTicks(4095), 186, "(044) 071-07-81" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 848, null, 1, new DateTime(2020, 10, 29, 11, 38, 36, 55, DateTimeKind.Local).AddTicks(6312), 186, "Ratibor.Mazun@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1004, null, 0, new DateTime(2020, 5, 14, 19, 24, 50, 402, DateTimeKind.Local).AddTicks(2840), 185, "(092) 039-57-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 936, null, 0, new DateTime(2021, 1, 10, 22, 25, 15, 875, DateTimeKind.Local).AddTicks(9416), 184, "(066) 360-00-96" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 765, null, 0, new DateTime(2020, 10, 22, 4, 13, 22, 471, DateTimeKind.Local).AddTicks(7171), 184, "(050) 487-98-47" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 741, null, 1, new DateTime(2020, 9, 14, 10, 13, 27, 64, DateTimeKind.Local).AddTicks(3383), 184, "Nina_Sushko90@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 460, null, 1, new DateTime(2020, 5, 16, 16, 16, 43, 894, DateTimeKind.Local).AddTicks(8792), 184, "Ustina75@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 114, null, 1, new DateTime(2020, 3, 4, 9, 59, 37, 236, DateTimeKind.Local).AddTicks(9906), 184, "Oksana_Shevchenko@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 569, null, 0, new DateTime(2020, 9, 4, 15, 6, 27, 491, DateTimeKind.Local).AddTicks(4702), 183, "(095) 490-97-68" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 139, null, 0, new DateTime(2020, 4, 21, 23, 8, 47, 145, DateTimeKind.Local).AddTicks(734), 187, "(099) 576-12-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1405, null, 1, new DateTime(2020, 8, 2, 16, 25, 34, 861, DateTimeKind.Local).AddTicks(3088), 152, "Yurii_Cimbalistii@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1107, null, 0, new DateTime(2020, 3, 26, 18, 5, 45, 710, DateTimeKind.Local).AddTicks(8592), 152, "(095) 815-33-34" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 789, null, 1, new DateTime(2020, 11, 14, 8, 46, 44, 792, DateTimeKind.Local).AddTicks(479), 152, "Virginiya_Veredun@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 744, null, 1, new DateTime(2020, 11, 5, 16, 3, 13, 81, DateTimeKind.Local).AddTicks(3357), 121, "Galina_Kovalskii2@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 542, null, 0, new DateTime(2020, 9, 27, 2, 14, 49, 877, DateTimeKind.Local).AddTicks(3312), 121, "(093) 595-19-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1171, null, 1, new DateTime(2020, 12, 1, 12, 14, 54, 947, DateTimeKind.Local).AddTicks(5558), 120, "Syuzana_Markiv@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1079, null, 1, new DateTime(2020, 6, 7, 17, 54, 10, 894, DateTimeKind.Local).AddTicks(2516), 120, "Lyuborada.Balaban5@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 819, null, 1, new DateTime(2020, 9, 21, 7, 36, 36, 916, DateTimeKind.Local).AddTicks(7825), 120, "Vlad23@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 636, null, 0, new DateTime(2020, 9, 15, 7, 1, 0, 528, DateTimeKind.Local).AddTicks(7217), 120, "(093) 668-49-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 599, null, 1, new DateTime(2020, 5, 1, 10, 30, 17, 726, DateTimeKind.Local).AddTicks(6614), 120, "Lyubomira.Tryasun@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 532, null, 0, new DateTime(2020, 7, 9, 12, 4, 28, 975, DateTimeKind.Local).AddTicks(8630), 120, "(098) 597-73-16" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 512, null, 1, new DateTime(2020, 12, 23, 18, 42, 7, 856, DateTimeKind.Local).AddTicks(4031), 120, "Aelayida_Tkachenko68@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 471, null, 0, new DateTime(2020, 3, 12, 15, 15, 46, 9, DateTimeKind.Local).AddTicks(3844), 120, "(097) 736-19-47" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 186, null, 0, new DateTime(2020, 3, 31, 9, 24, 52, 633, DateTimeKind.Local).AddTicks(8644), 120, "(099) 387-89-02" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 63, null, 1, new DateTime(2020, 8, 4, 13, 3, 16, 921, DateTimeKind.Local).AddTicks(3766), 120, "Zoryan79@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1151, null, 0, new DateTime(2020, 12, 22, 4, 16, 33, 772, DateTimeKind.Local).AddTicks(4812), 121, "(093) 466-73-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1247, null, 1, new DateTime(2020, 9, 9, 12, 28, 59, 969, DateTimeKind.Local).AddTicks(6494), 119, "Pilip_Pagutyak@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 863, null, 1, new DateTime(2020, 3, 29, 4, 17, 14, 645, DateTimeKind.Local).AddTicks(2641), 119, "Svyatopolk_Gaman33@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 540, null, 0, new DateTime(2020, 5, 24, 17, 2, 29, 322, DateTimeKind.Local).AddTicks(12), 119, "(098) 391-06-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 308, null, 1, new DateTime(2020, 7, 15, 20, 7, 47, 335, DateTimeKind.Local).AddTicks(4886), 119, "Marta_Danilishina@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 285, null, 1, new DateTime(2020, 3, 24, 18, 4, 4, 520, DateTimeKind.Local).AddTicks(406), 119, "Lyubodar80@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1378, null, 1, new DateTime(2021, 2, 14, 12, 25, 2, 998, DateTimeKind.Local).AddTicks(6808), 118, "Palazhka62@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1288, null, 1, new DateTime(2021, 2, 16, 1, 15, 56, 260, DateTimeKind.Local).AddTicks(3427), 118, "Orina9@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 997, null, 1, new DateTime(2020, 6, 4, 17, 36, 36, 496, DateTimeKind.Local).AddTicks(9194), 118, "Andrii57@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 763, null, 1, new DateTime(2020, 4, 8, 7, 3, 0, 397, DateTimeKind.Local).AddTicks(7501), 118, "Daleslava_Bilich@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 691, null, 0, new DateTime(2020, 7, 3, 8, 31, 9, 772, DateTimeKind.Local).AddTicks(4627), 118, "(093) 411-84-99" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 150, null, 1, new DateTime(2020, 9, 25, 11, 38, 58, 248, DateTimeKind.Local).AddTicks(5694), 118, "Kornilo83@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1422, null, 1, new DateTime(2021, 1, 20, 17, 14, 35, 128, DateTimeKind.Local).AddTicks(2390), 117, "Yaromir.Tindarei7@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1342, null, 1, new DateTime(2020, 10, 31, 18, 57, 58, 965, DateTimeKind.Local).AddTicks(2143), 117, "Azaliya17@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 976, null, 1, new DateTime(2020, 4, 9, 2, 36, 1, 562, DateTimeKind.Local).AddTicks(7989), 119, "Darina_Bondarenko@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 973, null, 0, new DateTime(2020, 5, 31, 16, 36, 8, 79, DateTimeKind.Local).AddTicks(6160), 117, "(050) 308-09-38" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1189, null, 1, new DateTime(2020, 10, 9, 1, 34, 54, 814, DateTimeKind.Local).AddTicks(7980), 121, "Zvenislava30@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 449, null, 0, new DateTime(2020, 9, 27, 22, 17, 53, 650, DateTimeKind.Local).AddTicks(2108), 122, "(098) 838-77-62" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 499, null, 1, new DateTime(2020, 5, 5, 1, 11, 59, 449, DateTimeKind.Local).AddTicks(407), 127, "Aelayida84@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 395, null, 1, new DateTime(2021, 1, 23, 14, 47, 45, 760, DateTimeKind.Local).AddTicks(4082), 127, "Lavrentii.Didukh15@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1461, null, 1, new DateTime(2021, 1, 30, 13, 53, 26, 148, DateTimeKind.Local).AddTicks(2854), 126, "Vira11@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1301, null, 1, new DateTime(2020, 5, 23, 20, 12, 31, 580, DateTimeKind.Local).AddTicks(8933), 126, "Garnoslav60@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 712, null, 0, new DateTime(2020, 9, 24, 8, 38, 5, 55, DateTimeKind.Local).AddTicks(1560), 126, "(097) 775-15-71" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1487, null, 1, new DateTime(2021, 2, 28, 7, 26, 28, 406, DateTimeKind.Local).AddTicks(4088), 125, "Oriyana76@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1373, null, 0, new DateTime(2021, 2, 11, 22, 2, 23, 602, DateTimeKind.Local).AddTicks(50), 125, "(066) 442-74-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1159, null, 0, new DateTime(2020, 6, 12, 4, 3, 53, 162, DateTimeKind.Local).AddTicks(9377), 125, "(095) 863-02-08" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1048, null, 1, new DateTime(2020, 3, 26, 4, 27, 27, 536, DateTimeKind.Local).AddTicks(5942), 125, "Rodoslav49@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 865, null, 0, new DateTime(2020, 10, 21, 1, 31, 8, 308, DateTimeKind.Local).AddTicks(3837), 125, "(094) 188-87-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 786, null, 0, new DateTime(2020, 10, 30, 16, 40, 17, 139, DateTimeKind.Local).AddTicks(8455), 125, "(097) 859-51-62" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 207, null, 0, new DateTime(2020, 11, 17, 19, 0, 12, 513, DateTimeKind.Local).AddTicks(8848), 125, "(094) 172-22-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1493, null, 1, new DateTime(2020, 3, 16, 10, 17, 56, 483, DateTimeKind.Local).AddTicks(1387), 121, "Musii94@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1480, null, 0, new DateTime(2020, 4, 9, 21, 15, 32, 10, DateTimeKind.Local).AddTicks(348), 124, "(050) 193-84-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1259, null, 0, new DateTime(2021, 2, 7, 4, 37, 53, 336, DateTimeKind.Local).AddTicks(3914), 124, "(096) 526-93-92" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1163, null, 0, new DateTime(2020, 4, 16, 0, 56, 6, 816, DateTimeKind.Local).AddTicks(4681), 124, "(044) 743-04-26" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1002, null, 0, new DateTime(2020, 12, 16, 13, 54, 48, 218, DateTimeKind.Local).AddTicks(992), 124, "(066) 295-84-04" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 826, null, 0, new DateTime(2020, 9, 3, 3, 40, 50, 973, DateTimeKind.Local).AddTicks(698), 124, "(098) 945-51-84" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 346, null, 1, new DateTime(2020, 3, 8, 22, 23, 4, 103, DateTimeKind.Local).AddTicks(2259), 124, "Agapiya.Romenec@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 226, null, 1, new DateTime(2021, 2, 26, 1, 24, 5, 231, DateTimeKind.Local).AddTicks(1687), 124, "Radim_Yalyuk@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 99, null, 0, new DateTime(2020, 4, 17, 17, 58, 1, 59, DateTimeKind.Local).AddTicks(9714), 124, "(063) 442-39-33" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1457, null, 1, new DateTime(2021, 1, 28, 18, 39, 21, 6, DateTimeKind.Local).AddTicks(4971), 123, "Arkhip78@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1325, null, 1, new DateTime(2020, 10, 13, 3, 25, 55, 58, DateTimeKind.Local).AddTicks(6368), 123, "Dolyana.Polishuk56@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 921, null, 1, new DateTime(2020, 4, 17, 11, 31, 9, 688, DateTimeKind.Local).AddTicks(2177), 123, "Boleslava.Romenec@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 731, null, 0, new DateTime(2020, 10, 23, 21, 34, 4, 302, DateTimeKind.Local).AddTicks(7411), 123, "(093) 298-46-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 133, null, 0, new DateTime(2020, 7, 18, 21, 54, 43, 53, DateTimeKind.Local).AddTicks(4225), 123, "(098) 592-29-05" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1458, null, 1, new DateTime(2020, 4, 11, 6, 57, 2, 92, DateTimeKind.Local).AddTicks(9836), 124, "Valerii_Rozputnya@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1382, null, 1, new DateTime(2021, 1, 20, 11, 6, 20, 933, DateTimeKind.Local).AddTicks(5945), 127, "Miloslava_Petrin56@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 963, null, 0, new DateTime(2020, 7, 14, 15, 8, 15, 337, DateTimeKind.Local).AddTicks(5699), 117, "(073) 862-27-89" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 344, null, 1, new DateTime(2020, 5, 15, 21, 15, 52, 777, DateTimeKind.Local).AddTicks(6139), 117, "Markiyan_Yemec67@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1077, null, 1, new DateTime(2020, 4, 10, 12, 13, 19, 48, DateTimeKind.Local).AddTicks(2490), 111, "Igor.Golovec@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 913, null, 1, new DateTime(2021, 1, 30, 19, 2, 35, 107, DateTimeKind.Local).AddTicks(7131), 111, "Agafiya28@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 728, null, 0, new DateTime(2020, 12, 3, 9, 8, 29, 650, DateTimeKind.Local).AddTicks(6809), 111, "(096) 650-53-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 627, null, 0, new DateTime(2020, 12, 10, 19, 56, 48, 278, DateTimeKind.Local).AddTicks(5320), 111, "(095) 141-01-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 572, null, 0, new DateTime(2020, 7, 23, 4, 52, 45, 60, DateTimeKind.Local).AddTicks(3773), 111, "(094) 328-99-16" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 562, null, 0, new DateTime(2020, 6, 15, 18, 22, 21, 883, DateTimeKind.Local).AddTicks(4016), 111, "(098) 304-56-02" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 132, null, 1, new DateTime(2020, 5, 17, 14, 29, 51, 339, DateTimeKind.Local).AddTicks(9629), 111, "Vseslava43@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 70, null, 1, new DateTime(2020, 12, 6, 5, 9, 27, 661, DateTimeKind.Local).AddTicks(896), 111, "Andrii53@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1494, null, 1, new DateTime(2020, 7, 6, 3, 16, 40, 950, DateTimeKind.Local).AddTicks(9894), 110, "Askold12@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1372, null, 1, new DateTime(2021, 1, 24, 10, 59, 50, 422, DateTimeKind.Local).AddTicks(1454), 110, "Oriyana_Boreckii62@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1138, null, 0, new DateTime(2020, 6, 27, 6, 38, 55, 30, DateTimeKind.Local).AddTicks(2829), 110, "(073) 198-84-72" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1071, null, 1, new DateTime(2020, 7, 17, 5, 49, 16, 792, DateTimeKind.Local).AddTicks(5269), 110, "Ratibor_Dmitrishin35@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1485, null, 0, new DateTime(2020, 3, 27, 8, 42, 4, 195, DateTimeKind.Local).AddTicks(7554), 111, "(093) 135-84-92" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 892, null, 0, new DateTime(2021, 1, 31, 16, 39, 39, 616, DateTimeKind.Local).AddTicks(8631), 110, "(093) 312-60-36" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 83, null, 1, new DateTime(2020, 7, 11, 11, 53, 15, 489, DateTimeKind.Local).AddTicks(3704), 110, "Fevroniya.Gladukh49@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1424, null, 1, new DateTime(2020, 12, 7, 14, 48, 53, 297, DateTimeKind.Local).AddTicks(2914), 109, "Dmitro.Openko95@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1323, null, 0, new DateTime(2020, 11, 29, 0, 51, 26, 729, DateTimeKind.Local).AddTicks(7360), 109, "(096) 231-60-76" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1308, null, 1, new DateTime(2021, 2, 24, 21, 58, 48, 421, DateTimeKind.Local).AddTicks(8696), 109, "Tetyana77@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 888, null, 1, new DateTime(2020, 3, 10, 6, 43, 36, 816, DateTimeKind.Local).AddTicks(1906), 109, "Vseslava94@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 813, null, 0, new DateTime(2020, 4, 24, 12, 33, 39, 43, DateTimeKind.Local).AddTicks(3702), 109, "(093) 578-08-10" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1440, null, 1, new DateTime(2020, 4, 25, 17, 54, 55, 717, DateTimeKind.Local).AddTicks(9313), 108, "Alvina.Potockii49@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1414, null, 0, new DateTime(2020, 9, 30, 23, 8, 26, 928, DateTimeKind.Local).AddTicks(7125), 108, "(094) 863-41-41" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 828, null, 0, new DateTime(2020, 8, 7, 18, 10, 31, 103, DateTimeKind.Local).AddTicks(4330), 108, "(091) 270-37-97" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 482, null, 1, new DateTime(2020, 6, 12, 6, 52, 34, 668, DateTimeKind.Local).AddTicks(7387), 108, "Khvalimir.Yackiv@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 275, null, 0, new DateTime(2020, 3, 19, 14, 26, 19, 341, DateTimeKind.Local).AddTicks(3787), 108, "(066) 027-93-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1179, null, 1, new DateTime(2021, 2, 18, 14, 45, 22, 734, DateTimeKind.Local).AddTicks(9793), 107, "Gerasim38@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 246, null, 1, new DateTime(2020, 4, 13, 3, 47, 59, 116, DateTimeKind.Local).AddTicks(7977), 110, "Arkhip.Lucka78@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 837, null, 0, new DateTime(2020, 6, 25, 12, 21, 22, 451, DateTimeKind.Local).AddTicks(7101), 117, "(044) 449-73-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 210, null, 0, new DateTime(2020, 9, 26, 8, 14, 43, 569, DateTimeKind.Local).AddTicks(4132), 112, "(044) 617-47-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 879, null, 0, new DateTime(2020, 4, 8, 18, 11, 39, 914, DateTimeKind.Local).AddTicks(7771), 112, "(063) 468-39-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 342, null, 0, new DateTime(2021, 2, 27, 16, 51, 10, 683, DateTimeKind.Local).AddTicks(476), 117, "(094) 578-98-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 185, null, 1, new DateTime(2020, 11, 29, 14, 1, 57, 197, DateTimeKind.Local).AddTicks(6459), 117, "Pavlina53@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 160, null, 0, new DateTime(2020, 11, 21, 23, 35, 19, 361, DateTimeKind.Local).AddTicks(9711), 117, "(066) 598-25-09" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 90, null, 1, new DateTime(2021, 2, 11, 17, 1, 13, 613, DateTimeKind.Local).AddTicks(8989), 117, "Stanislav.Shiyan@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1172, null, 1, new DateTime(2020, 11, 15, 21, 33, 56, 590, DateTimeKind.Local).AddTicks(9127), 116, "Larisa83@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1239, null, 1, new DateTime(2021, 1, 25, 8, 35, 21, 724, DateTimeKind.Local).AddTicks(3257), 115, "Nelya.Ivanciv@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1083, null, 0, new DateTime(2020, 9, 27, 4, 44, 35, 866, DateTimeKind.Local).AddTicks(4099), 115, "(099) 063-05-86" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1026, null, 0, new DateTime(2020, 11, 18, 1, 13, 33, 588, DateTimeKind.Local).AddTicks(5242), 115, "(098) 870-13-72" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 895, null, 1, new DateTime(2021, 1, 9, 22, 5, 46, 425, DateTimeKind.Local).AddTicks(8268), 115, "Azarii.Palamarchuk61@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 761, null, 0, new DateTime(2021, 2, 11, 18, 39, 43, 664, DateTimeKind.Local).AddTicks(3584), 115, "(099) 452-18-32" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 377, null, 1, new DateTime(2020, 11, 15, 14, 51, 32, 880, DateTimeKind.Local).AddTicks(4768), 115, "Vira.Babukh@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1483, null, 1, new DateTime(2020, 8, 30, 7, 21, 35, 572, DateTimeKind.Local).AddTicks(763), 114, "Olena52@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 732, null, 1, new DateTime(2020, 6, 22, 11, 34, 42, 158, DateTimeKind.Local).AddTicks(582), 112, "Zvenimir16@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1463, null, 0, new DateTime(2020, 10, 26, 21, 45, 22, 413, DateTimeKind.Local).AddTicks(4302), 114, "(066) 801-38-10" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 620, null, 0, new DateTime(2020, 9, 10, 18, 2, 22, 696, DateTimeKind.Local).AddTicks(4068), 114, "(091) 567-17-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 452, null, 0, new DateTime(2020, 6, 5, 17, 18, 53, 647, DateTimeKind.Local).AddTicks(679), 114, "(096) 606-77-10" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 208, null, 0, new DateTime(2020, 4, 8, 10, 13, 27, 658, DateTimeKind.Local).AddTicks(5872), 114, "(091) 346-40-06" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 126, null, 0, new DateTime(2020, 8, 19, 4, 33, 7, 492, DateTimeKind.Local).AddTicks(9482), 114, "(066) 214-58-05" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 5, null, 0, new DateTime(2021, 1, 15, 15, 36, 11, 801, DateTimeKind.Local).AddTicks(3248), 114, "(091) 873-60-68" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1358, null, 0, new DateTime(2020, 8, 9, 20, 45, 7, 303, DateTimeKind.Local).AddTicks(8708), 113, "(092) 575-50-81" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 753, null, 1, new DateTime(2020, 9, 5, 21, 39, 41, 81, DateTimeKind.Local).AddTicks(6226), 113, "Olelko84@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 685, null, 1, new DateTime(2021, 1, 9, 3, 11, 50, 44, DateTimeKind.Local).AddTicks(5047), 113, "Bratoslav39@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 598, null, 1, new DateTime(2020, 5, 2, 22, 35, 13, 671, DateTimeKind.Local).AddTicks(5189), 113, "Milodara_Chervonii@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1499, null, 0, new DateTime(2020, 11, 30, 7, 28, 2, 724, DateTimeKind.Local).AddTicks(4334), 112, "(073) 254-40-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1476, null, 0, new DateTime(2020, 6, 5, 3, 46, 36, 762, DateTimeKind.Local).AddTicks(7715), 112, "(096) 042-84-16" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1222, null, 1, new DateTime(2021, 2, 19, 11, 54, 24, 597, DateTimeKind.Local).AddTicks(810), 112, "Stanislava8@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 628, null, 1, new DateTime(2020, 12, 11, 7, 15, 57, 741, DateTimeKind.Local).AddTicks(3001), 114, "Boleslava_Latanskii@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1305, null, 0, new DateTime(2020, 11, 16, 3, 29, 53, 946, DateTimeKind.Local).AddTicks(8640), 203, "(098) 409-08-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 360, null, 1, new DateTime(2020, 3, 12, 18, 4, 49, 722, DateTimeKind.Local).AddTicks(7542), 128, "Izyaslav85@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1205, null, 0, new DateTime(2020, 10, 29, 9, 8, 43, 743, DateTimeKind.Local).AddTicks(2738), 128, "(093) 115-48-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 109, null, 0, new DateTime(2020, 9, 10, 9, 46, 21, 762, DateTimeKind.Local).AddTicks(8998), 145, "(094) 699-01-90" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1409, null, 1, new DateTime(2020, 7, 8, 7, 49, 24, 291, DateTimeKind.Local).AddTicks(4328), 144, "Kalina.Dzyubyak65@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 968, null, 1, new DateTime(2020, 6, 25, 2, 23, 11, 685, DateTimeKind.Local).AddTicks(4520), 144, "Lidiya58@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 923, null, 0, new DateTime(2021, 2, 1, 17, 36, 23, 227, DateTimeKind.Local).AddTicks(7992), 144, "(094) 877-45-22" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 791, null, 1, new DateTime(2020, 10, 28, 17, 39, 21, 485, DateTimeKind.Local).AddTicks(5280), 144, "Viola_Yemec@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 261, null, 1, new DateTime(2020, 4, 15, 3, 36, 3, 487, DateTimeKind.Local).AddTicks(5469), 144, "Antonii98@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 106, null, 1, new DateTime(2020, 3, 4, 13, 37, 20, 729, DateTimeKind.Local).AddTicks(7600), 144, "Podolyan.Grishko45@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 43, null, 0, new DateTime(2020, 5, 2, 17, 20, 19, 193, DateTimeKind.Local).AddTicks(5393), 144, "(063) 804-93-53" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 502, null, 1, new DateTime(2021, 2, 20, 11, 21, 30, 521, DateTimeKind.Local).AddTicks(4061), 143, "Bozhena_Vergun56@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 365, null, 0, new DateTime(2020, 8, 3, 11, 38, 49, 844, DateTimeKind.Local).AddTicks(608), 143, "(092) 374-27-62" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 326, null, 1, new DateTime(2020, 8, 8, 18, 56, 24, 160, DateTimeKind.Local).AddTicks(7973), 143, "Viktor.Mazun4@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1100, null, 1, new DateTime(2020, 7, 16, 3, 27, 47, 352, DateTimeKind.Local).AddTicks(244), 142, "Ruslan.Dmitrishina@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 738, null, 1, new DateTime(2020, 11, 3, 13, 8, 34, 131, DateTimeKind.Local).AddTicks(479), 145, "Lada.Balakun@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1035, null, 1, new DateTime(2021, 1, 26, 10, 23, 55, 636, DateTimeKind.Local).AddTicks(6852), 142, "Doleslava66@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1024, null, 0, new DateTime(2020, 9, 5, 12, 5, 23, 375, DateTimeKind.Local).AddTicks(9121), 141, "(095) 564-00-92" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 517, null, 0, new DateTime(2020, 9, 16, 0, 19, 59, 208, DateTimeKind.Local).AddTicks(7070), 141, "(094) 751-97-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 462, null, 1, new DateTime(2020, 6, 23, 4, 59, 57, 318, DateTimeKind.Local).AddTicks(6682), 141, "Kornii.Shiyan89@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 111, null, 1, new DateTime(2020, 12, 11, 15, 58, 26, 8, DateTimeKind.Local).AddTicks(3978), 141, "Agniya.Mariyevska@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 38, null, 0, new DateTime(2020, 6, 16, 15, 19, 1, 277, DateTimeKind.Local).AddTicks(6059), 141, "(095) 047-71-02" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 37, null, 0, new DateTime(2020, 6, 29, 8, 54, 59, 939, DateTimeKind.Local).AddTicks(6356), 141, "(094) 472-51-18" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1462, null, 0, new DateTime(2020, 9, 30, 3, 59, 48, 665, DateTimeKind.Local).AddTicks(1032), 140, "(095) 063-92-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1343, null, 1, new DateTime(2020, 6, 10, 4, 8, 31, 280, DateTimeKind.Local).AddTicks(4570), 140, "Yukhim.Spotikach@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1152, null, 1, new DateTime(2020, 9, 2, 4, 38, 56, 832, DateTimeKind.Local).AddTicks(4728), 140, "Nemir_Skoropadskii@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 875, null, 1, new DateTime(2021, 1, 25, 21, 5, 43, 210, DateTimeKind.Local).AddTicks(7948), 140, "Lyubomir71@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 730, null, 0, new DateTime(2020, 5, 13, 2, 33, 45, 245, DateTimeKind.Local).AddTicks(3691), 140, "(098) 951-30-70" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 904, null, 0, new DateTime(2020, 3, 26, 10, 52, 56, 720, DateTimeKind.Local).AddTicks(8101), 139, "(050) 647-80-04" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 489, null, 0, new DateTime(2020, 3, 27, 17, 28, 43, 912, DateTimeKind.Local).AddTicks(9667), 142, "(050) 103-00-44" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 878, null, 1, new DateTime(2021, 2, 17, 19, 54, 40, 431, DateTimeKind.Local).AddTicks(2377), 139, "Pelageya71@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 847, null, 0, new DateTime(2020, 9, 18, 15, 12, 59, 368, DateTimeKind.Local).AddTicks(3586), 145, "(093) 641-66-80" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 271, null, 1, new DateTime(2020, 11, 26, 16, 51, 9, 364, DateTimeKind.Local).AddTicks(616), 146, "Dolyana_Ivanciv24@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 672, null, 1, new DateTime(2020, 4, 11, 11, 2, 40, 518, DateTimeKind.Local).AddTicks(4698), 152, "Azarii_Andrukhovich76@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 590, null, 0, new DateTime(2020, 8, 1, 20, 30, 26, 938, DateTimeKind.Local).AddTicks(927), 152, "(096) 024-45-18" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 163, null, 0, new DateTime(2020, 9, 3, 0, 19, 23, 887, DateTimeKind.Local).AddTicks(3777), 152, "(044) 734-77-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 65, null, 1, new DateTime(2020, 5, 19, 16, 58, 35, 578, DateTimeKind.Local).AddTicks(8330), 152, "Rostislava_Petrishina@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 39, null, 0, new DateTime(2021, 2, 2, 4, 42, 0, 833, DateTimeKind.Local).AddTicks(4472), 152, "(073) 493-70-90" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 12, null, 1, new DateTime(2020, 7, 25, 22, 50, 16, 908, DateTimeKind.Local).AddTicks(1669), 152, "Bogdan19@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1411, null, 1, new DateTime(2021, 2, 28, 12, 25, 3, 618, DateTimeKind.Local).AddTicks(9674), 151, "Agata_Cushko@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 671, null, 0, new DateTime(2020, 8, 29, 9, 8, 46, 901, DateTimeKind.Local).AddTicks(5358), 151, "(099) 577-87-61" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 294, null, 1, new DateTime(2020, 4, 24, 20, 44, 36, 516, DateTimeKind.Local).AddTicks(4762), 151, "Avrora10@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 270, null, 0, new DateTime(2020, 8, 6, 5, 16, 3, 963, DateTimeKind.Local).AddTicks(3711), 151, "(066) 095-94-79" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 69, null, 0, new DateTime(2020, 5, 14, 2, 43, 40, 180, DateTimeKind.Local).AddTicks(1417), 151, "(098) 628-82-21" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 179, null, 0, new DateTime(2020, 3, 13, 20, 16, 13, 357, DateTimeKind.Local).AddTicks(9240), 150, "(092) 150-94-70" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 200, null, 0, new DateTime(2020, 4, 20, 16, 24, 33, 784, DateTimeKind.Local).AddTicks(6499), 146, "(066) 547-00-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 71, null, 1, new DateTime(2020, 11, 23, 23, 58, 58, 122, DateTimeKind.Local).AddTicks(3848), 150, "Gavrilo_Grigorishin@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 829, null, 1, new DateTime(2020, 8, 6, 23, 50, 42, 427, DateTimeKind.Local).AddTicks(7370), 149, "Irma.Grineveckii@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 311, null, 0, new DateTime(2020, 11, 26, 10, 20, 28, 576, DateTimeKind.Local).AddTicks(2006), 149, "(092) 239-08-86" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 219, null, 0, new DateTime(2021, 2, 13, 9, 45, 49, 937, DateTimeKind.Local).AddTicks(9328), 149, "(096) 541-20-51" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1481, null, 1, new DateTime(2020, 9, 17, 23, 55, 13, 572, DateTimeKind.Local).AddTicks(7570), 148, "Khvalimir_Didukh@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1433, null, 0, new DateTime(2021, 2, 6, 20, 2, 5, 323, DateTimeKind.Local).AddTicks(4969), 148, "(093) 719-50-29" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 958, null, 1, new DateTime(2020, 4, 16, 12, 25, 36, 458, DateTimeKind.Local).AddTicks(7810), 148, "Milodara_Koreckii76@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 375, null, 0, new DateTime(2021, 1, 16, 0, 21, 48, 543, DateTimeKind.Local).AddTicks(7392), 148, "(096) 565-41-24" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 508, null, 0, new DateTime(2020, 7, 27, 3, 20, 42, 34, DateTimeKind.Local).AddTicks(6292), 147, "(094) 917-61-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 4, null, 0, new DateTime(2020, 4, 24, 12, 22, 20, 967, DateTimeKind.Local).AddTicks(6764), 147, "(073) 260-35-69" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 787, null, 1, new DateTime(2020, 8, 29, 6, 47, 44, 249, DateTimeKind.Local).AddTicks(5513), 146, "Mikhailo_Stepanec46@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 656, null, 1, new DateTime(2020, 9, 13, 16, 1, 18, 883, DateTimeKind.Local).AddTicks(2586), 146, "Svitlana.Shindarei@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 503, null, 1, new DateTime(2020, 12, 3, 6, 18, 43, 803, DateTimeKind.Local).AddTicks(3317), 146, "Gerasim_Potocka52@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1228, null, 1, new DateTime(2021, 1, 19, 20, 59, 37, 848, DateTimeKind.Local).AddTicks(6660), 149, "Bronislava59@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 446, null, 0, new DateTime(2021, 1, 28, 20, 20, 42, 155, DateTimeKind.Local).AddTicks(9994), 128, "(097) 258-19-24" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 769, null, 1, new DateTime(2020, 4, 1, 10, 13, 22, 21, DateTimeKind.Local).AddTicks(9855), 139, "Panas_Bashuk73@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 14, null, 1, new DateTime(2020, 7, 22, 5, 17, 15, 912, DateTimeKind.Local).AddTicks(7522), 139, "Avreliya25@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 445, null, 0, new DateTime(2020, 8, 4, 2, 47, 17, 155, DateTimeKind.Local).AddTicks(5627), 134, "(098) 778-01-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 234, null, 0, new DateTime(2020, 9, 14, 21, 4, 58, 987, DateTimeKind.Local).AddTicks(3495), 134, "(073) 895-35-86" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 683, null, 1, new DateTime(2020, 6, 9, 0, 46, 41, 240, DateTimeKind.Local).AddTicks(1044), 133, "Gorimir_Serdyuk@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 639, null, 0, new DateTime(2020, 11, 19, 15, 15, 55, 409, DateTimeKind.Local).AddTicks(7307), 133, "(091) 587-60-01" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 467, null, 0, new DateTime(2020, 5, 12, 18, 42, 31, 884, DateTimeKind.Local).AddTicks(4580), 133, "(066) 058-17-99" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 390, null, 1, new DateTime(2020, 5, 16, 16, 59, 34, 241, DateTimeKind.Local).AddTicks(853), 133, "Makar88@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 55, null, 1, new DateTime(2020, 8, 9, 7, 24, 27, 490, DateTimeKind.Local).AddTicks(4426), 133, "Roman.Spotikach21@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1005, null, 0, new DateTime(2020, 12, 30, 14, 42, 13, 414, DateTimeKind.Local).AddTicks(3923), 132, "(093) 726-41-89" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 983, null, 0, new DateTime(2020, 4, 11, 12, 14, 35, 45, DateTimeKind.Local).AddTicks(3094), 132, "(073) 707-26-79" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 553, null, 0, new DateTime(2020, 5, 6, 6, 30, 18, 929, DateTimeKind.Local).AddTicks(5789), 132, "(094) 568-74-65" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 535, null, 1, new DateTime(2020, 3, 5, 2, 37, 29, 471, DateTimeKind.Local).AddTicks(2760), 132, "Zinayida76@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 251, null, 0, new DateTime(2020, 4, 1, 10, 46, 24, 535, DateTimeKind.Local).AddTicks(2502), 132, "(095) 955-83-47" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 871, null, 1, new DateTime(2020, 9, 29, 0, 21, 24, 547, DateTimeKind.Local).AddTicks(1283), 134, "Borimir46@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 946, null, 0, new DateTime(2020, 9, 3, 16, 11, 58, 148, DateTimeKind.Local).AddTicks(750), 131, "(098) 355-89-10" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 336, null, 1, new DateTime(2020, 10, 21, 17, 27, 3, 892, DateTimeKind.Local).AddTicks(3108), 131, "Alvina79@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1473, null, 0, new DateTime(2021, 1, 8, 14, 24, 15, 934, DateTimeKind.Local).AddTicks(2922), 130, "(094) 897-68-26" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1110, null, 1, new DateTime(2021, 2, 10, 3, 53, 42, 315, DateTimeKind.Local).AddTicks(7674), 130, "Boleslava97@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1034, null, 1, new DateTime(2020, 7, 14, 23, 3, 4, 861, DateTimeKind.Local).AddTicks(6546), 130, "Arkadii.Potocka@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 18, null, 0, new DateTime(2020, 6, 7, 14, 47, 44, 515, DateTimeKind.Local).AddTicks(9611), 130, "(063) 284-44-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1174, null, 1, new DateTime(2020, 7, 10, 9, 52, 43, 834, DateTimeKind.Local).AddTicks(6436), 129, "Lyuborada_Sidlecka@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 602, null, 0, new DateTime(2020, 10, 9, 16, 30, 58, 791, DateTimeKind.Local).AddTicks(6868), 129, "(092) 524-54-73" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 597, null, 1, new DateTime(2020, 11, 15, 21, 42, 41, 872, DateTimeKind.Local).AddTicks(9093), 129, "Arkhip_Splyukha@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 453, null, 1, new DateTime(2020, 6, 22, 5, 11, 17, 294, DateTimeKind.Local).AddTicks(8745), 129, "Fayina.Gaiovii@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 392, null, 0, new DateTime(2020, 10, 25, 0, 54, 21, 482, DateTimeKind.Local).AddTicks(4100), 129, "(096) 732-98-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 224, null, 1, new DateTime(2020, 9, 10, 9, 50, 32, 335, DateTimeKind.Local).AddTicks(4295), 129, "Yustina.Gaichuk12@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1497, null, 1, new DateTime(2020, 6, 8, 3, 48, 59, 553, DateTimeKind.Local).AddTicks(928), 128, "Lukyan_Gaman@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 670, null, 0, new DateTime(2020, 5, 11, 15, 17, 25, 407, DateTimeKind.Local).AddTicks(3982), 131, "(096) 079-52-63" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 49, null, 1, new DateTime(2021, 2, 18, 19, 38, 47, 526, DateTimeKind.Local).AddTicks(5835), 139, "Sofiya58@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 886, null, 1, new DateTime(2020, 5, 22, 23, 22, 1, 818, DateTimeKind.Local).AddTicks(5362), 134, "Varvara5@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 24, null, 0, new DateTime(2020, 9, 7, 12, 5, 18, 439, DateTimeKind.Local).AddTicks(1912), 135, "(092) 654-47-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 586, null, 0, new DateTime(2020, 12, 17, 7, 33, 19, 221, DateTimeKind.Local).AddTicks(8961), 138, "(050) 622-86-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 451, null, 0, new DateTime(2020, 10, 12, 0, 44, 50, 261, DateTimeKind.Local).AddTicks(1105), 138, "(044) 719-01-09" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 345, null, 1, new DateTime(2021, 1, 13, 18, 12, 21, 756, DateTimeKind.Local).AddTicks(320), 138, "Gorislav34@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1275, null, 1, new DateTime(2020, 8, 8, 3, 43, 37, 547, DateTimeKind.Local).AddTicks(1060), 137, "Svyatoslav_Lobachevska86@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1232, null, 0, new DateTime(2020, 5, 14, 0, 44, 21, 292, DateTimeKind.Local).AddTicks(8393), 137, "(097) 710-62-12" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 919, null, 1, new DateTime(2021, 1, 26, 15, 7, 25, 380, DateTimeKind.Local).AddTicks(7353), 137, "Fevroniya22@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 777, null, 0, new DateTime(2020, 8, 7, 1, 42, 27, 612, DateTimeKind.Local).AddTicks(1141), 137, "(092) 375-17-02" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 776, null, 1, new DateTime(2020, 10, 18, 23, 32, 35, 283, DateTimeKind.Local).AddTicks(9747), 137, "Anfisa97@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 632, null, 1, new DateTime(2020, 9, 7, 20, 16, 31, 530, DateTimeKind.Local).AddTicks(9788), 137, "Dobroslava6@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 378, null, 1, new DateTime(2021, 2, 19, 20, 27, 15, 165, DateTimeKind.Local).AddTicks(2487), 137, "Pelageya_Luckiv@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 199, null, 0, new DateTime(2020, 11, 8, 8, 20, 24, 686, DateTimeKind.Local).AddTicks(9559), 137, "(096) 809-02-24" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1496, null, 0, new DateTime(2020, 10, 6, 7, 47, 52, 0, DateTimeKind.Local).AddTicks(5997), 136, "(095) 907-49-85" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1309, null, 0, new DateTime(2021, 1, 23, 20, 12, 35, 662, DateTimeKind.Local).AddTicks(3962), 134, "(095) 276-50-20" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1053, null, 0, new DateTime(2020, 8, 8, 4, 16, 7, 726, DateTimeKind.Local).AddTicks(1921), 136, "(097) 429-05-56" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 617, null, 0, new DateTime(2020, 9, 5, 14, 18, 22, 739, DateTimeKind.Local).AddTicks(5072), 136, "(092) 946-72-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 95, null, 0, new DateTime(2020, 8, 22, 11, 3, 43, 603, DateTimeKind.Local).AddTicks(3741), 136, "(063) 663-79-47" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1335, null, 0, new DateTime(2020, 6, 13, 8, 25, 4, 893, DateTimeKind.Local).AddTicks(5176), 135, "(097) 668-26-61" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1017, null, 0, new DateTime(2020, 12, 14, 7, 11, 21, 362, DateTimeKind.Local).AddTicks(7186), 135, "(073) 082-20-12" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 971, null, 1, new DateTime(2021, 2, 16, 2, 42, 20, 728, DateTimeKind.Local).AddTicks(387), 135, "Bogdan.Petriv@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 925, null, 1, new DateTime(2021, 2, 14, 23, 38, 23, 173, DateTimeKind.Local).AddTicks(5405), 135, "Pilip19@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 497, null, 1, new DateTime(2020, 12, 17, 23, 31, 54, 876, DateTimeKind.Local).AddTicks(5193), 135, "Bogdan66@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 469, null, 1, new DateTime(2020, 12, 11, 5, 38, 26, 611, DateTimeKind.Local).AddTicks(1219), 135, "Anastasii.Romenec71@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 398, null, 0, new DateTime(2020, 7, 1, 4, 20, 22, 727, DateTimeKind.Local).AddTicks(7038), 135, "(063) 962-72-84" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 175, null, 1, new DateTime(2020, 7, 5, 16, 6, 47, 589, DateTimeKind.Local).AddTicks(109), 135, "Aelina.Petrin@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 158, null, 1, new DateTime(2020, 11, 16, 12, 43, 49, 861, DateTimeKind.Local).AddTicks(2308), 135, "Miron_Mazilo@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 58, null, 0, new DateTime(2020, 9, 5, 8, 46, 18, 704, DateTimeKind.Local).AddTicks(2596), 135, "(063) 888-12-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 833, null, 0, new DateTime(2020, 9, 18, 13, 19, 24, 853, DateTimeKind.Local).AddTicks(378), 136, "(092) 263-83-70" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 324, null, 0, new DateTime(2020, 8, 1, 0, 10, 13, 326, DateTimeKind.Local).AddTicks(538), 204, "(092) 037-36-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 400, null, 1, new DateTime(2020, 12, 12, 3, 51, 59, 991, DateTimeKind.Local).AddTicks(9113), 204, "Marko85@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 525, null, 1, new DateTime(2020, 5, 4, 15, 24, 19, 201, DateTimeKind.Local).AddTicks(3404), 204, "Vasilina85@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 59, null, 0, new DateTime(2020, 4, 9, 0, 6, 21, 606, DateTimeKind.Local).AddTicks(4345), 274, "(091) 718-16-81" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1453, null, 0, new DateTime(2020, 5, 22, 19, 48, 53, 205, DateTimeKind.Local).AddTicks(89), 273, "(098) 984-72-29" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 868, null, 1, new DateTime(2020, 9, 14, 19, 10, 7, 189, DateTimeKind.Local).AddTicks(582), 273, "Zvenislav.Kononec@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 455, null, 1, new DateTime(2020, 11, 25, 7, 56, 18, 731, DateTimeKind.Local).AddTicks(3546), 273, "Yurii.Tarasyuk@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 442, null, 1, new DateTime(2020, 6, 27, 19, 20, 26, 228, DateTimeKind.Local).AddTicks(783), 273, "Ada.Porivailo@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1484, null, 1, new DateTime(2020, 8, 11, 4, 27, 7, 361, DateTimeKind.Local).AddTicks(299), 272, "Milana92@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 807, null, 1, new DateTime(2020, 4, 4, 14, 25, 29, 379, DateTimeKind.Local).AddTicks(9060), 272, "Anfisa40@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 989, null, 0, new DateTime(2020, 11, 22, 6, 30, 31, 852, DateTimeKind.Local).AddTicks(1395), 271, "(066) 576-40-61" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 858, null, 0, new DateTime(2020, 12, 15, 14, 28, 53, 55, DateTimeKind.Local).AddTicks(4443), 271, "(099) 812-15-41" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 444, null, 1, new DateTime(2020, 4, 18, 18, 54, 47, 125, DateTimeKind.Local).AddTicks(6016), 271, "Marta_Nogachevskii47@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 291, null, 0, new DateTime(2020, 5, 10, 3, 18, 17, 922, DateTimeKind.Local).AddTicks(2317), 271, "(066) 845-79-70" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 46, null, 0, new DateTime(2020, 8, 18, 20, 12, 55, 741, DateTimeKind.Local).AddTicks(2707), 271, "(093) 429-16-96" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 164, null, 0, new DateTime(2020, 9, 10, 0, 53, 22, 708, DateTimeKind.Local).AddTicks(7950), 274, "(091) 890-48-08" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 7, null, 1, new DateTime(2020, 11, 14, 16, 31, 23, 336, DateTimeKind.Local).AddTicks(3473), 271, "Marko_Mazilo11@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1070, null, 0, new DateTime(2021, 2, 15, 10, 18, 1, 890, DateTimeKind.Local).AddTicks(2996), 270, "(096) 945-27-15" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 279, null, 1, new DateTime(2020, 4, 14, 0, 17, 32, 229, DateTimeKind.Local).AddTicks(814), 270, "Zoremir.Prigoda@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1407, null, 1, new DateTime(2020, 6, 7, 14, 17, 9, 711, DateTimeKind.Local).AddTicks(2845), 269, "Shastislav97@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1398, null, 0, new DateTime(2020, 11, 8, 8, 25, 38, 559, DateTimeKind.Local).AddTicks(7569), 269, "(092) 701-71-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1304, null, 1, new DateTime(2020, 4, 8, 5, 16, 48, 685, DateTimeKind.Local).AddTicks(7092), 269, "Gerasim.Vasilkivska@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 647, null, 0, new DateTime(2020, 5, 22, 7, 15, 1, 772, DateTimeKind.Local).AddTicks(7448), 269, "(095) 925-33-02" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 239, null, 1, new DateTime(2020, 11, 29, 19, 47, 29, 452, DateTimeKind.Local).AddTicks(6675), 269, "Maksim.Kononec25@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 16, null, 0, new DateTime(2020, 3, 12, 6, 20, 37, 913, DateTimeKind.Local).AddTicks(4622), 269, "(066) 571-16-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1113, null, 0, new DateTime(2020, 9, 14, 20, 18, 17, 591, DateTimeKind.Local).AddTicks(5667), 268, "(091) 425-54-21" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 808, null, 0, new DateTime(2020, 8, 20, 0, 11, 28, 91, DateTimeKind.Local).AddTicks(7003), 268, "(091) 542-18-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 644, null, 0, new DateTime(2020, 11, 13, 22, 23, 28, 82, DateTimeKind.Local).AddTicks(2219), 268, "(098) 064-12-16" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 307, null, 1, new DateTime(2020, 9, 26, 11, 23, 23, 354, DateTimeKind.Local).AddTicks(8058), 268, "Zoryan64@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1307, null, 0, new DateTime(2020, 6, 9, 2, 5, 49, 728, DateTimeKind.Local).AddTicks(2043), 270, "(050) 420-84-80" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 135, null, 0, new DateTime(2020, 6, 22, 23, 10, 57, 179, DateTimeKind.Local).AddTicks(3833), 268, "(044) 390-94-45" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 249, null, 1, new DateTime(2020, 9, 11, 4, 16, 31, 354, DateTimeKind.Local).AddTicks(6846), 274, "Sergii68@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1127, null, 0, new DateTime(2020, 8, 29, 23, 34, 54, 854, DateTimeKind.Local).AddTicks(2466), 274, "(096) 035-55-46" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1439, null, 1, new DateTime(2020, 8, 7, 22, 38, 35, 177, DateTimeKind.Local).AddTicks(2945), 278, "Vlada.Polishuk61@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1175, null, 1, new DateTime(2020, 3, 9, 8, 30, 40, 663, DateTimeKind.Local).AddTicks(4490), 278, "Syuzana5@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 662, null, 1, new DateTime(2020, 6, 21, 18, 38, 34, 668, DateTimeKind.Local).AddTicks(938), 278, "Tayisiya.Maistrenko@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1, null, 0, new DateTime(2020, 5, 30, 17, 32, 53, 483, DateTimeKind.Local).AddTicks(1715), 278, "(097) 268-63-92" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1466, null, 1, new DateTime(2020, 6, 1, 16, 47, 34, 995, DateTimeKind.Local).AddTicks(1202), 277, "Taras21@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1459, null, 0, new DateTime(2020, 8, 20, 11, 56, 27, 438, DateTimeKind.Local).AddTicks(2435), 277, "(050) 828-15-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1207, null, 1, new DateTime(2020, 9, 14, 8, 51, 43, 450, DateTimeKind.Local).AddTicks(841), 277, "Mechislava.Gromiko60@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1059, null, 1, new DateTime(2020, 10, 6, 9, 41, 5, 337, DateTimeKind.Local).AddTicks(1235), 277, "Agapiya_Latan@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 986, null, 1, new DateTime(2020, 6, 23, 3, 8, 31, 536, DateTimeKind.Local).AddTicks(6005), 277, "Aelina_Rozputnya5@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 945, null, 0, new DateTime(2020, 12, 9, 18, 25, 21, 648, DateTimeKind.Local).AddTicks(550), 277, "(093) 841-86-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 583, null, 0, new DateTime(2020, 3, 22, 17, 48, 31, 206, DateTimeKind.Local).AddTicks(5529), 277, "(066) 414-89-65" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 521, null, 1, new DateTime(2021, 2, 18, 8, 28, 41, 298, DateTimeKind.Local).AddTicks(3384), 277, "Yeremii_Burmilo81@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1008, null, 0, new DateTime(2020, 5, 17, 2, 15, 26, 782, DateTimeKind.Local).AddTicks(1070), 274, "(092) 038-01-88" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 459, null, 0, new DateTime(2020, 3, 18, 1, 44, 48, 842, DateTimeKind.Local).AddTicks(7829), 277, "(093) 820-93-16" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1156, null, 0, new DateTime(2021, 1, 18, 8, 45, 8, 744, DateTimeKind.Local).AddTicks(1002), 276, "(050) 043-03-97" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1050, null, 0, new DateTime(2020, 5, 11, 18, 59, 6, 463, DateTimeKind.Local).AddTicks(5038), 276, "(095) 983-54-89" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 964, null, 0, new DateTime(2020, 5, 17, 17, 53, 49, 22, DateTimeKind.Local).AddTicks(4220), 276, "(073) 781-88-62" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1283, null, 1, new DateTime(2020, 10, 16, 4, 37, 56, 330, DateTimeKind.Local).AddTicks(6041), 275, "Yan.Vergun95@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1215, null, 0, new DateTime(2021, 2, 16, 11, 16, 18, 517, DateTimeKind.Local).AddTicks(3440), 275, "(096) 553-64-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 932, null, 0, new DateTime(2020, 10, 25, 0, 10, 14, 953, DateTimeKind.Local).AddTicks(2425), 275, "(050) 195-45-42" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 703, null, 0, new DateTime(2020, 10, 19, 17, 9, 27, 92, DateTimeKind.Local).AddTicks(2744), 275, "(098) 847-26-34" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 35, null, 1, new DateTime(2020, 11, 3, 0, 31, 47, 608, DateTimeKind.Local).AddTicks(5248), 275, "Alevtina_Vasilishin@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1417, null, 0, new DateTime(2020, 3, 8, 18, 25, 32, 916, DateTimeKind.Local).AddTicks(6640), 274, "(095) 094-38-49" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1310, null, 0, new DateTime(2020, 8, 5, 2, 39, 15, 110, DateTimeKind.Local).AddTicks(8665), 274, "(073) 535-69-03" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1235, null, 0, new DateTime(2020, 4, 18, 18, 52, 5, 404, DateTimeKind.Local).AddTicks(664), 274, "(098) 005-09-16" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1214, null, 1, new DateTime(2020, 9, 11, 20, 15, 23, 743, DateTimeKind.Local).AddTicks(746), 274, "Valentina41@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1429, null, 0, new DateTime(2020, 6, 10, 9, 41, 56, 652, DateTimeKind.Local).AddTicks(8971), 276, "(096) 945-35-45" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 369, null, 0, new DateTime(2020, 11, 2, 19, 17, 11, 141, DateTimeKind.Local).AddTicks(444), 279, "(096) 907-77-19" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 129, null, 1, new DateTime(2021, 1, 26, 8, 4, 36, 243, DateTimeKind.Local).AddTicks(982), 268, "Artemiya_Semenochko@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1344, null, 1, new DateTime(2021, 2, 16, 1, 42, 1, 633, DateTimeKind.Local).AddTicks(234), 266, "Ladislav_Yackiv@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1246, null, 0, new DateTime(2020, 10, 16, 12, 52, 20, 132, DateTimeKind.Local).AddTicks(8805), 260, "(073) 722-60-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1136, null, 0, new DateTime(2020, 6, 8, 5, 22, 41, 298, DateTimeKind.Local).AddTicks(6120), 260, "(092) 031-66-29" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 626, null, 1, new DateTime(2020, 8, 7, 9, 8, 36, 335, DateTimeKind.Local).AddTicks(3634), 260, "Glib.Trublayevskii@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 329, null, 0, new DateTime(2020, 4, 19, 22, 33, 42, 899, DateTimeKind.Local).AddTicks(8851), 260, "(097) 581-59-18" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1274, null, 1, new DateTime(2020, 10, 8, 15, 13, 40, 932, DateTimeKind.Local).AddTicks(6006), 259, "Varvara36@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1003, null, 1, new DateTime(2020, 10, 20, 9, 48, 25, 525, DateTimeKind.Local).AddTicks(7574), 259, "Bozhen67@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 969, null, 0, new DateTime(2020, 3, 20, 0, 27, 12, 1, DateTimeKind.Local).AddTicks(9837), 259, "(098) 148-89-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 924, null, 1, new DateTime(2020, 6, 26, 22, 46, 7, 83, DateTimeKind.Local).AddTicks(1596), 259, "Ilona.Romenec57@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 616, null, 1, new DateTime(2020, 12, 21, 20, 18, 27, 303, DateTimeKind.Local).AddTicks(5149), 259, "Yulianna77@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 534, null, 0, new DateTime(2020, 8, 18, 7, 10, 21, 95, DateTimeKind.Local).AddTicks(5332), 259, "(097) 050-67-04" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 426, null, 1, new DateTime(2020, 3, 31, 5, 43, 31, 509, DateTimeKind.Local).AddTicks(7164), 259, "Markiyan.Balabukha@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 232, null, 0, new DateTime(2021, 1, 17, 4, 41, 28, 916, DateTimeKind.Local).AddTicks(1167), 259, "(066) 434-30-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1432, null, 1, new DateTime(2020, 9, 1, 19, 46, 3, 903, DateTimeKind.Local).AddTicks(4762), 260, "Nestor.Likovich@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1392, null, 0, new DateTime(2020, 10, 5, 4, 49, 49, 149, DateTimeKind.Local).AddTicks(4867), 258, "(095) 457-68-63" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 940, null, 0, new DateTime(2020, 7, 27, 15, 47, 37, 186, DateTimeKind.Local).AddTicks(1703), 258, "(063) 865-41-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 29, null, 1, new DateTime(2021, 2, 27, 8, 28, 53, 298, DateTimeKind.Local).AddTicks(6202), 258, "Lavrin_Yanyuk44@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 805, null, 0, new DateTime(2020, 3, 8, 2, 12, 32, 422, DateTimeKind.Local).AddTicks(8321), 257, "(094) 912-36-62" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1446, null, 1, new DateTime(2020, 6, 3, 11, 53, 51, 770, DateTimeKind.Local).AddTicks(3727), 256, "Lyubov29@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1208, null, 1, new DateTime(2020, 5, 3, 21, 42, 15, 647, DateTimeKind.Local).AddTicks(2649), 256, "Zabava63@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 927, null, 0, new DateTime(2021, 1, 18, 15, 13, 41, 183, DateTimeKind.Local).AddTicks(562), 256, "(099) 720-61-20" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 601, null, 0, new DateTime(2020, 3, 11, 22, 2, 21, 371, DateTimeKind.Local).AddTicks(3942), 256, "(094) 557-14-46" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 545, null, 1, new DateTime(2020, 6, 25, 1, 31, 41, 718, DateTimeKind.Local).AddTicks(5045), 256, "Dobromira_Miklashevskii@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 425, null, 0, new DateTime(2020, 9, 18, 11, 27, 10, 603, DateTimeKind.Local).AddTicks(5907), 256, "(096) 100-64-26" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 410, null, 1, new DateTime(2021, 2, 27, 5, 42, 9, 624, DateTimeKind.Local).AddTicks(2555), 256, "Yaromir.Mazailo@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 387, null, 0, new DateTime(2021, 1, 12, 3, 22, 24, 225, DateTimeKind.Local).AddTicks(659), 256, "(094) 509-56-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1448, null, 0, new DateTime(2020, 6, 1, 13, 58, 52, 177, DateTimeKind.Local).AddTicks(6683), 255, "(073) 723-96-21" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1268, null, 0, new DateTime(2020, 5, 22, 7, 59, 11, 716, DateTimeKind.Local).AddTicks(8019), 258, "(066) 213-81-44" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 479, null, 1, new DateTime(2020, 5, 5, 17, 6, 25, 927, DateTimeKind.Local).AddTicks(4527), 267, "Agafiya.Gamula@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1454, null, 0, new DateTime(2020, 11, 5, 4, 36, 15, 535, DateTimeKind.Local).AddTicks(8317), 260, "(099) 782-52-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 217, null, 1, new DateTime(2020, 5, 31, 10, 44, 46, 754, DateTimeKind.Local).AddTicks(8217), 261, "Pelageya_Yurchishina@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 797, null, 1, new DateTime(2020, 4, 2, 12, 21, 20, 610, DateTimeKind.Local).AddTicks(7059), 266, "Zenovii_Kornyiichuk@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 102, null, 0, new DateTime(2020, 9, 25, 15, 47, 6, 878, DateTimeKind.Local).AddTicks(147), 266, "(096) 404-84-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1105, null, 0, new DateTime(2021, 2, 27, 17, 3, 27, 953, DateTimeKind.Local).AddTicks(5722), 265, "(092) 408-85-27" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 961, null, 0, new DateTime(2021, 1, 28, 4, 47, 51, 229, DateTimeKind.Local).AddTicks(4067), 265, "(066) 215-69-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 735, null, 0, new DateTime(2020, 9, 6, 8, 47, 48, 202, DateTimeKind.Local).AddTicks(4516), 265, "(093) 104-77-16" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 515, null, 1, new DateTime(2020, 8, 6, 8, 20, 24, 293, DateTimeKind.Local).AddTicks(8361), 265, "Orislava0@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 490, null, 1, new DateTime(2020, 7, 3, 21, 13, 54, 369, DateTimeKind.Local).AddTicks(7295), 265, "Marina.Yacishina@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 281, null, 0, new DateTime(2020, 12, 5, 6, 16, 40, 745, DateTimeKind.Local).AddTicks(973), 265, "(095) 265-67-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 834, null, 1, new DateTime(2020, 12, 11, 12, 10, 45, 674, DateTimeKind.Local).AddTicks(4971), 264, "Bratoslav.Fedorishina41@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 584, null, 1, new DateTime(2020, 8, 9, 19, 52, 29, 606, DateTimeKind.Local).AddTicks(9741), 264, "Georgii8@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 547, null, 0, new DateTime(2020, 4, 5, 3, 39, 50, 777, DateTimeKind.Local).AddTicks(832), 264, "(098) 552-77-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 295, null, 0, new DateTime(2020, 6, 7, 7, 20, 16, 934, DateTimeKind.Local).AddTicks(8110), 264, "(044) 341-19-17" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1475, null, 0, new DateTime(2020, 9, 12, 8, 2, 19, 11, DateTimeKind.Local).AddTicks(1592), 260, "(095) 046-24-53" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1341, null, 1, new DateTime(2020, 10, 17, 12, 37, 46, 798, DateTimeKind.Local).AddTicks(5656), 263, "Stozhar.Bricka8@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1014, null, 1, new DateTime(2020, 11, 5, 18, 30, 40, 294, DateTimeKind.Local).AddTicks(4463), 263, "Yaromil_Gladukh@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 952, null, 1, new DateTime(2020, 10, 1, 4, 0, 43, 131, DateTimeKind.Local).AddTicks(1536), 263, "Andrii.Savicka@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 801, null, 0, new DateTime(2020, 12, 30, 0, 6, 33, 155, DateTimeKind.Local).AddTicks(8564), 263, "(098) 785-92-99" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 784, null, 0, new DateTime(2021, 1, 24, 6, 31, 28, 608, DateTimeKind.Local).AddTicks(8401), 263, "(066) 503-09-81" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1406, null, 1, new DateTime(2020, 7, 2, 23, 8, 23, 150, DateTimeKind.Local).AddTicks(1546), 262, "Bratimir_Andrukhovich64@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1099, null, 0, new DateTime(2020, 12, 17, 18, 40, 16, 195, DateTimeKind.Local).AddTicks(5770), 262, "(091) 759-67-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 798, null, 0, new DateTime(2020, 9, 17, 17, 27, 5, 945, DateTimeKind.Local).AddTicks(6957), 262, "(099) 409-18-42" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 372, null, 1, new DateTime(2020, 8, 18, 20, 21, 56, 448, DateTimeKind.Local).AddTicks(7761), 262, "Bratomil70@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 161, null, 1, new DateTime(2020, 4, 7, 9, 47, 34, 61, DateTimeKind.Local).AddTicks(711), 262, "Snizhan.Mazun95@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1200, null, 1, new DateTime(2020, 3, 21, 11, 35, 26, 116, DateTimeKind.Local).AddTicks(8990), 261, "Bryachislav.Likovich@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 835, null, 0, new DateTime(2020, 8, 2, 0, 17, 23, 913, DateTimeKind.Local).AddTicks(7668), 261, "(097) 086-19-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 717, null, 1, new DateTime(2020, 7, 14, 17, 57, 1, 897, DateTimeKind.Local).AddTicks(9977), 261, "Viola_Mariyevskii@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1056, null, 1, new DateTime(2021, 3, 3, 9, 49, 37, 252, DateTimeKind.Local).AddTicks(4079), 263, "Dobromira_Grechko@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 790, null, 0, new DateTime(2020, 8, 4, 6, 38, 0, 297, DateTimeKind.Local).AddTicks(1981), 255, "(095) 917-93-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 576, null, 0, new DateTime(2020, 10, 15, 12, 1, 8, 254, DateTimeKind.Local).AddTicks(105), 279, "(044) 614-98-53" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 255, null, 0, new DateTime(2020, 4, 5, 15, 16, 31, 425, DateTimeKind.Local).AddTicks(9259), 281, "(091) 284-00-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 570, null, 0, new DateTime(2020, 9, 5, 20, 44, 2, 629, DateTimeKind.Local).AddTicks(7797), 296, "(044) 490-22-09" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 486, null, 1, new DateTime(2020, 6, 20, 17, 48, 47, 877, DateTimeKind.Local).AddTicks(8426), 296, "Nataliya_Pendik36@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 323, null, 1, new DateTime(2020, 9, 29, 16, 9, 48, 123, DateTimeKind.Local).AddTicks(6969), 296, "Vsevolod_Romenec@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 299, null, 1, new DateTime(2020, 4, 28, 14, 42, 34, 980, DateTimeKind.Local).AddTicks(4088), 296, "Diyana.Lyuta93@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 238, null, 0, new DateTime(2020, 6, 23, 7, 58, 43, 1, DateTimeKind.Local).AddTicks(4752), 296, "(091) 510-98-85" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 128, null, 1, new DateTime(2020, 10, 17, 12, 21, 27, 323, DateTimeKind.Local).AddTicks(7410), 296, "Vasil24@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1384, null, 1, new DateTime(2020, 6, 20, 14, 22, 19, 259, DateTimeKind.Local).AddTicks(2165), 295, "Gorimir.Mazilo97@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 815, null, 0, new DateTime(2020, 9, 22, 9, 6, 1, 149, DateTimeKind.Local).AddTicks(927), 295, "(097) 120-90-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 775, null, 0, new DateTime(2020, 10, 15, 20, 11, 12, 14, DateTimeKind.Local).AddTicks(2010), 295, "(091) 381-27-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 693, null, 0, new DateTime(2020, 9, 8, 21, 9, 52, 282, DateTimeKind.Local).AddTicks(2079), 295, "(097) 136-26-39" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 585, null, 0, new DateTime(2020, 12, 19, 9, 45, 55, 537, DateTimeKind.Local).AddTicks(2579), 295, "(095) 135-66-83" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 564, null, 1, new DateTime(2020, 6, 13, 15, 51, 12, 599, DateTimeKind.Local).AddTicks(4266), 295, "Yeremii.Svidrigailo51@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 661, null, 0, new DateTime(2020, 6, 9, 6, 15, 35, 921, DateTimeKind.Local).AddTicks(4942), 296, "(066) 282-72-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 440, null, 1, new DateTime(2020, 10, 8, 9, 24, 59, 205, DateTimeKind.Local).AddTicks(1313), 295, "Varvara52@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1095, null, 1, new DateTime(2020, 7, 19, 7, 24, 30, 180, DateTimeKind.Local).AddTicks(1714), 294, "Maryan.Kalach@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 970, null, 0, new DateTime(2020, 7, 26, 11, 10, 2, 172, DateTimeKind.Local).AddTicks(3602), 294, "(095) 745-84-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 951, null, 0, new DateTime(2020, 11, 19, 13, 27, 8, 460, DateTimeKind.Local).AddTicks(844), 294, "(094) 917-03-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 371, null, 0, new DateTime(2020, 4, 10, 23, 41, 40, 797, DateTimeKind.Local).AddTicks(7717), 294, "(050) 875-42-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 193, null, 1, new DateTime(2020, 8, 4, 10, 6, 32, 844, DateTimeKind.Local).AddTicks(9667), 294, "Kupava_Baranovskii54@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 89, null, 1, new DateTime(2020, 3, 26, 12, 29, 15, 64, DateTimeKind.Local).AddTicks(6551), 294, "Blagovista.Shindarei@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1488, null, 0, new DateTime(2020, 9, 17, 17, 36, 49, 418, DateTimeKind.Local).AddTicks(3414), 293, "(050) 521-35-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1468, null, 0, new DateTime(2020, 5, 30, 14, 47, 26, 620, DateTimeKind.Local).AddTicks(9905), 293, "(099) 031-91-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1089, null, 1, new DateTime(2021, 2, 1, 3, 1, 50, 978, DateTimeKind.Local).AddTicks(3755), 293, "Zhanna.Lucka83@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 962, null, 1, new DateTime(2020, 9, 17, 21, 42, 26, 127, DateTimeKind.Local).AddTicks(4134), 293, "Boguslava_Kompaniyec71@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 942, null, 1, new DateTime(2020, 4, 15, 21, 26, 43, 496, DateTimeKind.Local).AddTicks(5096), 293, "Irina97@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 283, null, 1, new DateTime(2020, 8, 8, 4, 10, 15, 87, DateTimeKind.Local).AddTicks(5188), 293, "Dobromisla54@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 309, null, 0, new DateTime(2020, 10, 23, 5, 52, 50, 992, DateTimeKind.Local).AddTicks(3015), 295, "(044) 417-61-79" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 197, null, 0, new DateTime(2021, 1, 2, 22, 29, 1, 165, DateTimeKind.Local).AddTicks(3672), 293, "(073) 459-64-42" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 664, null, 1, new DateTime(2020, 5, 19, 4, 53, 57, 688, DateTimeKind.Local).AddTicks(6520), 296, "Miron_Luckiv91@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 851, null, 0, new DateTime(2020, 3, 10, 7, 46, 9, 107, DateTimeKind.Local).AddTicks(1944), 296, "(044) 799-77-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 579, null, 1, new DateTime(2020, 12, 26, 17, 47, 31, 428, DateTimeKind.Local).AddTicks(4122), 300, "Diana85@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 257, null, 1, new DateTime(2020, 6, 11, 6, 35, 23, 506, DateTimeKind.Local).AddTicks(6472), 300, "Roksolan43@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 72, null, 0, new DateTime(2020, 9, 12, 14, 17, 17, 755, DateTimeKind.Local).AddTicks(6142), 300, "(093) 127-62-75" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 31, null, 0, new DateTime(2021, 2, 24, 3, 4, 52, 326, DateTimeKind.Local).AddTicks(6736), 300, "(095) 547-85-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 928, null, 1, new DateTime(2020, 9, 28, 5, 29, 46, 60, DateTimeKind.Local).AddTicks(6256), 299, "Pavlo90@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 881, null, 1, new DateTime(2021, 1, 13, 20, 45, 2, 395, DateTimeKind.Local).AddTicks(1559), 299, "Orisya84@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 431, null, 0, new DateTime(2020, 9, 21, 20, 30, 39, 347, DateTimeKind.Local).AddTicks(2929), 299, "(094) 110-82-47" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 272, null, 0, new DateTime(2020, 12, 16, 6, 28, 24, 362, DateTimeKind.Local).AddTicks(9386), 299, "(097) 266-82-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 147, null, 0, new DateTime(2020, 10, 14, 4, 42, 46, 671, DateTimeKind.Local).AddTicks(7287), 299, "(091) 808-51-99" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 62, null, 1, new DateTime(2020, 7, 9, 9, 49, 22, 66, DateTimeKind.Local).AddTicks(253), 299, "Anton.Gnatishina82@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 33, null, 0, new DateTime(2020, 5, 27, 21, 36, 35, 646, DateTimeKind.Local).AddTicks(9184), 299, "(099) 468-11-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 780, null, 1, new DateTime(2020, 11, 16, 4, 17, 2, 747, DateTimeKind.Local).AddTicks(8295), 298, "Fevroniya.Vereshuk@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 673, null, 1, new DateTime(2020, 3, 31, 6, 10, 52, 203, DateTimeKind.Local).AddTicks(7405), 296, "Dobroslav94@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 611, null, 1, new DateTime(2021, 1, 6, 23, 29, 47, 193, DateTimeKind.Local).AddTicks(603), 298, "Larisa.Unich50@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 473, null, 1, new DateTime(2020, 4, 1, 19, 53, 6, 970, DateTimeKind.Local).AddTicks(388), 298, "Panas.Pendik@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 439, null, 1, new DateTime(2020, 9, 13, 7, 46, 46, 91, DateTimeKind.Local).AddTicks(8440), 298, "Virginiya64@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 429, null, 1, new DateTime(2021, 1, 14, 9, 38, 11, 518, DateTimeKind.Local).AddTicks(3478), 298, "Mikola_Borovskii@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 316, null, 0, new DateTime(2020, 7, 12, 16, 15, 3, 433, DateTimeKind.Local).AddTicks(8646), 298, "(093) 322-21-24" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 77, null, 1, new DateTime(2021, 1, 3, 6, 45, 30, 598, DateTimeKind.Local).AddTicks(513), 298, "Ustina2@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1437, null, 1, new DateTime(2021, 1, 19, 11, 56, 50, 422, DateTimeKind.Local).AddTicks(5243), 297, "Denis.Romei@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 995, null, 1, new DateTime(2020, 6, 11, 16, 24, 40, 578, DateTimeKind.Local).AddTicks(6884), 297, "Mokrina_Gaiovii@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 873, null, 1, new DateTime(2020, 12, 4, 12, 57, 47, 399, DateTimeKind.Local).AddTicks(2926), 297, "Yurii_Slobodyan@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 716, null, 0, new DateTime(2020, 5, 18, 5, 39, 19, 40, DateTimeKind.Local).AddTicks(2500), 297, "(091) 172-99-45" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1347, null, 1, new DateTime(2020, 12, 29, 21, 32, 40, 831, DateTimeKind.Local).AddTicks(5063), 296, "Motrya_Grineveckii@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1277, null, 0, new DateTime(2020, 9, 3, 2, 37, 29, 798, DateTimeKind.Local).AddTicks(943), 296, "(093) 396-23-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 861, null, 1, new DateTime(2020, 10, 23, 7, 3, 31, 904, DateTimeKind.Local).AddTicks(7141), 296, "Tetyana_Borovska96@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 510, null, 1, new DateTime(2020, 6, 14, 7, 29, 19, 875, DateTimeKind.Local).AddTicks(5248), 298, "Yevgen_Stepanec@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1298, null, 0, new DateTime(2020, 5, 14, 5, 50, 3, 313, DateTimeKind.Local).AddTicks(8770), 280, "(098) 471-51-49" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1449, null, 0, new DateTime(2020, 7, 16, 10, 22, 36, 812, DateTimeKind.Local).AddTicks(3179), 292, "(092) 037-15-21" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1224, null, 1, new DateTime(2020, 7, 22, 22, 4, 30, 547, DateTimeKind.Local).AddTicks(5848), 292, "Yustina_Lyashuk@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1394, null, 0, new DateTime(2020, 7, 17, 10, 57, 36, 870, DateTimeKind.Local).AddTicks(8882), 285, "(093) 835-94-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1326, null, 1, new DateTime(2020, 5, 25, 12, 33, 43, 744, DateTimeKind.Local).AddTicks(8717), 285, "Tamara_Kompaniyec76@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1248, null, 1, new DateTime(2020, 5, 29, 21, 39, 30, 221, DateTimeKind.Local).AddTicks(8551), 285, "Azarii.Parashuk@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 933, null, 0, new DateTime(2020, 4, 28, 3, 11, 55, 293, DateTimeKind.Local).AddTicks(4436), 285, "(092) 143-83-42" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 854, null, 1, new DateTime(2020, 8, 2, 0, 42, 2, 100, DateTimeKind.Local).AddTicks(7912), 285, "Taras_Tryasun@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1315, null, 0, new DateTime(2020, 6, 8, 11, 54, 44, 515, DateTimeKind.Local).AddTicks(3640), 284, "(091) 659-31-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1279, null, 0, new DateTime(2020, 6, 10, 21, 15, 38, 908, DateTimeKind.Local).AddTicks(5913), 284, "(094) 046-59-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1069, null, 1, new DateTime(2020, 7, 28, 5, 39, 53, 556, DateTimeKind.Local).AddTicks(7037), 284, "Dana_Kornyiichuk72@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 930, null, 0, new DateTime(2020, 3, 27, 2, 14, 1, 547, DateTimeKind.Local).AddTicks(7911), 284, "(096) 893-07-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 874, null, 1, new DateTime(2020, 5, 2, 10, 50, 23, 200, DateTimeKind.Local).AddTicks(8465), 284, "Nazar.Vitryak@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 560, null, 1, new DateTime(2020, 6, 13, 17, 54, 29, 951, DateTimeKind.Local).AddTicks(3589), 284, "Bilomir.Mazilo@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 484, null, 1, new DateTime(2020, 3, 30, 13, 50, 46, 300, DateTimeKind.Local).AddTicks(405), 284, "Olesya2@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 75, null, 0, new DateTime(2020, 7, 5, 22, 35, 46, 667, DateTimeKind.Local).AddTicks(5690), 286, "(050) 372-39-15" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 955, null, 0, new DateTime(2021, 1, 2, 7, 19, 24, 414, DateTimeKind.Local).AddTicks(935), 283, "(050) 203-13-05" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 638, null, 0, new DateTime(2021, 1, 20, 15, 54, 31, 202, DateTimeKind.Local).AddTicks(8782), 283, "(050) 029-17-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1204, null, 0, new DateTime(2020, 5, 16, 7, 25, 50, 432, DateTimeKind.Local).AddTicks(4312), 282, "(073) 850-28-96" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1149, null, 1, new DateTime(2020, 8, 29, 10, 23, 15, 990, DateTimeKind.Local).AddTicks(924), 282, "Olena_Kordun47@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1137, null, 0, new DateTime(2020, 11, 26, 19, 36, 15, 244, DateTimeKind.Local).AddTicks(6706), 282, "(091) 610-40-70" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 722, null, 0, new DateTime(2020, 11, 9, 18, 55, 5, 977, DateTimeKind.Local).AddTicks(767), 282, "(044) 000-01-01" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 64, null, 0, new DateTime(2020, 11, 10, 6, 30, 3, 460, DateTimeKind.Local).AddTicks(6927), 282, "(099) 874-25-01" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1376, null, 0, new DateTime(2021, 1, 29, 19, 55, 11, 933, DateTimeKind.Local).AddTicks(7388), 281, "(050) 749-18-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1334, null, 0, new DateTime(2020, 12, 12, 17, 57, 9, 494, DateTimeKind.Local).AddTicks(1529), 281, "(097) 149-62-53" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1211, null, 0, new DateTime(2020, 5, 6, 6, 27, 4, 444, DateTimeKind.Local).AddTicks(5555), 281, "(091) 982-85-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 948, null, 0, new DateTime(2020, 4, 7, 18, 29, 36, 726, DateTimeKind.Local).AddTicks(8336), 281, "(096) 541-15-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 894, null, 0, new DateTime(2020, 7, 5, 8, 28, 41, 106, DateTimeKind.Local).AddTicks(5617), 281, "(073) 577-04-79" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 724, null, 0, new DateTime(2020, 4, 3, 2, 59, 54, 166, DateTimeKind.Local).AddTicks(2156), 281, "(050) 073-21-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 887, null, 0, new DateTime(2020, 5, 13, 22, 40, 53, 306, DateTimeKind.Local).AddTicks(6042), 283, "(044) 686-09-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1320, null, 0, new DateTime(2021, 2, 25, 6, 25, 19, 518, DateTimeKind.Local).AddTicks(4347), 292, "(066) 325-22-90" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 244, null, 1, new DateTime(2020, 10, 16, 6, 11, 55, 840, DateTimeKind.Local).AddTicks(1259), 286, "Agripina61@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 675, null, 1, new DateTime(2020, 9, 9, 17, 58, 52, 697, DateTimeKind.Local).AddTicks(6018), 286, "Sinook_Ponomariv20@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 980, null, 0, new DateTime(2021, 1, 1, 4, 32, 53, 114, DateTimeKind.Local).AddTicks(2578), 292, "(097) 767-26-45" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 374, null, 0, new DateTime(2020, 8, 12, 14, 21, 36, 40, DateTimeKind.Local).AddTicks(2797), 292, "(093) 781-91-38" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 992, null, 0, new DateTime(2020, 7, 26, 14, 53, 9, 310, DateTimeKind.Local).AddTicks(1216), 291, "(097) 738-06-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 108, null, 0, new DateTime(2020, 3, 22, 12, 36, 26, 151, DateTimeKind.Local).AddTicks(823), 291, "(093) 727-63-92" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1498, null, 1, new DateTime(2020, 6, 23, 13, 37, 13, 743, DateTimeKind.Local).AddTicks(8953), 290, "Lad.Priimak@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 827, null, 0, new DateTime(2020, 9, 11, 19, 11, 56, 527, DateTimeKind.Local).AddTicks(139), 290, "(098) 379-20-89" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 714, null, 0, new DateTime(2020, 8, 2, 6, 17, 53, 191, DateTimeKind.Local).AddTicks(9595), 290, "(093) 419-46-03" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 684, null, 0, new DateTime(2020, 6, 6, 9, 43, 6, 187, DateTimeKind.Local).AddTicks(3030), 290, "(063) 615-96-09" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 359, null, 1, new DateTime(2020, 12, 1, 5, 36, 50, 502, DateTimeKind.Local).AddTicks(3361), 290, "Gordii.Baranovskii29@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 149, null, 1, new DateTime(2020, 7, 11, 8, 27, 56, 2, DateTimeKind.Local).AddTicks(6204), 290, "Boris.Mamii@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 624, null, 0, new DateTime(2020, 12, 9, 12, 56, 56, 584, DateTimeKind.Local).AddTicks(2006), 289, "(063) 613-05-85" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 608, null, 1, new DateTime(2020, 11, 3, 5, 15, 34, 847, DateTimeKind.Local).AddTicks(5578), 289, "Rostislav7@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 406, null, 1, new DateTime(2020, 3, 10, 10, 38, 24, 120, DateTimeKind.Local).AddTicks(9833), 286, "Borimir64@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 376, null, 0, new DateTime(2020, 10, 18, 19, 54, 3, 635, DateTimeKind.Local).AddTicks(8230), 289, "(099) 936-45-23" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 889, null, 1, new DateTime(2020, 5, 29, 13, 21, 40, 678, DateTimeKind.Local).AddTicks(8152), 288, "Mariya.Banera66@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 352, null, 1, new DateTime(2020, 12, 17, 12, 10, 11, 718, DateTimeKind.Local).AddTicks(4020), 288, "Pavlo94@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 331, null, 1, new DateTime(2021, 2, 16, 3, 51, 52, 626, DateTimeKind.Local).AddTicks(6184), 288, "Izyaslav48@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1057, null, 1, new DateTime(2020, 4, 20, 8, 29, 45, 985, DateTimeKind.Local).AddTicks(2603), 287, "Ratimir_Storchak@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 766, null, 0, new DateTime(2020, 8, 21, 2, 5, 53, 786, DateTimeKind.Local).AddTicks(5495), 287, "(095) 439-69-27" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 447, null, 0, new DateTime(2020, 4, 21, 17, 23, 35, 84, DateTimeKind.Local).AddTicks(6554), 287, "(050) 851-58-70" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 227, null, 0, new DateTime(2021, 1, 13, 0, 41, 27, 689, DateTimeKind.Local).AddTicks(9464), 287, "(073) 008-03-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 17, null, 1, new DateTime(2020, 6, 6, 14, 22, 53, 154, DateTimeKind.Local).AddTicks(1681), 287, "Zvenislava_Balabukh36@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1399, null, 0, new DateTime(2021, 2, 17, 11, 4, 14, 178, DateTimeKind.Local).AddTicks(5623), 286, "(098) 656-94-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1197, null, 0, new DateTime(2020, 9, 16, 0, 5, 29, 811, DateTimeKind.Local).AddTicks(6050), 286, "(091) 405-71-79" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1106, null, 0, new DateTime(2020, 9, 27, 2, 32, 15, 724, DateTimeKind.Local).AddTicks(1458), 286, "(099) 239-66-14" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 902, null, 0, new DateTime(2020, 7, 16, 16, 52, 43, 439, DateTimeKind.Local).AddTicks(4098), 286, "(092) 711-98-34" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 91, null, 1, new DateTime(2020, 12, 24, 4, 0, 52, 646, DateTimeKind.Local).AddTicks(774), 289, "Khristya_Karpukh@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 822, null, 0, new DateTime(2021, 1, 23, 8, 45, 22, 381, DateTimeKind.Local).AddTicks(3314), 107, "(091) 130-77-53" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 567, null, 1, new DateTime(2020, 3, 23, 20, 0, 40, 645, DateTimeKind.Local).AddTicks(7621), 255, "Polina.Shamrilo25@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 187, null, 0, new DateTime(2020, 8, 15, 4, 2, 55, 607, DateTimeKind.Local).AddTicks(7182), 255, "(096) 669-40-22" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 651, null, 1, new DateTime(2020, 3, 26, 20, 6, 30, 452, DateTimeKind.Local).AddTicks(2751), 222, "Lyubozar_Demkiv12@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1395, null, 0, new DateTime(2020, 7, 13, 22, 24, 47, 187, DateTimeKind.Local).AddTicks(7333), 221, "(098) 468-34-14" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1295, null, 0, new DateTime(2021, 1, 31, 14, 2, 15, 517, DateTimeKind.Local).AddTicks(8378), 221, "(050) 892-61-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1157, null, 0, new DateTime(2020, 3, 5, 23, 42, 0, 88, DateTimeKind.Local).AddTicks(8656), 220, "(050) 563-62-23" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 779, null, 0, new DateTime(2020, 4, 3, 22, 36, 37, 471, DateTimeKind.Local).AddTicks(6378), 220, "(094) 297-71-54" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 506, null, 0, new DateTime(2021, 1, 5, 1, 32, 24, 38, DateTimeKind.Local).AddTicks(1104), 220, "(095) 318-28-81" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 464, null, 1, new DateTime(2020, 10, 3, 10, 7, 50, 348, DateTimeKind.Local).AddTicks(899), 220, "Dobroslava_Yalova52@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 183, null, 1, new DateTime(2020, 9, 4, 8, 22, 4, 496, DateTimeKind.Local).AddTicks(6013), 220, "Dobromira28@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 169, null, 0, new DateTime(2020, 5, 27, 15, 44, 28, 657, DateTimeKind.Local).AddTicks(9101), 220, "(050) 938-48-72" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1313, null, 0, new DateTime(2021, 3, 2, 16, 39, 58, 574, DateTimeKind.Local).AddTicks(6566), 219, "(092) 594-57-22" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1112, null, 0, new DateTime(2021, 1, 30, 10, 27, 30, 122, DateTimeKind.Local).AddTicks(3390), 219, "(094) 623-18-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1064, null, 1, new DateTime(2020, 9, 10, 20, 15, 25, 222, DateTimeKind.Local).AddTicks(9495), 219, "Zoryan46@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1196, null, 1, new DateTime(2021, 1, 20, 16, 4, 47, 833, DateTimeKind.Local).AddTicks(6821), 222, "Mstislava25@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 604, null, 1, new DateTime(2020, 12, 25, 5, 57, 6, 779, DateTimeKind.Local).AddTicks(7400), 219, "Dobrinka_Umanec68@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 263, null, 1, new DateTime(2020, 7, 23, 10, 55, 21, 480, DateTimeKind.Local).AddTicks(4756), 219, "Polyana.Bondarenko63@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 259, null, 0, new DateTime(2021, 2, 19, 1, 32, 12, 143, DateTimeKind.Local).AddTicks(4083), 219, "(097) 902-77-69" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 74, null, 0, new DateTime(2020, 12, 30, 23, 25, 0, 549, DateTimeKind.Local).AddTicks(1086), 219, "(093) 363-96-56" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1368, null, 0, new DateTime(2021, 1, 5, 22, 21, 27, 543, DateTimeKind.Local).AddTicks(2266), 218, "(091) 402-19-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1255, null, 0, new DateTime(2021, 2, 25, 6, 43, 12, 205, DateTimeKind.Local).AddTicks(4276), 218, "(092) 625-68-92" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 917, null, 0, new DateTime(2020, 7, 28, 14, 14, 21, 330, DateTimeKind.Local).AddTicks(3629), 218, "(063) 227-65-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 869, null, 1, new DateTime(2020, 11, 25, 12, 55, 17, 105, DateTimeKind.Local).AddTicks(6931), 218, "Anastasiya55@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 745, null, 0, new DateTime(2020, 6, 23, 9, 29, 20, 293, DateTimeKind.Local).AddTicks(6121), 218, "(094) 227-80-79" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 388, null, 1, new DateTime(2020, 12, 21, 7, 16, 26, 384, DateTimeKind.Local).AddTicks(375), 218, "Dobromisla58@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 379, null, 0, new DateTime(2020, 8, 11, 2, 6, 13, 585, DateTimeKind.Local).AddTicks(2657), 217, "(044) 727-88-37" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 260, null, 1, new DateTime(2020, 7, 21, 17, 14, 26, 528, DateTimeKind.Local).AddTicks(2431), 217, "Nina.Svidrigailo20@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 79, null, 0, new DateTime(2020, 6, 15, 2, 53, 17, 863, DateTimeKind.Local).AddTicks(6916), 217, "(044) 132-24-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 472, null, 0, new DateTime(2020, 9, 6, 8, 5, 52, 702, DateTimeKind.Local).AddTicks(6554), 219, "(066) 117-00-29" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1291, null, 0, new DateTime(2020, 8, 11, 1, 36, 50, 807, DateTimeKind.Local).AddTicks(4923), 216, "(066) 155-69-62" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 265, null, 0, new DateTime(2020, 3, 31, 22, 49, 59, 443, DateTimeKind.Local).AddTicks(1887), 223, "(097) 844-83-71" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 393, null, 1, new DateTime(2020, 11, 7, 15, 6, 17, 374, DateTimeKind.Local).AddTicks(5243), 223, "Vilina72@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 448, null, 0, new DateTime(2021, 3, 1, 16, 21, 12, 924, DateTimeKind.Local).AddTicks(5888), 228, "(050) 689-92-06" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 407, null, 1, new DateTime(2020, 3, 9, 0, 17, 54, 775, DateTimeKind.Local).AddTicks(8143), 228, "Sologub_Galatei@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 298, null, 1, new DateTime(2020, 11, 22, 8, 35, 56, 19, DateTimeKind.Local).AddTicks(6112), 228, "Zlat_Lyashuk@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1359, null, 1, new DateTime(2020, 4, 26, 7, 41, 39, 484, DateTimeKind.Local).AddTicks(3940), 227, "Viktoriya80@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1267, null, 0, new DateTime(2020, 8, 7, 6, 59, 12, 829, DateTimeKind.Local).AddTicks(4976), 227, "(073) 332-51-14" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1231, null, 0, new DateTime(2020, 6, 1, 4, 59, 35, 171, DateTimeKind.Local).AddTicks(5176), 227, "(092) 708-04-08" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1062, null, 1, new DateTime(2021, 2, 23, 5, 7, 55, 718, DateTimeKind.Local).AddTicks(1281), 227, "Fayina.Skiba19@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 901, null, 1, new DateTime(2020, 10, 7, 18, 9, 10, 536, DateTimeKind.Local).AddTicks(9945), 227, "Kostyantin7@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 862, null, 0, new DateTime(2020, 4, 16, 14, 57, 24, 917, DateTimeKind.Local).AddTicks(2830), 227, "(097) 123-20-08" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 432, null, 1, new DateTime(2020, 6, 22, 4, 48, 3, 253, DateTimeKind.Local).AddTicks(3897), 227, "Zakharii.Plaksii@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 203, null, 1, new DateTime(2020, 8, 15, 19, 41, 4, 117, DateTimeKind.Local).AddTicks(8650), 227, "Tamara84@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 188, null, 0, new DateTime(2020, 11, 14, 23, 9, 1, 344, DateTimeKind.Local).AddTicks(3203), 227, "(066) 990-62-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 289, null, 0, new DateTime(2020, 6, 25, 18, 33, 22, 43, DateTimeKind.Local).AddTicks(5944), 223, "(063) 188-37-02" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 368, null, 0, new DateTime(2020, 3, 13, 12, 21, 7, 35, DateTimeKind.Local).AddTicks(9610), 226, "(097) 394-58-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1167, null, 1, new DateTime(2020, 10, 10, 18, 47, 41, 201, DateTimeKind.Local).AddTicks(2820), 225, "Agnesa.Shevchenko97@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1012, null, 0, new DateTime(2020, 7, 11, 0, 34, 2, 670, DateTimeKind.Local).AddTicks(2944), 225, "(093) 029-24-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 195, null, 0, new DateTime(2021, 1, 9, 9, 36, 50, 311, DateTimeKind.Local).AddTicks(587), 225, "(093) 993-96-56" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1364, null, 0, new DateTime(2020, 5, 1, 19, 59, 9, 665, DateTimeKind.Local).AddTicks(655), 224, "(050) 200-00-37" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1090, null, 0, new DateTime(2020, 12, 2, 13, 47, 42, 274, DateTimeKind.Local).AddTicks(2310), 224, "(097) 059-41-24" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1022, null, 1, new DateTime(2020, 6, 20, 10, 31, 59, 834, DateTimeKind.Local).AddTicks(1326), 224, "Slava15@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 914, null, 1, new DateTime(2020, 7, 21, 6, 11, 16, 432, DateTimeKind.Local).AddTicks(7883), 224, "Angelina43@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 463, null, 1, new DateTime(2020, 3, 25, 17, 49, 30, 731, DateTimeKind.Local).AddTicks(3015), 224, "Larisa_Romochko@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 68, null, 1, new DateTime(2020, 10, 17, 0, 58, 58, 554, DateTimeKind.Local).AddTicks(4976), 224, "Radmila_Pavliv@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 10, null, 1, new DateTime(2020, 6, 22, 7, 58, 52, 718, DateTimeKind.Local).AddTicks(8613), 224, "Zoreslava27@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1361, null, 0, new DateTime(2020, 5, 15, 17, 5, 58, 936, DateTimeKind.Local).AddTicks(1320), 223, "(094) 611-07-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 957, null, 0, new DateTime(2020, 3, 22, 12, 46, 4, 265, DateTimeKind.Local).AddTicks(2344), 223, "(066) 310-61-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1383, null, 1, new DateTime(2021, 2, 21, 6, 24, 4, 498, DateTimeKind.Local).AddTicks(409), 225, "Avrora0@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 941, null, 0, new DateTime(2021, 1, 17, 8, 29, 40, 906, DateTimeKind.Local).AddTicks(7204), 228, "(094) 472-24-01" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1029, null, 0, new DateTime(2020, 6, 26, 0, 49, 59, 516, DateTimeKind.Local).AddTicks(1486), 216, "(050) 278-68-38" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 699, null, 0, new DateTime(2020, 8, 24, 11, 8, 24, 259, DateTimeKind.Local).AddTicks(3041), 216, "(097) 588-99-04" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 278, null, 1, new DateTime(2021, 1, 18, 16, 24, 50, 590, DateTimeKind.Local).AddTicks(4966), 210, "Viktoriya.Openko@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1165, null, 0, new DateTime(2020, 12, 9, 2, 49, 12, 323, DateTimeKind.Local).AddTicks(6742), 209, "(094) 944-93-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1123, null, 1, new DateTime(2020, 5, 2, 18, 52, 12, 323, DateTimeKind.Local).AddTicks(3257), 209, "Avgustin.Pasichnik@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 176, null, 1, new DateTime(2020, 7, 16, 5, 54, 23, 41, DateTimeKind.Local).AddTicks(4965), 209, "Zoreslav_Lazirko@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1479, null, 1, new DateTime(2021, 1, 16, 16, 24, 19, 711, DateTimeKind.Local).AddTicks(3466), 208, "Slavolyub.Gorovii@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1353, null, 1, new DateTime(2020, 8, 26, 21, 9, 39, 803, DateTimeKind.Local).AddTicks(2253), 208, "Sologub.Lazirko@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1221, null, 0, new DateTime(2020, 6, 3, 20, 17, 58, 540, DateTimeKind.Local).AddTicks(3106), 208, "(073) 931-85-53" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1140, null, 1, new DateTime(2020, 4, 4, 7, 9, 40, 398, DateTimeKind.Local).AddTicks(1957), 208, "Bratomil_Brickii6@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1435, null, 0, new DateTime(2020, 9, 25, 22, 52, 33, 399, DateTimeKind.Local).AddTicks(3178), 207, "(094) 550-40-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 364, null, 1, new DateTime(2020, 4, 4, 5, 14, 16, 737, DateTimeKind.Local).AddTicks(9315), 207, "Svyatoslava_Petrin46@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 228, null, 0, new DateTime(2020, 12, 19, 16, 54, 52, 263, DateTimeKind.Local).AddTicks(7550), 207, "(093) 308-61-42" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1084, null, 1, new DateTime(2021, 1, 5, 10, 6, 9, 229, DateTimeKind.Local).AddTicks(8914), 206, "Glib.Grigorishin13@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 404, null, 0, new DateTime(2020, 5, 26, 5, 24, 51, 255, DateTimeKind.Local).AddTicks(6292), 210, "(095) 972-57-65" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1066, null, 1, new DateTime(2020, 4, 10, 2, 24, 41, 601, DateTimeKind.Local).AddTicks(8119), 206, "Likera.Openko51@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 614, null, 1, new DateTime(2020, 12, 1, 1, 47, 25, 63, DateTimeKind.Local).AddTicks(9601), 206, "Mariya_Mazun33@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 241, null, 1, new DateTime(2021, 1, 24, 13, 59, 13, 340, DateTimeKind.Local).AddTicks(2220), 206, "Ivanna_Sidlecka@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 752, null, 1, new DateTime(2020, 5, 18, 8, 31, 47, 464, DateTimeKind.Local).AddTicks(9414), 205, "Vyacheslava_Tindarei96@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 565, null, 0, new DateTime(2020, 8, 25, 12, 11, 59, 360, DateTimeKind.Local).AddTicks(1298), 205, "(050) 060-39-82" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 511, null, 1, new DateTime(2020, 6, 28, 4, 28, 56, 68, DateTimeKind.Local).AddTicks(4942), 205, "Ostap.Sidleckii@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 373, null, 0, new DateTime(2020, 7, 12, 1, 9, 5, 118, DateTimeKind.Local).AddTicks(4079), 205, "(050) 501-89-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 214, null, 0, new DateTime(2020, 6, 22, 19, 54, 4, 475, DateTimeKind.Local).AddTicks(3153), 205, "(096) 681-95-51" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1413, null, 1, new DateTime(2020, 10, 28, 12, 7, 25, 388, DateTimeKind.Local).AddTicks(3924), 204, "Oksana38@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1158, null, 0, new DateTime(2020, 8, 5, 12, 28, 39, 475, DateTimeKind.Local).AddTicks(1170), 204, "(099) 579-52-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 990, null, 1, new DateTime(2020, 12, 13, 5, 50, 52, 5, DateTimeKind.Local).AddTicks(3845), 204, "Kornilo_Porivai@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 809, null, 0, new DateTime(2020, 7, 5, 14, 15, 3, 539, DateTimeKind.Local).AddTicks(6609), 204, "(099) 814-49-15" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 682, null, 0, new DateTime(2020, 4, 28, 14, 42, 35, 86, DateTimeKind.Local).AddTicks(1317), 204, "(093) 497-66-63" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 909, null, 1, new DateTime(2020, 6, 29, 9, 23, 49, 159, DateTimeKind.Local).AddTicks(8273), 206, "Polyana_Pagutyak@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 979, null, 0, new DateTime(2020, 3, 14, 2, 6, 45, 546, DateTimeKind.Local).AddTicks(6780), 216, "(092) 085-46-68" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 760, null, 0, new DateTime(2020, 9, 14, 13, 24, 18, 706, DateTimeKind.Local).AddTicks(6458), 210, "(099) 307-36-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 180, null, 0, new DateTime(2020, 8, 13, 21, 57, 29, 320, DateTimeKind.Local).AddTicks(3105), 211, "(096) 697-53-83" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 544, null, 0, new DateTime(2020, 9, 5, 15, 28, 40, 958, DateTimeKind.Local).AddTicks(9448), 216, "(066) 279-83-37" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 435, null, 1, new DateTime(2020, 12, 22, 10, 34, 20, 151, DateTimeKind.Local).AddTicks(9475), 216, "Adriana4@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1260, null, 0, new DateTime(2020, 9, 27, 11, 42, 49, 330, DateTimeKind.Local).AddTicks(9255), 215, "(094) 925-08-56" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1096, null, 1, new DateTime(2020, 4, 3, 2, 0, 41, 535, DateTimeKind.Local).AddTicks(9657), 215, "Doleslava_Danilishina34@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 704, null, 0, new DateTime(2020, 12, 22, 15, 2, 51, 802, DateTimeKind.Local).AddTicks(4337), 215, "(044) 788-62-24" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 205, null, 0, new DateTime(2020, 8, 30, 20, 58, 3, 701, DateTimeKind.Local).AddTicks(7542), 215, "(093) 225-70-23" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 182, null, 1, new DateTime(2020, 5, 3, 14, 43, 4, 787, DateTimeKind.Local).AddTicks(3351), 215, "Zborislav_Babukh86@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 28, null, 0, new DateTime(2020, 7, 18, 16, 6, 29, 584, DateTimeKind.Local).AddTicks(9409), 215, "(073) 878-07-45" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 950, null, 1, new DateTime(2020, 9, 4, 23, 56, 24, 321, DateTimeKind.Local).AddTicks(1631), 214, "Blagovista24@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 855, null, 0, new DateTime(2021, 1, 3, 0, 5, 47, 157, DateTimeKind.Local).AddTicks(1325), 214, "(095) 599-84-41" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 721, null, 0, new DateTime(2020, 4, 24, 20, 47, 31, 786, DateTimeKind.Local).AddTicks(3071), 214, "(094) 059-09-36" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 243, null, 0, new DateTime(2020, 6, 14, 5, 25, 9, 963, DateTimeKind.Local).AddTicks(4853), 214, "(097) 902-94-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1371, null, 0, new DateTime(2020, 9, 18, 4, 27, 14, 688, DateTimeKind.Local).AddTicks(7436), 210, "(066) 084-46-80" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 54, null, 0, new DateTime(2020, 10, 29, 14, 58, 17, 75, DateTimeKind.Local).AddTicks(1246), 214, "(092) 901-59-66" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 115, null, 0, new DateTime(2020, 3, 22, 19, 43, 47, 985, DateTimeKind.Local).AddTicks(3016), 213, "(092) 669-78-70" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1443, null, 0, new DateTime(2020, 10, 20, 3, 45, 34, 376, DateTimeKind.Local).AddTicks(9248), 212, "(097) 040-13-21" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1427, null, 1, new DateTime(2020, 8, 7, 18, 46, 30, 21, DateTimeKind.Local).AddTicks(8004), 212, "Fedora_Mariyevskii@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1263, null, 1, new DateTime(2020, 6, 3, 18, 23, 49, 104, DateTimeKind.Local).AddTicks(1747), 212, "Burevist.Prigoda51@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 890, null, 0, new DateTime(2021, 2, 20, 8, 9, 0, 594, DateTimeKind.Local).AddTicks(5338), 212, "(063) 557-16-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 842, null, 1, new DateTime(2020, 3, 14, 23, 58, 20, 969, DateTimeKind.Local).AddTicks(2898), 212, "Palazhka.Vasilishina51@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 816, null, 0, new DateTime(2021, 2, 19, 15, 49, 57, 632, DateTimeKind.Local).AddTicks(109), 212, "(098) 692-44-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 357, null, 1, new DateTime(2020, 3, 26, 17, 33, 36, 524, DateTimeKind.Local).AddTicks(7569), 212, "Zlat.Lanova@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 245, null, 1, new DateTime(2020, 3, 26, 9, 30, 15, 694, DateTimeKind.Local).AddTicks(6433), 212, "Ruslana_Parashuk@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1292, null, 1, new DateTime(2020, 8, 22, 11, 27, 57, 68, DateTimeKind.Local).AddTicks(8934), 211, "Anton_Kulchicka2@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1233, null, 0, new DateTime(2020, 8, 19, 17, 4, 53, 149, DateTimeKind.Local).AddTicks(8263), 211, "(098) 994-65-72" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 977, null, 1, new DateTime(2021, 2, 21, 14, 21, 13, 189, DateTimeKind.Local).AddTicks(6536), 211, "Avrora.Usich88@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 312, null, 1, new DateTime(2020, 8, 17, 16, 56, 48, 325, DateTimeKind.Local).AddTicks(95), 213, "Dobromila_Potebenko57@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 347, null, 0, new DateTime(2020, 3, 24, 16, 47, 55, 268, DateTimeKind.Local).AddTicks(1384), 255, "(099) 205-42-15" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1266, null, 1, new DateTime(2021, 1, 17, 0, 15, 51, 28, DateTimeKind.Local).AddTicks(9049), 228, "Alevtin.Latanii@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 60, null, 1, new DateTime(2020, 6, 6, 7, 49, 41, 917, DateTimeKind.Local).AddTicks(7028), 229, "Bratislav.Banera13@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 44, null, 1, new DateTime(2020, 5, 11, 3, 46, 17, 765, DateTimeKind.Local).AddTicks(5074), 247, "Miroslav.Yashuk68@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1261, null, 0, new DateTime(2020, 6, 15, 11, 51, 27, 545, DateTimeKind.Local).AddTicks(5014), 246, "(099) 161-01-90" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 820, null, 1, new DateTime(2020, 5, 15, 9, 7, 48, 560, DateTimeKind.Local).AddTicks(9412), 246, "Volodislav.Balaban77@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 803, null, 1, new DateTime(2020, 6, 22, 8, 44, 8, 923, DateTimeKind.Local).AddTicks(9471), 246, "Daleslava32@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 610, null, 1, new DateTime(2020, 12, 3, 5, 16, 16, 432, DateTimeKind.Local).AddTicks(3405), 246, "Alla.Durdinec@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 575, null, 0, new DateTime(2020, 10, 30, 16, 8, 18, 178, DateTimeKind.Local).AddTicks(4015), 246, "(095) 685-84-30" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1322, null, 0, new DateTime(2020, 11, 4, 7, 23, 33, 337, DateTimeKind.Local).AddTicks(9984), 245, "(095) 875-25-45" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1252, null, 1, new DateTime(2020, 6, 4, 9, 33, 17, 769, DateTimeKind.Local).AddTicks(3286), 245, "Slavolyub43@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1128, null, 0, new DateTime(2020, 5, 11, 18, 2, 5, 71, DateTimeKind.Local).AddTicks(9960), 245, "(092) 292-22-82" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 254, null, 1, new DateTime(2020, 4, 9, 17, 57, 18, 73, DateTimeKind.Local).AddTicks(7409), 245, "Omelyan_Dzyuba@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 229, null, 1, new DateTime(2020, 12, 9, 16, 41, 48, 864, DateTimeKind.Local).AddTicks(646), 245, "Zorina_Dmitrishina@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 98, null, 1, new DateTime(2020, 5, 3, 6, 49, 4, 795, DateTimeKind.Local).AddTicks(9716), 245, "Miron_Luckiv@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 466, null, 1, new DateTime(2020, 10, 1, 21, 55, 57, 772, DateTimeKind.Local).AddTicks(4612), 247, "Virginiya.Yemec7@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1370, null, 0, new DateTime(2020, 12, 16, 16, 51, 31, 945, DateTimeKind.Local).AddTicks(3082), 244, "(050) 594-49-03" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 883, null, 1, new DateTime(2020, 7, 1, 21, 23, 52, 256, DateTimeKind.Local).AddTicks(6846), 244, "Lyuborada95@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 756, null, 0, new DateTime(2021, 3, 3, 9, 58, 30, 598, DateTimeKind.Local).AddTicks(3697), 244, "(092) 916-04-08" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 657, null, 0, new DateTime(2021, 2, 19, 22, 56, 37, 671, DateTimeKind.Local).AddTicks(3570), 244, "(097) 889-50-90" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1381, null, 1, new DateTime(2020, 7, 22, 5, 47, 4, 713, DateTimeKind.Local).AddTicks(7654), 243, "Ladislav22@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 832, null, 1, new DateTime(2020, 9, 2, 15, 31, 22, 651, DateTimeKind.Local).AddTicks(4446), 243, "Apolloniya_Yevenko@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 794, null, 1, new DateTime(2020, 6, 28, 10, 58, 28, 220, DateTimeKind.Local).AddTicks(4703), 243, "Ustina94@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 417, null, 1, new DateTime(2020, 6, 2, 5, 35, 46, 51, DateTimeKind.Local).AddTicks(560), 243, "Kalina.Ponomariv84@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1472, null, 0, new DateTime(2020, 11, 4, 6, 50, 32, 40, DateTimeKind.Local).AddTicks(7007), 242, "(050) 189-30-84" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1289, null, 0, new DateTime(2020, 12, 30, 5, 42, 49, 274, DateTimeKind.Local).AddTicks(5294), 242, "(050) 616-58-54" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1240, null, 1, new DateTime(2020, 11, 12, 5, 4, 38, 23, DateTimeKind.Local).AddTicks(1617), 242, "Darii11@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 785, null, 0, new DateTime(2020, 7, 11, 2, 57, 2, 391, DateTimeKind.Local).AddTicks(1174), 242, "(093) 316-07-27" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 267, null, 1, new DateTime(2020, 6, 2, 2, 28, 1, 231, DateTimeKind.Local).AddTicks(4714), 242, "Svyatopolk.Shestak24@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1287, null, 1, new DateTime(2020, 6, 24, 18, 13, 2, 539, DateTimeKind.Local).AddTicks(2522), 244, "Kornii.Zabila18@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1419, null, 1, new DateTime(2020, 4, 21, 14, 19, 53, 751, DateTimeKind.Local).AddTicks(6731), 241, "Zoremir78@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 557, null, 1, new DateTime(2020, 12, 22, 21, 19, 55, 349, DateTimeKind.Local).AddTicks(4241), 247, "Lyubodar77@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 772, null, 0, new DateTime(2020, 7, 31, 15, 2, 29, 453, DateTimeKind.Local).AddTicks(8909), 247, "(099) 214-05-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 23, null, 1, new DateTime(2020, 7, 3, 2, 48, 30, 884, DateTimeKind.Local).AddTicks(9800), 255, "Vilina10@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1173, null, 1, new DateTime(2020, 8, 19, 1, 28, 9, 137, DateTimeKind.Local).AddTicks(4386), 254, "Lada_Stepanec@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 487, null, 1, new DateTime(2020, 9, 17, 17, 16, 2, 324, DateTimeKind.Local).AddTicks(1218), 254, "Azaliya71@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 21, null, 0, new DateTime(2020, 6, 30, 1, 6, 30, 997, DateTimeKind.Local).AddTicks(493), 254, "(073) 845-36-14" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1500, null, 1, new DateTime(2020, 11, 13, 1, 0, 11, 729, DateTimeKind.Local).AddTicks(7078), 253, "Lavrentii_Voloshuk@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1324, null, 0, new DateTime(2021, 1, 17, 19, 58, 20, 373, DateTimeKind.Local).AddTicks(9036), 253, "(097) 238-33-02" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 498, null, 1, new DateTime(2020, 10, 17, 4, 42, 4, 887, DateTimeKind.Local).AddTicks(6027), 253, "Yulian36@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 495, null, 1, new DateTime(2020, 8, 1, 3, 26, 49, 261, DateTimeKind.Local).AddTicks(6574), 253, "Yarema_Luchko2@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 396, null, 1, new DateTime(2020, 10, 3, 0, 58, 30, 460, DateTimeKind.Local).AddTicks(9298), 253, "Anton.Banera@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1168, null, 1, new DateTime(2020, 5, 26, 16, 39, 43, 910, DateTimeKind.Local).AddTicks(7629), 252, "Dobromisla.Bilich9@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1148, null, 0, new DateTime(2020, 5, 6, 22, 8, 36, 63, DateTimeKind.Local).AddTicks(7201), 252, "(092) 611-23-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 707, null, 0, new DateTime(2021, 1, 4, 2, 41, 44, 104, DateTimeKind.Local).AddTicks(1387), 252, "(095) 526-36-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 690, null, 1, new DateTime(2020, 7, 7, 1, 55, 46, 731, DateTimeKind.Local).AddTicks(4157), 247, "Ladomir_Suchak@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1142, null, 0, new DateTime(2020, 4, 9, 3, 13, 4, 843, DateTimeKind.Local).AddTicks(1353), 251, "(099) 094-17-81" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 729, null, 0, new DateTime(2020, 5, 9, 6, 47, 57, 879, DateTimeKind.Local).AddTicks(9194), 251, "(097) 568-76-21" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 613, null, 0, new DateTime(2020, 10, 18, 12, 45, 43, 533, DateTimeKind.Local).AddTicks(160), 251, "(096) 528-12-08" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 310, null, 1, new DateTime(2020, 9, 4, 13, 20, 42, 456, DateTimeKind.Local).AddTicks(6291), 250, "Sinook.Lazirko38@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 290, null, 0, new DateTime(2020, 12, 8, 9, 34, 54, 386, DateTimeKind.Local).AddTicks(3166), 250, "(091) 437-54-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1436, null, 0, new DateTime(2020, 7, 23, 7, 36, 7, 586, DateTimeKind.Local).AddTicks(8198), 248, "(063) 127-99-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 823, null, 1, new DateTime(2020, 10, 19, 12, 46, 44, 641, DateTimeKind.Local).AddTicks(4356), 248, "Mstislava_Yanyuk85@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 415, null, 0, new DateTime(2020, 10, 21, 5, 52, 59, 417, DateTimeKind.Local).AddTicks(7154), 248, "(092) 649-73-18" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 127, null, 1, new DateTime(2020, 7, 20, 2, 31, 17, 902, DateTimeKind.Local).AddTicks(5418), 248, "Yaroslav.Shumilo@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 56, null, 0, new DateTime(2020, 11, 10, 18, 12, 41, 458, DateTimeKind.Local).AddTicks(9075), 248, "(066) 833-38-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1447, null, 1, new DateTime(2020, 5, 29, 6, 8, 57, 978, DateTimeKind.Local).AddTicks(9742), 247, "Dana.Shestak@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1273, null, 0, new DateTime(2020, 4, 4, 6, 3, 51, 900, DateTimeKind.Local).AddTicks(2506), 247, "(098) 474-73-75" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1037, null, 0, new DateTime(2021, 1, 26, 7, 20, 59, 365, DateTimeKind.Local).AddTicks(7117), 247, "(050) 410-79-03" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 793, null, 1, new DateTime(2020, 6, 5, 1, 27, 9, 764, DateTimeKind.Local).AddTicks(2888), 251, "Svitlana.Maistrenko@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 51, null, 1, new DateTime(2021, 2, 14, 13, 1, 54, 579, DateTimeKind.Local).AddTicks(4292), 229, "Yurii.Markiv@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 146, null, 1, new DateTime(2020, 6, 23, 12, 10, 11, 39, DateTimeKind.Local).AddTicks(5469), 241, "Miloslava_Kandiba47@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1122, null, 1, new DateTime(2020, 7, 30, 19, 35, 33, 613, DateTimeKind.Local).AddTicks(6566), 240, "Yaropolk.Lomova8@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1385, null, 0, new DateTime(2020, 7, 25, 8, 58, 58, 539, DateTimeKind.Local).AddTicks(6633), 233, "(094) 505-44-23" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1256, null, 0, new DateTime(2020, 10, 29, 5, 9, 39, 431, DateTimeKind.Local).AddTicks(5274), 233, "(093) 470-61-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1218, null, 0, new DateTime(2020, 7, 23, 20, 49, 29, 406, DateTimeKind.Local).AddTicks(9221), 233, "(066) 508-81-94" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 518, null, 0, new DateTime(2020, 11, 22, 2, 54, 56, 307, DateTimeKind.Local).AddTicks(3918), 233, "(092) 876-09-92" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 22, null, 0, new DateTime(2020, 4, 21, 6, 18, 46, 972, DateTimeKind.Local).AddTicks(8905), 233, "(091) 880-27-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1109, null, 0, new DateTime(2020, 9, 25, 7, 45, 19, 379, DateTimeKind.Local).AddTicks(6372), 232, "(093) 744-05-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 912, null, 1, new DateTime(2020, 5, 4, 14, 44, 11, 200, DateTimeKind.Local).AddTicks(9249), 232, "Musii.Steckiv7@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 654, null, 0, new DateTime(2020, 3, 22, 1, 33, 3, 190, DateTimeKind.Local).AddTicks(7348), 232, "(098) 129-84-14" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 605, null, 1, new DateTime(2021, 1, 1, 13, 30, 37, 247, DateTimeKind.Local).AddTicks(9803), 232, "Zlatomir.Demkiv@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 563, null, 0, new DateTime(2021, 2, 5, 7, 32, 44, 329, DateTimeKind.Local).AddTicks(1627), 232, "(099) 709-69-24" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 256, null, 1, new DateTime(2020, 3, 28, 8, 16, 13, 678, DateTimeKind.Local).AddTicks(6146), 232, "Yarovid.Koman10@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 242, null, 1, new DateTime(2020, 7, 23, 12, 55, 25, 47, DateTimeKind.Local).AddTicks(7787), 232, "Vitalina40@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 253, null, 0, new DateTime(2020, 7, 20, 12, 13, 48, 398, DateTimeKind.Local).AddTicks(5894), 234, "(099) 229-33-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 107, null, 0, new DateTime(2020, 8, 16, 0, 2, 45, 332, DateTimeKind.Local).AddTicks(46), 232, "(097) 575-78-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 2, null, 1, new DateTime(2020, 10, 25, 22, 3, 6, 570, DateTimeKind.Local).AddTicks(6720), 232, "Antonina_Gorodocka93@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1349, null, 0, new DateTime(2021, 1, 9, 6, 27, 31, 897, DateTimeKind.Local).AddTicks(8664), 231, "(094) 447-59-14" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1337, null, 0, new DateTime(2020, 5, 21, 18, 12, 38, 582, DateTimeKind.Local).AddTicks(2693), 231, "(097) 406-81-10" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1202, null, 0, new DateTime(2020, 9, 23, 11, 3, 41, 277, DateTimeKind.Local).AddTicks(4405), 231, "(063) 473-02-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1135, null, 1, new DateTime(2020, 5, 9, 21, 21, 48, 104, DateTimeKind.Local).AddTicks(3770), 231, "Miroslava_Gaman@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 817, null, 1, new DateTime(2021, 1, 31, 11, 50, 54, 597, DateTimeKind.Local).AddTicks(2725), 231, "Albina_Tindarei58@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 321, null, 1, new DateTime(2020, 3, 12, 13, 17, 34, 590, DateTimeKind.Local).AddTicks(7890), 230, "Khristya_Gamula9@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 172, null, 1, new DateTime(2021, 2, 14, 3, 11, 42, 326, DateTimeKind.Local).AddTicks(9077), 230, "Nazar.Makoveckii@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1290, null, 1, new DateTime(2020, 8, 3, 20, 53, 0, 369, DateTimeKind.Local).AddTicks(7351), 229, "Gradimir_Makhno@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1270, null, 1, new DateTime(2020, 8, 11, 15, 38, 51, 702, DateTimeKind.Local).AddTicks(5347), 229, "Lyubava_Karpukh45@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1241, null, 0, new DateTime(2020, 9, 29, 9, 22, 50, 371, DateTimeKind.Local).AddTicks(9767), 229, "(098) 673-21-01" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 754, null, 0, new DateTime(2020, 3, 17, 20, 43, 52, 464, DateTimeKind.Local).AddTicks(652), 229, "(091) 510-76-41" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 48, null, 0, new DateTime(2020, 9, 20, 2, 19, 1, 222, DateTimeKind.Local).AddTicks(845), 232, "(093) 065-18-15" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1125, null, 0, new DateTime(2020, 6, 23, 1, 27, 21, 879, DateTimeKind.Local).AddTicks(6439), 240, "(092) 817-57-16" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 292, null, 1, new DateTime(2020, 10, 18, 5, 4, 42, 936, DateTimeKind.Local).AddTicks(4151), 234, "Ladomir_Dovgalevska42@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1060, null, 0, new DateTime(2021, 2, 14, 13, 32, 41, 207, DateTimeKind.Local).AddTicks(7712), 234, "(066) 671-46-12" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 491, null, 0, new DateTime(2020, 8, 10, 16, 1, 44, 604, DateTimeKind.Local).AddTicks(4564), 240, "(093) 336-02-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 338, null, 0, new DateTime(2020, 3, 26, 5, 2, 56, 459, DateTimeKind.Local).AddTicks(873), 240, "(093) 599-91-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1404, null, 1, new DateTime(2020, 5, 14, 1, 35, 54, 988, DateTimeKind.Local).AddTicks(667), 239, "Bozhen.Openko@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1046, null, 0, new DateTime(2021, 2, 28, 3, 27, 29, 290, DateTimeKind.Local).AddTicks(330), 239, "(094) 613-54-80" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 674, null, 1, new DateTime(2020, 12, 11, 22, 9, 56, 737, DateTimeKind.Local).AddTicks(5560), 239, "Panteleimon83@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 588, null, 1, new DateTime(2021, 1, 5, 8, 34, 17, 293, DateTimeKind.Local).AddTicks(8790), 239, "Vseslava29@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 450, null, 1, new DateTime(2021, 1, 5, 22, 26, 45, 704, DateTimeKind.Local).AddTicks(2591), 239, "Smiyana.Shestak@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 355, null, 0, new DateTime(2020, 5, 26, 10, 50, 53, 989, DateTimeKind.Local).AddTicks(446), 239, "(099) 332-12-80" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 836, null, 0, new DateTime(2020, 11, 5, 20, 27, 16, 712, DateTimeKind.Local).AddTicks(7749), 238, "(097) 020-13-47" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 356, null, 0, new DateTime(2020, 9, 20, 10, 30, 15, 647, DateTimeKind.Local).AddTicks(7915), 238, "(092) 799-69-32" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 6, null, 1, new DateTime(2020, 3, 23, 15, 10, 44, 751, DateTimeKind.Local).AddTicks(9192), 238, "Kornelii_Miklukho@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1380, null, 0, new DateTime(2020, 6, 20, 4, 46, 10, 811, DateTimeKind.Local).AddTicks(3883), 237, "(094) 206-93-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1043, null, 1, new DateTime(2020, 6, 29, 15, 42, 48, 133, DateTimeKind.Local).AddTicks(5306), 234, "Ustim86@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1121, null, 0, new DateTime(2021, 2, 1, 20, 44, 59, 92, DateTimeKind.Local).AddTicks(8897), 237, "(096) 414-77-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 796, null, 1, new DateTime(2020, 4, 16, 15, 1, 25, 605, DateTimeKind.Local).AddTicks(5559), 237, "Markiyan.Kulinich8@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 737, null, 0, new DateTime(2020, 11, 11, 17, 8, 35, 278, DateTimeKind.Local).AddTicks(4061), 237, "(073) 023-20-19" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 483, null, 0, new DateTime(2020, 4, 8, 20, 40, 15, 159, DateTimeKind.Local).AddTicks(4227), 237, "(073) 880-32-26" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 882, null, 1, new DateTime(2020, 12, 20, 6, 49, 14, 695, DateTimeKind.Local).AddTicks(263), 236, "Vitalina65@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 630, null, 0, new DateTime(2020, 8, 4, 20, 42, 15, 280, DateTimeKind.Local).AddTicks(9079), 236, "(095) 968-36-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 551, null, 1, new DateTime(2020, 9, 14, 14, 48, 13, 460, DateTimeKind.Local).AddTicks(4786), 236, "Darii68@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 276, null, 0, new DateTime(2020, 5, 23, 17, 49, 45, 905, DateTimeKind.Local).AddTicks(322), 236, "(096) 715-41-85" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 653, null, 1, new DateTime(2021, 2, 6, 14, 50, 12, 352, DateTimeKind.Local).AddTicks(2821), 235, "Nazar68@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 533, null, 1, new DateTime(2020, 10, 21, 1, 37, 19, 795, DateTimeKind.Local).AddTicks(49), 235, "Tetyana_Motriyenko89@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 181, null, 1, new DateTime(2020, 4, 23, 14, 10, 42, 895, DateTimeKind.Local).AddTicks(2231), 235, "Dobrinka_Cushko@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1234, null, 0, new DateTime(2020, 5, 12, 4, 59, 8, 941, DateTimeKind.Local).AddTicks(3365), 234, "(073) 605-57-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1134, null, 1, new DateTime(2020, 7, 19, 9, 51, 21, 795, DateTimeKind.Local).AddTicks(731), 234, "Irma_Markiv@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 811, null, 0, new DateTime(2020, 10, 22, 4, 16, 13, 553, DateTimeKind.Local).AddTicks(3718), 237, "(098) 240-34-04" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 198, null, 1, new DateTime(2020, 12, 1, 22, 53, 36, 428, DateTimeKind.Local).AddTicks(7038), 106, "Matvii_Romochko95@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 301, null, 0, new DateTime(2020, 6, 28, 7, 11, 15, 544, DateTimeKind.Local).AddTicks(4361), 150, "(050) 789-22-66" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 382, null, 1, new DateTime(2020, 6, 10, 20, 3, 17, 900, DateTimeKind.Local).AddTicks(4144), 50, "Ustim.Kandiba@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 351, null, 1, new DateTime(2020, 3, 8, 8, 54, 34, 375, DateTimeKind.Local).AddTicks(8119), 72, "Adriana84@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 162, null, 1, new DateTime(2020, 4, 8, 17, 24, 44, 879, DateTimeKind.Local).AddTicks(8380), 23, "Gerasim65@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 422, null, 0, new DateTime(2020, 5, 2, 9, 24, 22, 517, DateTimeKind.Local).AddTicks(7262), 23, "(092) 874-52-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1425, null, 0, new DateTime(2020, 7, 15, 23, 51, 23, 645, DateTimeKind.Local).AddTicks(4062), 23, "(091) 187-32-38" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1400, null, 0, new DateTime(2021, 2, 18, 8, 54, 53, 725, DateTimeKind.Local).AddTicks(3023), 71, "(073) 608-71-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 629, null, 0, new DateTime(2020, 7, 9, 4, 37, 34, 522, DateTimeKind.Local).AddTicks(8883), 71, "(050) 711-70-96" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 606, null, 1, new DateTime(2020, 4, 22, 7, 43, 14, 291, DateTimeKind.Local).AddTicks(7505), 71, "Ustim.Ivanishina@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 300, null, 1, new DateTime(2020, 12, 16, 5, 33, 51, 452, DateTimeKind.Local).AddTicks(1243), 71, "Gavrilo.Yavorivskii@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 750, null, 0, new DateTime(2020, 11, 7, 23, 59, 20, 381, DateTimeKind.Local).AddTicks(9231), 72, "(099) 738-69-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 184, null, 1, new DateTime(2021, 2, 10, 11, 43, 41, 905, DateTimeKind.Local).AddTicks(279), 71, "Tur.Skoropadska56@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 412, null, 1, new DateTime(2020, 8, 28, 7, 23, 20, 176, DateTimeKind.Local).AddTicks(7861), 24, "Virginiya_Koman83@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1007, null, 0, new DateTime(2020, 10, 2, 0, 31, 59, 509, DateTimeKind.Local).AddTicks(1486), 24, "(097) 815-63-69" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1033, null, 0, new DateTime(2020, 10, 15, 1, 58, 0, 307, DateTimeKind.Local).AddTicks(6830), 24, "(098) 466-57-66" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1294, null, 1, new DateTime(2020, 7, 16, 21, 33, 48, 802, DateTimeKind.Local).AddTicks(9121), 70, "Kalina_Vereshuk89@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1133, null, 1, new DateTime(2021, 1, 8, 5, 7, 42, 717, DateTimeKind.Local).AddTicks(7445), 70, "Lidiya.Shevchenko91@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 397, null, 1, new DateTime(2020, 7, 29, 5, 27, 54, 645, DateTimeKind.Local).AddTicks(5296), 70, "Antonina_Gorbach1@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 192, null, 1, new DateTime(2020, 11, 1, 14, 52, 53, 526, DateTimeKind.Local).AddTicks(3519), 70, "Bozhena.Vitryak@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 170, null, 0, new DateTime(2020, 12, 30, 10, 50, 54, 349, DateTimeKind.Local).AddTicks(5460), 70, "(044) 998-71-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 178, null, 0, new DateTime(2021, 1, 20, 1, 9, 18, 164, DateTimeKind.Local).AddTicks(8207), 71, "(073) 156-88-18" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 166, null, 0, new DateTime(2020, 11, 9, 18, 49, 32, 709, DateTimeKind.Local).AddTicks(4383), 25, "(093) 065-07-17" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1193, null, 1, new DateTime(2020, 7, 13, 11, 58, 33, 948, DateTimeKind.Local).AddTicks(711), 72, "Vasil5@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1085, null, 0, new DateTime(2020, 4, 28, 22, 24, 18, 489, DateTimeKind.Local).AddTicks(9533), 22, "(099) 341-87-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1023, null, 0, new DateTime(2020, 12, 5, 7, 22, 34, 917, DateTimeKind.Local).AddTicks(6644), 74, "(097) 674-19-29" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 831, null, 0, new DateTime(2020, 6, 28, 17, 22, 26, 975, DateTimeKind.Local).AddTicks(630), 42, "(093) 465-28-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 899, null, 1, new DateTime(2020, 7, 8, 19, 39, 52, 238, DateTimeKind.Local).AddTicks(7844), 74, "Avrelii.Korovyak53@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 846, null, 0, new DateTime(2020, 8, 25, 1, 43, 34, 324, DateTimeKind.Local).AddTicks(8920), 74, "(093) 285-87-50" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 370, null, 0, new DateTime(2020, 11, 10, 3, 20, 20, 737, DateTimeKind.Local).AddTicks(8360), 74, "(073) 855-38-71" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 305, null, 0, new DateTime(2020, 9, 6, 19, 35, 57, 192, DateTimeKind.Local).AddTicks(6924), 21, "(066) 636-21-91" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 430, null, 1, new DateTime(2020, 4, 12, 7, 51, 21, 856, DateTimeKind.Local).AddTicks(2438), 21, "Valentina.Shumilo43@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 757, null, 1, new DateTime(2020, 10, 13, 0, 32, 14, 702, DateTimeKind.Local).AddTicks(8637), 21, "Sergii.Bilich15@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1456, null, 1, new DateTime(2020, 10, 4, 20, 33, 13, 196, DateTimeKind.Local).AddTicks(2277), 72, "Marta.Sushko84@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1242, null, 0, new DateTime(2021, 2, 22, 10, 43, 19, 465, DateTimeKind.Local).AddTicks(4033), 21, "(091) 961-57-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1445, null, 1, new DateTime(2021, 2, 1, 7, 43, 28, 2, DateTimeKind.Local).AddTicks(6810), 73, "Rostislava_Miklukho@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1350, null, 0, new DateTime(2020, 7, 25, 23, 45, 8, 948, DateTimeKind.Local).AddTicks(7068), 73, "(097) 552-85-75" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 870, null, 1, new DateTime(2020, 4, 15, 10, 1, 26, 24, DateTimeKind.Local).AddTicks(7963), 73, "Larisa_Petrina@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 167, null, 0, new DateTime(2020, 10, 21, 18, 35, 8, 843, DateTimeKind.Local).AddTicks(7994), 73, "(092) 663-93-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 206, null, 0, new DateTime(2020, 3, 11, 23, 18, 7, 932, DateTimeKind.Local).AddTicks(3428), 22, "(093) 457-89-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 441, null, 1, new DateTime(2020, 9, 21, 11, 11, 48, 665, DateTimeKind.Local).AddTicks(8146), 22, "Chornota.Makhno20@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 972, null, 0, new DateTime(2021, 1, 26, 8, 7, 19, 238, DateTimeKind.Local).AddTicks(9519), 22, "(099) 894-86-12" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 987, null, 0, new DateTime(2021, 1, 27, 5, 43, 9, 294, DateTimeKind.Local).AddTicks(9423), 22, "(098) 647-24-56" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 287, null, 0, new DateTime(2020, 7, 6, 20, 54, 24, 810, DateTimeKind.Local).AddTicks(1122), 74, "(073) 741-23-49" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 240, null, 0, new DateTime(2020, 8, 30, 21, 38, 51, 677, DateTimeKind.Local).AddTicks(8306), 21, "(073) 268-61-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 408, null, 0, new DateTime(2021, 1, 27, 3, 32, 51, 901, DateTimeKind.Local).AddTicks(1592), 25, "(095) 733-38-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 810, null, 1, new DateTime(2020, 12, 8, 5, 32, 8, 274, DateTimeKind.Local).AddTicks(4256), 69, "Zinayida_Yushik52@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 697, null, 0, new DateTime(2020, 10, 11, 4, 1, 20, 731, DateTimeKind.Local).AddTicks(9588), 27, "(063) 093-60-17" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 824, null, 0, new DateTime(2020, 12, 19, 2, 21, 46, 615, DateTimeKind.Local).AddTicks(6068), 27, "(091) 377-86-37" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 954, null, 0, new DateTime(2020, 10, 26, 3, 54, 2, 932, DateTimeKind.Local).AddTicks(5740), 27, "(044) 102-52-91" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1009, null, 1, new DateTime(2020, 10, 21, 16, 3, 13, 987, DateTimeKind.Local).AddTicks(9325), 27, "Aelayida.Yalyuk67@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1272, null, 1, new DateTime(2020, 6, 16, 13, 0, 27, 657, DateTimeKind.Local).AddTicks(8151), 27, "Lyubomir68@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 516, null, 0, new DateTime(2020, 8, 31, 6, 10, 47, 96, DateTimeKind.Local).AddTicks(8362), 65, "(094) 624-79-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1455, null, 0, new DateTime(2020, 5, 7, 5, 10, 37, 676, DateTimeKind.Local).AddTicks(6951), 64, "(095) 074-48-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1333, null, 0, new DateTime(2020, 9, 18, 2, 18, 29, 139, DateTimeKind.Local).AddTicks(3783), 64, "(073) 311-73-49" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 536, null, 1, new DateTime(2020, 3, 12, 15, 26, 26, 177, DateTimeKind.Local).AddTicks(2425), 27, "Lyubodar.Lugova@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1076, null, 1, new DateTime(2021, 1, 5, 10, 31, 36, 802, DateTimeKind.Local).AddTicks(7225), 64, "Slavomir43@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 934, null, 0, new DateTime(2020, 7, 15, 4, 18, 10, 715, DateTimeKind.Local).AddTicks(8209), 64, "(099) 496-87-23" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 428, null, 1, new DateTime(2020, 5, 19, 4, 53, 41, 871, DateTimeKind.Local).AddTicks(284), 64, "Yevgen_Grigorishin@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 85, null, 0, new DateTime(2020, 7, 12, 18, 1, 59, 129, DateTimeKind.Local).AddTicks(7250), 64, "(091) 306-63-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1206, null, 0, new DateTime(2020, 11, 9, 13, 39, 34, 676, DateTimeKind.Local).AddTicks(1812), 63, "(095) 292-85-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 592, null, 1, new DateTime(2020, 12, 13, 12, 32, 3, 677, DateTimeKind.Local).AddTicks(2437), 63, "Gennadii_Bondarenko12@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 235, null, 1, new DateTime(2020, 7, 17, 13, 23, 25, 860, DateTimeKind.Local).AddTicks(2610), 63, "Ratimir_Garun62@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 118, null, 0, new DateTime(2020, 11, 2, 12, 10, 49, 234, DateTimeKind.Local).AddTicks(9178), 63, "(096) 496-49-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1339, null, 1, new DateTime(2021, 2, 10, 20, 51, 27, 403, DateTimeKind.Local).AddTicks(8659), 62, "Georgii_Mazilo34@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1021, null, 0, new DateTime(2021, 1, 17, 9, 10, 36, 945, DateTimeKind.Local).AddTicks(2201), 64, "(093) 688-81-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1092, null, 0, new DateTime(2020, 11, 9, 3, 42, 7, 831, DateTimeKind.Local).AddTicks(4367), 69, "(094) 950-88-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 416, null, 1, new DateTime(2021, 2, 24, 2, 50, 12, 663, DateTimeKind.Local).AddTicks(10), 27, "Tur47@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1460, null, 0, new DateTime(2020, 7, 19, 23, 32, 22, 167, DateTimeKind.Local).AddTicks(8922), 65, "(094) 389-53-39" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 120, null, 1, new DateTime(2021, 1, 18, 7, 15, 36, 327, DateTimeKind.Local).AddTicks(2157), 69, "Radmila_Potebenko46@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 520, null, 0, new DateTime(2020, 4, 30, 18, 3, 50, 525, DateTimeKind.Local).AddTicks(2930), 25, "(092) 711-50-21" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 524, null, 0, new DateTime(2020, 7, 20, 9, 45, 27, 559, DateTimeKind.Local).AddTicks(4799), 25, "(044) 267-34-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1329, null, 1, new DateTime(2020, 5, 17, 23, 29, 17, 648, DateTimeKind.Local).AddTicks(6816), 25, "Nina_Yalovii@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 411, null, 1, new DateTime(2020, 4, 3, 5, 42, 23, 965, DateTimeKind.Local).AddTicks(1619), 26, "Vira.Yukhno15@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1491, null, 1, new DateTime(2020, 4, 17, 4, 32, 53, 893, DateTimeKind.Local).AddTicks(5757), 68, "Malva_Miloslavska@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 998, null, 0, new DateTime(2021, 2, 19, 23, 20, 34, 433, DateTimeKind.Local).AddTicks(8812), 68, "(098) 669-73-22" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 720, null, 1, new DateTime(2020, 5, 26, 12, 0, 19, 594, DateTimeKind.Local).AddTicks(9955), 68, "Kseniya_Storozhuk89@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 645, null, 0, new DateTime(2020, 9, 15, 17, 36, 6, 131, DateTimeKind.Local).AddTicks(2026), 65, "(091) 967-24-31" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 480, null, 1, new DateTime(2021, 1, 13, 0, 8, 42, 767, DateTimeKind.Local).AddTicks(5583), 26, "Yaropolk27@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 477, null, 1, new DateTime(2021, 1, 22, 23, 24, 8, 855, DateTimeKind.Local).AddTicks(4525), 67, "Zvenislava.Malkovich@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 230, null, 0, new DateTime(2021, 1, 2, 0, 45, 19, 189, DateTimeKind.Local).AddTicks(4949), 67, "(096) 715-63-06" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 41, null, 1, new DateTime(2021, 2, 2, 11, 12, 46, 820, DateTimeKind.Local).AddTicks(1758), 67, "Yukhim.Pasichnik@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1386, null, 0, new DateTime(2020, 11, 26, 22, 56, 18, 108, DateTimeKind.Local).AddTicks(1459), 66, "(094) 827-54-80" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 982, null, 1, new DateTime(2020, 6, 23, 14, 14, 18, 870, DateTimeKind.Local).AddTicks(1069), 66, "Chornota82@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 541, null, 0, new DateTime(2021, 1, 17, 21, 6, 13, 279, DateTimeKind.Local).AddTicks(6650), 26, "(091) 661-57-54" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 859, null, 1, new DateTime(2020, 7, 7, 12, 1, 19, 36, DateTimeKind.Local).AddTicks(3592), 26, "Sinook_Polishuk@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1199, null, 1, new DateTime(2020, 8, 1, 16, 27, 56, 642, DateTimeKind.Local).AddTicks(2643), 26, "Valerii82@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 841, null, 0, new DateTime(2020, 12, 11, 1, 9, 48, 914, DateTimeKind.Local).AddTicks(9700), 67, "(099) 699-74-61" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1284, null, 1, new DateTime(2021, 1, 4, 5, 15, 31, 956, DateTimeKind.Local).AddTicks(8800), 62, "Svyatoslava_Mikhailyuk@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 11, null, 0, new DateTime(2020, 6, 22, 3, 54, 40, 225, DateTimeKind.Local).AddTicks(4362), 21, "(099) 790-02-06" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1249, null, 1, new DateTime(2020, 7, 12, 16, 47, 6, 233, DateTimeKind.Local).AddTicks(2087), 74, "Ada.Gordiichuk39@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1316, null, 1, new DateTime(2020, 11, 1, 10, 21, 2, 285, DateTimeKind.Local).AddTicks(8723), 82, "Palazhka71@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 880, null, 1, new DateTime(2020, 12, 9, 21, 23, 25, 229, DateTimeKind.Local).AddTicks(9707), 82, "Milodara.Bambula59@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 689, null, 0, new DateTime(2020, 11, 12, 2, 18, 44, 256, DateTimeKind.Local).AddTicks(9897), 82, "(095) 029-42-15" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 399, null, 1, new DateTime(2020, 7, 30, 3, 50, 20, 684, DateTimeKind.Local).AddTicks(6546), 82, "Oleg_Gladkivska81@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 84, null, 0, new DateTime(2021, 1, 8, 5, 52, 52, 286, DateTimeKind.Local).AddTicks(5194), 82, "(099) 835-02-99" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 202, null, 1, new DateTime(2020, 5, 11, 17, 16, 39, 849, DateTimeKind.Local).AddTicks(7004), 17, "Nina.Potebenko@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 322, null, 0, new DateTime(2021, 1, 7, 23, 16, 13, 36, DateTimeKind.Local).AddTicks(8322), 17, "(093) 619-03-65" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 514, null, 0, new DateTime(2020, 7, 28, 4, 42, 29, 61, DateTimeKind.Local).AddTicks(3017), 17, "(092) 505-91-34" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1412, null, 1, new DateTime(2021, 2, 25, 9, 20, 0, 124, DateTimeKind.Local).AddTicks(144), 82, "Olelko.Negoda@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1474, null, 0, new DateTime(2020, 7, 6, 21, 9, 29, 552, DateTimeKind.Local).AddTicks(2608), 17, "(092) 546-80-10" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1067, null, 1, new DateTime(2020, 12, 11, 20, 9, 32, 672, DateTimeKind.Local).AddTicks(3226), 81, "Nemir.Lobachevska26@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 767, null, 1, new DateTime(2020, 6, 11, 2, 43, 21, 673, DateTimeKind.Local).AddTicks(8605), 81, "Yarovid56@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 573, null, 1, new DateTime(2020, 12, 6, 6, 30, 19, 458, DateTimeKind.Local).AddTicks(4420), 81, "Antonina34@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 125, null, 1, new DateTime(2020, 7, 23, 15, 13, 14, 458, DateTimeKind.Local).AddTicks(6051), 18, "Ratibor.Vitryak@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 795, null, 1, new DateTime(2021, 2, 13, 3, 17, 1, 201, DateTimeKind.Local).AddTicks(2575), 18, "Avreliya.Negoda@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 975, null, 0, new DateTime(2021, 2, 16, 17, 43, 15, 224, DateTimeKind.Local).AddTicks(774), 18, "(093) 378-51-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 788, null, 0, new DateTime(2020, 7, 3, 13, 12, 9, 215, DateTimeKind.Local).AddTicks(9564), 80, "(093) 761-11-61" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 475, null, 1, new DateTime(2020, 12, 10, 8, 47, 40, 360, DateTimeKind.Local).AddTicks(1679), 80, "Klavdiya55@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1104, null, 1, new DateTime(2020, 9, 10, 19, 16, 49, 831, DateTimeKind.Local).AddTicks(9127), 81, "Snizhana14@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 427, null, 0, new DateTime(2020, 5, 28, 9, 57, 39, 90, DateTimeKind.Local).AddTicks(4345), 80, "(097) 227-13-84" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1379, null, 1, new DateTime(2020, 3, 25, 5, 15, 29, 221, DateTimeKind.Local).AddTicks(8405), 16, "Darislava83@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 66, null, 1, new DateTime(2020, 7, 3, 5, 10, 11, 807, DateTimeKind.Local).AddTicks(5552), 83, "Igor85@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 196, null, 1, new DateTime(2021, 1, 30, 18, 23, 13, 269, DateTimeKind.Local).AddTicks(4416), 84, "Snizhan_Semeshuk87@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 30, null, 0, new DateTime(2020, 11, 3, 14, 41, 56, 738, DateTimeKind.Local).AddTicks(9739), 84, "(091) 098-55-27" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 27, null, 1, new DateTime(2020, 10, 15, 9, 29, 57, 781, DateTimeKind.Local).AddTicks(308), 16, "Yaromir_Karpukh@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1348, null, 0, new DateTime(2020, 6, 7, 4, 44, 16, 16, DateTimeKind.Local).AddTicks(8396), 83, "(094) 749-73-27" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 615, null, 1, new DateTime(2020, 8, 13, 6, 20, 19, 730, DateTimeKind.Local).AddTicks(1378), 16, "Ostap.Potebenko@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 649, null, 1, new DateTime(2021, 1, 31, 23, 34, 38, 442, DateTimeKind.Local).AddTicks(3865), 16, "Alevtin.Potockii@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 931, null, 1, new DateTime(2021, 1, 27, 12, 26, 47, 834, DateTimeKind.Local).AddTicks(7303), 83, "Lyubodar3@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 893, null, 1, new DateTime(2020, 3, 10, 4, 53, 1, 180, DateTimeKind.Local).AddTicks(1122), 83, "Zoryana_Storozhuk@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 34, null, 1, new DateTime(2020, 6, 9, 3, 34, 43, 110, DateTimeKind.Local).AddTicks(5960), 83, "Khristya.Glinska89@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 853, null, 0, new DateTime(2021, 1, 20, 14, 6, 19, 305, DateTimeKind.Local).AddTicks(8859), 83, "(097) 705-36-37" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 635, null, 0, new DateTime(2020, 12, 7, 23, 18, 42, 270, DateTimeKind.Local).AddTicks(2674), 83, "(091) 619-04-05" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 577, null, 1, new DateTime(2020, 4, 6, 1, 21, 47, 813, DateTimeKind.Local).AddTicks(6645), 83, "Yarema13@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 711, null, 0, new DateTime(2020, 5, 18, 1, 51, 43, 77, DateTimeKind.Local).AddTicks(2681), 16, "(095) 700-74-44" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 838, null, 1, new DateTime(2020, 8, 5, 15, 32, 57, 980, DateTimeKind.Local).AddTicks(5153), 16, "Markiyan75@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 856, null, 1, new DateTime(2020, 10, 17, 19, 47, 37, 477, DateTimeKind.Local).AddTicks(6796), 16, "Bronislava.Tryasun@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1251, null, 1, new DateTime(2020, 4, 9, 15, 42, 55, 53, DateTimeKind.Local).AddTicks(4676), 16, "Inna22@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 418, null, 0, new DateTime(2021, 2, 8, 0, 37, 56, 448, DateTimeKind.Local).AddTicks(2476), 83, "(098) 154-58-69" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 123, null, 1, new DateTime(2020, 4, 17, 8, 44, 26, 210, DateTimeKind.Local).AddTicks(9052), 83, "Yarema_Veredun@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 686, null, 1, new DateTime(2021, 2, 1, 15, 15, 14, 214, DateTimeKind.Local).AddTicks(8243), 83, "Ognyana82@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1183, null, 0, new DateTime(2020, 10, 29, 3, 21, 26, 504, DateTimeKind.Local).AddTicks(7009), 74, "(094) 053-67-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 354, null, 0, new DateTime(2020, 8, 6, 15, 30, 17, 471, DateTimeKind.Local).AddTicks(2871), 80, "(093) 779-98-23" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1390, null, 0, new DateTime(2020, 4, 10, 18, 42, 57, 338, DateTimeKind.Local).AddTicks(6690), 79, "(063) 140-10-01" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1438, null, 1, new DateTime(2020, 11, 14, 6, 14, 24, 29, DateTimeKind.Local).AddTicks(9220), 76, "Stanislava.Polishuk99@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 112, null, 1, new DateTime(2020, 11, 29, 6, 11, 14, 353, DateTimeKind.Local).AddTicks(7429), 20, "Stepan_Pagutyak93@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 394, null, 0, new DateTime(2020, 11, 23, 4, 19, 25, 911, DateTimeKind.Local).AddTicks(6443), 20, "(095) 312-38-23" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 655, null, 1, new DateTime(2020, 9, 4, 19, 0, 39, 71, DateTimeKind.Local).AddTicks(4395), 20, "Nestor_Koreckii23@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1430, null, 0, new DateTime(2021, 2, 13, 13, 0, 53, 144, DateTimeKind.Local).AddTicks(1470), 76, "(098) 869-82-79" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1153, null, 1, new DateTime(2021, 1, 3, 23, 46, 21, 3, DateTimeKind.Local).AddTicks(4163), 76, "Gerasim.Bricka@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1087, null, 0, new DateTime(2020, 4, 7, 7, 20, 40, 176, DateTimeKind.Local).AddTicks(7815), 20, "(073) 814-53-33" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 825, null, 1, new DateTime(2020, 9, 11, 2, 41, 56, 627, DateTimeKind.Local).AddTicks(2756), 76, "Alina49@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 335, null, 1, new DateTime(2020, 11, 6, 23, 6, 24, 284, DateTimeKind.Local).AddTicks(3106), 77, "Dobroslava78@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 726, null, 0, new DateTime(2020, 4, 2, 2, 32, 9, 167, DateTimeKind.Local).AddTicks(8941), 76, "(093) 054-52-20" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 381, null, 0, new DateTime(2020, 7, 2, 16, 27, 8, 472, DateTimeKind.Local).AddTicks(8982), 76, "(050) 350-15-19" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 996, null, 1, new DateTime(2021, 1, 5, 22, 3, 23, 824, DateTimeKind.Local).AddTicks(8974), 75, "Bratoslav.Grinevskii@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 771, null, 0, new DateTime(2020, 12, 22, 14, 36, 47, 385, DateTimeKind.Local).AddTicks(814), 75, "(091) 475-89-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 723, null, 0, new DateTime(2020, 12, 26, 17, 38, 10, 47, DateTimeKind.Local).AddTicks(6192), 75, "(050) 945-60-54" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 713, null, 1, new DateTime(2020, 12, 1, 23, 57, 43, 237, DateTimeKind.Local).AddTicks(468), 75, "Budimir_Cushko@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 494, null, 0, new DateTime(2020, 12, 8, 20, 47, 37, 779, DateTimeKind.Local).AddTicks(6017), 75, "(091) 158-76-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 76, null, 0, new DateTime(2020, 10, 18, 18, 38, 40, 360, DateTimeKind.Local).AddTicks(3005), 75, "(044) 415-08-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1282, null, 0, new DateTime(2020, 9, 25, 23, 51, 36, 896, DateTimeKind.Local).AddTicks(9169), 74, "(063) 691-57-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 555, null, 0, new DateTime(2020, 8, 1, 4, 54, 15, 702, DateTimeKind.Local).AddTicks(9931), 76, "(094) 890-83-92" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 258, null, 1, new DateTime(2020, 8, 21, 17, 55, 29, 85, DateTimeKind.Local).AddTicks(3028), 80, "Lyubomira.Kornyiichuk@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 501, null, 0, new DateTime(2020, 7, 15, 17, 27, 16, 940, DateTimeKind.Local).AddTicks(2941), 77, "(091) 331-85-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1058, null, 1, new DateTime(2020, 11, 5, 4, 59, 31, 263, DateTimeKind.Local).AddTicks(3824), 77, "Nazar_Tarasyuk91@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1194, null, 0, new DateTime(2020, 5, 24, 21, 11, 21, 556, DateTimeKind.Local).AddTicks(1604), 79, "(098) 492-80-32" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 401, null, 0, new DateTime(2021, 1, 11, 14, 48, 34, 589, DateTimeKind.Local).AddTicks(7640), 79, "(096) 243-42-21" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 173, null, 1, new DateTime(2020, 11, 20, 2, 24, 29, 371, DateTimeKind.Local).AddTicks(5310), 19, "Lyubava46@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 389, null, 1, new DateTime(2020, 10, 20, 21, 44, 16, 514, DateTimeKind.Local).AddTicks(7943), 79, "Apollinariya42@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 274, null, 1, new DateTime(2020, 3, 23, 18, 2, 4, 760, DateTimeKind.Local).AddTicks(6755), 79, "Marko_Kordun@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 916, null, 1, new DateTime(2021, 2, 14, 14, 26, 28, 109, DateTimeKind.Local).AddTicks(4761), 78, "Boguslava.Dmitruk@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 556, null, 0, new DateTime(2020, 4, 29, 9, 2, 40, 457, DateTimeKind.Local).AddTicks(9301), 19, "(094) 904-65-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 648, null, 0, new DateTime(2021, 1, 2, 11, 39, 36, 429, DateTimeKind.Local).AddTicks(5618), 19, "(044) 920-24-02" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 860, null, 1, new DateTime(2020, 10, 26, 0, 18, 6, 552, DateTimeKind.Local).AddTicks(1884), 77, "Yukhim.Gromiko77@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1278, null, 0, new DateTime(2020, 11, 4, 20, 52, 52, 847, DateTimeKind.Local).AddTicks(6380), 19, "(073) 164-98-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 643, null, 1, new DateTime(2021, 2, 11, 11, 45, 14, 221, DateTimeKind.Local).AddTicks(3073), 78, "Boleslav.Sherbak67@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 237, null, 1, new DateTime(2020, 8, 27, 7, 14, 56, 885, DateTimeKind.Local).AddTicks(5543), 78, "Zenovii.Sosyura13@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 223, null, 0, new DateTime(2020, 6, 11, 12, 53, 42, 36, DateTimeKind.Local).AddTicks(5119), 78, "(094) 543-24-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1286, null, 0, new DateTime(2021, 2, 21, 4, 57, 51, 188, DateTimeKind.Local).AddTicks(3167), 19, "(044) 937-09-96" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1402, null, 0, new DateTime(2020, 5, 26, 9, 52, 43, 452, DateTimeKind.Local).AddTicks(575), 19, "(095) 993-14-62" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1495, null, 1, new DateTime(2020, 7, 10, 10, 57, 39, 733, DateTimeKind.Local).AddTicks(4782), 19, "Matvii_Steckiv76@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1345, null, 0, new DateTime(2020, 5, 20, 11, 30, 22, 746, DateTimeKind.Local).AddTicks(3024), 77, "(050) 375-80-10" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1116, null, 1, new DateTime(2020, 6, 24, 23, 8, 5, 742, DateTimeKind.Local).AddTicks(4876), 77, "Valentin.Troyan@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 759, null, 1, new DateTime(2020, 6, 9, 2, 40, 53, 26, DateTimeKind.Local).AddTicks(6189), 78, "Khvalimir_Berdnik@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 526, null, 1, new DateTime(2020, 8, 24, 20, 3, 12, 760, DateTimeKind.Local).AddTicks(6018), 84, "Petro_Shukhevich97@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1082, null, 1, new DateTime(2020, 11, 27, 15, 8, 54, 439, DateTimeKind.Local).AddTicks(634), 62, "Radim57@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 898, null, 1, new DateTime(2020, 8, 10, 1, 28, 56, 635, DateTimeKind.Local).AddTicks(5826), 62, "Agniya_Kulinich@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 485, null, 1, new DateTime(2020, 3, 20, 6, 11, 25, 555, DateTimeKind.Local).AddTicks(9479), 48, "Andrii27@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1332, null, 1, new DateTime(2020, 3, 5, 20, 15, 35, 826, DateTimeKind.Local).AddTicks(8413), 47, "Vasil.Semeshuk66@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1025, null, 1, new DateTime(2020, 7, 27, 11, 51, 26, 834, DateTimeKind.Local).AddTicks(2851), 47, "Georgii_Silecka@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 216, null, 0, new DateTime(2020, 5, 27, 8, 59, 2, 564, DateTimeKind.Local).AddTicks(4425), 37, "(066) 798-04-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1073, null, 1, new DateTime(2020, 5, 19, 2, 56, 5, 599, DateTimeKind.Local).AddTicks(5726), 46, "Anastasii.Markiv@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1028, null, 1, new DateTime(2021, 1, 3, 9, 33, 14, 64, DateTimeKind.Local).AddTicks(9615), 46, "Borislava56@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 774, null, 1, new DateTime(2020, 7, 30, 6, 26, 2, 771, DateTimeKind.Local).AddTicks(7056), 46, "Vladislava_Lyashuk27@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 650, null, 0, new DateTime(2021, 1, 13, 15, 8, 21, 78, DateTimeKind.Local).AddTicks(5254), 46, "(091) 227-57-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1111, null, 1, new DateTime(2020, 9, 12, 9, 44, 12, 971, DateTimeKind.Local).AddTicks(6586), 36, "Vladislava_Petrina61@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 277, null, 1, new DateTime(2020, 10, 4, 3, 4, 14, 826, DateTimeKind.Local).AddTicks(7546), 46, "Slavomir87@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 320, null, 0, new DateTime(2020, 4, 30, 3, 1, 2, 570, DateTimeKind.Local).AddTicks(6142), 37, "(050) 378-23-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 580, null, 1, new DateTime(2020, 11, 10, 23, 48, 1, 760, DateTimeKind.Local).AddTicks(1909), 37, "Petro_Skoropadska@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 773, null, 0, new DateTime(2020, 5, 12, 13, 42, 44, 966, DateTimeKind.Local).AddTicks(2648), 37, "(098) 564-74-86" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 896, null, 1, new DateTime(2021, 2, 14, 0, 59, 9, 736, DateTimeKind.Local).AddTicks(7463), 37, "Galina27@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 204, null, 0, new DateTime(2020, 5, 2, 17, 17, 47, 247, DateTimeKind.Local).AddTicks(9836), 46, "(097) 244-51-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 13, null, 1, new DateTime(2021, 1, 25, 7, 58, 16, 894, DateTimeKind.Local).AddTicks(3736), 46, "Ganna.Miklukho@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 250, null, 1, new DateTime(2020, 5, 5, 17, 40, 20, 193, DateTimeKind.Local).AddTicks(196), 38, "Vitalii56@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 337, null, 1, new DateTime(2020, 12, 17, 3, 37, 9, 366, DateTimeKind.Local).AddTicks(8181), 38, "Lyubomira52@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 236, null, 0, new DateTime(2020, 10, 21, 21, 43, 14, 956, DateTimeKind.Local).AddTicks(400), 37, "(096) 309-84-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 559, null, 0, new DateTime(2020, 11, 7, 23, 12, 55, 719, DateTimeKind.Local).AddTicks(6282), 38, "(095) 707-87-47" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1030, null, 0, new DateTime(2020, 12, 2, 21, 19, 30, 840, DateTimeKind.Local).AddTicks(5324), 36, "(050) 063-64-45" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1355, null, 0, new DateTime(2020, 3, 30, 0, 38, 15, 691, DateTimeKind.Local).AddTicks(3055), 48, "(050) 881-21-61" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 949, null, 0, new DateTime(2020, 11, 4, 16, 26, 17, 532, DateTimeKind.Local).AddTicks(3285), 50, "(094) 269-05-86" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 679, null, 0, new DateTime(2020, 6, 6, 11, 22, 37, 425, DateTimeKind.Local).AddTicks(6541), 50, "(095) 290-69-97" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 156, null, 0, new DateTime(2020, 3, 7, 1, 25, 34, 830, DateTimeKind.Local).AddTicks(7977), 106, "(073) 461-35-44" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 334, null, 1, new DateTime(2020, 7, 23, 20, 24, 26, 322, DateTimeKind.Local).AddTicks(6022), 35, "Avrora.Porivai@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1416, null, 0, new DateTime(2020, 8, 3, 20, 2, 29, 836, DateTimeKind.Local).AddTicks(9906), 49, "(097) 136-06-37" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 383, null, 0, new DateTime(2020, 11, 10, 15, 25, 16, 313, DateTimeKind.Local).AddTicks(3250), 35, "(095) 407-70-54" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 669, null, 1, new DateTime(2020, 10, 1, 8, 31, 29, 939, DateTimeKind.Local).AddTicks(3649), 35, "Bilomir.Petlyura@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1354, null, 1, new DateTime(2020, 3, 10, 6, 53, 23, 723, DateTimeKind.Local).AddTicks(7171), 35, "Svitlana.Lazirko27@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 938, null, 1, new DateTime(2020, 8, 3, 21, 14, 9, 379, DateTimeKind.Local).AddTicks(8773), 36, "Rostislava_Pavlenko85@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1217, null, 1, new DateTime(2020, 9, 29, 18, 1, 55, 680, DateTimeKind.Local).AddTicks(710), 49, "Oksana57@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 985, null, 1, new DateTime(2020, 6, 24, 14, 33, 4, 147, DateTimeKind.Local).AddTicks(1863), 49, "Zvenimir.Sidlyak@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 740, null, 1, new DateTime(2021, 2, 6, 18, 54, 34, 420, DateTimeKind.Local).AddTicks(9995), 49, "Slavolyub_Gorbach@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 492, null, 1, new DateTime(2020, 5, 7, 21, 28, 50, 703, DateTimeKind.Local).AddTicks(50), 49, "Borimisl.Baranovska@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 488, null, 0, new DateTime(2021, 1, 2, 8, 33, 50, 603, DateTimeKind.Local).AddTicks(3328), 49, "(091) 964-47-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 340, null, 1, new DateTime(2020, 8, 19, 6, 55, 24, 909, DateTimeKind.Local).AddTicks(456), 49, "Anna96@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 625, null, 0, new DateTime(2020, 4, 6, 2, 1, 47, 64, DateTimeKind.Local).AddTicks(7131), 36, "(073) 988-56-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 864, null, 0, new DateTime(2020, 7, 9, 19, 41, 2, 318, DateTimeKind.Local).AddTicks(1404), 36, "(098) 079-66-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 905, null, 1, new DateTime(2020, 9, 5, 9, 37, 20, 655, DateTimeKind.Local).AddTicks(2548), 36, "Bogdan93@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1065, null, 1, new DateTime(2020, 8, 25, 5, 14, 27, 223, DateTimeKind.Local).AddTicks(9316), 49, "Valeriya86@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 421, null, 0, new DateTime(2020, 3, 4, 4, 51, 38, 838, DateTimeKind.Local).AddTicks(1306), 51, "(044) 978-23-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 926, null, 1, new DateTime(2020, 8, 8, 16, 30, 46, 254, DateTimeKind.Local).AddTicks(9680), 38, "Kvitka25@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1389, null, 1, new DateTime(2020, 3, 30, 17, 22, 54, 244, DateTimeKind.Local).AddTicks(4950), 45, "Zorina94@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1250, null, 1, new DateTime(2020, 12, 29, 5, 43, 59, 496, DateTimeKind.Local).AddTicks(754), 40, "Stozhar15@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1397, null, 1, new DateTime(2020, 11, 19, 11, 2, 12, 258, DateTimeKind.Local).AddTicks(4702), 40, "Khristina95@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 718, null, 1, new DateTime(2020, 6, 18, 6, 3, 55, 67, DateTimeKind.Local).AddTicks(3847), 43, "Stanislav13@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 191, null, 0, new DateTime(2021, 1, 27, 16, 35, 35, 594, DateTimeKind.Local).AddTicks(9574), 43, "(063) 519-87-38" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 78, null, 0, new DateTime(2020, 10, 20, 15, 23, 55, 685, DateTimeKind.Local).AddTicks(421), 43, "(050) 703-31-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 57, null, 0, new DateTime(2021, 1, 26, 13, 28, 36, 385, DateTimeKind.Local).AddTicks(2331), 43, "(095) 687-90-06" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 42, null, 0, new DateTime(2020, 11, 7, 9, 42, 34, 410, DateTimeKind.Local).AddTicks(9658), 41, "(063) 331-22-14" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 159, null, 0, new DateTime(2020, 5, 18, 15, 14, 34, 911, DateTimeKind.Local).AddTicks(3152), 41, "(093) 042-35-69" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1154, null, 1, new DateTime(2020, 11, 12, 19, 39, 25, 369, DateTimeKind.Local).AddTicks(3966), 40, "Pelageya_Dzyubyak@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 804, null, 1, new DateTime(2021, 2, 28, 9, 22, 34, 114, DateTimeKind.Local).AddTicks(9516), 41, "Lada76@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1410, null, 1, new DateTime(2020, 9, 15, 17, 31, 15, 121, DateTimeKind.Local).AddTicks(6917), 42, "Glib.Balabukha@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1220, null, 1, new DateTime(2020, 3, 19, 7, 59, 40, 952, DateTimeKind.Local).AddTicks(274), 42, "Matvii67@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1080, null, 0, new DateTime(2020, 12, 20, 15, 41, 41, 473, DateTimeKind.Local).AddTicks(16), 41, "(098) 364-20-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1486, null, 1, new DateTime(2021, 2, 26, 11, 23, 46, 922, DateTimeKind.Local).AddTicks(3770), 41, "Orina.Glinska@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 262, null, 1, new DateTime(2020, 5, 18, 4, 12, 31, 85, DateTimeKind.Local).AddTicks(5866), 42, "Svyatopolk.Yanyuk@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 333, null, 1, new DateTime(2020, 11, 27, 23, 54, 10, 349, DateTimeKind.Local).AddTicks(7324), 42, "Zlata_Gorodockii17@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1129, null, 0, new DateTime(2020, 4, 9, 18, 4, 0, 877, DateTimeKind.Local).AddTicks(4066), 42, "(097) 723-42-83" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 984, null, 0, new DateTime(2020, 5, 11, 5, 46, 57, 127, DateTimeKind.Local).AddTicks(1978), 42, "(099) 463-76-79" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1074, null, 1, new DateTime(2020, 6, 4, 8, 45, 30, 944, DateTimeKind.Local).AddTicks(493), 41, "Artem62@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1054, null, 1, new DateTime(2020, 5, 3, 3, 3, 30, 461, DateTimeKind.Local).AddTicks(7188), 38, "Orest.Gaichuk@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1044, null, 0, new DateTime(2021, 2, 5, 23, 36, 35, 144, DateTimeKind.Local).AddTicks(4403), 43, "(044) 729-61-46" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1117, null, 0, new DateTime(2021, 2, 7, 10, 38, 32, 512, DateTimeKind.Local).AddTicks(2202), 40, "(099) 126-51-10" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1190, null, 0, new DateTime(2020, 6, 18, 0, 33, 2, 878, DateTimeKind.Local).AddTicks(8315), 45, "(092) 853-35-34" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1160, null, 0, new DateTime(2020, 11, 27, 9, 57, 2, 163, DateTimeKind.Local).AddTicks(6566), 45, "(044) 391-08-83" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1055, null, 0, new DateTime(2020, 8, 11, 2, 0, 47, 522, DateTimeKind.Local).AddTicks(1659), 45, "(091) 640-13-17" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 603, null, 0, new DateTime(2020, 8, 7, 22, 14, 26, 883, DateTimeKind.Local).AddTicks(7427), 45, "(094) 746-22-97" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 539, null, 0, new DateTime(2020, 4, 14, 20, 29, 33, 890, DateTimeKind.Local).AddTicks(4964), 45, "(073) 536-99-12" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 830, null, 1, new DateTime(2020, 11, 10, 10, 25, 24, 227, DateTimeKind.Local).AddTicks(418), 39, "Danilo75@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1020, null, 0, new DateTime(2020, 5, 10, 5, 25, 31, 503, DateTimeKind.Local).AddTicks(8396), 39, "(073) 816-38-44" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1039, null, 1, new DateTime(2020, 12, 10, 19, 12, 24, 419, DateTimeKind.Local).AddTicks(8347), 44, "Vasil.Trublayevska@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1126, null, 0, new DateTime(2020, 7, 10, 5, 37, 59, 646, DateTimeKind.Local).AddTicks(8538), 43, "(066) 306-74-91" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 527, null, 1, new DateTime(2020, 3, 24, 0, 57, 54, 605, DateTimeKind.Local).AddTicks(8941), 44, "Zoryana_Andrukhovich@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1187, null, 0, new DateTime(2021, 2, 22, 19, 12, 32, 82, DateTimeKind.Local).AddTicks(8906), 39, "(073) 653-23-69" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1306, null, 0, new DateTime(2020, 12, 12, 16, 28, 27, 924, DateTimeKind.Local).AddTicks(1705), 43, "(050) 476-84-03" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 92, null, 0, new DateTime(2020, 5, 2, 15, 20, 50, 151, DateTimeKind.Local).AddTicks(1096), 40, "(099) 239-51-05" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 380, null, 1, new DateTime(2020, 8, 18, 0, 2, 40, 419, DateTimeKind.Local).AddTicks(1221), 40, "Radim7@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 734, null, 0, new DateTime(2020, 11, 7, 7, 44, 21, 456, DateTimeKind.Local).AddTicks(6872), 40, "(097) 704-89-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1297, null, 1, new DateTime(2021, 2, 20, 20, 41, 0, 388, DateTimeKind.Local).AddTicks(931), 43, "Valeriya_Vereshuk95@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1276, null, 1, new DateTime(2020, 5, 25, 4, 14, 30, 440, DateTimeKind.Local).AddTicks(1038), 43, "Natan.Yarmak@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1041, null, 0, new DateTime(2021, 1, 3, 17, 58, 50, 430, DateTimeKind.Local).AddTicks(1897), 40, "(063) 465-38-16" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 288, null, 1, new DateTime(2020, 8, 18, 18, 47, 41, 130, DateTimeKind.Local).AddTicks(1378), 44, "Fedora37@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1027, null, 1, new DateTime(2020, 8, 17, 1, 2, 39, 297, DateTimeKind.Local).AddTicks(4074), 62, "Radoslava.Demkiv@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1330, null, 0, new DateTime(2020, 11, 15, 21, 45, 26, 850, DateTimeKind.Local).AddTicks(934), 34, "(092) 700-33-45" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 891, null, 0, new DateTime(2020, 11, 8, 14, 34, 27, 598, DateTimeKind.Local).AddTicks(5771), 34, "(097) 806-90-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1467, null, 0, new DateTime(2020, 10, 10, 12, 14, 10, 552, DateTimeKind.Local).AddTicks(5363), 58, "(099) 313-04-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1451, null, 0, new DateTime(2021, 2, 1, 6, 27, 46, 505, DateTimeKind.Local).AddTicks(1223), 58, "(073) 556-25-31" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1169, null, 1, new DateTime(2021, 2, 4, 16, 59, 50, 810, DateTimeKind.Local).AddTicks(5628), 58, "Vita93@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 402, null, 0, new DateTime(2020, 10, 5, 16, 24, 57, 424, DateTimeKind.Local).AddTicks(6742), 58, "(073) 211-73-86" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 121, null, 0, new DateTime(2021, 1, 16, 19, 24, 3, 201, DateTimeKind.Local).AddTicks(7860), 58, "(095) 087-69-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 20, null, 0, new DateTime(2020, 3, 30, 14, 3, 44, 870, DateTimeKind.Local).AddTicks(8091), 58, "(066) 954-43-85" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 9, null, 0, new DateTime(2020, 12, 18, 7, 7, 35, 23, DateTimeKind.Local).AddTicks(2726), 31, "(073) 312-53-01" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 733, null, 0, new DateTime(2020, 9, 16, 18, 17, 36, 168, DateTimeKind.Local).AddTicks(973), 31, "(066) 476-54-96" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1238, null, 1, new DateTime(2020, 5, 30, 22, 50, 9, 47, DateTimeKind.Local).AddTicks(2414), 30, "Snizhan_Veredun@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 967, null, 0, new DateTime(2020, 3, 25, 19, 24, 47, 700, DateTimeKind.Local).AddTicks(7812), 31, "(098) 534-01-01" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1490, null, 1, new DateTime(2020, 6, 20, 18, 39, 43, 44, DateTimeKind.Local).AddTicks(9576), 57, "Vlad.Mikhailyuk30@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1434, null, 1, new DateTime(2021, 2, 16, 9, 23, 1, 273, DateTimeKind.Local).AddTicks(1647), 57, "Khristina_Lazirko@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1213, null, 0, new DateTime(2020, 7, 14, 0, 59, 39, 928, DateTimeKind.Local).AddTicks(9801), 57, "(094) 472-01-89" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1203, null, 1, new DateTime(2021, 2, 2, 8, 49, 45, 578, DateTimeKind.Local).AddTicks(7634), 57, "Lada.Moskalyuk@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1102, null, 0, new DateTime(2020, 10, 9, 8, 31, 21, 561, DateTimeKind.Local).AddTicks(401), 57, "(095) 922-24-76" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1097, null, 0, new DateTime(2020, 3, 24, 15, 26, 11, 817, DateTimeKind.Local).AddTicks(6034), 57, "(095) 600-72-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1093, null, 0, new DateTime(2020, 5, 26, 2, 31, 7, 648, DateTimeKind.Local).AddTicks(3097), 57, "(095) 222-92-96" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 600, null, 0, new DateTime(2021, 2, 24, 9, 43, 16, 595, DateTimeKind.Local).AddTicks(4024), 57, "(097) 594-79-75" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1369, null, 0, new DateTime(2020, 5, 5, 17, 6, 17, 48, DateTimeKind.Local).AddTicks(9331), 31, "(093) 667-54-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 247, null, 0, new DateTime(2020, 10, 22, 21, 52, 36, 501, DateTimeKind.Local).AddTicks(7726), 57, "(099) 265-02-53" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 725, null, 0, new DateTime(2021, 2, 10, 14, 26, 41, 946, DateTimeKind.Local).AddTicks(9096), 30, "(091) 941-77-68" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 138, null, 0, new DateTime(2020, 5, 25, 12, 53, 49, 30, DateTimeKind.Local).AddTicks(4444), 30, "(093) 545-32-06" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 681, null, 0, new DateTime(2020, 8, 1, 14, 53, 29, 0, DateTimeKind.Local).AddTicks(989), 62, "(093) 694-50-96" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 269, null, 1, new DateTime(2020, 9, 22, 4, 46, 0, 126, DateTimeKind.Local).AddTicks(6788), 62, "Vlad_Romei80@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 52, null, 0, new DateTime(2020, 5, 3, 15, 57, 39, 158, DateTimeKind.Local).AddTicks(5042), 62, "(050) 881-50-37" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1227, null, 0, new DateTime(2020, 11, 9, 6, 21, 42, 690, DateTimeKind.Local).AddTicks(537), 61, "(050) 291-59-02" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 694, null, 1, new DateTime(2020, 6, 19, 6, 41, 1, 946, DateTimeKind.Local).AddTicks(6406), 61, "Marko_Stigailo@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 303, null, 0, new DateTime(2020, 7, 16, 6, 19, 18, 689, DateTimeKind.Local).AddTicks(8588), 61, "(044) 199-16-50" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 474, null, 1, new DateTime(2020, 4, 27, 11, 49, 17, 80, DateTimeKind.Local).AddTicks(9451), 29, "Lyudomila55@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1120, null, 0, new DateTime(2020, 12, 10, 19, 21, 18, 208, DateTimeKind.Local).AddTicks(8719), 60, "(050) 067-80-68" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 623, null, 1, new DateTime(2020, 5, 13, 14, 10, 35, 470, DateTimeKind.Local).AddTicks(5011), 30, "Gennadii88@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 845, null, 0, new DateTime(2020, 5, 22, 16, 33, 1, 292, DateTimeKind.Local).AddTicks(7400), 29, "(044) 661-40-38" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 885, null, 1, new DateTime(2020, 6, 27, 2, 35, 45, 299, DateTimeKind.Local).AddTicks(2407), 29, "Dmitro.Prigoda@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1318, null, 1, new DateTime(2020, 12, 22, 17, 52, 3, 920, DateTimeKind.Local).AddTicks(5697), 29, "Zhozefina_Dovgalevskii38@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1478, null, 0, new DateTime(2020, 6, 11, 1, 10, 18, 919, DateTimeKind.Local).AddTicks(5795), 29, "(097) 518-29-68" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1401, null, 0, new DateTime(2020, 10, 28, 13, 11, 51, 885, DateTimeKind.Local).AddTicks(5407), 59, "(066) 443-05-23" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1130, null, 1, new DateTime(2020, 8, 13, 19, 31, 30, 79, DateTimeKind.Local).AddTicks(3996), 59, "Arkhip56@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 666, null, 1, new DateTime(2020, 5, 29, 5, 4, 53, 959, DateTimeKind.Local).AddTicks(5008), 59, "Antonida45@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 358, null, 0, new DateTime(2020, 7, 7, 13, 16, 24, 111, DateTimeKind.Local).AddTicks(3387), 59, "(096) 674-02-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 26, null, 1, new DateTime(2020, 3, 6, 17, 14, 38, 674, DateTimeKind.Local).AddTicks(4965), 30, "Miroslava53@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 566, null, 0, new DateTime(2021, 1, 14, 7, 8, 0, 701, DateTimeKind.Local).AddTicks(5006), 60, "(066) 369-11-94" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1300, null, 0, new DateTime(2020, 9, 24, 14, 9, 28, 60, DateTimeKind.Local).AddTicks(34), 34, "(044) 109-71-53" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 130, null, 1, new DateTime(2020, 3, 16, 20, 37, 19, 895, DateTimeKind.Local).AddTicks(2415), 57, "Yaropolk_Grechko32@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 209, null, 0, new DateTime(2021, 1, 18, 15, 38, 24, 812, DateTimeKind.Local).AddTicks(9548), 32, "(091) 698-83-10" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 991, null, 1, new DateTime(2020, 8, 23, 7, 43, 27, 107, DateTimeKind.Local).AddTicks(7223), 53, "Varvara_Magera84@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 571, null, 0, new DateTime(2020, 9, 28, 19, 34, 3, 172, DateTimeKind.Local).AddTicks(3341), 53, "(066) 531-98-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 507, null, 1, new DateTime(2020, 8, 16, 15, 23, 51, 13, DateTimeKind.Local).AddTicks(5401), 53, "Burevist.Korovyak86@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1421, null, 1, new DateTime(2020, 8, 11, 8, 16, 18, 908, DateTimeKind.Local).AddTicks(8655), 52, "Smiyana42@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1036, null, 0, new DateTime(2021, 1, 28, 16, 7, 39, 652, DateTimeKind.Local).AddTicks(2169), 52, "(050) 942-34-49" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 631, null, 1, new DateTime(2020, 4, 21, 22, 19, 58, 412, DateTimeKind.Local).AddTicks(2586), 52, "Nazarii.Vasilkivska11@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 104, null, 0, new DateTime(2020, 10, 12, 17, 5, 48, 498, DateTimeKind.Local).AddTicks(6019), 52, "(095) 479-39-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 97, null, 0, new DateTime(2020, 11, 9, 10, 30, 47, 394, DateTimeKind.Local).AddTicks(3068), 34, "(094) 282-68-56" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1019, null, 1, new DateTime(2020, 5, 10, 14, 45, 6, 872, DateTimeKind.Local).AddTicks(1243), 33, "Timofii.Troyan@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 212, null, 1, new DateTime(2020, 9, 27, 10, 25, 54, 738, DateTimeKind.Local).AddTicks(2833), 34, "Okhrim.Dmitruk@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 384, null, 0, new DateTime(2020, 9, 1, 6, 29, 55, 281, DateTimeKind.Local).AddTicks(5501), 34, "(098) 093-77-63" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 438, null, 0, new DateTime(2020, 3, 29, 22, 39, 15, 204, DateTimeKind.Local).AddTicks(7878), 34, "(096) 247-69-19" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1145, null, 0, new DateTime(2020, 9, 25, 5, 44, 57, 294, DateTimeKind.Local).AddTicks(5150), 51, "(095) 431-45-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 965, null, 1, new DateTime(2020, 7, 15, 6, 33, 14, 611, DateTimeKind.Local).AddTicks(9109), 51, "Borimir_Gorova@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 768, null, 1, new DateTime(2021, 1, 18, 1, 35, 0, 745, DateTimeKind.Local).AddTicks(5155), 51, "Krentta.Galacion@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 708, null, 1, new DateTime(2020, 3, 31, 15, 56, 14, 30, DateTimeKind.Local).AddTicks(1930), 51, "Viola30@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 637, null, 1, new DateTime(2020, 12, 6, 23, 45, 49, 258, DateTimeKind.Local).AddTicks(9178), 51, "Milana_Yacishin@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 496, null, 0, new DateTime(2020, 6, 12, 22, 38, 26, 317, DateTimeKind.Local).AddTicks(4069), 34, "(099) 858-23-34" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 306, null, 1, new DateTime(2021, 2, 21, 15, 37, 21, 688, DateTimeKind.Local).AddTicks(3216), 34, "Olesya93@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 116, null, 0, new DateTime(2021, 2, 16, 21, 37, 23, 581, DateTimeKind.Local).AddTicks(3318), 57, "(093) 255-87-46" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 174, null, 1, new DateTime(2020, 4, 25, 14, 39, 23, 699, DateTimeKind.Local).AddTicks(1979), 54, "Azarii.Sileckii@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1114, null, 1, new DateTime(2021, 1, 18, 7, 30, 17, 689, DateTimeKind.Local).AddTicks(5294), 54, "Velemir_Serdyuk@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 325, null, 0, new DateTime(2020, 9, 8, 1, 38, 2, 470, DateTimeKind.Local).AddTicks(6442), 32, "(066) 671-62-31" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 778, null, 1, new DateTime(2020, 8, 15, 3, 30, 24, 888, DateTimeKind.Local).AddTicks(1525), 32, "Boleslava.Miklashevskii@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1375, null, 1, new DateTime(2020, 8, 28, 20, 17, 15, 538, DateTimeKind.Local).AddTicks(4226), 56, "Diyana.Gorova47@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1230, null, 0, new DateTime(2020, 7, 17, 19, 20, 43, 491, DateTimeKind.Local).AddTicks(832), 56, "(063) 876-15-37" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 814, null, 1, new DateTime(2020, 9, 27, 12, 45, 12, 793, DateTimeKind.Local).AddTicks(5059), 56, "Fevroniya_Lomovii56@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 143, null, 1, new DateTime(2021, 1, 7, 12, 24, 32, 811, DateTimeKind.Local).AddTicks(7076), 56, "Volodimir_Pryadun@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1212, null, 0, new DateTime(2020, 10, 24, 22, 6, 50, 554, DateTimeKind.Local).AddTicks(2742), 55, "(066) 874-90-75" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1031, null, 1, new DateTime(2020, 11, 20, 6, 22, 56, 874, DateTimeKind.Local).AddTicks(1550), 55, "Angelina_Makoveckii18@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1006, null, 1, new DateTime(2020, 7, 27, 8, 52, 31, 222, DateTimeKind.Local).AddTicks(5037), 54, "Garnoslav_Fedorishina52@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 922, null, 0, new DateTime(2020, 9, 21, 17, 22, 19, 699, DateTimeKind.Local).AddTicks(3188), 55, "(099) 246-48-76" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1132, null, 1, new DateTime(2020, 11, 16, 1, 59, 1, 179, DateTimeKind.Local).AddTicks(3017), 32, "Kostyantin20@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1195, null, 0, new DateTime(2020, 5, 21, 13, 10, 45, 427, DateTimeKind.Local).AddTicks(9520), 32, "(093) 658-79-76" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 528, null, 0, new DateTime(2020, 9, 2, 22, 46, 37, 446, DateTimeKind.Local).AddTicks(4107), 55, "(094) 759-97-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 341, null, 1, new DateTime(2020, 7, 11, 17, 30, 59, 188, DateTimeKind.Local).AddTicks(5741), 55, "Zhanna82@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1296, null, 1, new DateTime(2020, 4, 24, 11, 50, 28, 199, DateTimeKind.Local).AddTicks(3920), 32, "Nemira.Glinskii@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 296, null, 0, new DateTime(2020, 10, 5, 10, 6, 28, 951, DateTimeKind.Local).AddTicks(9495), 33, "(094) 956-31-12" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 314, null, 1, new DateTime(2020, 8, 22, 8, 48, 29, 679, DateTimeKind.Local).AddTicks(625), 33, "Khvalimir87@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 500, null, 0, new DateTime(2020, 6, 19, 4, 9, 32, 694, DateTimeKind.Local).AddTicks(2277), 33, "(097) 442-58-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1118, null, 0, new DateTime(2020, 4, 2, 12, 38, 27, 923, DateTimeKind.Local).AddTicks(2917), 32, "(093) 044-35-36" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 663, null, 0, new DateTime(2020, 9, 16, 7, 14, 59, 916, DateTimeKind.Local).AddTicks(5408), 84, "(050) 041-30-61" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 959, null, 0, new DateTime(2020, 10, 4, 6, 57, 15, 878, DateTimeKind.Local).AddTicks(5746), 74, "(096) 012-35-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 362, null, 1, new DateTime(2020, 8, 24, 3, 53, 20, 635, DateTimeKind.Local).AddTicks(1412), 42, "Valentina.Gaiduk43@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 304, null, 0, new DateTime(2020, 8, 24, 1, 19, 37, 499, DateTimeKind.Local).AddTicks(6014), 91, "(092) 384-02-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 353, null, 1, new DateTime(2020, 7, 3, 12, 10, 47, 894, DateTimeKind.Local).AddTicks(5953), 91, "Rayisa.Luchko5@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 633, null, 0, new DateTime(2020, 10, 22, 12, 15, 16, 364, DateTimeKind.Local).AddTicks(3196), 91, "(095) 527-52-08" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1408, null, 0, new DateTime(2020, 12, 10, 4, 6, 10, 848, DateTimeKind.Local).AddTicks(4770), 11, "(066) 726-34-90" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 646, null, 0, new DateTime(2020, 9, 21, 8, 42, 50, 599, DateTimeKind.Local).AddTicks(3655), 91, "(095) 604-79-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1328, null, 1, new DateTime(2020, 10, 2, 10, 7, 16, 898, DateTimeKind.Local).AddTicks(9579), 101, "Radimir_Splyukha@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 993, null, 0, new DateTime(2020, 3, 24, 8, 19, 13, 596, DateTimeKind.Local).AddTicks(3543), 101, "(093) 919-33-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 978, null, 1, new DateTime(2020, 3, 28, 20, 59, 25, 861, DateTimeKind.Local).AddTicks(1220), 101, "Lyubomira_Kovalenko87@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 751, null, 0, new DateTime(2020, 12, 29, 3, 48, 44, 208, DateTimeKind.Local).AddTicks(4260), 101, "(044) 021-15-12" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 582, null, 0, new DateTime(2020, 11, 6, 20, 18, 41, 898, DateTimeKind.Local).AddTicks(531), 11, "(094) 871-84-65" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 433, null, 0, new DateTime(2021, 2, 17, 1, 13, 47, 512, DateTimeKind.Local).AddTicks(6236), 101, "(091) 930-04-15" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 548, null, 1, new DateTime(2020, 12, 31, 17, 0, 14, 220, DateTimeKind.Local).AddTicks(9166), 11, "Potap_Tkachenko34@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 157, null, 0, new DateTime(2020, 7, 15, 14, 46, 3, 895, DateTimeKind.Local).AddTicks(3992), 91, "(099) 340-72-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 456, null, 1, new DateTime(2020, 10, 24, 22, 56, 16, 512, DateTimeKind.Local).AddTicks(2872), 11, "Zoryan86@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 550, null, 1, new DateTime(2021, 1, 23, 9, 42, 51, 526, DateTimeKind.Local).AddTicks(3681), 92, "Vsevolod_Vitryak@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 591, null, 1, new DateTime(2020, 10, 3, 2, 33, 1, 522, DateTimeKind.Local).AddTicks(8242), 92, "Dobrinka.Petriv68@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 621, null, 0, new DateTime(2020, 7, 28, 2, 36, 25, 372, DateTimeKind.Local).AddTicks(254), 92, "(063) 711-94-81" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 640, null, 1, new DateTime(2020, 12, 13, 16, 18, 21, 310, DateTimeKind.Local).AddTicks(2388), 5, "Yukhimiya.Durdinec64@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 739, null, 0, new DateTime(2020, 9, 21, 11, 42, 54, 115, DateTimeKind.Local).AddTicks(5219), 92, "(066) 817-65-63" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 867, null, 0, new DateTime(2020, 7, 7, 13, 3, 23, 602, DateTimeKind.Local).AddTicks(2172), 92, "(095) 522-62-44" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 907, null, 0, new DateTime(2020, 4, 25, 1, 33, 39, 0, DateTimeKind.Local).AddTicks(6042), 92, "(094) 136-46-20" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1243, null, 1, new DateTime(2020, 10, 28, 13, 29, 43, 808, DateTimeKind.Local).AddTicks(3213), 10, "Vsevolod71@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1038, null, 1, new DateTime(2020, 3, 14, 15, 57, 1, 572, DateTimeKind.Local).AddTicks(4041), 10, "Ruslana_Yevenko45@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 953, null, 0, new DateTime(2020, 3, 15, 3, 6, 45, 570, DateTimeKind.Local).AddTicks(3691), 10, "(096) 990-70-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 783, null, 1, new DateTime(2020, 5, 24, 22, 18, 2, 478, DateTimeKind.Local).AddTicks(319), 10, "Vladislava.Dmitrishina@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 578, null, 0, new DateTime(2020, 6, 13, 1, 2, 21, 329, DateTimeKind.Local).AddTicks(7160), 10, "(098) 263-35-37" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 168, null, 1, new DateTime(2020, 8, 2, 1, 37, 55, 407, DateTimeKind.Local).AddTicks(7763), 11, "Stepan9@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 641, null, 0, new DateTime(2021, 1, 24, 8, 0, 17, 314, DateTimeKind.Local).AddTicks(6518), 12, "(098) 354-83-29" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1365, null, 1, new DateTime(2020, 5, 31, 9, 49, 33, 115, DateTimeKind.Local).AddTicks(3081), 4, "Angelina.Kivach55@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 667, null, 1, new DateTime(2020, 4, 11, 21, 17, 1, 15, DateTimeKind.Local).AddTicks(7688), 12, "Angelina67@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1245, null, 1, new DateTime(2020, 3, 25, 21, 9, 1, 702, DateTimeKind.Local).AddTicks(4842), 102, "Ustim.Sayenko@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 15, null, 1, new DateTime(2021, 1, 22, 0, 8, 10, 169, DateTimeKind.Local).AddTicks(3408), 13, "Artem.Mogilevska88@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 140, null, 0, new DateTime(2020, 10, 16, 2, 3, 37, 811, DateTimeKind.Local).AddTicks(2157), 89, "(044) 156-65-49" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1146, null, 1, new DateTime(2020, 8, 25, 2, 21, 46, 523, DateTimeKind.Local).AddTicks(2614), 102, "Fevroniya32@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1018, null, 1, new DateTime(2020, 7, 16, 13, 50, 40, 285, DateTimeKind.Local).AddTicks(1651), 89, "Vsevlad_Mariyevska93@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1098, null, 0, new DateTime(2021, 2, 26, 22, 37, 55, 191, DateTimeKind.Local).AddTicks(3829), 89, "(093) 747-66-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1115, null, 1, new DateTime(2020, 9, 27, 4, 8, 54, 765, DateTimeKind.Local).AddTicks(1677), 102, "Pilip.Shindarei@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1051, null, 1, new DateTime(2021, 2, 7, 15, 54, 9, 484, DateTimeKind.Local).AddTicks(3045), 102, "Zborislav.Kovalenko45@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 806, null, 1, new DateTime(2021, 1, 1, 7, 56, 13, 606, DateTimeKind.Local).AddTicks(9918), 102, "Listvich_Storchak@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 443, null, 1, new DateTime(2020, 7, 19, 22, 59, 9, 966, DateTimeKind.Local).AddTicks(4482), 102, "Oriyana1@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1119, null, 1, new DateTime(2021, 2, 2, 22, 34, 37, 327, DateTimeKind.Local).AddTicks(2851), 89, "Vyacheslava25@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1253, null, 0, new DateTime(2020, 4, 26, 14, 2, 46, 818, DateTimeKind.Local).AddTicks(9612), 89, "(050) 158-79-14" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1362, null, 0, new DateTime(2021, 1, 23, 8, 48, 35, 626, DateTimeKind.Local).AddTicks(159), 12, "(063) 269-82-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 122, null, 1, new DateTime(2020, 5, 15, 10, 56, 36, 374, DateTimeKind.Local).AddTicks(420), 4, "Marina24@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 313, null, 0, new DateTime(2020, 4, 5, 13, 38, 39, 488, DateTimeKind.Local).AddTicks(5931), 4, "(098) 177-48-62" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 595, null, 0, new DateTime(2020, 4, 20, 9, 55, 43, 20, DateTimeKind.Local).AddTicks(1972), 4, "(050) 018-19-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1180, null, 0, new DateTime(2020, 4, 6, 7, 28, 28, 761, DateTimeKind.Local).AddTicks(7302), 12, "(097) 377-23-03" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1042, null, 0, new DateTime(2020, 6, 13, 17, 31, 4, 429, DateTimeKind.Local).AddTicks(4947), 12, "(066) 196-70-05" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 94, null, 1, new DateTime(2020, 6, 5, 6, 5, 39, 223, DateTimeKind.Local).AddTicks(2377), 90, "Vsevlad.Negoda@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 574, null, 1, new DateTime(2020, 7, 7, 20, 40, 48, 88, DateTimeKind.Local).AddTicks(5124), 90, "Boleslav_Romenec88@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1143, null, 0, new DateTime(2021, 2, 2, 14, 33, 37, 666, DateTimeKind.Local).AddTicks(157), 90, "(096) 666-44-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1198, null, 0, new DateTime(2021, 2, 2, 10, 50, 11, 922, DateTimeKind.Local).AddTicks(7543), 90, "(097) 677-75-83" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 884, null, 0, new DateTime(2020, 10, 31, 23, 54, 56, 930, DateTimeKind.Local).AddTicks(5639), 4, "(098) 696-19-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1226, null, 1, new DateTime(2020, 12, 3, 3, 43, 49, 861, DateTimeKind.Local).AddTicks(5983), 90, "Mikola.Semenochko34@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1338, null, 1, new DateTime(2020, 8, 25, 4, 0, 51, 667, DateTimeKind.Local).AddTicks(4621), 90, "Lyubomira83@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1049, null, 1, new DateTime(2020, 6, 1, 10, 6, 18, 134, DateTimeKind.Local).AddTicks(812), 4, "Shastislav.Pavlishin57@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1257, null, 1, new DateTime(2020, 6, 1, 4, 37, 45, 936, DateTimeKind.Local).AddTicks(7813), 4, "Kalina51@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 857, null, 0, new DateTime(2020, 12, 8, 3, 46, 34, 887, DateTimeKind.Local).AddTicks(2258), 5, "(095) 460-67-17" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 330, null, 0, new DateTime(2020, 7, 16, 17, 11, 35, 523, DateTimeKind.Local).AddTicks(8889), 103, "(073) 666-58-06" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 910, null, 1, new DateTime(2020, 12, 11, 1, 39, 10, 216, DateTimeKind.Local).AddTicks(2882), 5, "Yevgen.Yackiv@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 812, null, 0, new DateTime(2020, 9, 21, 10, 27, 53, 868, DateTimeKind.Local).AddTicks(8389), 100, "(093) 209-81-12" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1182, null, 1, new DateTime(2020, 8, 26, 13, 42, 10, 397, DateTimeKind.Local).AddTicks(9692), 6, "Boguslava64@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 596, null, 0, new DateTime(2020, 10, 15, 18, 49, 29, 100, DateTimeKind.Local).AddTicks(5449), 94, "(096) 713-53-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 746, null, 0, new DateTime(2020, 3, 23, 17, 39, 30, 211, DateTimeKind.Local).AddTicks(1154), 94, "(097) 366-00-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1068, null, 0, new DateTime(2020, 6, 8, 1, 20, 53, 247, DateTimeKind.Local).AddTicks(2976), 94, "(093) 793-08-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 687, null, 1, new DateTime(2020, 10, 17, 4, 4, 35, 940, DateTimeKind.Local).AddTicks(1677), 7, "Gordii.Unich73@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 818, null, 1, new DateTime(2020, 7, 1, 1, 38, 40, 450, DateTimeKind.Local).AddTicks(4316), 7, "Milana.Yanyuk59@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1426, null, 0, new DateTime(2020, 12, 9, 12, 55, 50, 154, DateTimeKind.Local).AddTicks(918), 97, "(093) 890-28-03" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1186, null, 1, new DateTime(2021, 2, 23, 3, 24, 5, 215, DateTimeKind.Local).AddTicks(2188), 97, "Agniya28@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1164, null, 1, new DateTime(2020, 10, 31, 7, 24, 4, 489, DateTimeKind.Local).AddTicks(4207), 97, "Alevtin.Kornyiichuk@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 8, null, 0, new DateTime(2020, 3, 17, 22, 9, 34, 737, DateTimeKind.Local).AddTicks(8320), 95, "(063) 347-47-81" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 165, null, 0, new DateTime(2020, 12, 26, 20, 41, 28, 988, DateTimeKind.Local).AddTicks(2748), 95, "(073) 444-51-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 668, null, 0, new DateTime(2020, 7, 7, 7, 45, 14, 167, DateTimeKind.Local).AddTicks(7310), 97, "(044) 494-51-65" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 937, null, 0, new DateTime(2021, 3, 3, 7, 48, 38, 365, DateTimeKind.Local).AddTicks(4370), 6, "(092) 015-68-76" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 201, null, 0, new DateTime(2021, 1, 21, 2, 4, 56, 808, DateTimeKind.Local).AddTicks(8234), 97, "(092) 479-40-90" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1302, null, 0, new DateTime(2020, 3, 7, 20, 19, 6, 327, DateTimeKind.Local).AddTicks(4617), 8, "(050) 011-94-39" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 47, null, 1, new DateTime(2020, 4, 30, 12, 9, 51, 190, DateTimeKind.Local).AddTicks(7742), 96, "Stozhar39@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 481, null, 0, new DateTime(2020, 8, 16, 4, 23, 51, 775, DateTimeKind.Local).AddTicks(2662), 8, "(044) 447-72-63" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1470, null, 0, new DateTime(2020, 9, 6, 13, 37, 1, 862, DateTimeKind.Local).AddTicks(2635), 96, "(050) 164-18-51" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 619, null, 1, new DateTime(2020, 6, 24, 13, 36, 18, 25, DateTimeKind.Local).AddTicks(2310), 8, "Boris_Porivai84@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1464, null, 0, new DateTime(2020, 9, 13, 18, 27, 3, 553, DateTimeKind.Local).AddTicks(8485), 96, "(099) 324-50-17" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 190, null, 1, new DateTime(2020, 5, 1, 21, 22, 13, 396, DateTimeKind.Local).AddTicks(1447), 96, "Blagovista0@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 999, null, 1, new DateTime(2020, 9, 7, 15, 32, 11, 359, DateTimeKind.Local).AddTicks(9918), 8, "Boguslava.Palamarchuk@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1264, null, 0, new DateTime(2020, 4, 4, 15, 22, 41, 744, DateTimeKind.Local).AddTicks(6948), 96, "(096) 450-98-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1103, null, 0, new DateTime(2020, 9, 21, 20, 17, 7, 280, DateTimeKind.Local).AddTicks(9256), 96, "(050) 789-39-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 680, null, 1, new DateTime(2020, 8, 31, 13, 1, 17, 936, DateTimeKind.Local).AddTicks(8202), 96, "Orina70@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 468, null, 1, new DateTime(2020, 10, 20, 17, 37, 31, 164, DateTimeKind.Local).AddTicks(8456), 96, "Lyubava.Storozhuk42@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 852, null, 1, new DateTime(2021, 2, 11, 15, 13, 15, 730, DateTimeKind.Local).AddTicks(5227), 7, "Malva.Palamarchuk@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 218, null, 1, new DateTime(2020, 4, 4, 7, 33, 11, 541, DateTimeKind.Local).AddTicks(1350), 98, "Lyudomila.Mogilevskii0@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 252, null, 0, new DateTime(2020, 9, 21, 7, 17, 40, 859, DateTimeKind.Local).AddTicks(212), 98, "(096) 815-17-61" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 264, null, 0, new DateTime(2020, 12, 25, 0, 17, 42, 486, DateTimeKind.Local).AddTicks(8171), 98, "(073) 595-02-03" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1178, null, 0, new DateTime(2020, 9, 1, 5, 54, 10, 44, DateTimeKind.Local).AddTicks(4301), 92, "(091) 745-62-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1367, null, 0, new DateTime(2020, 5, 4, 17, 48, 25, 247, DateTimeKind.Local).AddTicks(1210), 92, "(050) 148-82-21" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1450, null, 0, new DateTime(2021, 2, 26, 19, 37, 35, 186, DateTimeKind.Local).AddTicks(7462), 92, "(097) 482-49-19" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1216, null, 1, new DateTime(2021, 2, 8, 2, 4, 49, 324, DateTimeKind.Local).AddTicks(4904), 99, "Daleslava.Markiv@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1052, null, 0, new DateTime(2020, 6, 27, 0, 5, 47, 698, DateTimeKind.Local).AddTicks(9805), 99, "(093) 812-20-89" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 770, null, 1, new DateTime(2020, 7, 16, 16, 22, 54, 999, DateTimeKind.Local).AddTicks(6244), 99, "Arkhip.Pogiba4@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 700, null, 1, new DateTime(2020, 4, 20, 21, 1, 57, 551, DateTimeKind.Local).AddTicks(2512), 99, "Maryan.Maistrenko67@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 222, null, 1, new DateTime(2020, 6, 7, 16, 29, 52, 475, DateTimeKind.Local).AddTicks(2298), 99, "Motrya_Koreckii27@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 405, null, 1, new DateTime(2021, 2, 27, 5, 15, 54, 706, DateTimeKind.Local).AddTicks(5814), 10, "Boleslav_Dzyuba@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 151, null, 1, new DateTime(2020, 4, 18, 18, 46, 12, 440, DateTimeKind.Local).AddTicks(2647), 10, "Agnesa.Lyuta54@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 3, null, 1, new DateTime(2020, 11, 21, 5, 16, 7, 412, DateTimeKind.Local).AddTicks(2579), 6, "Violetta91@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 86, null, 0, new DateTime(2020, 6, 30, 15, 44, 5, 886, DateTimeKind.Local).AddTicks(6914), 6, "(073) 281-95-92" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 73, null, 1, new DateTime(2020, 4, 23, 10, 14, 30, 177, DateTimeKind.Local).AddTicks(7766), 93, "Podolyan_Kalach25@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 284, null, 1, new DateTime(2020, 10, 5, 20, 35, 6, 941, DateTimeKind.Local).AddTicks(2097), 6, "Zoreslav_Borecka@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 194, null, 0, new DateTime(2021, 2, 8, 14, 33, 50, 640, DateTimeKind.Local).AddTicks(2726), 99, "(066) 027-60-92" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 876, null, 0, new DateTime(2020, 5, 8, 2, 56, 38, 335, DateTimeKind.Local).AddTicks(301), 6, "(050) 917-56-19" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1045, null, 0, new DateTime(2020, 9, 5, 22, 49, 24, 29, DateTimeKind.Local).AddTicks(8853), 93, "(093) 978-56-19" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1191, null, 1, new DateTime(2020, 4, 6, 0, 10, 52, 459, DateTimeKind.Local).AddTicks(2183), 93, "Zborislav51@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1192, null, 1, new DateTime(2021, 1, 7, 8, 33, 44, 349, DateTimeKind.Local).AddTicks(2164), 93, "Orisya.Pavliv28@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 908, null, 1, new DateTime(2020, 10, 30, 7, 54, 30, 312, DateTimeKind.Local).AddTicks(5600), 6, "Yarina.Dmitrishina72@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1319, null, 1, new DateTime(2020, 6, 16, 3, 30, 17, 673, DateTimeKind.Local).AddTicks(4748), 98, "Ada.Khitrovo@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1299, null, 1, new DateTime(2020, 4, 26, 15, 51, 7, 352, DateTimeKind.Local).AddTicks(4847), 93, "Omelyan_Fedorishina@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1032, null, 1, new DateTime(2021, 2, 5, 5, 4, 28, 630, DateTimeKind.Local).AddTicks(7818), 9, "Avrora.Babukh@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 607, null, 0, new DateTime(2020, 6, 2, 14, 42, 6, 193, DateTimeKind.Local).AddTicks(5934), 9, "(066) 160-30-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 821, null, 0, new DateTime(2020, 10, 10, 19, 38, 40, 353, DateTimeKind.Local).AddTicks(8075), 98, "(097) 242-58-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 702, null, 1, new DateTime(2021, 2, 15, 18, 39, 52, 572, DateTimeKind.Local).AddTicks(4785), 98, "Igor.Markiv4@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 513, null, 1, new DateTime(2021, 2, 14, 12, 8, 21, 161, DateTimeKind.Local).AddTicks(1371), 98, "Rayina_Andrukhovich@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1471, null, 0, new DateTime(2020, 8, 15, 17, 12, 6, 278, DateTimeKind.Local).AddTicks(8611), 5, "(099) 731-51-09" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 678, null, 1, new DateTime(2020, 3, 9, 8, 28, 3, 764, DateTimeKind.Local).AddTicks(6092), 103, "Lad.Lomova44@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 434, null, 0, new DateTime(2020, 11, 16, 16, 57, 28, 408, DateTimeKind.Local).AddTicks(3554), 91, "(095) 782-40-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1209, null, 0, new DateTime(2021, 1, 29, 5, 7, 39, 448, DateTimeKind.Local).AddTicks(4221), 86, "(063) 112-19-94" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 67, null, 0, new DateTime(2020, 3, 10, 9, 52, 42, 793, DateTimeKind.Local).AddTicks(2768), 86, "(095) 345-42-19" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 82, null, 0, new DateTime(2021, 1, 24, 7, 12, 11, 366, DateTimeKind.Local).AddTicks(4274), 86, "(096) 156-81-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 424, null, 0, new DateTime(2020, 11, 17, 1, 16, 34, 693, DateTimeKind.Local).AddTicks(2527), 86, "(094) 921-30-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 877, null, 1, new DateTime(2020, 7, 20, 5, 3, 22, 226, DateTimeKind.Local).AddTicks(9681), 86, "Lidiya.Yushik33@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1081, null, 1, new DateTime(2020, 7, 6, 16, 18, 27, 180, DateTimeKind.Local).AddTicks(9780), 86, "Vsevolod.Tretyak@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1162, null, 1, new DateTime(2020, 11, 8, 1, 51, 18, 125, DateTimeKind.Local).AddTicks(1168), 86, "Polina98@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 266, null, 0, new DateTime(2021, 2, 6, 2, 2, 36, 545, DateTimeKind.Local).AddTicks(1867), 105, "(073) 642-45-51" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 920, null, 0, new DateTime(2020, 11, 5, 13, 32, 4, 948, DateTimeKind.Local).AddTicks(6431), 2, "(066) 991-60-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1271, null, 0, new DateTime(2020, 4, 20, 20, 34, 46, 261, DateTimeKind.Local).AddTicks(2897), 104, "(093) 578-15-26" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1094, null, 1, new DateTime(2020, 10, 31, 7, 14, 28, 451, DateTimeKind.Local).AddTicks(4631), 104, "Diyana_Yalyuk21@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1013, null, 0, new DateTime(2020, 7, 28, 10, 27, 18, 864, DateTimeKind.Local).AddTicks(7267), 104, "(095) 279-33-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 19, null, 1, new DateTime(2021, 1, 22, 22, 24, 4, 968, DateTimeKind.Local).AddTicks(2427), 87, "Tur_Grineveckii@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 366, null, 1, new DateTime(2020, 3, 7, 22, 22, 53, 792, DateTimeKind.Local).AddTicks(1158), 87, "Kostyantin_Storchak37@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 458, null, 0, new DateTime(2020, 5, 25, 4, 27, 21, 960, DateTimeKind.Local).AddTicks(237), 87, "(092) 746-40-91" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 676, null, 1, new DateTime(2020, 8, 25, 21, 44, 55, 918, DateTimeKind.Local).AddTicks(5592), 87, "Arkhip_Levadovska@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 872, null, 0, new DateTime(2020, 8, 28, 5, 18, 13, 996, DateTimeKind.Local).AddTicks(8723), 87, "(096) 438-48-14" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1223, null, 1, new DateTime(2020, 8, 3, 7, 32, 5, 732, DateTimeKind.Local).AddTicks(9439), 87, "Oleg19@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 350, null, 0, new DateTime(2020, 12, 29, 0, 3, 25, 313, DateTimeKind.Local).AddTicks(2070), 3, "(066) 486-21-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 943, null, 1, new DateTime(2020, 6, 1, 16, 18, 35, 703, DateTimeKind.Local).AddTicks(8545), 104, "Olesya37@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 220, null, 0, new DateTime(2020, 3, 25, 23, 30, 11, 602, DateTimeKind.Local).AddTicks(4894), 104, "(073) 270-35-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1431, null, 1, new DateTime(2020, 10, 18, 18, 54, 41, 376, DateTimeKind.Local).AddTicks(8772), 87, "Yulian7@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 45, null, 0, new DateTime(2020, 5, 1, 3, 39, 44, 989, DateTimeKind.Local).AddTicks(3392), 14, "(063) 421-29-54" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 903, null, 0, new DateTime(2021, 1, 29, 10, 36, 36, 51, DateTimeKind.Local).AddTicks(6934), 14, "(099) 169-94-26" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1176, null, 0, new DateTime(2020, 3, 23, 7, 42, 30, 126, DateTimeKind.Local).AddTicks(2057), 14, "(092) 602-53-09" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1188, null, 1, new DateTime(2021, 2, 22, 22, 57, 16, 949, DateTimeKind.Local).AddTicks(8103), 14, "Bratislav.Lanova64@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1225, null, 0, new DateTime(2020, 10, 15, 0, 6, 48, 664, DateTimeKind.Local).AddTicks(9862), 15, "(099) 890-69-71" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1000, null, 1, new DateTime(2020, 10, 1, 12, 11, 31, 562, DateTimeKind.Local).AddTicks(3751), 15, "Fevroniya.Savickii46@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 994, null, 1, new DateTime(2020, 3, 5, 22, 53, 2, 378, DateTimeKind.Local).AddTicks(7128), 84, "Potishana.Demchishin6@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1001, null, 0, new DateTime(2021, 2, 16, 21, 1, 19, 504, DateTimeKind.Local).AddTicks(2), 84, "(099) 860-52-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1101, null, 1, new DateTime(2020, 9, 25, 12, 52, 11, 477, DateTimeKind.Local).AddTicks(4792), 84, "Zoryana.Lucka@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1124, null, 1, new DateTime(2020, 4, 22, 21, 18, 30, 726, DateTimeKind.Local).AddTicks(3386), 84, "Zoreslava24@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1363, null, 0, new DateTime(2020, 4, 8, 17, 37, 27, 73, DateTimeKind.Local).AddTicks(9204), 84, "(066) 873-02-31" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 211, null, 1, new DateTime(2020, 8, 9, 22, 3, 18, 845, DateTimeKind.Local).AddTicks(7887), 15, "Volodislav_Gnatishin@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 414, null, 0, new DateTime(2020, 5, 12, 10, 56, 29, 614, DateTimeKind.Local).AddTicks(186), 1, "(097) 068-28-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 634, null, 1, new DateTime(2020, 4, 27, 2, 33, 31, 491, DateTimeKind.Local).AddTicks(5125), 1, "Zakhar95@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 189, null, 0, new DateTime(2020, 10, 29, 12, 22, 42, 451, DateTimeKind.Local).AddTicks(7278), 104, "(092) 270-89-79" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 749, null, 1, new DateTime(2020, 6, 20, 8, 19, 9, 115, DateTimeKind.Local).AddTicks(5486), 1, "Bozhemir_Sushko86@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1166, null, 1, new DateTime(2020, 10, 26, 7, 31, 35, 780, DateTimeKind.Local).AddTicks(857), 105, "Rodoslav98@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1144, null, 1, new DateTime(2020, 9, 18, 5, 22, 35, 236, DateTimeKind.Local).AddTicks(7697), 105, "Slavuta16@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 50, null, 0, new DateTime(2020, 6, 11, 5, 50, 37, 484, DateTimeKind.Local).AddTicks(445), 85, "(099) 360-92-70" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 866, null, 1, new DateTime(2020, 7, 26, 0, 55, 54, 274, DateTimeKind.Local).AddTicks(1480), 105, "Stozhar_Fedorishin@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 328, null, 1, new DateTime(2020, 10, 16, 9, 11, 35, 830, DateTimeKind.Local).AddTicks(7841), 85, "Svyatopolk20@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 552, null, 0, new DateTime(2020, 3, 6, 13, 1, 53, 293, DateTimeKind.Local).AddTicks(4813), 85, "(098) 219-28-19" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1469, null, 1, new DateTime(2020, 3, 23, 23, 17, 41, 7, DateTimeKind.Local).AddTicks(1974), 14, "Yaroslav8@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 762, null, 0, new DateTime(2020, 5, 22, 11, 32, 12, 650, DateTimeKind.Local).AddTicks(3949), 105, "(095) 188-96-04" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 839, null, 0, new DateTime(2020, 6, 27, 16, 38, 51, 454, DateTimeKind.Local).AddTicks(6770), 1, "(073) 431-38-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1377, null, 0, new DateTime(2020, 6, 24, 16, 55, 28, 862, DateTimeKind.Local).AddTicks(7971), 85, "(044) 426-15-86" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1388, null, 0, new DateTime(2020, 9, 24, 11, 44, 54, 970, DateTimeKind.Local).AddTicks(4082), 105, "(091) 909-43-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1477, null, 1, new DateTime(2020, 4, 10, 22, 36, 59, 182, DateTimeKind.Local).AddTicks(3814), 87, "Vilena85@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 297, null, 1, new DateTime(2020, 11, 28, 15, 42, 8, 671, DateTimeKind.Local).AddTicks(6112), 96, "Bratomil.Pagutyak56@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 155, null, 1, new DateTime(2020, 4, 7, 15, 6, 59, 886, DateTimeKind.Local).AddTicks(808), 104, "Mikhailo12@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1010, null, 1, new DateTime(2020, 3, 5, 22, 31, 33, 732, DateTimeKind.Local).AddTicks(4257), 88, "Ilona_Chervonii@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 476, null, 0, new DateTime(2020, 10, 2, 13, 28, 47, 219, DateTimeKind.Local).AddTicks(5363), 88, "(094) 249-19-96" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1374, null, 1, new DateTime(2021, 2, 26, 6, 41, 51, 851, DateTimeKind.Local).AddTicks(6735), 3, "Marko_Voloshuk8@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 436, null, 0, new DateTime(2020, 11, 7, 7, 0, 44, 673, DateTimeKind.Local).AddTicks(4850), 88, "(091) 722-80-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 213, null, 0, new DateTime(2020, 12, 14, 8, 47, 11, 100, DateTimeKind.Local).AddTicks(892), 88, "(097) 622-84-75" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 61, null, 1, new DateTime(2021, 1, 1, 20, 1, 4, 683, DateTimeKind.Local).AddTicks(4112), 13, "Larisa.Maiboroda12@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 103, null, 0, new DateTime(2020, 12, 14, 13, 30, 14, 939, DateTimeKind.Local).AddTicks(6558), 13, "(095) 483-25-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1441, null, 0, new DateTime(2020, 6, 20, 19, 39, 21, 420, DateTimeKind.Local).AddTicks(3488), 103, "(091) 543-42-08" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1340, null, 0, new DateTime(2020, 12, 9, 21, 12, 36, 621, DateTimeKind.Local).AddTicks(7323), 3, "(073) 471-76-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 593, null, 1, new DateTime(2020, 4, 28, 0, 59, 27, 674, DateTimeKind.Local).AddTicks(277), 3, "Azarii.Tretyak@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 343, null, 1, new DateTime(2020, 11, 11, 6, 12, 11, 599, DateTimeKind.Local).AddTicks(9442), 13, "Mokrina_Kovalenko89@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1303, null, 1, new DateTime(2020, 11, 9, 16, 5, 48, 741, DateTimeKind.Local).AddTicks(6570), 13, "Sologub86@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 87, null, 0, new DateTime(2020, 6, 6, 20, 58, 0, 80, DateTimeKind.Local).AddTicks(9855), 104, "(092) 162-20-63" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 523, null, 1, new DateTime(2020, 6, 18, 11, 24, 51, 689, DateTimeKind.Local).AddTicks(231), 3, "Zlatomir.Malkovich87@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 461, null, 1, new DateTime(2021, 2, 28, 2, 28, 12, 644, DateTimeKind.Local).AddTicks(2437), 13, "Vilena.Balabukh54@ukr.net" });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 166, "#1f290a", new DateTime(2020, 12, 7, 1, 2, 30, 699, DateTimeKind.Local).AddTicks(9748), "I'll synthesize the solid state XML matrix, that should matrix the XML matrix!", 32 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 237, "#213907", new DateTime(2020, 10, 23, 5, 43, 10, 389, DateTimeKind.Local).AddTicks(5933), "If we transmit the system, we can get to the SCSI system through the wireless SCSI system!", 234 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 17, "#3f617c", new DateTime(2020, 3, 9, 13, 57, 6, 975, DateTimeKind.Local).AddTicks(9413), "indexing the protocol won't do anything, we need to reboot the cross-platform FTP protocol!", 231 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 219, "#055947", new DateTime(2020, 10, 28, 23, 46, 49, 111, DateTimeKind.Local).AddTicks(6871), "navigating the circuit won't do anything, we need to quantify the open-source AGP circuit!", 234 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 121, "#13260b", new DateTime(2020, 5, 14, 10, 37, 26, 927, DateTimeKind.Local).AddTicks(7631), "bypassing the panel won't do anything, we need to copy the cross-platform JSON panel!", 293 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 809, "#3b266a", new DateTime(2020, 11, 7, 0, 3, 48, 310, DateTimeKind.Local).AddTicks(9810), "Use the multi-byte AI hard drive, then you can generate the multi-byte hard drive!", 232 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 111, "#23522b", new DateTime(2020, 3, 3, 13, 40, 48, 156, DateTimeKind.Local).AddTicks(8728), "Use the auxiliary XML bus, then you can calculate the auxiliary bus!", 232 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 43, "#1d6012", new DateTime(2021, 2, 18, 12, 40, 46, 856, DateTimeKind.Local).AddTicks(4064), "quantifying the system won't do anything, we need to back up the online JBOD system!", 6 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 330, "#534b27", new DateTime(2021, 1, 20, 17, 33, 51, 823, DateTimeKind.Local).AddTicks(8207), "indexing the hard drive won't do anything, we need to navigate the primary FTP hard drive!", 6 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 408, "#513936", new DateTime(2020, 12, 13, 17, 2, 21, 558, DateTimeKind.Local).AddTicks(3716), "The XML alarm is down, navigate the solid state alarm so we can navigate the XML alarm!", 244 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 862, "#772360", new DateTime(2020, 11, 21, 11, 14, 28, 982, DateTimeKind.Local).AddTicks(8694), "compressing the driver won't do anything, we need to back up the virtual IB driver!", 243 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 799, "#213f49", new DateTime(2020, 10, 25, 8, 20, 53, 545, DateTimeKind.Local).AddTicks(7111), "You can't hack the matrix without copying the solid state XSS matrix!", 244 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 901, "#0b6c2f", new DateTime(2020, 11, 20, 18, 17, 42, 299, DateTimeKind.Local).AddTicks(823), "Use the optical AI monitor, then you can transmit the optical monitor!", 244 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 912, "#664076", new DateTime(2020, 5, 10, 21, 47, 0, 216, DateTimeKind.Local).AddTicks(729), "I'll reboot the optical AI matrix, that should matrix the AI matrix!", 244 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1039, "#62424a", new DateTime(2020, 8, 11, 0, 14, 15, 248, DateTimeKind.Local).AddTicks(5977), "The HDD panel is down, input the bluetooth panel so we can input the HDD panel!", 244 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1091, "#096d36", new DateTime(2020, 11, 7, 8, 21, 6, 911, DateTimeKind.Local).AddTicks(7910), "I'll override the solid state PNG application, that should application the PNG application!", 244 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1122, "#081445", new DateTime(2020, 4, 21, 18, 47, 24, 426, DateTimeKind.Local).AddTicks(9373), "You can't connect the sensor without programming the redundant SAS sensor!", 244 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 865, "#725f60", new DateTime(2020, 7, 11, 21, 23, 30, 459, DateTimeKind.Local).AddTicks(2531), "Use the auxiliary AGP protocol, then you can index the auxiliary protocol!", 6 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 914, "#230a00", new DateTime(2020, 6, 20, 6, 12, 8, 537, DateTimeKind.Local).AddTicks(9249), "If we bypass the matrix, we can get to the RAM matrix through the mobile RAM matrix!", 6 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 284, "#622d5c", new DateTime(2020, 3, 10, 0, 59, 46, 620, DateTimeKind.Local).AddTicks(8659), "You can't hack the feed without overriding the solid state ADP feed!", 292 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 602, "#4d1e5d", new DateTime(2020, 9, 27, 5, 59, 14, 348, DateTimeKind.Local).AddTicks(7146), "You can't bypass the protocol without connecting the haptic PCI protocol!", 6 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1134, "#22112c", new DateTime(2020, 9, 10, 19, 32, 1, 909, DateTimeKind.Local).AddTicks(8092), "The SMS driver is down, navigate the wireless driver so we can navigate the SMS driver!", 32 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 24, "#68297f", new DateTime(2020, 4, 14, 12, 24, 32, 158, DateTimeKind.Local).AddTicks(7092), "overriding the hard drive won't do anything, we need to copy the wireless GB hard drive!", 4 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 287, "#465b71", new DateTime(2020, 6, 8, 10, 11, 24, 654, DateTimeKind.Local).AddTicks(6109), "If we index the pixel, we can get to the TCP pixel through the mobile TCP pixel!", 293 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 188, "#0c5f3d", new DateTime(2021, 2, 12, 4, 18, 35, 56, DateTimeKind.Local).AddTicks(1789), "We need to parse the virtual SMTP system!", 1 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 434, "#0b0749", new DateTime(2020, 7, 28, 21, 43, 49, 814, DateTimeKind.Local).AddTicks(5883), "Try to bypass the SCSI matrix, maybe it will bypass the digital matrix!", 227 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 422, "#414219", new DateTime(2020, 7, 13, 20, 31, 29, 658, DateTimeKind.Local).AddTicks(6178), "If we hack the pixel, we can get to the SCSI pixel through the mobile SCSI pixel!", 33 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 74, "#5d4431", new DateTime(2020, 6, 3, 0, 22, 33, 420, DateTimeKind.Local).AddTicks(6744), "The RAM driver is down, quantify the digital driver so we can quantify the RAM driver!", 227 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 9, "#113408", new DateTime(2020, 4, 11, 12, 53, 59, 987, DateTimeKind.Local).AddTicks(3454), "Use the neural PCI protocol, then you can synthesize the neural protocol!", 241 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 352, "#663164", new DateTime(2020, 8, 27, 16, 49, 58, 533, DateTimeKind.Local).AddTicks(9484), "compressing the hard drive won't do anything, we need to index the wireless RSS hard drive!", 241 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 390, "#24125f", new DateTime(2020, 6, 20, 13, 42, 39, 564, DateTimeKind.Local).AddTicks(3885), "You can't connect the array without copying the auxiliary AI array!", 33 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 280, "#4b245f", new DateTime(2020, 6, 23, 4, 53, 20, 161, DateTimeKind.Local).AddTicks(2133), "If we generate the program, we can get to the HTTP program through the solid state HTTP program!", 33 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 39, "#607d6c", new DateTime(2020, 7, 12, 10, 42, 10, 105, DateTimeKind.Local).AddTicks(4854), "If we transmit the port, we can get to the THX port through the auxiliary THX port!", 33 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 10, "#0f2c1c", new DateTime(2020, 12, 17, 15, 1, 21, 269, DateTimeKind.Local).AddTicks(3833), "Try to transmit the SCSI array, maybe it will transmit the neural array!", 33 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 86, "#3b5714", new DateTime(2021, 2, 18, 22, 53, 23, 412, DateTimeKind.Local).AddTicks(8704), "The USB application is down, generate the multi-byte application so we can generate the USB application!", 231 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 14, "#3e1a7a", new DateTime(2020, 5, 20, 20, 40, 9, 940, DateTimeKind.Local).AddTicks(5629), "Use the 1080p COM matrix, then you can override the 1080p matrix!", 227 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 144, "#3a0070", new DateTime(2020, 10, 21, 23, 23, 27, 608, DateTimeKind.Local).AddTicks(2422), "We need to hack the open-source JSON protocol!", 296 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 238, "#0e701d", new DateTime(2020, 12, 18, 10, 27, 4, 54, DateTimeKind.Local).AddTicks(9320), "You can't index the transmitter without compressing the cross-platform RAM transmitter!", 242 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 717, "#7c662c", new DateTime(2020, 3, 21, 6, 46, 7, 805, DateTimeKind.Local).AddTicks(549), "Use the bluetooth PNG driver, then you can compress the bluetooth driver!", 242 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 928, "#280039", new DateTime(2021, 1, 12, 9, 57, 13, 255, DateTimeKind.Local).AddTicks(2668), "backing up the feed won't do anything, we need to navigate the multi-byte JSON feed!", 40 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 436, "#744e22", new DateTime(2020, 9, 23, 15, 22, 56, 651, DateTimeKind.Local).AddTicks(3188), "We need to quantify the mobile AGP firewall!", 296 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 917, "#581c6c", new DateTime(2021, 2, 23, 6, 17, 15, 785, DateTimeKind.Local).AddTicks(4800), "Try to reboot the SQL card, maybe it will reboot the 1080p card!", 242 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 946, "#726935", new DateTime(2020, 6, 24, 10, 19, 14, 75, DateTimeKind.Local).AddTicks(3669), "I'll back up the wireless SCSI firewall, that should firewall the SCSI firewall!", 242 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 692, "#4d5412", new DateTime(2020, 5, 29, 1, 1, 48, 798, DateTimeKind.Local).AddTicks(9534), "I'll back up the digital JBOD card, that should card the JBOD card!", 296 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1093, "#040120", new DateTime(2020, 7, 12, 12, 1, 13, 822, DateTimeKind.Local).AddTicks(9133), "If we quantify the driver, we can get to the SAS driver through the virtual SAS driver!", 3 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1052, "#560442", new DateTime(2021, 1, 31, 4, 4, 39, 877, DateTimeKind.Local).AddTicks(1345), "We need to hack the primary IB system!", 293 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 541, "#076877", new DateTime(2021, 1, 16, 7, 23, 41, 772, DateTimeKind.Local).AddTicks(6073), "I'll compress the open-source GB panel, that should panel the GB panel!", 40 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 147, "#003c78", new DateTime(2020, 10, 27, 8, 34, 5, 190, DateTimeKind.Local).AddTicks(6936), "calculating the feed won't do anything, we need to calculate the bluetooth HTTP feed!", 292 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 101, "#405f41", new DateTime(2021, 1, 7, 9, 2, 23, 454, DateTimeKind.Local).AddTicks(6146), "The SMS sensor is down, copy the wireless sensor so we can copy the SMS sensor!", 232 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1146, "#2b1b69", new DateTime(2020, 6, 3, 14, 31, 26, 606, DateTimeKind.Local).AddTicks(847), "We need to transmit the haptic AI circuit!", 3 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 20, "#2a141d", new DateTime(2020, 7, 28, 19, 11, 48, 341, DateTimeKind.Local).AddTicks(9887), "We need to index the multi-byte HDD pixel!", 291 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1014, "#6b362e", new DateTime(2020, 7, 24, 1, 28, 29, 665, DateTimeKind.Local).AddTicks(4935), "Try to index the AGP pixel, maybe it will index the cross-platform pixel!", 30 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 298, "#457c4e", new DateTime(2020, 5, 18, 13, 38, 2, 834, DateTimeKind.Local).AddTicks(3433), "You can't navigate the monitor without calculating the redundant AGP monitor!", 246 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 638, "#790c15", new DateTime(2020, 9, 8, 8, 50, 6, 952, DateTimeKind.Local).AddTicks(8649), "Try to bypass the FTP hard drive, maybe it will bypass the open-source hard drive!", 246 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 794, "#2b7370", new DateTime(2020, 7, 20, 9, 46, 48, 81, DateTimeKind.Local).AddTicks(1585), "I'll override the back-end THX transmitter, that should transmitter the THX transmitter!", 246 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1007, "#7c3546", new DateTime(2020, 3, 16, 11, 44, 26, 457, DateTimeKind.Local).AddTicks(9726), "I'll navigate the solid state USB microchip, that should microchip the USB microchip!", 38 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 745, "#30006d", new DateTime(2020, 5, 11, 20, 23, 41, 895, DateTimeKind.Local).AddTicks(9571), "Use the redundant SMS transmitter, then you can navigate the redundant transmitter!", 297 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1079, "#335377", new DateTime(2020, 10, 20, 23, 11, 45, 428, DateTimeKind.Local).AddTicks(8136), "Use the virtual HDD application, then you can synthesize the virtual application!", 297 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 921, "#7b350e", new DateTime(2020, 3, 21, 6, 39, 23, 701, DateTimeKind.Local).AddTicks(7780), "If we copy the card, we can get to the RAM card through the online RAM card!", 290 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 731, "#164b54", new DateTime(2020, 9, 30, 19, 35, 7, 940, DateTimeKind.Local).AddTicks(8891), "Use the virtual AGP matrix, then you can hack the virtual matrix!", 290 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 363, "#351164", new DateTime(2020, 11, 26, 3, 2, 46, 828, DateTimeKind.Local).AddTicks(596), "The IB program is down, index the solid state program so we can index the IB program!", 291 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 866, "#236b48", new DateTime(2020, 4, 8, 7, 24, 13, 597, DateTimeKind.Local).AddTicks(5124), "Try to navigate the EXE pixel, maybe it will navigate the redundant pixel!", 225 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 483, "#4d0b42", new DateTime(2020, 9, 3, 14, 50, 55, 750, DateTimeKind.Local).AddTicks(4864), "We need to program the bluetooth USB protocol!", 30 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 311, "#4e2879", new DateTime(2020, 9, 7, 16, 11, 27, 756, DateTimeKind.Local).AddTicks(9824), "You can't quantify the bandwidth without overriding the auxiliary JSON bandwidth!", 30 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 183, "#7a3774", new DateTime(2020, 8, 2, 11, 20, 49, 577, DateTimeKind.Local).AddTicks(8864), "Use the virtual EXE transmitter, then you can back up the virtual transmitter!", 30 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 370, "#0a5173", new DateTime(2020, 9, 9, 4, 47, 23, 877, DateTimeKind.Local).AddTicks(7812), "If we transmit the card, we can get to the JBOD card through the mobile JBOD card!", 225 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 221, "#260e1f", new DateTime(2020, 4, 24, 18, 10, 7, 991, DateTimeKind.Local).AddTicks(6895), "We need to navigate the optical SSL panel!", 38 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 58, "#120a24", new DateTime(2021, 1, 26, 13, 30, 23, 691, DateTimeKind.Local).AddTicks(7165), "Try to reboot the PNG capacitor, maybe it will reboot the redundant capacitor!", 290 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 29, "#4d761a", new DateTime(2020, 10, 29, 21, 13, 30, 340, DateTimeKind.Local).AddTicks(4130), "I'll connect the 1080p COM port, that should port the COM port!", 225 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 612, "#340a61", new DateTime(2020, 5, 8, 19, 30, 56, 853, DateTimeKind.Local).AddTicks(8519), "The XSS bus is down, compress the auxiliary bus so we can compress the XSS bus!", 300 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 728, "#1f183b", new DateTime(2020, 8, 10, 18, 54, 51, 463, DateTimeKind.Local).AddTicks(113), "We need to quantify the open-source SAS panel!", 300 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 424, "#125432", new DateTime(2020, 5, 2, 17, 34, 49, 951, DateTimeKind.Local).AddTicks(403), "If we index the protocol, we can get to the PCI protocol through the neural PCI protocol!", 38 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 826, "#572841", new DateTime(2021, 2, 17, 10, 12, 42, 523, DateTimeKind.Local).AddTicks(3432), "Use the neural HDD protocol, then you can navigate the neural protocol!", 246 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 45, "#52787f", new DateTime(2020, 5, 16, 16, 45, 52, 96, DateTimeKind.Local).AddTicks(1545), "programming the matrix won't do anything, we need to parse the cross-platform RAM matrix!", 292 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 508, "#68794a", new DateTime(2020, 12, 22, 14, 57, 31, 726, DateTimeKind.Local).AddTicks(5347), "generating the sensor won't do anything, we need to navigate the optical SQL sensor!", 291 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 722, "#450023", new DateTime(2021, 1, 28, 10, 30, 34, 223, DateTimeKind.Local).AddTicks(6595), "Use the 1080p AGP application, then you can parse the 1080p application!", 245 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 758, "#4e335a", new DateTime(2020, 6, 30, 17, 43, 43, 541, DateTimeKind.Local).AddTicks(3316), "The IB microchip is down, override the primary microchip so we can override the IB microchip!", 3 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 742, "#6b7b54", new DateTime(2021, 2, 4, 23, 58, 35, 272, DateTimeKind.Local).AddTicks(8845), "You can't reboot the application without parsing the back-end HTTP application!", 31 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 155, "#3c3a20", new DateTime(2021, 1, 12, 19, 24, 50, 716, DateTimeKind.Local).AddTicks(885), "compressing the protocol won't do anything, we need to quantify the solid state USB protocol!", 231 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 574, "#3a7008", new DateTime(2020, 10, 20, 10, 29, 23, 647, DateTimeKind.Local).AddTicks(8386), "Use the multi-byte SSL capacitor, then you can quantify the multi-byte capacitor!", 31 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 291, "#2d1468", new DateTime(2021, 1, 24, 8, 38, 46, 486, DateTimeKind.Local).AddTicks(6303), "copying the program won't do anything, we need to hack the auxiliary THX program!", 31 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 463, "#6c1a29", new DateTime(2020, 4, 8, 14, 3, 50, 345, DateTimeKind.Local).AddTicks(3113), "generating the feed won't do anything, we need to reboot the back-end JSON feed!", 231 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 555, "#3b3954", new DateTime(2020, 9, 7, 3, 5, 11, 833, DateTimeKind.Local).AddTicks(9568), "You can't override the firewall without bypassing the primary IB firewall!", 231 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 741, "#7f6a7a", new DateTime(2020, 11, 22, 1, 6, 53, 105, DateTimeKind.Local).AddTicks(6104), "I'll synthesize the optical XSS port, that should port the XSS port!", 226 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 269, "#39191a", new DateTime(2020, 5, 24, 21, 38, 21, 24, DateTimeKind.Local).AddTicks(2026), "I'll copy the bluetooth COM bandwidth, that should bandwidth the COM bandwidth!", 226 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 257, "#0e0126", new DateTime(2020, 7, 13, 10, 29, 8, 377, DateTimeKind.Local).AddTicks(4885), "If we navigate the capacitor, we can get to the RSS capacitor through the multi-byte RSS capacitor!", 300 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 887, "#43203a", new DateTime(2020, 10, 4, 20, 2, 57, 954, DateTimeKind.Local).AddTicks(7098), "I'll bypass the redundant EXE circuit, that should circuit the EXE circuit!", 291 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 580, "#802326", new DateTime(2021, 2, 28, 13, 46, 23, 795, DateTimeKind.Local).AddTicks(1107), "We need to back up the primary SDD transmitter!", 3 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 225, "#344812", new DateTime(2020, 12, 8, 21, 56, 38, 403, DateTimeKind.Local).AddTicks(7816), "You can't navigate the bus without indexing the neural TCP bus!", 245 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 543, "#407256", new DateTime(2020, 7, 30, 6, 14, 23, 41, DateTimeKind.Local).AddTicks(8047), "The COM panel is down, navigate the 1080p panel so we can navigate the COM panel!", 245 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 613, "#615440", new DateTime(2020, 7, 13, 5, 51, 50, 710, DateTimeKind.Local).AddTicks(9502), "Try to connect the THX firewall, maybe it will connect the multi-byte firewall!", 245 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 340, "#094a18", new DateTime(2020, 9, 18, 22, 35, 0, 294, DateTimeKind.Local).AddTicks(9046), "I'll transmit the primary XML application, that should application the XML application!", 7 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1149, "#7f503d", new DateTime(2020, 10, 13, 0, 9, 54, 192, DateTimeKind.Local).AddTicks(4746), "The SCSI port is down, calculate the mobile port so we can calculate the SCSI port!", 7 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1100, "#247b4b", new DateTime(2020, 3, 26, 19, 52, 32, 378, DateTimeKind.Local).AddTicks(1338), "I'll transmit the neural SMTP driver, that should driver the SMTP driver!", 291 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1064, "#0b385d", new DateTime(2020, 7, 15, 10, 34, 18, 477, DateTimeKind.Local).AddTicks(2240), "hacking the microchip won't do anything, we need to bypass the auxiliary AI microchip!", 291 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 948, "#37714e", new DateTime(2020, 7, 14, 1, 59, 2, 33, DateTimeKind.Local).AddTicks(1623), "The HTTP circuit is down, navigate the wireless circuit so we can navigate the HTTP circuit!", 291 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1020, "#657b6c", new DateTime(2020, 12, 10, 0, 55, 21, 466, DateTimeKind.Local).AddTicks(5751), "We need to hack the haptic SDD capacitor!", 225 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 860, "#725703", new DateTime(2020, 9, 11, 19, 47, 54, 312, DateTimeKind.Local).AddTicks(3427), "bypassing the array won't do anything, we need to connect the optical HTTP array!", 230 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 178, "#58530a", new DateTime(2020, 12, 15, 11, 18, 34, 187, DateTimeKind.Local).AddTicks(9270), "We need to back up the multi-byte RSS hard drive!", 3 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 905, "#160d23", new DateTime(2020, 9, 19, 3, 52, 20, 418, DateTimeKind.Local).AddTicks(7294), "You can't index the hard drive without indexing the open-source SMTP hard drive!", 36 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 136, "#3f7f64", new DateTime(2021, 1, 13, 0, 44, 48, 818, DateTimeKind.Local).AddTicks(8561), "calculating the alarm won't do anything, we need to reboot the mobile SAS alarm!", 233 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 346, "#593a73", new DateTime(2020, 7, 24, 22, 32, 52, 991, DateTimeKind.Local).AddTicks(3451), "I'll navigate the auxiliary SAS card, that should card the SAS card!", 233 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 631, "#612f14", new DateTime(2020, 3, 20, 15, 8, 57, 653, DateTimeKind.Local).AddTicks(773), "We need to synthesize the haptic XSS bandwidth!", 295 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 554, "#27373a", new DateTime(2021, 2, 26, 5, 18, 19, 546, DateTimeKind.Local).AddTicks(2528), "copying the panel won't do anything, we need to transmit the multi-byte COM panel!", 230 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 514, "#075a2a", new DateTime(2020, 10, 30, 15, 5, 57, 181, DateTimeKind.Local).AddTicks(3162), "If we generate the monitor, we can get to the PCI monitor through the optical PCI monitor!", 230 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 560, "#467c24", new DateTime(2020, 11, 14, 11, 38, 35, 241, DateTimeKind.Local).AddTicks(113), "Use the back-end JBOD program, then you can quantify the back-end program!", 35 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 387, "#061229", new DateTime(2020, 12, 31, 11, 56, 2, 866, DateTimeKind.Local).AddTicks(8986), "The HDD bandwidth is down, index the digital bandwidth so we can index the HDD bandwidth!", 230 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 247, "#681513", new DateTime(2020, 8, 25, 12, 45, 54, 728, DateTimeKind.Local).AddTicks(7761), "You can't calculate the matrix without generating the primary USB matrix!", 230 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 118, "#746826", new DateTime(2020, 4, 16, 17, 1, 41, 21, DateTimeKind.Local).AddTicks(4184), "hacking the sensor won't do anything, we need to program the solid state AI sensor!", 230 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1040, "#400949", new DateTime(2020, 11, 22, 20, 56, 48, 350, DateTimeKind.Local).AddTicks(1536), "Try to connect the SCSI transmitter, maybe it will connect the 1080p transmitter!", 2 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 40, "#0d0675", new DateTime(2020, 7, 10, 20, 8, 41, 380, DateTimeKind.Local).AddTicks(3590), "Use the primary SSL circuit, then you can bypass the primary circuit!", 39 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1172, "#452d73", new DateTime(2020, 5, 6, 5, 35, 27, 373, DateTimeKind.Local).AddTicks(7342), "synthesizing the capacitor won't do anything, we need to reboot the optical THX capacitor!", 234 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 686, "#5f4234", new DateTime(2020, 11, 27, 9, 14, 43, 843, DateTimeKind.Local).AddTicks(5450), "The SQL system is down, index the neural system so we can index the SQL system!", 35 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1136, "#4d6152", new DateTime(2020, 9, 11, 7, 22, 7, 69, DateTimeKind.Local).AddTicks(2127), "backing up the card won't do anything, we need to generate the redundant JBOD card!", 229 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 275, "#103968", new DateTime(2020, 4, 30, 16, 2, 38, 452, DateTimeKind.Local).AddTicks(2536), "Use the wireless SSL microchip, then you can generate the wireless microchip!", 295 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 66, "#36031d", new DateTime(2020, 7, 20, 12, 58, 38, 929, DateTimeKind.Local).AddTicks(4066), "The IB protocol is down, compress the solid state protocol so we can compress the IB protocol!", 237 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 83, "#176846", new DateTime(2020, 7, 23, 11, 5, 9, 766, DateTimeKind.Local).AddTicks(6373), "I'll program the haptic XML matrix, that should matrix the XML matrix!", 237 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 320, "#0e3a5f", new DateTime(2020, 3, 19, 0, 0, 29, 251, DateTimeKind.Local).AddTicks(3988), "synthesizing the protocol won't do anything, we need to input the open-source ADP protocol!", 237 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 376, "#57521d", new DateTime(2020, 7, 16, 11, 58, 8, 76, DateTimeKind.Local).AddTicks(4149), "I'll calculate the 1080p SAS pixel, that should pixel the SAS pixel!", 237 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 537, "#450e29", new DateTime(2020, 3, 24, 3, 43, 47, 342, DateTimeKind.Local).AddTicks(2729), "copying the capacitor won't do anything, we need to index the auxiliary EXE capacitor!", 237 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1118, "#68794d", new DateTime(2020, 8, 8, 10, 20, 5, 476, DateTimeKind.Local).AddTicks(4110), "Try to generate the RAM transmitter, maybe it will generate the online transmitter!", 237 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 99, "#4d7f7c", new DateTime(2020, 12, 1, 20, 37, 15, 672, DateTimeKind.Local).AddTicks(8189), "We need to program the online IB panel!", 295 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 643, "#615621", new DateTime(2020, 3, 13, 9, 39, 55, 877, DateTimeKind.Local).AddTicks(558), "Try to connect the THX system, maybe it will connect the optical system!", 34 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 544, "#37500f", new DateTime(2020, 6, 5, 7, 2, 9, 722, DateTimeKind.Local).AddTicks(9043), "The SCSI microchip is down, synthesize the open-source microchip so we can synthesize the SCSI microchip!", 34 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 7, "#32304b", new DateTime(2020, 9, 5, 17, 30, 51, 962, DateTimeKind.Local).AddTicks(2549), "You can't parse the monitor without backing up the virtual EXE monitor!", 237 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 378, "#43293f", new DateTime(2020, 4, 6, 12, 33, 17, 281, DateTimeKind.Local).AddTicks(1184), "We need to transmit the neural FTP hard drive!", 238 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 553, "#681823", new DateTime(2020, 10, 6, 22, 8, 59, 165, DateTimeKind.Local).AddTicks(7011), "Try to transmit the HTTP program, maybe it will transmit the online program!", 36 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 709, "#437215", new DateTime(2020, 5, 8, 9, 27, 33, 45, DateTimeKind.Local).AddTicks(1373), "Try to back up the PNG circuit, maybe it will back up the haptic circuit!", 35 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 56, "#54660f", new DateTime(2020, 6, 12, 20, 21, 2, 780, DateTimeKind.Local).AddTicks(2027), "The PNG protocol is down, bypass the digital protocol so we can bypass the PNG protocol!", 4 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 470, "#417955", new DateTime(2020, 6, 11, 11, 45, 30, 405, DateTimeKind.Local).AddTicks(9325), "If we input the feed, we can get to the XML feed through the cross-platform XML feed!", 4 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 223, "#261177", new DateTime(2020, 12, 11, 15, 20, 51, 12, DateTimeKind.Local).AddTicks(5094), "quantifying the transmitter won't do anything, we need to connect the auxiliary IB transmitter!", 235 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 288, "#7b7718", new DateTime(2020, 9, 19, 10, 26, 19, 466, DateTimeKind.Local).AddTicks(8617), "If we override the protocol, we can get to the FTP protocol through the digital FTP protocol!", 235 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 663, "#52394f", new DateTime(2020, 12, 20, 5, 25, 58, 958, DateTimeKind.Local).AddTicks(2412), "If we index the bandwidth, we can get to the JBOD bandwidth through the virtual JBOD bandwidth!", 235 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1025, "#5c2201", new DateTime(2020, 8, 28, 1, 18, 22, 841, DateTimeKind.Local).AddTicks(6491), "I'll back up the digital EXE panel, that should panel the EXE panel!", 235 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1161, "#435260", new DateTime(2020, 12, 1, 20, 15, 47, 458, DateTimeKind.Local).AddTicks(4277), "If we calculate the monitor, we can get to the CSS monitor through the auxiliary CSS monitor!", 35 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 805, "#75376a", new DateTime(2020, 10, 10, 10, 25, 27, 562, DateTimeKind.Local).AddTicks(9402), "Use the optical SMS firewall, then you can transmit the optical firewall!", 230 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 769, "#0c6b3d", new DateTime(2020, 5, 29, 8, 44, 20, 88, DateTimeKind.Local).AddTicks(6352), "The PCI hard drive is down, quantify the multi-byte hard drive so we can quantify the PCI hard drive!", 230 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 668, "#23627f", new DateTime(2021, 1, 9, 20, 0, 44, 897, DateTimeKind.Local).AddTicks(9110), "Use the cross-platform GB firewall, then you can parse the cross-platform firewall!", 230 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 303, "#185c5f", new DateTime(2020, 10, 15, 15, 27, 52, 489, DateTimeKind.Local).AddTicks(428), "We need to back up the cross-platform ADP sensor!", 36 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 197, "#64720e", new DateTime(2020, 12, 7, 12, 40, 55, 219, DateTimeKind.Local).AddTicks(138), "You can't reboot the alarm without generating the neural IB alarm!", 247 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 810, "#580321", new DateTime(2021, 1, 11, 0, 38, 29, 546, DateTimeKind.Local).AddTicks(1279), "synthesizing the matrix won't do anything, we need to index the bluetooth PCI matrix!", 35 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 750, "#2a1e41", new DateTime(2020, 11, 6, 13, 48, 27, 2, DateTimeKind.Local).AddTicks(3571), "We need to hack the back-end SDD driver!", 35 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 172, "#650746", new DateTime(2021, 2, 19, 11, 16, 12, 865, DateTimeKind.Local).AddTicks(7030), "You can't synthesize the driver without parsing the redundant JBOD driver!", 236 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 212, "#0b3430", new DateTime(2020, 6, 23, 16, 22, 25, 515, DateTimeKind.Local).AddTicks(3217), "I'll generate the open-source XSS matrix, that should matrix the XSS matrix!", 236 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 569, "#307412", new DateTime(2020, 3, 26, 5, 18, 5, 866, DateTimeKind.Local).AddTicks(4286), "Use the cross-platform FTP port, then you can synthesize the cross-platform port!", 4 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 645, "#20606e", new DateTime(2020, 8, 17, 22, 2, 47, 516, DateTimeKind.Local).AddTicks(6812), "The RAM panel is down, copy the neural panel so we can copy the RAM panel!", 4 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 886, "#7c4037", new DateTime(2020, 12, 26, 3, 44, 41, 18, DateTimeKind.Local).AddTicks(5369), "Try to index the JSON transmitter, maybe it will index the 1080p transmitter!", 295 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 665, "#575002", new DateTime(2020, 8, 14, 5, 30, 9, 730, DateTimeKind.Local).AddTicks(6215), "generating the sensor won't do anything, we need to navigate the bluetooth XSS sensor!", 295 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 278, "#180408", new DateTime(2020, 8, 3, 3, 7, 6, 529, DateTimeKind.Local).AddTicks(4251), "Try to reboot the HDD hard drive, maybe it will reboot the open-source hard drive!", 236 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 870, "#35257b", new DateTime(2020, 4, 11, 8, 26, 28, 214, DateTimeKind.Local).AddTicks(9388), "I'll parse the back-end SAS bandwidth, that should bandwidth the SAS bandwidth!", 236 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1076, "#6b7043", new DateTime(2020, 3, 23, 21, 59, 21, 658, DateTimeKind.Local).AddTicks(2304), "The HDD card is down, compress the neural card so we can compress the HDD card!", 35 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1175, "#2f1e21", new DateTime(2020, 3, 12, 2, 25, 51, 745, DateTimeKind.Local).AddTicks(4452), "You can't program the monitor without navigating the haptic SDD monitor!", 234 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 44, "#1d6d6d", new DateTime(2020, 8, 27, 21, 5, 47, 936, DateTimeKind.Local).AddTicks(858), "Use the bluetooth ADP application, then you can reboot the bluetooth application!", 295 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 938, "#6e551d", new DateTime(2020, 6, 18, 9, 3, 57, 381, DateTimeKind.Local).AddTicks(5308), "We need to override the auxiliary SCSI driver!", 229 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1053, "#357358", new DateTime(2020, 3, 15, 18, 22, 0, 218, DateTimeKind.Local).AddTicks(3048), "bypassing the sensor won't do anything, we need to quantify the solid state CSS sensor!", 298 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 873, "#4d0d05", new DateTime(2021, 3, 3, 9, 8, 56, 134, DateTimeKind.Local).AddTicks(6704), "The HTTP hard drive is down, program the online hard drive so we can program the HTTP hard drive!", 2 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 827, "#055109", new DateTime(2021, 1, 2, 4, 11, 59, 670, DateTimeKind.Local).AddTicks(7840), "The SMTP transmitter is down, quantify the primary transmitter so we can quantify the SMTP transmitter!", 294 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 697, "#084e66", new DateTime(2020, 5, 6, 10, 28, 33, 314, DateTimeKind.Local).AddTicks(8572), "If we index the microchip, we can get to the PCI microchip through the multi-byte PCI microchip!", 294 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 206, "#0c1067", new DateTime(2020, 7, 13, 6, 27, 39, 651, DateTimeKind.Local).AddTicks(9005), "If we parse the interface, we can get to the PNG interface through the primary PNG interface!", 2 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 428, "#512218", new DateTime(2020, 12, 14, 18, 39, 43, 629, DateTimeKind.Local).AddTicks(1209), "If we reboot the matrix, we can get to the SMS matrix through the redundant SMS matrix!", 239 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 67, "#576f35", new DateTime(2020, 3, 25, 2, 4, 23, 328, DateTimeKind.Local).AddTicks(5585), "I'll quantify the back-end AGP monitor, that should monitor the AGP monitor!", 2 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 908, "#7a7512", new DateTime(2020, 4, 2, 19, 22, 26, 684, DateTimeKind.Local).AddTicks(7772), "bypassing the bandwidth won't do anything, we need to override the bluetooth RAM bandwidth!", 38 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 132, "#251f53", new DateTime(2021, 1, 21, 15, 46, 10, 603, DateTimeKind.Local).AddTicks(7096), "The SCSI sensor is down, override the digital sensor so we can override the SCSI sensor!", 40 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 465, "#2d1776", new DateTime(2021, 1, 9, 14, 18, 46, 912, DateTimeKind.Local).AddTicks(2950), "I'll bypass the wireless COM program, that should program the COM program!", 1 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 759, "#632658", new DateTime(2020, 10, 8, 22, 14, 5, 811, DateTimeKind.Local).AddTicks(278), "If we hack the panel, we can get to the COM panel through the solid state COM panel!", 298 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 128, "#114b7d", new DateTime(2020, 7, 10, 11, 25, 19, 333, DateTimeKind.Local).AddTicks(1093), "The GB array is down, back up the bluetooth array so we can back up the GB array!", 240 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 315, "#413927", new DateTime(2020, 12, 11, 7, 9, 50, 334, DateTimeKind.Local).AddTicks(7870), "The SAS pixel is down, index the optical pixel so we can index the SAS pixel!", 1 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 160, "#467a3a", new DateTime(2020, 8, 28, 0, 43, 6, 53, DateTimeKind.Local).AddTicks(7521), "overriding the monitor won't do anything, we need to generate the back-end USB monitor!", 240 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 480, "#206e3c", new DateTime(2020, 10, 17, 14, 2, 10, 758, DateTimeKind.Local).AddTicks(5707), "We need to back up the auxiliary IB protocol!", 240 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 92, "#7d743d", new DateTime(2020, 9, 22, 21, 15, 25, 708, DateTimeKind.Local).AddTicks(6392), "If we navigate the alarm, we can get to the SMS alarm through the wireless SMS alarm!", 294 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1133, "#4f3911", new DateTime(2021, 1, 6, 23, 58, 54, 4, DateTimeKind.Local).AddTicks(3715), "If we navigate the driver, we can get to the SSL driver through the virtual SSL driver!", 5 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 55, "#081961", new DateTime(2020, 7, 25, 14, 28, 33, 202, DateTimeKind.Local).AddTicks(457), "Try to generate the ADP system, maybe it will generate the solid state system!", 36 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 488, "#142d6b", new DateTime(2020, 9, 16, 11, 16, 55, 912, DateTimeKind.Local).AddTicks(6454), "You can't input the panel without transmitting the open-source SCSI panel!", 233 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 787, "#7f2760", new DateTime(2020, 6, 23, 19, 45, 25, 233, DateTimeKind.Local).AddTicks(950), "We need to input the redundant PCI card!", 240 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 933, "#577565", new DateTime(2020, 9, 19, 23, 30, 30, 321, DateTimeKind.Local).AddTicks(9615), "Use the online SDD alarm, then you can parse the online alarm!", 240 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 628, "#761b7d", new DateTime(2021, 2, 3, 4, 53, 12, 919, DateTimeKind.Local).AddTicks(8192), "You can't quantify the capacitor without quantifying the bluetooth USB capacitor!", 33 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 497, "#527a59", new DateTime(2020, 5, 16, 20, 18, 36, 720, DateTimeKind.Local).AddTicks(5666), "I'll quantify the online JSON firewall, that should firewall the JSON firewall!", 233 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 395, "#1e800a", new DateTime(2020, 4, 19, 22, 16, 11, 816, DateTimeKind.Local).AddTicks(8991), "The JBOD monitor is down, reboot the solid state monitor so we can reboot the JBOD monitor!", 238 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 974, "#602947", new DateTime(2020, 6, 21, 5, 6, 39, 0, DateTimeKind.Local).AddTicks(2668), "calculating the port won't do anything, we need to hack the mobile COM port!", 294 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 477, "#7b1205", new DateTime(2020, 4, 22, 11, 57, 15, 511, DateTimeKind.Local).AddTicks(5783), "The EXE interface is down, input the 1080p interface so we can input the EXE interface!", 5 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 816, "#336016", new DateTime(2020, 12, 21, 20, 11, 23, 744, DateTimeKind.Local).AddTicks(1198), "You can't program the interface without compressing the redundant SMTP interface!", 229 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 506, "#044937", new DateTime(2020, 10, 21, 17, 3, 50, 720, DateTimeKind.Local).AddTicks(5835), "programming the pixel won't do anything, we need to calculate the 1080p SQL pixel!", 238 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 875, "#1b5d22", new DateTime(2020, 9, 9, 6, 37, 8, 118, DateTimeKind.Local).AddTicks(9020), "Try to quantify the SMTP circuit, maybe it will quantify the virtual circuit!", 238 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 812, "#700c2c", new DateTime(2020, 4, 15, 23, 40, 23, 320, DateTimeKind.Local).AddTicks(8293), "If we synthesize the card, we can get to the THX card through the multi-byte THX card!", 234 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 913, "#2f0c22", new DateTime(2020, 8, 22, 3, 3, 9, 662, DateTimeKind.Local).AddTicks(7425), "I'll program the bluetooth SMTP monitor, that should monitor the SMTP monitor!", 238 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 915, "#77096b", new DateTime(2020, 9, 16, 12, 22, 25, 44, DateTimeKind.Local).AddTicks(2319), "The HTTP firewall is down, calculate the neural firewall so we can calculate the HTTP firewall!", 4 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 517, "#7f2c80", new DateTime(2020, 7, 5, 4, 18, 21, 734, DateTimeKind.Local).AddTicks(6134), "We need to back up the digital HTTP card!", 39 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1107, "#210965", new DateTime(2020, 5, 17, 14, 53, 26, 65, DateTimeKind.Local).AddTicks(9714), "I'll compress the open-source EXE array, that should array the EXE array!", 238 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 781, "#046508", new DateTime(2020, 5, 27, 21, 4, 3, 990, DateTimeKind.Local).AddTicks(1702), "We need to override the back-end IB feed!", 39 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 982, "#070f5f", new DateTime(2020, 6, 1, 12, 49, 7, 687, DateTimeKind.Local).AddTicks(6757), "We need to connect the haptic JBOD bus!", 2 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 193, "#157e6b", new DateTime(2020, 12, 25, 14, 8, 9, 821, DateTimeKind.Local).AddTicks(6202), "I'll generate the mobile SAS pixel, that should pixel the SAS pixel!", 228 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 874, "#59780b", new DateTime(2020, 8, 26, 10, 36, 59, 243, DateTimeKind.Local).AddTicks(7427), "quantifying the port won't do anything, we need to bypass the optical PCI port!", 2 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1198, "#7f5e40", new DateTime(2020, 7, 19, 15, 41, 2, 67, DateTimeKind.Local).AddTicks(8705), "Use the open-source XML firewall, then you can copy the open-source firewall!", 233 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 568, "#63282b", new DateTime(2020, 5, 28, 22, 59, 50, 907, DateTimeKind.Local).AddTicks(3153), "Use the virtual TCP firewall, then you can navigate the virtual firewall!", 233 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 137, "#705206", new DateTime(2020, 5, 9, 12, 35, 11, 606, DateTimeKind.Local).AddTicks(7231), "We need to quantify the online RSS alarm!", 298 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 290, "#100547", new DateTime(2020, 11, 7, 12, 5, 39, 747, DateTimeKind.Local).AddTicks(396), "Use the cross-platform SCSI feed, then you can bypass the cross-platform feed!", 298 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 181, "#4f620c", new DateTime(2020, 4, 2, 6, 5, 59, 342, DateTimeKind.Local).AddTicks(3270), "Try to compress the RSS bandwidth, maybe it will compress the open-source bandwidth!", 34 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 341, "#272546", new DateTime(2020, 8, 8, 3, 26, 33, 433, DateTimeKind.Local).AddTicks(7517), "We need to back up the bluetooth CSS pixel!", 228 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 815, "#021315", new DateTime(2020, 7, 9, 22, 16, 56, 577, DateTimeKind.Local).AddTicks(5303), "I'll hack the auxiliary FTP driver, that should driver the FTP driver!", 231 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 208, "#5a182e", new DateTime(2020, 6, 6, 8, 8, 57, 432, DateTimeKind.Local).AddTicks(4274), "If we program the interface, we can get to the TCP interface through the cross-platform TCP interface!", 228 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 199, "#063962", new DateTime(2020, 5, 13, 0, 26, 29, 582, DateTimeKind.Local).AddTicks(1795), "I'll compress the 1080p TCP application, that should application the TCP application!", 5 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 412, "#2c220a", new DateTime(2020, 7, 13, 14, 46, 7, 654, DateTimeKind.Local).AddTicks(663), "Use the cross-platform SMTP firewall, then you can override the cross-platform firewall!", 5 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 990, "#353e5d", new DateTime(2020, 12, 18, 19, 49, 8, 774, DateTimeKind.Local).AddTicks(9390), "Use the cross-platform HTTP transmitter, then you can back up the cross-platform transmitter!", 38 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 852, "#602e14", new DateTime(2020, 7, 7, 3, 0, 49, 752, DateTimeKind.Local).AddTicks(9500), "Try to hack the USB panel, maybe it will hack the redundant panel!", 38 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 167, "#55794f", new DateTime(2020, 3, 23, 22, 55, 22, 13, DateTimeKind.Local).AddTicks(7746), "We need to transmit the virtual JSON port!", 252 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 444, "#46276d", new DateTime(2020, 6, 5, 8, 29, 34, 709, DateTimeKind.Local).AddTicks(4304), "I'll compress the redundant HDD microchip, that should microchip the HDD microchip!", 247 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 126, "#38287e", new DateTime(2020, 6, 14, 13, 40, 29, 424, DateTimeKind.Local).AddTicks(1747), "If we calculate the program, we can get to the THX program through the 1080p THX program!", 20 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 592, "#6e4a3a", new DateTime(2021, 1, 11, 21, 28, 18, 700, DateTimeKind.Local).AddTicks(2294), "If we hack the panel, we can get to the XSS panel through the wireless XSS panel!", 12 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 539, "#545877", new DateTime(2020, 12, 2, 3, 38, 34, 787, DateTimeKind.Local).AddTicks(7146), "navigating the hard drive won't do anything, we need to program the redundant SCSI hard drive!", 12 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1184, "#295311", new DateTime(2020, 3, 21, 5, 43, 17, 453, DateTimeKind.Local).AddTicks(8145), "Use the cross-platform AI capacitor, then you can compress the cross-platform capacitor!", 266 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1065, "#6a191b", new DateTime(2020, 7, 22, 17, 29, 49, 113, DateTimeKind.Local).AddTicks(9323), "Use the redundant SMTP port, then you can compress the redundant port!", 266 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1063, "#553379", new DateTime(2020, 12, 29, 21, 34, 18, 207, DateTimeKind.Local).AddTicks(7664), "You can't reboot the protocol without connecting the wireless TCP protocol!", 266 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 359, "#551829", new DateTime(2020, 6, 5, 18, 44, 35, 825, DateTimeKind.Local).AddTicks(2360), "You can't calculate the port without backing up the wireless SMTP port!", 267 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 819, "#7c7526", new DateTime(2020, 9, 25, 16, 7, 15, 438, DateTimeKind.Local).AddTicks(5072), "You can't generate the monitor without bypassing the multi-byte EXE monitor!", 266 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 321, "#19475a", new DateTime(2020, 6, 18, 16, 39, 10, 449, DateTimeKind.Local).AddTicks(3710), "Use the auxiliary GB system, then you can navigate the auxiliary system!", 266 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 72, "#175843", new DateTime(2020, 10, 5, 15, 34, 11, 515, DateTimeKind.Local).AddTicks(9568), "If we transmit the microchip, we can get to the JSON microchip through the auxiliary JSON microchip!", 266 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 392, "#125528", new DateTime(2020, 6, 3, 2, 27, 18, 723, DateTimeKind.Local).AddTicks(5767), "You can't back up the firewall without quantifying the mobile SDD firewall!", 12 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 309, "#3f5468", new DateTime(2020, 5, 25, 20, 16, 44, 296, DateTimeKind.Local).AddTicks(7482), "I'll navigate the primary COM bus, that should bus the COM bus!", 12 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 90, "#31141c", new DateTime(2020, 8, 20, 21, 47, 14, 194, DateTimeKind.Local).AddTicks(5952), "The RSS system is down, calculate the neural system so we can calculate the RSS system!", 282 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 399, "#130d45", new DateTime(2020, 10, 4, 4, 58, 43, 621, DateTimeKind.Local).AddTicks(1984), "I'll quantify the auxiliary HDD circuit, that should circuit the HDD circuit!", 282 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 625, "#0d2a77", new DateTime(2020, 8, 11, 21, 20, 55, 661, DateTimeKind.Local).AddTicks(2288), "Try to synthesize the RAM card, maybe it will synthesize the optical card!", 266 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 693, "#732a79", new DateTime(2021, 1, 20, 9, 17, 24, 859, DateTimeKind.Local).AddTicks(4883), "I'll copy the auxiliary SMS feed, that should feed the SMS feed!", 282 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 495, "#0c7e7f", new DateTime(2021, 1, 9, 1, 42, 31, 439, DateTimeKind.Local).AddTicks(3715), "We need to connect the auxiliary JSON program!", 267 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 513, "#031351", new DateTime(2020, 3, 25, 6, 24, 40, 694, DateTimeKind.Local).AddTicks(521), "We need to compress the online HDD array!", 281 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 182, "#606730", new DateTime(2021, 1, 28, 10, 24, 13, 759, DateTimeKind.Local).AddTicks(1236), "Try to generate the XML bus, maybe it will generate the redundant bus!", 19 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 332, "#0f100b", new DateTime(2020, 11, 20, 21, 52, 16, 233, DateTimeKind.Local).AddTicks(4865), "If we bypass the transmitter, we can get to the GB transmitter through the haptic GB transmitter!", 19 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 529, "#42323e", new DateTime(2020, 10, 14, 21, 37, 54, 15, DateTimeKind.Local).AddTicks(7077), "The THX interface is down, connect the back-end interface so we can connect the THX interface!", 19 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 854, "#3f4925", new DateTime(2020, 9, 23, 20, 3, 44, 260, DateTimeKind.Local).AddTicks(3247), "We need to reboot the haptic GB transmitter!", 268 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 749, "#150f08", new DateTime(2020, 4, 19, 14, 5, 31, 846, DateTimeKind.Local).AddTicks(6011), "Use the primary JBOD bandwidth, then you can program the primary bandwidth!", 268 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 38, "#286e19", new DateTime(2021, 1, 9, 9, 12, 20, 437, DateTimeKind.Local).AddTicks(3871), "You can't reboot the pixel without calculating the wireless COM pixel!", 281 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1173, "#306780", new DateTime(2020, 8, 10, 2, 27, 22, 925, DateTimeKind.Local).AddTicks(1041), "If we index the array, we can get to the AGP array through the solid state AGP array!", 281 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 425, "#0c4836", new DateTime(2020, 10, 18, 14, 15, 57, 751, DateTimeKind.Local).AddTicks(7109), "The SMTP matrix is down, parse the primary matrix so we can parse the SMTP matrix!", 268 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 190, "#61521f", new DateTime(2020, 12, 1, 7, 11, 35, 221, DateTimeKind.Local).AddTicks(147), "transmitting the system won't do anything, we need to reboot the wireless FTP system!", 281 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 196, "#074777", new DateTime(2020, 8, 27, 11, 34, 50, 681, DateTimeKind.Local).AddTicks(260), "You can't index the monitor without connecting the virtual SCSI monitor!", 268 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1046, "#57051e", new DateTime(2021, 1, 13, 16, 47, 6, 943, DateTimeKind.Local).AddTicks(8526), "We need to reboot the neural JBOD program!", 19 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1179, "#376a35", new DateTime(2020, 8, 25, 9, 7, 54, 529, DateTimeKind.Local).AddTicks(6636), "You can't input the interface without compressing the haptic HTTP interface!", 19 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 438, "#404d2c", new DateTime(2021, 1, 5, 10, 22, 9, 559, DateTimeKind.Local).AddTicks(1862), "The IB pixel is down, bypass the optical pixel so we can bypass the IB pixel!", 281 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 464, "#3f1d7b", new DateTime(2020, 12, 29, 22, 23, 31, 391, DateTimeKind.Local).AddTicks(5228), "We need to parse the back-end SCSI firewall!", 281 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 246, "#390e7c", new DateTime(2020, 11, 25, 21, 7, 52, 809, DateTimeKind.Local).AddTicks(764), "We need to back up the optical GB bus!", 268 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 589, "#0e5451", new DateTime(2021, 2, 2, 19, 18, 1, 112, DateTimeKind.Local).AddTicks(1925), "I'll navigate the virtual SMTP capacitor, that should capacitor the SMTP capacitor!", 20 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1104, "#530b64", new DateTime(2021, 1, 14, 18, 39, 51, 605, DateTimeKind.Local).AddTicks(8715), "The AGP port is down, navigate the solid state port so we can navigate the AGP port!", 20 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 910, "#696f2b", new DateTime(2020, 4, 13, 22, 44, 2, 352, DateTimeKind.Local).AddTicks(7618), "You can't quantify the card without navigating the digital HTTP card!", 282 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 669, "#1b4d12", new DateTime(2020, 4, 7, 4, 36, 2, 423, DateTimeKind.Local).AddTicks(903), "Try to navigate the EXE pixel, maybe it will navigate the neural pixel!", 21 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 243, "#264c20", new DateTime(2020, 7, 31, 18, 57, 30, 491, DateTimeKind.Local).AddTicks(1486), "Use the neural EXE capacitor, then you can generate the neural capacitor!", 11 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1070, "#551c20", new DateTime(2020, 12, 10, 14, 55, 20, 578, DateTimeKind.Local).AddTicks(5561), "Use the mobile JBOD card, then you can back up the mobile card!", 263 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 629, "#435e2a", new DateTime(2020, 6, 8, 19, 58, 34, 183, DateTimeKind.Local).AddTicks(2444), "Use the wireless CSS system, then you can compress the wireless system!", 263 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 534, "#22132e", new DateTime(2021, 2, 2, 4, 29, 16, 861, DateTimeKind.Local).AddTicks(5498), "The XML monitor is down, parse the 1080p monitor so we can parse the XML monitor!", 263 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 21, "#1c0d1c", new DateTime(2020, 8, 21, 2, 7, 16, 901, DateTimeKind.Local).AddTicks(3804), "Use the mobile RSS protocol, then you can parse the mobile protocol!", 22 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 661, "#345837", new DateTime(2020, 9, 10, 8, 54, 47, 766, DateTimeKind.Local).AddTicks(380), "The SMS feed is down, bypass the mobile feed so we can bypass the SMS feed!", 21 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 124, "#453c51", new DateTime(2020, 6, 26, 17, 0, 17, 335, DateTimeKind.Local).AddTicks(2467), "You can't override the alarm without hacking the neural CSS alarm!", 22 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 598, "#443637", new DateTime(2020, 4, 20, 3, 59, 17, 588, DateTimeKind.Local).AddTicks(8897), "Try to input the JBOD capacitor, maybe it will input the redundant capacitor!", 262 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 285, "#424b21", new DateTime(2020, 7, 22, 9, 46, 56, 820, DateTimeKind.Local).AddTicks(5569), "We need to synthesize the redundant JBOD sensor!", 262 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1, "#266a36", new DateTime(2020, 4, 23, 19, 19, 20, 491, DateTimeKind.Local).AddTicks(3345), "I'll connect the digital JBOD application, that should application the JBOD application!", 262 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 765, "#33131b", new DateTime(2020, 10, 14, 11, 14, 58, 249, DateTimeKind.Local).AddTicks(1685), "Try to reboot the SAS protocol, maybe it will reboot the bluetooth protocol!", 22 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 932, "#0c2660", new DateTime(2020, 7, 29, 19, 40, 3, 126, DateTimeKind.Local).AddTicks(9436), "The RAM transmitter is down, program the cross-platform transmitter so we can program the RAM transmitter!", 22 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 180, "#1b1674", new DateTime(2020, 8, 6, 21, 58, 23, 332, DateTimeKind.Local).AddTicks(8595), "I'll input the wireless FTP capacitor, that should capacitor the FTP capacitor!", 11 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 988, "#486927", new DateTime(2020, 4, 20, 10, 33, 32, 120, DateTimeKind.Local).AddTicks(8494), "Try to compress the IB microchip, maybe it will compress the digital microchip!", 262 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 484, "#7c6a52", new DateTime(2020, 8, 24, 11, 53, 34, 85, DateTimeKind.Local).AddTicks(4151), "I'll navigate the digital IB program, that should program the IB program!", 11 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 623, "#512927", new DateTime(2020, 11, 3, 7, 3, 56, 248, DateTimeKind.Local).AddTicks(9661), "If we reboot the system, we can get to the HTTP system through the 1080p HTTP system!", 11 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1189, "#7c3928", new DateTime(2020, 5, 27, 14, 25, 0, 533, DateTimeKind.Local).AddTicks(5538), "overriding the feed won't do anything, we need to generate the multi-byte EXE feed!", 11 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 949, "#0a7d72", new DateTime(2020, 11, 24, 11, 47, 12, 5, DateTimeKind.Local).AddTicks(6796), "calculating the alarm won't do anything, we need to program the digital XML alarm!", 282 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1200, "#693e76", new DateTime(2021, 1, 23, 0, 40, 47, 630, DateTimeKind.Local).AddTicks(9607), "The HDD transmitter is down, transmit the wireless transmitter so we can transmit the HDD transmitter!", 265 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1112, "#4b7213", new DateTime(2020, 11, 1, 7, 11, 9, 472, DateTimeKind.Local).AddTicks(756), "hacking the sensor won't do anything, we need to copy the back-end ADP sensor!", 265 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 848, "#407c3d", new DateTime(2020, 4, 10, 20, 20, 4, 484, DateTimeKind.Local).AddTicks(7875), "The COM bus is down, synthesize the 1080p bus so we can synthesize the COM bus!", 265 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 725, "#616877", new DateTime(2020, 5, 12, 16, 12, 12, 596, DateTimeKind.Local).AddTicks(5884), "Use the online SQL capacitor, then you can transmit the online capacitor!", 265 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 198, "#7e337d", new DateTime(2020, 12, 6, 0, 57, 35, 57, DateTimeKind.Local).AddTicks(5127), "Try to copy the JSON protocol, maybe it will copy the open-source protocol!", 265 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 71, "#2e5e1a", new DateTime(2020, 7, 22, 23, 7, 34, 802, DateTimeKind.Local).AddTicks(7317), "If we connect the circuit, we can get to the TCP circuit through the 1080p TCP circuit!", 283 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 106, "#453809", new DateTime(2020, 3, 17, 13, 48, 22, 605, DateTimeKind.Local).AddTicks(739), "I'll back up the solid state SAS bus, that should bus the SAS bus!", 283 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 339, "#543d0c", new DateTime(2020, 12, 6, 1, 59, 5, 819, DateTimeKind.Local).AddTicks(703), "The SCSI transmitter is down, override the primary transmitter so we can override the SCSI transmitter!", 21 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 961, "#354c68", new DateTime(2020, 5, 10, 18, 57, 54, 681, DateTimeKind.Local).AddTicks(1628), "Try to synthesize the SMS microchip, maybe it will synthesize the redundant microchip!", 264 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 699, "#6d7b03", new DateTime(2020, 10, 13, 2, 56, 58, 484, DateTimeKind.Local).AddTicks(9542), "We need to transmit the optical SDD port!", 264 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 594, "#09722c", new DateTime(2020, 5, 27, 2, 9, 34, 832, DateTimeKind.Local).AddTicks(84), "connecting the panel won't do anything, we need to hack the neural TCP panel!", 264 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 426, "#605d69", new DateTime(2020, 12, 17, 0, 54, 56, 103, DateTimeKind.Local).AddTicks(7140), "Try to back up the SAS sensor, maybe it will back up the digital sensor!", 264 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 230, "#65744e", new DateTime(2021, 2, 18, 3, 45, 28, 250, DateTimeKind.Local).AddTicks(5863), "Try to quantify the RAM application, maybe it will quantify the multi-byte application!", 264 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 372, "#572565", new DateTime(2020, 7, 2, 1, 59, 49, 390, DateTimeKind.Local).AddTicks(7028), "You can't input the panel without parsing the cross-platform USB panel!", 21 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 11, "#190f06", new DateTime(2021, 2, 24, 2, 15, 3, 369, DateTimeKind.Local).AddTicks(1665), "bypassing the sensor won't do anything, we need to calculate the open-source TCP sensor!", 281 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 263, "#465d01", new DateTime(2020, 12, 22, 15, 34, 22, 947, DateTimeKind.Local).AddTicks(9178), "I'll quantify the redundant PCI panel, that should panel the PCI panel!", 269 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 494, "#197d5b", new DateTime(2020, 6, 19, 18, 22, 57, 916, DateTimeKind.Local).AddTicks(5843), "We need to compress the open-source SSL transmitter!", 269 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 515, "#043350", new DateTime(2020, 11, 7, 19, 29, 0, 930, DateTimeKind.Local).AddTicks(3171), "If we back up the microchip, we can get to the IB microchip through the auxiliary IB microchip!", 269 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 103, "#26376a", new DateTime(2020, 5, 17, 1, 31, 3, 753, DateTimeKind.Local).AddTicks(7787), "I'll parse the online PNG port, that should port the PNG port!", 278 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 201, "#614943", new DateTime(2020, 6, 23, 18, 48, 0, 150, DateTimeKind.Local).AddTicks(6402), "We need to navigate the cross-platform XML transmitter!", 274 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 168, "#2e1c6c", new DateTime(2020, 5, 2, 12, 25, 19, 384, DateTimeKind.Local).AddTicks(7705), "I'll bypass the optical HDD bus, that should bus the HDD bus!", 274 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 2, "#072908", new DateTime(2020, 9, 18, 17, 44, 26, 985, DateTimeKind.Local).AddTicks(9192), "If we bypass the matrix, we can get to the XSS matrix through the virtual XSS matrix!", 16 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 432, "#101f51", new DateTime(2020, 7, 17, 10, 25, 2, 838, DateTimeKind.Local).AddTicks(4017), "Try to copy the HTTP microchip, maybe it will copy the bluetooth microchip!", 16 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 552, "#21570b", new DateTime(2021, 2, 13, 16, 20, 30, 141, DateTimeKind.Local).AddTicks(5000), "I'll bypass the 1080p SAS matrix, that should matrix the SAS matrix!", 278 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 788, "#08631e", new DateTime(2020, 10, 17, 2, 0, 8, 454, DateTimeKind.Local).AddTicks(3509), "We need to quantify the 1080p FTP hard drive!", 274 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 723, "#057a23", new DateTime(2021, 1, 15, 4, 20, 48, 892, DateTimeKind.Local).AddTicks(6102), "If we connect the driver, we can get to the AI driver through the haptic AI driver!", 278 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 202, "#446b55", new DateTime(2020, 10, 25, 17, 44, 24, 870, DateTimeKind.Local).AddTicks(6757), "The SCSI transmitter is down, hack the 1080p transmitter so we can hack the SCSI transmitter!", 17 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 234, "#792a5e", new DateTime(2020, 9, 1, 7, 27, 56, 692, DateTimeKind.Local).AddTicks(7988), "Use the solid state USB capacitor, then you can index the solid state capacitor!", 17 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1015, "#716e55", new DateTime(2020, 9, 29, 4, 39, 43, 153, DateTimeKind.Local).AddTicks(9044), "overriding the application won't do anything, we need to back up the primary PCI application!", 273 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 995, "#6a1d55", new DateTime(2021, 2, 7, 3, 3, 47, 754, DateTimeKind.Local).AddTicks(2247), "I'll generate the solid state JBOD card, that should card the JBOD card!", 273 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 900, "#111876", new DateTime(2020, 11, 26, 20, 22, 43, 48, DateTimeKind.Local).AddTicks(969), "The HTTP card is down, index the solid state card so we can index the HTTP card!", 273 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1005, "#79135e", new DateTime(2021, 2, 25, 11, 31, 56, 754, DateTimeKind.Local).AddTicks(2419), "Try to back up the CSS port, maybe it will back up the wireless port!", 13 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 114, "#4f5513", new DateTime(2020, 7, 15, 12, 13, 45, 789, DateTimeKind.Local).AddTicks(1984), "If we synthesize the monitor, we can get to the THX monitor through the haptic THX monitor!", 17 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 786, "#436c25", new DateTime(2020, 9, 15, 10, 24, 50, 512, DateTimeKind.Local).AddTicks(7551), "If we synthesize the transmitter, we can get to the USB transmitter through the solid state USB transmitter!", 277 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 586, "#66112c", new DateTime(2020, 5, 22, 22, 32, 13, 783, DateTimeKind.Local).AddTicks(3165), "You can't compress the circuit without connecting the back-end IB circuit!", 277 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 139, "#5b0d13", new DateTime(2020, 4, 4, 12, 30, 22, 316, DateTimeKind.Local).AddTicks(8141), "Try to input the SCSI circuit, maybe it will input the cross-platform circuit!", 275 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1135, "#373c07", new DateTime(2020, 10, 5, 14, 24, 40, 690, DateTimeKind.Local).AddTicks(9823), "indexing the card won't do anything, we need to input the solid state AI card!", 276 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1121, "#0a033d", new DateTime(2021, 2, 28, 16, 25, 10, 988, DateTimeKind.Local).AddTicks(1588), "If we quantify the hard drive, we can get to the SMTP hard drive through the haptic SMTP hard drive!", 276 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1055, "#273f6a", new DateTime(2020, 9, 14, 11, 58, 24, 770, DateTimeKind.Local).AddTicks(3804), "The SSL sensor is down, hack the solid state sensor so we can hack the SSL sensor!", 276 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 936, "#7b7d03", new DateTime(2020, 10, 12, 19, 55, 52, 942, DateTimeKind.Local).AddTicks(9791), "The HDD application is down, quantify the auxiliary application so we can quantify the HDD application!", 276 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1154, "#803958", new DateTime(2020, 7, 11, 14, 9, 27, 870, DateTimeKind.Local).AddTicks(5358), "Try to connect the AI sensor, maybe it will connect the mobile sensor!", 15 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1037, "#1d4424", new DateTime(2020, 5, 1, 11, 2, 4, 458, DateTimeKind.Local).AddTicks(1741), "Use the neural USB pixel, then you can reboot the neural pixel!", 275 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 785, "#007c64", new DateTime(2020, 4, 20, 10, 12, 29, 509, DateTimeKind.Local).AddTicks(9691), "I'll program the back-end COM capacitor, that should capacitor the COM capacitor!", 275 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 657, "#2c7e17", new DateTime(2020, 9, 19, 14, 24, 57, 245, DateTimeKind.Local).AddTicks(585), "Use the mobile JSON feed, then you can back up the mobile feed!", 275 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 578, "#035468", new DateTime(2020, 7, 8, 14, 22, 56, 612, DateTimeKind.Local).AddTicks(4158), "I'll transmit the digital HTTP system, that should system the HTTP system!", 275 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 397, "#40413e", new DateTime(2021, 2, 4, 22, 53, 29, 358, DateTimeKind.Local).AddTicks(9092), "We need to input the cross-platform PCI pixel!", 275 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 357, "#3c3375", new DateTime(2020, 11, 8, 16, 53, 32, 196, DateTimeKind.Local).AddTicks(2275), "You can't bypass the firewall without compressing the mobile AI firewall!", 275 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 267, "#324376", new DateTime(2020, 7, 8, 11, 40, 55, 900, DateTimeKind.Local).AddTicks(5550), "If we override the port, we can get to the JBOD port through the online JBOD port!", 275 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 899, "#45596f", new DateTime(2020, 7, 2, 20, 1, 10, 284, DateTimeKind.Local).AddTicks(5926), "I'll quantify the solid state PNG protocol, that should protocol the PNG protocol!", 14 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 869, "#0d1e2f", new DateTime(2020, 11, 12, 17, 9, 26, 78, DateTimeKind.Local).AddTicks(7488), "If we program the port, we can get to the THX port through the neural THX port!", 14 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 283, "#553964", new DateTime(2020, 9, 29, 11, 31, 43, 508, DateTimeKind.Local).AddTicks(9190), "The COM pixel is down, synthesize the digital pixel so we can synthesize the COM pixel!", 14 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 884, "#720a62", new DateTime(2020, 3, 6, 3, 56, 56, 772, DateTimeKind.Local).AddTicks(9337), "connecting the protocol won't do anything, we need to bypass the multi-byte SAS protocol!", 13 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 194, "#3c4129", new DateTime(2021, 1, 20, 8, 35, 44, 293, DateTimeKind.Local).AddTicks(4324), "You can't parse the port without bypassing the bluetooth XML port!", 284 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 778, "#314e21", new DateTime(2020, 6, 19, 20, 41, 52, 986, DateTimeKind.Local).AddTicks(8720), "If we transmit the array, we can get to the HDD array through the neural HDD array!", 273 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 365, "#345a56", new DateTime(2020, 5, 22, 20, 16, 36, 81, DateTimeKind.Local).AddTicks(1091), "If we connect the driver, we can get to the COM driver through the digital COM driver!", 273 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 734, "#077559", new DateTime(2020, 7, 30, 9, 49, 55, 427, DateTimeKind.Local).AddTicks(2168), "If we hack the array, we can get to the TCP array through the haptic TCP array!", 18 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 814, "#692806", new DateTime(2020, 12, 19, 12, 55, 30, 305, DateTimeKind.Local).AddTicks(9513), "Use the open-source TCP protocol, then you can reboot the open-source protocol!", 18 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 881, "#375304", new DateTime(2020, 4, 3, 7, 40, 11, 729, DateTimeKind.Local).AddTicks(5971), "Try to parse the TCP bus, maybe it will parse the wireless bus!", 18 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 23, "#287b39", new DateTime(2020, 3, 4, 0, 0, 34, 192, DateTimeKind.Local).AddTicks(8765), "Use the primary PNG application, then you can transmit the primary application!", 280 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 173, "#400d08", new DateTime(2020, 7, 28, 17, 44, 44, 399, DateTimeKind.Local).AddTicks(5855), "I'll quantify the mobile EXE driver, that should driver the EXE driver!", 280 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1098, "#715e34", new DateTime(2020, 9, 8, 16, 32, 25, 380, DateTimeKind.Local).AddTicks(5993), "Use the haptic SAS driver, then you can back up the haptic driver!", 270 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 337, "#727e74", new DateTime(2020, 7, 11, 11, 47, 31, 979, DateTimeKind.Local).AddTicks(6546), "copying the application won't do anything, we need to connect the back-end SAS application!", 18 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 959, "#2f477e", new DateTime(2020, 6, 25, 9, 47, 33, 459, DateTimeKind.Local).AddTicks(4400), "The EXE microchip is down, program the haptic microchip so we can program the EXE microchip!", 270 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 654, "#340c57", new DateTime(2020, 9, 20, 12, 14, 5, 612, DateTimeKind.Local).AddTicks(284), "Use the online JBOD port, then you can transmit the online port!", 280 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 955, "#296039", new DateTime(2020, 4, 23, 7, 43, 50, 702, DateTimeKind.Local).AddTicks(882), "The PCI panel is down, parse the bluetooth panel so we can parse the PCI panel!", 280 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 474, "#731147", new DateTime(2021, 1, 3, 4, 1, 36, 758, DateTimeKind.Local).AddTicks(8020), "Try to hack the SQL monitor, maybe it will hack the haptic monitor!", 13 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 138, "#5c6d79", new DateTime(2020, 4, 23, 5, 31, 42, 9, DateTimeKind.Local).AddTicks(3581), "The SSL alarm is down, index the optical alarm so we can index the SSL alarm!", 13 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1131, "#7b300b", new DateTime(2020, 9, 11, 19, 14, 14, 731, DateTimeKind.Local).AddTicks(6312), "I'll generate the bluetooth JBOD protocol, that should protocol the JBOD protocol!", 269 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 714, "#5d313d", new DateTime(2020, 8, 3, 9, 23, 51, 987, DateTimeKind.Local).AddTicks(8669), "Try to reboot the THX program, maybe it will reboot the mobile program!", 269 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 520, "#003424", new DateTime(2020, 6, 7, 18, 43, 39, 469, DateTimeKind.Local).AddTicks(3832), "You can't synthesize the panel without navigating the mobile THX panel!", 270 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 214, "#132d52", new DateTime(2020, 8, 25, 13, 32, 4, 14, DateTimeKind.Local).AddTicks(3025), "compressing the panel won't do anything, we need to index the 1080p RSS panel!", 18 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 203, "#385c74", new DateTime(2020, 12, 11, 5, 22, 19, 744, DateTimeKind.Local).AddTicks(8760), "The SQL array is down, synthesize the mobile array so we can synthesize the SQL array!", 271 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 295, "#6a4634", new DateTime(2020, 12, 15, 0, 48, 38, 735, DateTimeKind.Local).AddTicks(3960), "Use the 1080p JSON microchip, then you can copy the 1080p microchip!", 271 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 244, "#127d66", new DateTime(2020, 8, 2, 14, 42, 1, 416, DateTimeKind.Local).AddTicks(170), "We need to compress the primary SCSI program!", 17 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 664, "#1a4918", new DateTime(2020, 4, 14, 6, 4, 9, 132, DateTimeKind.Local).AddTicks(1087), "The JBOD monitor is down, reboot the cross-platform monitor so we can reboot the JBOD monitor!", 17 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1006, "#6b406d", new DateTime(2020, 6, 8, 18, 27, 32, 857, DateTimeKind.Local).AddTicks(5493), "I'll connect the auxiliary JBOD panel, that should panel the JBOD panel!", 17 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 335, "#473b16", new DateTime(2020, 5, 26, 3, 19, 59, 127, DateTimeKind.Local).AddTicks(7882), "Use the solid state FTP panel, then you can quantify the solid state panel!", 279 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 940, "#5c2c05", new DateTime(2020, 8, 15, 4, 37, 45, 391, DateTimeKind.Local).AddTicks(4826), "You can't quantify the array without navigating the neural ADP array!", 272 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 808, "#3b1e61", new DateTime(2020, 6, 24, 5, 42, 52, 899, DateTimeKind.Local).AddTicks(5694), "transmitting the pixel won't do anything, we need to quantify the multi-byte SCSI pixel!", 272 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 405, "#4f4a1b", new DateTime(2020, 6, 22, 12, 5, 5, 459, DateTimeKind.Local).AddTicks(730), "We need to bypass the back-end JBOD feed!", 279 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1083, "#244340", new DateTime(2020, 6, 2, 0, 40, 35, 128, DateTimeKind.Local).AddTicks(2342), "You can't navigate the alarm without copying the auxiliary RSS alarm!", 279 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1152, "#5d7423", new DateTime(2020, 4, 1, 22, 2, 29, 766, DateTimeKind.Local).AddTicks(3613), "If we hack the microchip, we can get to the AI microchip through the open-source AI microchip!", 271 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1117, "#062a44", new DateTime(2020, 7, 7, 15, 35, 25, 633, DateTimeKind.Local).AddTicks(2540), "If we generate the panel, we can get to the GB panel through the online GB panel!", 279 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 662, "#5d581a", new DateTime(2020, 3, 14, 14, 7, 34, 59, DateTimeKind.Local).AddTicks(5569), "You can't program the bandwidth without synthesizing the virtual USB bandwidth!", 13 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 15, "#1e537e", new DateTime(2020, 11, 23, 11, 17, 47, 407, DateTimeKind.Local).AddTicks(6611), "We need to generate the solid state PCI bandwidth!", 280 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 966, "#46083a", new DateTime(2020, 9, 13, 18, 33, 10, 532, DateTimeKind.Local).AddTicks(4538), "I'll program the mobile COM circuit, that should circuit the COM circuit!", 271 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 689, "#740771", new DateTime(2020, 8, 16, 22, 24, 52, 80, DateTimeKind.Local).AddTicks(7455), "If we reboot the driver, we can get to the FTP driver through the digital FTP driver!", 271 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 679, "#4f3a08", new DateTime(2020, 12, 1, 9, 22, 47, 726, DateTimeKind.Local).AddTicks(6949), "copying the protocol won't do anything, we need to compress the digital TCP protocol!", 271 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 125, "#417752", new DateTime(2020, 7, 26, 22, 51, 57, 418, DateTimeKind.Local).AddTicks(7614), "You can't program the monitor without compressing the virtual SDD monitor!", 279 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 3, "#515e2b", new DateTime(2020, 11, 19, 0, 48, 46, 250, DateTimeKind.Local).AddTicks(5089), "Try to compress the AI feed, maybe it will compress the open-source feed!", 290 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 328, "#45754e", new DateTime(2020, 8, 20, 20, 28, 53, 453, DateTimeKind.Local).AddTicks(2738), "The SCSI capacitor is down, bypass the haptic capacitor so we can bypass the SCSI capacitor!", 284 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 687, "#40481a", new DateTime(2021, 2, 15, 23, 6, 6, 623, DateTimeKind.Local).AddTicks(967), "You can't bypass the application without overriding the haptic JBOD application!", 261 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 487, "#67165a", new DateTime(2020, 12, 20, 18, 17, 15, 801, DateTimeKind.Local).AddTicks(4061), "I'll compress the mobile TCP driver, that should driver the TCP driver!", 28 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 764, "#3e6b75", new DateTime(2020, 5, 2, 23, 11, 6, 141, DateTimeKind.Local).AddTicks(8529), "The RAM sensor is down, bypass the cross-platform sensor so we can bypass the RAM sensor!", 252 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 107, "#7e3232", new DateTime(2020, 11, 21, 18, 53, 37, 261, DateTimeKind.Local).AddTicks(79), "You can't index the panel without quantifying the cross-platform GB panel!", 289 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 342, "#582937", new DateTime(2020, 12, 26, 19, 29, 22, 792, DateTimeKind.Local).AddTicks(3361), "Use the open-source RAM capacitor, then you can calculate the open-source capacitor!", 289 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 354, "#7d6f72", new DateTime(2020, 11, 16, 15, 56, 7, 811, DateTimeKind.Local).AddTicks(3090), "If we copy the card, we can get to the SMTP card through the auxiliary SMTP card!", 289 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 528, "#237932", new DateTime(2020, 8, 9, 18, 26, 5, 946, DateTimeKind.Local).AddTicks(2332), "parsing the system won't do anything, we need to compress the digital XSS system!", 252 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 420, "#210878", new DateTime(2021, 3, 2, 11, 48, 8, 313, DateTimeKind.Local).AddTicks(7656), "Try to generate the PNG application, maybe it will generate the mobile application!", 28 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 475, "#01694f", new DateTime(2020, 9, 19, 19, 51, 55, 678, DateTimeKind.Local).AddTicks(3667), "If we index the bandwidth, we can get to the COM bandwidth through the multi-byte COM bandwidth!", 252 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 780, "#6a061b", new DateTime(2020, 3, 4, 17, 42, 30, 897, DateTimeKind.Local).AddTicks(9583), "Try to connect the ADP card, maybe it will connect the bluetooth card!", 15 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 678, "#522d60", new DateTime(2020, 12, 12, 1, 19, 27, 407, DateTimeKind.Local).AddTicks(7334), "hacking the bus won't do anything, we need to connect the cross-platform SQL bus!", 289 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 868, "#47432b", new DateTime(2021, 2, 14, 17, 0, 32, 524, DateTimeKind.Local).AddTicks(2853), "Use the virtual JBOD matrix, then you can parse the virtual matrix!", 289 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 847, "#67724b", new DateTime(2020, 8, 18, 18, 52, 29, 594, DateTimeKind.Local).AddTicks(9534), "Try to reboot the THX bandwidth, maybe it will reboot the mobile bandwidth!", 28 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 922, "#033309", new DateTime(2021, 2, 6, 8, 43, 13, 436, DateTimeKind.Local).AddTicks(8259), "Use the back-end JSON microchip, then you can program the back-end microchip!", 289 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 958, "#765924", new DateTime(2020, 11, 17, 3, 37, 29, 391, DateTimeKind.Local).AddTicks(7700), "copying the circuit won't do anything, we need to connect the cross-platform AGP circuit!", 289 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 401, "#7f3f65", new DateTime(2020, 4, 28, 14, 12, 11, 814, DateTimeKind.Local).AddTicks(1863), "The THX application is down, back up the open-source application so we can back up the THX application!", 252 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1036, "#1e1c64", new DateTime(2020, 10, 14, 11, 48, 59, 302, DateTimeKind.Local).AddTicks(6092), "Use the open-source SMTP bandwidth, then you can input the open-source bandwidth!", 28 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 258, "#547249", new DateTime(2021, 1, 10, 0, 13, 50, 825, DateTimeKind.Local).AddTicks(756), "connecting the circuit won't do anything, we need to quantify the virtual FTP circuit!", 28 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 997, "#272443", new DateTime(2020, 8, 22, 13, 51, 48, 687, DateTimeKind.Local).AddTicks(7195), "The SCSI circuit is down, copy the primary circuit so we can copy the SCSI circuit!", 27 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 828, "#675143", new DateTime(2020, 6, 7, 0, 37, 26, 420, DateTimeKind.Local).AddTicks(2722), "You can't program the port without calculating the open-source EXE port!", 8 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 748, "#5e0f21", new DateTime(2021, 1, 20, 20, 5, 40, 211, DateTimeKind.Local).AddTicks(9201), "If we generate the firewall, we can get to the PNG firewall through the multi-byte PNG firewall!", 254 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 468, "#636d12", new DateTime(2020, 3, 15, 13, 59, 8, 232, DateTimeKind.Local).AddTicks(7245), "The XSS matrix is down, input the multi-byte matrix so we can input the XSS matrix!", 254 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 142, "#0f7779", new DateTime(2020, 5, 24, 3, 59, 50, 545, DateTimeKind.Local).AddTicks(5294), "We need to calculate the multi-byte CSS transmitter!", 254 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 131, "#381632", new DateTime(2020, 11, 25, 22, 20, 29, 303, DateTimeKind.Local).AddTicks(1474), "You can't copy the hard drive without quantifying the multi-byte XSS hard drive!", 27 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 596, "#06563b", new DateTime(2021, 2, 6, 14, 10, 17, 713, DateTimeKind.Local).AddTicks(9653), "I'll transmit the solid state SAS driver, that should driver the SAS driver!", 8 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1003, "#2c0456", new DateTime(2020, 12, 5, 16, 2, 55, 414, DateTimeKind.Local).AddTicks(7529), "Try to generate the JSON capacitor, maybe it will generate the neural capacitor!", 27 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 523, "#270d69", new DateTime(2020, 6, 1, 7, 40, 25, 904, DateTimeKind.Local).AddTicks(1715), "We need to reboot the auxiliary HTTP array!", 8 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 833, "#72585f", new DateTime(2021, 3, 1, 21, 7, 58, 352, DateTimeKind.Local).AddTicks(4360), "Use the optical PNG monitor, then you can input the optical monitor!", 27 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 964, "#541132", new DateTime(2021, 2, 22, 12, 33, 49, 814, DateTimeKind.Local).AddTicks(3746), "parsing the microchip won't do anything, we need to synthesize the optical CSS microchip!", 27 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1144, "#697c58", new DateTime(2021, 2, 18, 2, 20, 27, 447, DateTimeKind.Local).AddTicks(451), "You can't generate the transmitter without quantifying the cross-platform SDD transmitter!", 253 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 85, "#553125", new DateTime(2020, 11, 13, 21, 49, 13, 650, DateTimeKind.Local).AddTicks(5628), "The GB program is down, connect the open-source program so we can connect the GB program!", 253 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 98, "#0d5d6a", new DateTime(2020, 5, 24, 1, 22, 7, 29, DateTimeKind.Local).AddTicks(8865), "We need to hack the haptic SCSI monitor!", 289 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 73, "#546836", new DateTime(2020, 6, 10, 6, 10, 15, 478, DateTimeKind.Local).AddTicks(5542), "The SAS capacitor is down, back up the bluetooth capacitor so we can back up the SAS capacitor!", 253 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 455, "#760a70", new DateTime(2020, 10, 26, 1, 23, 51, 158, DateTimeKind.Local).AddTicks(5845), "The ADP monitor is down, synthesize the auxiliary monitor so we can synthesize the ADP monitor!", 8 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1128, "#7e0c6b", new DateTime(2020, 10, 28, 14, 24, 26, 59, DateTimeKind.Local).AddTicks(5189), "Try to program the SAS program, maybe it will program the open-source program!", 251 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 992, "#21081b", new DateTime(2020, 7, 2, 7, 13, 16, 917, DateTimeKind.Local).AddTicks(6411), "If we quantify the sensor, we can get to the ADP sensor through the wireless ADP sensor!", 251 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 851, "#6e566d", new DateTime(2020, 7, 2, 13, 21, 15, 794, DateTimeKind.Local).AddTicks(6577), "You can't back up the bandwidth without parsing the virtual SSL bandwidth!", 251 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 63, "#506779", new DateTime(2020, 4, 19, 1, 7, 9, 424, DateTimeKind.Local).AddTicks(4098), "The RSS bus is down, copy the digital bus so we can copy the RSS bus!", 29 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1086, "#4b1078", new DateTime(2020, 8, 18, 8, 43, 21, 230, DateTimeKind.Local).AddTicks(6989), "We need to copy the wireless RAM port!", 249 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 952, "#690e5c", new DateTime(2020, 10, 27, 6, 38, 8, 631, DateTimeKind.Local).AddTicks(1561), "The AI pixel is down, generate the 1080p pixel so we can generate the AI pixel!", 249 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 262, "#4f654b", new DateTime(2020, 8, 15, 17, 24, 54, 597, DateTimeKind.Local).AddTicks(393), "You can't transmit the hard drive without connecting the mobile XML hard drive!", 249 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 930, "#0b542b", new DateTime(2020, 12, 29, 0, 29, 11, 512, DateTimeKind.Local).AddTicks(2623), "backing up the array won't do anything, we need to calculate the primary RAM array!", 248 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 835, "#51024d", new DateTime(2020, 7, 30, 1, 31, 52, 391, DateTimeKind.Local).AddTicks(4948), "The SAS port is down, hack the mobile port so we can hack the SAS port!", 248 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 34, "#6f0513", new DateTime(2020, 4, 8, 8, 39, 18, 774, DateTimeKind.Local).AddTicks(842), "The JBOD interface is down, navigate the optical interface so we can navigate the JBOD interface!", 29 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 798, "#68747e", new DateTime(2020, 12, 13, 0, 15, 22, 515, DateTimeKind.Local).AddTicks(2883), "If we input the firewall, we can get to the HDD firewall through the online HDD firewall!", 248 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 302, "#4f7406", new DateTime(2020, 4, 6, 12, 20, 49, 324, DateTimeKind.Local).AddTicks(7569), "The SMS interface is down, reboot the wireless interface so we can reboot the SMS interface!", 248 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 314, "#78063f", new DateTime(2020, 9, 1, 9, 7, 38, 269, DateTimeKind.Local).AddTicks(9730), "You can't compress the pixel without backing up the digital GB pixel!", 29 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 845, "#2b0412", new DateTime(2020, 12, 16, 12, 54, 30, 457, DateTimeKind.Local).AddTicks(3624), "If we override the program, we can get to the RSS program through the 1080p RSS program!", 29 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 925, "#142d1a", new DateTime(2020, 10, 31, 14, 53, 59, 202, DateTimeKind.Local).AddTicks(3700), "Use the multi-byte CSS card, then you can hack the multi-byte card!", 29 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1141, "#487250", new DateTime(2020, 5, 8, 11, 57, 34, 437, DateTimeKind.Local).AddTicks(7399), "hacking the sensor won't do anything, we need to reboot the mobile PCI sensor!", 29 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1169, "#757d2e", new DateTime(2020, 3, 11, 3, 52, 31, 529, DateTimeKind.Local).AddTicks(4003), "We need to back up the primary PNG bus!", 29 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 417, "#07613f", new DateTime(2020, 5, 19, 9, 21, 6, 689, DateTimeKind.Local).AddTicks(6568), "If we quantify the capacitor, we can get to the CSS capacitor through the mobile CSS capacitor!", 248 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 163, "#3f1524", new DateTime(2021, 1, 6, 18, 11, 46, 672, DateTimeKind.Local).AddTicks(8026), "If we connect the matrix, we can get to the THX matrix through the solid state THX matrix!", 250 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 231, "#1c7130", new DateTime(2021, 1, 15, 5, 29, 14, 210, DateTimeKind.Local).AddTicks(7086), "Try to override the USB hard drive, maybe it will override the multi-byte hard drive!", 250 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 391, "#164d0d", new DateTime(2020, 5, 16, 5, 3, 15, 289, DateTimeKind.Local).AddTicks(4423), "Use the bluetooth ADP port, then you can copy the bluetooth port!", 250 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 403, "#5f0800", new DateTime(2020, 10, 21, 11, 28, 23, 520, DateTimeKind.Local).AddTicks(6107), "You can't back up the capacitor without calculating the solid state SMS capacitor!", 8 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 593, "#4f5d13", new DateTime(2020, 6, 3, 13, 17, 20, 514, DateTimeKind.Local).AddTicks(3586), "The PCI program is down, synthesize the haptic program so we can synthesize the PCI program!", 251 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 406, "#78605d", new DateTime(2020, 9, 10, 8, 29, 56, 537, DateTimeKind.Local).AddTicks(3379), "Try to hack the SSL protocol, maybe it will hack the haptic protocol!", 251 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 141, "#0d2377", new DateTime(2021, 1, 10, 2, 6, 42, 885, DateTimeKind.Local).AddTicks(117), "I'll compress the 1080p RAM alarm, that should alarm the RAM alarm!", 251 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 78, "#1b3419", new DateTime(2020, 3, 12, 8, 55, 40, 160, DateTimeKind.Local).AddTicks(2212), "Use the solid state SCSI driver, then you can back up the solid state driver!", 251 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 233, "#2e783a", new DateTime(2020, 11, 28, 21, 37, 45, 234, DateTimeKind.Local).AddTicks(5574), "Use the solid state SDD interface, then you can transmit the solid state interface!", 8 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 117, "#674164", new DateTime(2021, 1, 20, 19, 2, 27, 224, DateTimeKind.Local).AddTicks(5975), "hacking the pixel won't do anything, we need to reboot the haptic RAM pixel!", 8 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 48, "#230e1b", new DateTime(2021, 2, 12, 4, 5, 21, 898, DateTimeKind.Local).AddTicks(7079), "I'll bypass the cross-platform GB hard drive, that should hard drive the GB hard drive!", 8 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1109, "#185274", new DateTime(2021, 2, 14, 4, 49, 12, 567, DateTimeKind.Local).AddTicks(9376), "If we synthesize the capacitor, we can get to the RAM capacitor through the cross-platform RAM capacitor!", 250 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1092, "#76403a", new DateTime(2021, 2, 25, 12, 49, 18, 815, DateTimeKind.Local).AddTicks(8716), "Use the primary COM bandwidth, then you can override the primary bandwidth!", 250 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1019, "#7e1952", new DateTime(2020, 6, 20, 18, 22, 10, 4, DateTimeKind.Local).AddTicks(4563), "We need to override the auxiliary COM driver!", 250 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 861, "#29697e", new DateTime(2020, 6, 17, 5, 7, 15, 849, DateTimeKind.Local).AddTicks(8567), "I'll bypass the solid state PNG interface, that should interface the PNG interface!", 250 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 857, "#686e4b", new DateTime(2021, 2, 23, 6, 22, 2, 731, DateTimeKind.Local).AddTicks(8758), "copying the sensor won't do anything, we need to navigate the open-source EXE sensor!", 250 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 841, "#446e0f", new DateTime(2020, 3, 8, 21, 34, 1, 229, DateTimeKind.Local).AddTicks(9840), "The PNG port is down, index the redundant port so we can index the PNG port!", 250 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 535, "#387576", new DateTime(2020, 6, 14, 23, 29, 47, 770, DateTimeKind.Local).AddTicks(8805), "Try to bypass the PNG array, maybe it will bypass the redundant array!", 250 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 626, "#2f2430", new DateTime(2020, 6, 29, 22, 0, 35, 720, DateTimeKind.Local).AddTicks(9886), "Try to calculate the ADP application, maybe it will calculate the open-source application!", 288 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 375, "#29794d", new DateTime(2020, 12, 1, 12, 37, 45, 562, DateTimeKind.Local).AddTicks(7695), "You can't calculate the card without bypassing the digital COM card!", 288 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 326, "#2b503a", new DateTime(2020, 5, 1, 8, 10, 30, 202, DateTimeKind.Local).AddTicks(9791), "The PCI transmitter is down, reboot the primary transmitter so we can reboot the PCI transmitter!", 288 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 297, "#575b53", new DateTime(2020, 6, 11, 18, 25, 36, 951, DateTimeKind.Local).AddTicks(590), "transmitting the matrix won't do anything, we need to quantify the online SQL matrix!", 288 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 252, "#360950", new DateTime(2020, 3, 25, 23, 30, 4, 86, DateTimeKind.Local).AddTicks(3194), "We need to compress the online IB application!", 24 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 361, "#50165f", new DateTime(2020, 6, 7, 9, 41, 18, 562, DateTimeKind.Local).AddTicks(3316), "I'll synthesize the digital SAS capacitor, that should capacitor the SAS capacitor!", 24 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 656, "#0f6838", new DateTime(2020, 10, 11, 3, 13, 0, 412, DateTimeKind.Local).AddTicks(4584), "Try to bypass the ADP microchip, maybe it will bypass the 1080p microchip!", 10 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 454, "#6d630c", new DateTime(2020, 10, 1, 14, 20, 40, 738, DateTimeKind.Local).AddTicks(155), "The SMTP protocol is down, input the solid state protocol so we can input the SMTP protocol!", 10 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 834, "#18494f", new DateTime(2020, 8, 10, 11, 15, 31, 168, DateTimeKind.Local).AddTicks(6922), "calculating the system won't do anything, we need to parse the back-end ADP system!", 259 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 705, "#6b0a28", new DateTime(2020, 7, 28, 22, 59, 55, 984, DateTimeKind.Local).AddTicks(6556), "Use the solid state XML pixel, then you can generate the solid state pixel!", 259 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1013, "#3d3f2b", new DateTime(2020, 7, 2, 12, 44, 50, 888, DateTimeKind.Local).AddTicks(5203), "Try to copy the CSS protocol, maybe it will copy the redundant protocol!", 10 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 549, "#2c7668", new DateTime(2020, 4, 18, 16, 27, 15, 26, DateTimeKind.Local).AddTicks(7125), "Try to synthesize the XML hard drive, maybe it will synthesize the 1080p hard drive!", 24 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 120, "#5a3229", new DateTime(2020, 8, 5, 11, 40, 46, 963, DateTimeKind.Local).AddTicks(324), "transmitting the microchip won't do anything, we need to reboot the open-source CSS microchip!", 25 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1009, "#617b47", new DateTime(2021, 1, 25, 0, 48, 42, 7, DateTimeKind.Local).AddTicks(1192), "I'll calculate the primary HDD pixel, that should pixel the HDD pixel!", 258 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 718, "#4e5b51", new DateTime(2020, 8, 31, 4, 33, 25, 604, DateTimeKind.Local).AddTicks(1901), "Use the virtual RAM pixel, then you can bypass the virtual pixel!", 258 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 550, "#445b2b", new DateTime(2020, 3, 21, 10, 49, 10, 528, DateTimeKind.Local).AddTicks(6476), "Use the solid state USB system, then you can hack the solid state system!", 258 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 542, "#583951", new DateTime(2020, 11, 7, 5, 14, 40, 978, DateTimeKind.Local).AddTicks(5481), "Use the back-end PNG hard drive, then you can program the back-end hard drive!", 258 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 165, "#793876", new DateTime(2021, 1, 15, 14, 49, 18, 801, DateTimeKind.Local).AddTicks(9459), "If we hack the interface, we can get to the HTTP interface through the auxiliary HTTP interface!", 258 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 935, "#204804", new DateTime(2020, 9, 14, 2, 52, 0, 76, DateTimeKind.Local).AddTicks(2396), "We need to transmit the mobile RSS application!", 24 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1031, "#55535f", new DateTime(2021, 1, 26, 7, 4, 40, 238, DateTimeKind.Local).AddTicks(2699), "hacking the capacitor won't do anything, we need to override the open-source EXE capacitor!", 285 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 989, "#46540f", new DateTime(2020, 8, 8, 12, 54, 45, 309, DateTimeKind.Local).AddTicks(8618), "You can't reboot the matrix without backing up the virtual EXE matrix!", 285 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1125, "#192d32", new DateTime(2021, 2, 20, 6, 18, 53, 890, DateTimeKind.Local).AddTicks(8071), "We need to synthesize the bluetooth AI interface!", 23 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 617, "#036907", new DateTime(2021, 3, 2, 7, 59, 14, 667, DateTimeKind.Local).AddTicks(7466), "I'll generate the primary PNG driver, that should driver the PNG driver!", 261 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 545, "#16582e", new DateTime(2020, 10, 6, 8, 1, 25, 183, DateTimeKind.Local).AddTicks(1673), "If we quantify the panel, we can get to the XML panel through the primary XML panel!", 261 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 479, "#004024", new DateTime(2020, 11, 5, 12, 13, 48, 81, DateTimeKind.Local).AddTicks(5822), "Use the primary SCSI program, then you can transmit the primary program!", 261 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 329, "#0c350b", new DateTime(2020, 12, 25, 15, 25, 43, 998, DateTimeKind.Local).AddTicks(7645), "If we quantify the pixel, we can get to the EXE pixel through the 1080p EXE pixel!", 261 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 322, "#111b21", new DateTime(2020, 6, 19, 1, 52, 16, 251, DateTimeKind.Local).AddTicks(4859), "I'll transmit the open-source TCP array, that should array the TCP array!", 261 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 189, "#3f0c06", new DateTime(2021, 2, 13, 16, 31, 3, 948, DateTimeKind.Local).AddTicks(983), "We need to back up the cross-platform CSS application!", 261 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 476, "#502316", new DateTime(2020, 6, 28, 12, 56, 5, 171, DateTimeKind.Local).AddTicks(6094), "You can't reboot the interface without connecting the back-end ADP interface!", 23 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 259, "#1c5b15", new DateTime(2020, 7, 22, 5, 41, 15, 614, DateTimeKind.Local).AddTicks(2904), "I'll connect the online THX hard drive, that should hard drive the THX hard drive!", 285 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 772, "#6a4a68", new DateTime(2021, 1, 4, 21, 31, 57, 654, DateTimeKind.Local).AddTicks(3877), "I'll program the auxiliary EXE microchip, that should microchip the EXE microchip!", 23 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 879, "#6d4235", new DateTime(2020, 6, 11, 6, 8, 56, 802, DateTimeKind.Local).AddTicks(8118), "The SDD application is down, reboot the multi-byte application so we can reboot the SDD application!", 23 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 773, "#6a5b15", new DateTime(2021, 2, 3, 3, 16, 17, 270, DateTimeKind.Local).AddTicks(8484), "You can't input the monitor without navigating the optical SSL monitor!", 260 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 115, "#51196b", new DateTime(2020, 4, 27, 13, 51, 38, 849, DateTimeKind.Local).AddTicks(6053), "I'll generate the cross-platform HTTP array, that should array the HTTP array!", 260 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 619, "#223444", new DateTime(2021, 1, 8, 14, 56, 35, 302, DateTimeKind.Local).AddTicks(6583), "Try to copy the HTTP program, maybe it will copy the bluetooth program!", 285 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 965, "#475c43", new DateTime(2020, 5, 7, 5, 53, 55, 42, DateTimeKind.Local).AddTicks(1634), "parsing the pixel won't do anything, we need to compress the auxiliary TCP pixel!", 285 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 994, "#64595f", new DateTime(2020, 9, 23, 7, 41, 18, 114, DateTimeKind.Local).AddTicks(863), "Use the 1080p THX card, then you can parse the 1080p card!", 23 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 281, "#236617", new DateTime(2020, 5, 24, 21, 2, 38, 586, DateTimeKind.Local).AddTicks(4870), "The SQL card is down, transmit the mobile card so we can transmit the SQL card!", 25 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1142, "#715d6f", new DateTime(2020, 5, 3, 14, 52, 47, 720, DateTimeKind.Local).AddTicks(952), "Use the back-end ADP capacitor, then you can compress the back-end capacitor!", 22 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 977, "#794c54", new DateTime(2020, 9, 26, 7, 35, 27, 15, DateTimeKind.Local).AddTicks(674), "Use the primary XSS system, then you can bypass the primary system!", 25 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 296, "#6a2601", new DateTime(2020, 6, 14, 2, 18, 32, 640, DateTimeKind.Local).AddTicks(4854), "Use the digital JSON application, then you can calculate the digital application!", 286 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 735, "#0f010a", new DateTime(2020, 10, 2, 23, 49, 49, 475, DateTimeKind.Local).AddTicks(498), "Try to compress the RAM circuit, maybe it will compress the bluetooth circuit!", 26 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1105, "#63286d", new DateTime(2020, 5, 23, 6, 9, 41, 519, DateTimeKind.Local).AddTicks(9581), "transmitting the hard drive won't do anything, we need to hack the multi-byte THX hard drive!", 26 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 319, "#2c7a23", new DateTime(2020, 9, 2, 1, 48, 31, 744, DateTimeKind.Local).AddTicks(5399), "Use the open-source USB pixel, then you can program the open-source pixel!", 9 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1119, "#157f0e", new DateTime(2020, 7, 23, 7, 23, 13, 20, DateTimeKind.Local).AddTicks(6763), "Try to parse the HTTP bandwidth, maybe it will parse the bluetooth bandwidth!", 255 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1090, "#40624f", new DateTime(2020, 11, 10, 1, 38, 38, 881, DateTimeKind.Local).AddTicks(7815), "If we compress the capacitor, we can get to the PCI capacitor through the multi-byte PCI capacitor!", 255 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 832, "#632b5a", new DateTime(2021, 1, 11, 1, 53, 43, 656, DateTimeKind.Local).AddTicks(1432), "Use the 1080p PNG application, then you can copy the 1080p application!", 255 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 249, "#0c4358", new DateTime(2020, 11, 20, 21, 38, 57, 290, DateTimeKind.Local).AddTicks(4319), "I'll navigate the solid state HDD interface, that should interface the HDD interface!", 26 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 413, "#513a7a", new DateTime(2020, 5, 15, 19, 25, 25, 514, DateTimeKind.Local).AddTicks(6250), "calculating the program won't do anything, we need to copy the bluetooth PNG program!", 255 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 69, "#17730f", new DateTime(2020, 4, 11, 14, 43, 51, 759, DateTimeKind.Local).AddTicks(3967), "Try to connect the GB application, maybe it will connect the digital application!", 287 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 649, "#310865", new DateTime(2021, 1, 22, 11, 5, 21, 783, DateTimeKind.Local).AddTicks(5093), "Use the virtual XSS panel, then you can input the virtual panel!", 287 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 918, "#601518", new DateTime(2020, 8, 28, 14, 26, 56, 540, DateTimeKind.Local).AddTicks(9649), "You can't navigate the panel without bypassing the multi-byte HTTP panel!", 287 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 967, "#740f49", new DateTime(2020, 11, 8, 13, 46, 8, 704, DateTimeKind.Local).AddTicks(381), "Try to quantify the GB microchip, maybe it will quantify the optical microchip!", 287 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1187, "#610e5e", new DateTime(2020, 3, 28, 19, 2, 15, 918, DateTimeKind.Local).AddTicks(727), "I'll reboot the neural SAS interface, that should interface the SAS interface!", 8 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 129, "#720428", new DateTime(2020, 5, 31, 8, 48, 24, 53, DateTimeKind.Local).AddTicks(582), "The GB card is down, parse the back-end card so we can parse the GB card!", 27 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 41, "#107f10", new DateTime(2020, 10, 14, 8, 54, 20, 953, DateTimeKind.Local).AddTicks(3760), "We need to generate the redundant AI circuit!", 255 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 122, "#3a5713", new DateTime(2020, 10, 26, 11, 39, 2, 229, DateTimeKind.Local).AddTicks(3952), "If we override the protocol, we can get to the JSON protocol through the haptic JSON protocol!", 26 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 843, "#582642", new DateTime(2020, 9, 17, 8, 13, 11, 97, DateTimeKind.Local).AddTicks(770), "I'll parse the open-source COM firewall, that should firewall the COM firewall!", 9 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 575, "#490948", new DateTime(2020, 11, 20, 14, 45, 32, 890, DateTimeKind.Local).AddTicks(2965), "We need to reboot the bluetooth AGP pixel!", 256 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1162, "#04210b", new DateTime(2020, 5, 20, 17, 34, 57, 457, DateTimeKind.Local).AddTicks(2617), "Try to quantify the FTP card, maybe it will quantify the digital card!", 257 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 702, "#1e616c", new DateTime(2020, 8, 6, 0, 56, 11, 276, DateTimeKind.Local).AddTicks(2796), "The GB feed is down, hack the online feed so we can hack the GB feed!", 286 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 987, "#194e70", new DateTime(2020, 8, 18, 11, 48, 57, 994, DateTimeKind.Local).AddTicks(5058), "The SAS firewall is down, quantify the open-source firewall so we can quantify the SAS firewall!", 286 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1069, "#5e5207", new DateTime(2020, 6, 3, 0, 16, 5, 93, DateTimeKind.Local).AddTicks(8024), "I'll connect the primary AGP array, that should array the AGP array!", 286 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1048, "#042a6d", new DateTime(2020, 11, 22, 16, 40, 49, 283, DateTimeKind.Local).AddTicks(4305), "You can't copy the sensor without transmitting the virtual XSS sensor!", 257 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 708, "#521413", new DateTime(2020, 8, 27, 7, 22, 10, 482, DateTimeKind.Local).AddTicks(7535), "Use the digital XSS interface, then you can transmit the digital interface!", 257 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1138, "#6f0255", new DateTime(2021, 2, 14, 17, 3, 49, 864, DateTimeKind.Local).AddTicks(1547), "Use the solid state ADP hard drive, then you can back up the solid state hard drive!", 286 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 685, "#3b3f74", new DateTime(2020, 5, 10, 21, 8, 45, 815, DateTimeKind.Local).AddTicks(6457), "navigating the circuit won't do anything, we need to connect the redundant THX circuit!", 257 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 680, "#142963", new DateTime(2020, 10, 25, 6, 58, 36, 563, DateTimeKind.Local).AddTicks(1624), "If we connect the hard drive, we can get to the XML hard drive through the wireless XML hard drive!", 257 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 667, "#653d51", new DateTime(2020, 12, 24, 20, 28, 58, 389, DateTimeKind.Local).AddTicks(7051), "Use the virtual HTTP hard drive, then you can override the virtual hard drive!", 257 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 207, "#0e107d", new DateTime(2020, 9, 19, 15, 31, 6, 608, DateTimeKind.Local).AddTicks(7942), "If we synthesize the array, we can get to the HDD array through the mobile HDD array!", 257 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1166, "#1d2e44", new DateTime(2020, 10, 9, 14, 28, 29, 964, DateTimeKind.Local).AddTicks(1904), "parsing the sensor won't do anything, we need to bypass the 1080p THX sensor!", 9 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 736, "#11095f", new DateTime(2021, 3, 2, 8, 13, 27, 20, DateTimeKind.Local).AddTicks(6822), "The AI transmitter is down, input the solid state transmitter so we can input the AI transmitter!", 256 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 674, "#634a30", new DateTime(2020, 8, 10, 19, 49, 5, 562, DateTimeKind.Local).AddTicks(1288), "The SSL transmitter is down, navigate the 1080p transmitter so we can navigate the SSL transmitter!", 256 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 595, "#265d7b", new DateTime(2020, 9, 20, 18, 39, 40, 612, DateTimeKind.Local).AddTicks(1341), "Try to bypass the RAM matrix, maybe it will bypass the multi-byte matrix!", 256 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 57, "#6e7268", new DateTime(2021, 3, 3, 10, 14, 18, 694, DateTimeKind.Local).AddTicks(8888), "We need to transmit the online JSON driver!", 286 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 36, "#08277e", new DateTime(2020, 6, 18, 8, 41, 29, 901, DateTimeKind.Local).AddTicks(4465), "Try to hack the SAS pixel, maybe it will hack the mobile pixel!", 15 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 521, "#325b1d", new DateTime(2020, 12, 9, 18, 25, 12, 13, DateTimeKind.Local).AddTicks(5154), "You can't back up the driver without programming the cross-platform FTP driver!", 106 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1099, "#66465c", new DateTime(2021, 1, 26, 18, 30, 28, 34, DateTimeKind.Local).AddTicks(6065), "I'll compress the primary RAM sensor, that should sensor the RAM sensor!", 224 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 204, "#5b5819", new DateTime(2020, 7, 23, 11, 3, 51, 686, DateTimeKind.Local).AddTicks(7313), "Try to index the PNG sensor, maybe it will index the open-source sensor!", 146 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 116, "#051b73", new DateTime(2020, 5, 5, 20, 7, 34, 938, DateTimeKind.Local).AddTicks(2610), "The PNG card is down, transmit the 1080p card so we can transmit the PNG card!", 83 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 471, "#582842", new DateTime(2020, 12, 1, 14, 8, 6, 521, DateTimeKind.Local).AddTicks(8337), "generating the capacitor won't do anything, we need to copy the auxiliary ADP capacitor!", 83 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 576, "#4e1456", new DateTime(2020, 8, 3, 4, 55, 18, 517, DateTimeKind.Local).AddTicks(6205), "Try to compress the THX port, maybe it will compress the primary port!", 83 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 658, "#10017c", new DateTime(2020, 6, 24, 16, 33, 48, 641, DateTimeKind.Local).AddTicks(4354), "The PNG driver is down, synthesize the 1080p driver so we can synthesize the PNG driver!", 145 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 607, "#726c1b", new DateTime(2021, 2, 26, 12, 9, 59, 860, DateTimeKind.Local).AddTicks(6009), "bypassing the system won't do anything, we need to back up the online JBOD system!", 145 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 42, "#0f7613", new DateTime(2020, 5, 26, 4, 26, 46, 732, DateTimeKind.Local).AddTicks(3450), "We need to connect the open-source SMS panel!", 145 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1193, "#706704", new DateTime(2020, 4, 5, 15, 32, 53, 543, DateTimeKind.Local).AddTicks(4317), "We need to input the neural PCI sensor!", 144 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 818, "#73434a", new DateTime(2020, 4, 22, 4, 17, 14, 261, DateTimeKind.Local).AddTicks(8692), "I'll generate the optical GB hard drive, that should hard drive the GB hard drive!", 144 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 437, "#09134a", new DateTime(2020, 4, 14, 19, 17, 46, 988, DateTimeKind.Local).AddTicks(4618), "The USB driver is down, copy the 1080p driver so we can copy the USB driver!", 144 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 323, "#772077", new DateTime(2020, 4, 25, 7, 54, 20, 561, DateTimeKind.Local).AddTicks(5508), "quantifying the sensor won't do anything, we need to program the auxiliary JSON sensor!", 144 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 93, "#0c6200", new DateTime(2020, 3, 4, 23, 2, 40, 627, DateTimeKind.Local).AddTicks(4351), "We need to override the solid state GB firewall!", 84 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 688, "#525d78", new DateTime(2021, 2, 25, 19, 1, 2, 931, DateTimeKind.Local).AddTicks(3757), "The RSS firewall is down, back up the digital firewall so we can back up the RSS firewall!", 84 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 998, "#7e4a4b", new DateTime(2020, 4, 28, 19, 11, 3, 580, DateTimeKind.Local).AddTicks(7007), "If we hack the monitor, we can get to the FTP monitor through the back-end FTP monitor!", 143 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 32, "#254517", new DateTime(2020, 12, 8, 4, 18, 42, 654, DateTimeKind.Local).AddTicks(9746), "The AI hard drive is down, hack the optical hard drive so we can hack the AI hard drive!", 143 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1072, "#3d1d2f", new DateTime(2020, 10, 15, 6, 58, 1, 929, DateTimeKind.Local).AddTicks(3052), "I'll transmit the auxiliary EXE panel, that should panel the EXE panel!", 142 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 762, "#41153f", new DateTime(2020, 12, 27, 0, 13, 25, 155, DateTimeKind.Local).AddTicks(1172), "Use the online IB array, then you can reboot the online array!", 142 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 264, "#225575", new DateTime(2020, 10, 8, 19, 12, 40, 408, DateTimeKind.Local).AddTicks(5745), "Use the primary XML pixel, then you can compress the primary pixel!", 146 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 573, "#761e71", new DateTime(2020, 6, 1, 18, 47, 41, 421, DateTimeKind.Local).AddTicks(9893), "We need to index the online AGP alarm!", 146 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 235, "#081d1c", new DateTime(2020, 12, 18, 5, 43, 30, 506, DateTimeKind.Local).AddTicks(6720), "I'll compress the primary COM interface, that should interface the COM interface!", 147 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 268, "#7f2e08", new DateTime(2020, 6, 17, 21, 30, 25, 723, DateTimeKind.Local).AddTicks(6979), "The XSS array is down, hack the mobile array so we can hack the XSS array!", 147 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 761, "#3b6313", new DateTime(2020, 9, 15, 12, 27, 53, 355, DateTimeKind.Local).AddTicks(6925), "You can't copy the protocol without quantifying the open-source COM protocol!", 151 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 77, "#4b7a7f", new DateTime(2020, 8, 8, 11, 24, 4, 21, DateTimeKind.Local).AddTicks(8823), "Try to transmit the CSS interface, maybe it will transmit the optical interface!", 151 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1114, "#474f7a", new DateTime(2020, 6, 1, 1, 16, 29, 488, DateTimeKind.Local).AddTicks(1649), "Try to generate the SMTP application, maybe it will generate the bluetooth application!", 81 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 704, "#5a1b40", new DateTime(2020, 6, 27, 7, 17, 53, 806, DateTimeKind.Local).AddTicks(4724), "generating the application won't do anything, we need to navigate the multi-byte ADP application!", 150 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 566, "#326d1d", new DateTime(2020, 8, 8, 1, 13, 10, 557, DateTimeKind.Local).AddTicks(8618), "quantifying the feed won't do anything, we need to index the cross-platform ADP feed!", 150 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 88, "#5d1314", new DateTime(2020, 12, 11, 22, 4, 40, 991, DateTimeKind.Local).AddTicks(5162), "The IB matrix is down, calculate the cross-platform matrix so we can calculate the IB matrix!", 150 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 985, "#80582c", new DateTime(2020, 7, 9, 16, 38, 54, 40, DateTimeKind.Local).AddTicks(1578), "We need to generate the digital SMS pixel!", 300 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 377, "#240f1b", new DateTime(2020, 11, 23, 9, 46, 21, 264, DateTimeKind.Local).AddTicks(1428), "I'll input the wireless SCSI panel, that should panel the SCSI panel!", 149 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 557, "#3d2f54", new DateTime(2020, 3, 28, 7, 46, 3, 597, DateTimeKind.Local).AddTicks(9726), "I'll reboot the digital JBOD pixel, that should pixel the JBOD pixel!", 142 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 4, "#793d21", new DateTime(2020, 8, 2, 1, 57, 7, 572, DateTimeKind.Local).AddTicks(3870), "You can't calculate the bandwidth without overriding the redundant JBOD bandwidth!", 149 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1010, "#4d1729", new DateTime(2020, 3, 17, 18, 26, 27, 183, DateTimeKind.Local).AddTicks(538), "You can't transmit the matrix without indexing the mobile SSL matrix!", 148 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 811, "#7e645b", new DateTime(2020, 3, 13, 6, 54, 18, 107, DateTimeKind.Local).AddTicks(5239), "You can't calculate the pixel without connecting the haptic SQL pixel!", 148 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 492, "#731355", new DateTime(2020, 9, 29, 18, 9, 20, 92, DateTimeKind.Local).AddTicks(418), "The HTTP matrix is down, navigate the wireless matrix so we can navigate the HTTP matrix!", 148 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 51, "#033e21", new DateTime(2020, 11, 24, 18, 36, 30, 764, DateTimeKind.Local).AddTicks(9076), "If we generate the matrix, we can get to the SMTP matrix through the virtual SMTP matrix!", 148 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 838, "#61075c", new DateTime(2021, 1, 10, 20, 11, 59, 974, DateTimeKind.Local).AddTicks(9851), "I'll connect the auxiliary RAM matrix, that should matrix the RAM matrix!", 147 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 746, "#555d3b", new DateTime(2020, 12, 29, 13, 34, 22, 365, DateTimeKind.Local).AddTicks(9580), "You can't connect the program without synthesizing the redundant HTTP program!", 147 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 659, "#267d70", new DateTime(2021, 2, 4, 10, 1, 48, 6, DateTimeKind.Local).AddTicks(7854), "We need to calculate the primary THX bandwidth!", 147 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 439, "#43137b", new DateTime(2020, 4, 15, 18, 52, 55, 881, DateTimeKind.Local).AddTicks(86), "overriding the panel won't do anything, we need to generate the solid state SMTP panel!", 147 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1181, "#162316", new DateTime(2020, 4, 8, 14, 55, 14, 953, DateTimeKind.Local).AddTicks(4800), "The GB sensor is down, bypass the primary sensor so we can bypass the GB sensor!", 148 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 443, "#441f08", new DateTime(2020, 7, 2, 20, 23, 30, 546, DateTimeKind.Local).AddTicks(5441), "I'll bypass the online RAM system, that should system the RAM system!", 85 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1183, "#3a2a21", new DateTime(2020, 5, 4, 19, 6, 40, 159, DateTimeKind.Local).AddTicks(8672), "You can't parse the application without synthesizing the digital CSS application!", 85 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1155, "#314e04", new DateTime(2020, 3, 28, 13, 42, 32, 353, DateTimeKind.Local).AddTicks(2513), "parsing the port won't do anything, we need to input the redundant AGP port!", 141 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 546, "#5a2704", new DateTime(2020, 11, 26, 2, 28, 33, 324, DateTimeKind.Local).AddTicks(2030), "You can't bypass the driver without quantifying the wireless RSS driver!", 137 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1035, "#38270d", new DateTime(2020, 10, 20, 13, 14, 47, 161, DateTimeKind.Local).AddTicks(7463), "If we bypass the monitor, we can get to the RSS monitor through the haptic RSS monitor!", 87 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1194, "#2e023a", new DateTime(2020, 11, 7, 11, 36, 44, 297, DateTimeKind.Local).AddTicks(1320), "If we hack the matrix, we can get to the THX matrix through the mobile THX matrix!", 87 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 457, "#571a67", new DateTime(2021, 1, 27, 9, 2, 27, 703, DateTimeKind.Local).AddTicks(3412), "The SAS card is down, override the multi-byte card so we can override the SAS card!", 88 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 676, "#102779", new DateTime(2020, 4, 20, 9, 0, 18, 669, DateTimeKind.Local).AddTicks(4211), "We need to hack the cross-platform COM bandwidth!", 88 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 766, "#803809", new DateTime(2020, 3, 6, 9, 26, 20, 633, DateTimeKind.Local).AddTicks(1059), "programming the firewall won't do anything, we need to navigate the solid state PNG firewall!", 136 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 416, "#263c69", new DateTime(2021, 1, 10, 3, 16, 52, 60, DateTimeKind.Local).AddTicks(5643), "Try to compress the THX monitor, maybe it will compress the open-source monitor!", 136 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 127, "#221257", new DateTime(2020, 4, 5, 10, 39, 39, 311, DateTimeKind.Local).AddTicks(284), "You can't generate the circuit without quantifying the cross-platform EXE circuit!", 136 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 548, "#795c7f", new DateTime(2020, 9, 8, 18, 4, 16, 854, DateTimeKind.Local).AddTicks(8792), "Try to override the COM protocol, maybe it will override the open-source protocol!", 137 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 831, "#66416f", new DateTime(2021, 2, 10, 0, 24, 10, 773, DateTimeKind.Local).AddTicks(1853), "I'll bypass the virtual CSS card, that should card the CSS card!", 88 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1190, "#265e6c", new DateTime(2020, 3, 4, 10, 4, 48, 173, DateTimeKind.Local).AddTicks(1743), "You can't bypass the driver without overriding the wireless SMS driver!", 135 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1130, "#535a69", new DateTime(2020, 11, 13, 12, 35, 53, 360, DateTimeKind.Local).AddTicks(3122), "Use the digital XSS firewall, then you can navigate the digital firewall!", 135 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 706, "#292a31", new DateTime(2020, 9, 9, 4, 6, 29, 956, DateTimeKind.Local).AddTicks(3556), "The SDD card is down, override the cross-platform card so we can override the SDD card!", 135 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 666, "#7c057e", new DateTime(2020, 9, 25, 20, 33, 27, 5, DateTimeKind.Local).AddTicks(210), "You can't parse the hard drive without bypassing the auxiliary COM hard drive!", 135 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 582, "#3d084a", new DateTime(2021, 1, 13, 22, 6, 26, 554, DateTimeKind.Local).AddTicks(4273), "The THX bus is down, connect the haptic bus so we can connect the THX bus!", 135 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 367, "#096314", new DateTime(2020, 3, 16, 23, 50, 3, 573, DateTimeKind.Local).AddTicks(8800), "Use the haptic AGP feed, then you can copy the haptic feed!", 135 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 307, "#497f77", new DateTime(2020, 5, 19, 22, 36, 48, 224, DateTimeKind.Local).AddTicks(4813), "The SCSI transmitter is down, program the wireless transmitter so we can program the SCSI transmitter!", 135 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 133, "#184e28", new DateTime(2020, 8, 12, 4, 52, 55, 943, DateTimeKind.Local).AddTicks(7898), "We need to parse the solid state THX interface!", 89 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1110, "#430764", new DateTime(2021, 2, 8, 15, 36, 29, 532, DateTimeKind.Local).AddTicks(8069), "If we transmit the driver, we can get to the PNG driver through the auxiliary PNG driver!", 88 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 800, "#61650b", new DateTime(2020, 5, 1, 11, 31, 45, 567, DateTimeKind.Local).AddTicks(8544), "If we quantify the feed, we can get to the GB feed through the open-source GB feed!", 81 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 558, "#515c6a", new DateTime(2020, 7, 12, 23, 22, 18, 986, DateTimeKind.Local).AddTicks(4478), "bypassing the panel won't do anything, we need to compress the bluetooth HDD panel!", 137 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 671, "#02621c", new DateTime(2020, 8, 3, 18, 47, 34, 6, DateTimeKind.Local).AddTicks(7547), "Try to connect the TCP driver, maybe it will connect the optical driver!", 137 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 386, "#7e0a14", new DateTime(2020, 8, 9, 21, 13, 17, 348, DateTimeKind.Local).AddTicks(1195), "Use the digital XSS firewall, then you can parse the digital firewall!", 141 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 104, "#243e1d", new DateTime(2020, 7, 6, 0, 35, 54, 99, DateTimeKind.Local).AddTicks(8386), "I'll navigate the neural RAM microchip, that should microchip the RAM microchip!", 141 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1139, "#62434b", new DateTime(2020, 8, 12, 4, 7, 54, 978, DateTimeKind.Local).AddTicks(9350), "We need to back up the 1080p IB matrix!", 140 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 551, "#3e2e28", new DateTime(2020, 8, 23, 3, 43, 36, 771, DateTimeKind.Local).AddTicks(3411), "I'll back up the primary GB capacitor, that should capacitor the GB capacitor!", 140 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 456, "#181a41", new DateTime(2020, 10, 13, 5, 36, 26, 248, DateTimeKind.Local).AddTicks(4327), "If we index the port, we can get to the PNG port through the online PNG port!", 140 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 152, "#767a73", new DateTime(2020, 7, 26, 18, 40, 53, 96, DateTimeKind.Local).AddTicks(7015), "If we connect the monitor, we can get to the AGP monitor through the neural AGP monitor!", 140 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 95, "#051728", new DateTime(2020, 3, 29, 12, 48, 37, 17, DateTimeKind.Local).AddTicks(5751), "Try to parse the AI bandwidth, maybe it will parse the primary bandwidth!", 140 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 158, "#035c1e", new DateTime(2020, 6, 14, 1, 18, 32, 427, DateTimeKind.Local).AddTicks(2412), "Use the wireless RSS microchip, then you can override the wireless microchip!", 86 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 641, "#612a0e", new DateTime(2021, 1, 16, 16, 8, 43, 620, DateTimeKind.Local).AddTicks(8525), "Use the virtual SAS bus, then you can bypass the virtual bus!", 137 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 600, "#29003a", new DateTime(2020, 9, 29, 21, 53, 28, 158, DateTimeKind.Local).AddTicks(7213), "If we connect the sensor, we can get to the SAS sensor through the redundant SAS sensor!", 86 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1191, "#376e60", new DateTime(2020, 6, 16, 14, 29, 59, 686, DateTimeKind.Local).AddTicks(2377), "I'll calculate the back-end THX interface, that should interface the THX interface!", 139 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 581, "#661101", new DateTime(2020, 12, 10, 13, 18, 32, 943, DateTimeKind.Local).AddTicks(9882), "The USB protocol is down, transmit the auxiliary protocol so we can transmit the USB protocol!", 139 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 338, "#4f5c47", new DateTime(2020, 11, 2, 14, 51, 50, 371, DateTimeKind.Local).AddTicks(3830), "navigating the sensor won't do anything, we need to index the optical XML sensor!", 139 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1108, "#75560f", new DateTime(2020, 7, 2, 3, 58, 51, 255, DateTimeKind.Local).AddTicks(5726), "generating the transmitter won't do anything, we need to index the digital XSS transmitter!", 138 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 512, "#45335a", new DateTime(2020, 7, 28, 14, 10, 10, 948, DateTimeKind.Local).AddTicks(5198), "Use the multi-byte SDD application, then you can input the multi-byte application!", 138 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 489, "#02044d", new DateTime(2020, 11, 28, 15, 40, 4, 57, DateTimeKind.Local).AddTicks(3173), "I'll reboot the online SQL circuit, that should circuit the SQL circuit!", 87 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 883, "#134d09", new DateTime(2020, 4, 2, 14, 32, 52, 499, DateTimeKind.Local).AddTicks(8425), "If we connect the hard drive, we can get to the XSS hard drive through the 1080p XSS hard drive!", 137 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 707, "#720650", new DateTime(2020, 10, 8, 21, 59, 3, 793, DateTimeKind.Local).AddTicks(4914), "I'll navigate the primary PCI bandwidth, that should bandwidth the PCI bandwidth!", 137 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 712, "#6f445d", new DateTime(2020, 8, 17, 9, 45, 59, 332, DateTimeKind.Local).AddTicks(7789), "We need to connect the virtual HTTP bus!", 86 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 682, "#6b6f80", new DateTime(2020, 12, 10, 7, 21, 42, 444, DateTimeKind.Local).AddTicks(1306), "I'll synthesize the haptic SQL matrix, that should matrix the SQL matrix!", 81 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 621, "#267659", new DateTime(2021, 2, 27, 1, 35, 39, 417, DateTimeKind.Local).AddTicks(2586), "Use the open-source XML program, then you can bypass the open-source program!", 81 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 394, "#146a10", new DateTime(2020, 12, 19, 0, 7, 6, 978, DateTimeKind.Local).AddTicks(5040), "The THX port is down, calculate the bluetooth port so we can calculate the THX port!", 81 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 648, "#3c3540", new DateTime(2020, 8, 5, 4, 16, 56, 619, DateTimeKind.Local).AddTicks(4883), "The SCSI feed is down, copy the 1080p feed so we can copy the SCSI feed!", 75 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 896, "#134e4c", new DateTime(2020, 8, 28, 8, 26, 5, 733, DateTimeKind.Local).AddTicks(4968), "We need to back up the primary IB matrix!", 75 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1197, "#066423", new DateTime(2021, 1, 15, 16, 35, 41, 596, DateTimeKind.Local).AddTicks(418), "I'll compress the bluetooth XSS bandwidth, that should bandwidth the XSS bandwidth!", 75 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1041, "#467121", new DateTime(2020, 9, 13, 13, 25, 2, 189, DateTimeKind.Local).AddTicks(9892), "I'll parse the cross-platform CSS application, that should application the CSS application!", 162 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 154, "#137606", new DateTime(2021, 1, 28, 22, 18, 29, 886, DateTimeKind.Local).AddTicks(6115), "You can't index the firewall without quantifying the digital PNG firewall!", 162 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 153, "#4e1859", new DateTime(2020, 11, 29, 16, 5, 58, 856, DateTimeKind.Local).AddTicks(7501), "The FTP sensor is down, compress the redundant sensor so we can compress the FTP sensor!", 162 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1011, "#451861", new DateTime(2020, 7, 24, 5, 41, 23, 964, DateTimeKind.Local).AddTicks(3862), "Try to reboot the SMTP program, maybe it will reboot the redundant program!", 161 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 830, "#796578", new DateTime(2020, 4, 14, 20, 58, 36, 236, DateTimeKind.Local).AddTicks(2558), "connecting the bandwidth won't do anything, we need to reboot the 1080p ADP bandwidth!", 161 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 300, "#1f6e59", new DateTime(2020, 11, 26, 21, 24, 51, 502, DateTimeKind.Local).AddTicks(424), "compressing the card won't do anything, we need to navigate the redundant HTTP card!", 75 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 224, "#583238", new DateTime(2020, 12, 22, 7, 36, 22, 194, DateTimeKind.Local).AddTicks(7658), "If we index the circuit, we can get to the HTTP circuit through the auxiliary HTTP circuit!", 161 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1148, "#366c32", new DateTime(2020, 6, 6, 21, 54, 40, 158, DateTimeKind.Local).AddTicks(8669), "You can't hack the transmitter without calculating the 1080p AGP transmitter!", 160 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 927, "#597022", new DateTime(2020, 6, 11, 5, 22, 15, 856, DateTimeKind.Local).AddTicks(3023), "If we bypass the sensor, we can get to the EXE sensor through the bluetooth EXE sensor!", 160 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 620, "#330a3d", new DateTime(2020, 5, 5, 10, 15, 52, 506, DateTimeKind.Local).AddTicks(7077), "indexing the protocol won't do anything, we need to back up the cross-platform XSS protocol!", 160 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 205, "#444512", new DateTime(2020, 6, 14, 12, 17, 35, 465, DateTimeKind.Local).AddTicks(7210), "Try to input the HDD transmitter, maybe it will input the bluetooth transmitter!", 160 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 184, "#7a546f", new DateTime(2020, 6, 20, 0, 39, 22, 738, DateTimeKind.Local).AddTicks(1900), "If we parse the pixel, we can get to the JSON pixel through the open-source JSON pixel!", 160 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 68, "#24036c", new DateTime(2020, 6, 26, 4, 44, 20, 34, DateTimeKind.Local).AddTicks(4710), "hacking the transmitter won't do anything, we need to bypass the redundant GB transmitter!", 160 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 624, "#180e4e", new DateTime(2020, 7, 21, 9, 3, 58, 837, DateTimeKind.Local).AddTicks(1472), "Try to back up the RSS sensor, maybe it will back up the back-end sensor!", 76 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 698, "#3a7b47", new DateTime(2020, 4, 12, 1, 9, 29, 448, DateTimeKind.Local).AddTicks(8342), "You can't calculate the driver without overriding the optical SMS driver!", 76 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 6, "#081859", new DateTime(2020, 5, 12, 10, 34, 36, 325, DateTimeKind.Local).AddTicks(7096), "Use the neural THX matrix, then you can transmit the neural matrix!", 161 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1067, "#7c7c01", new DateTime(2021, 2, 13, 0, 45, 34, 464, DateTimeKind.Local).AddTicks(3970), "The ADP microchip is down, hack the virtual microchip so we can hack the ADP microchip!", 159 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 681, "#54554c", new DateTime(2020, 8, 21, 2, 43, 16, 274, DateTimeKind.Local).AddTicks(9042), "If we copy the circuit, we can get to the USB circuit through the primary USB circuit!", 163 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 25, "#2d0523", new DateTime(2020, 8, 23, 14, 49, 34, 73, DateTimeKind.Local).AddTicks(163), "You can't quantify the card without compressing the haptic SMS card!", 164 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 490, "#3b7112", new DateTime(2020, 9, 3, 16, 35, 59, 547, DateTimeKind.Local).AddTicks(5526), "The EXE system is down, index the primary system so we can index the EXE system!", 167 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 752, "#751661", new DateTime(2020, 8, 21, 23, 54, 53, 931, DateTimeKind.Local).AddTicks(3112), "The SMTP panel is down, parse the wireless panel so we can parse the SMTP panel!", 73 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 891, "#22657d", new DateTime(2020, 12, 14, 1, 4, 17, 25, DateTimeKind.Local).AddTicks(8614), "You can't reboot the feed without compressing the wireless IB feed!", 166 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 836, "#034f17", new DateTime(2020, 12, 16, 8, 40, 18, 356, DateTimeKind.Local).AddTicks(7703), "I'll navigate the haptic SMTP card, that should card the SMTP card!", 166 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 771, "#490032", new DateTime(2020, 9, 24, 11, 47, 57, 694, DateTimeKind.Local).AddTicks(5134), "I'll compress the mobile AI pixel, that should pixel the AI pixel!", 166 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 355, "#218069", new DateTime(2020, 12, 5, 21, 51, 51, 274, DateTimeKind.Local).AddTicks(5964), "Try to generate the USB circuit, maybe it will generate the multi-byte circuit!", 166 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1158, "#587638", new DateTime(2020, 7, 2, 2, 6, 3, 365, DateTimeKind.Local).AddTicks(7937), "I'll override the back-end USB feed, that should feed the USB feed!", 165 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1044, "#697b59", new DateTime(2020, 8, 12, 18, 45, 56, 227, DateTimeKind.Local).AddTicks(1624), "We need to parse the online THX hard drive!", 165 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 130, "#7d5540", new DateTime(2020, 8, 19, 17, 19, 37, 994, DateTimeKind.Local).AddTicks(9300), "Use the 1080p SMS protocol, then you can parse the 1080p protocol!", 74 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 754, "#1d7b0a", new DateTime(2020, 5, 31, 1, 52, 37, 693, DateTimeKind.Local).AddTicks(8990), "The SMTP circuit is down, compress the back-end circuit so we can compress the SMTP circuit!", 165 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 140, "#193f4e", new DateTime(2020, 7, 1, 3, 44, 34, 181, DateTimeKind.Local).AddTicks(5079), "Use the redundant JSON program, then you can transmit the redundant program!", 165 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 52, "#444446", new DateTime(2020, 6, 10, 14, 32, 23, 476, DateTimeKind.Local).AddTicks(7814), "If we reboot the protocol, we can get to the PCI protocol through the multi-byte PCI protocol!", 165 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1168, "#190e63", new DateTime(2020, 7, 6, 0, 44, 41, 109, DateTimeKind.Local).AddTicks(9746), "Try to reboot the COM alarm, maybe it will reboot the 1080p alarm!", 164 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 635, "#6d185d", new DateTime(2020, 7, 20, 16, 18, 33, 71, DateTimeKind.Local).AddTicks(6544), "Use the optical RSS transmitter, then you can hack the optical transmitter!", 164 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 633, "#0c792d", new DateTime(2020, 12, 20, 1, 36, 10, 506, DateTimeKind.Local).AddTicks(1964), "I'll reboot the wireless SCSI protocol, that should protocol the SCSI protocol!", 164 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 533, "#592d7b", new DateTime(2020, 8, 31, 16, 20, 19, 988, DateTimeKind.Local).AddTicks(4340), "I'll input the haptic CSS alarm, that should alarm the CSS alarm!", 164 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 369, "#3d2f30", new DateTime(2020, 12, 21, 2, 24, 57, 892, DateTimeKind.Local).AddTicks(5031), "Use the 1080p CSS hard drive, then you can index the 1080p hard drive!", 164 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 251, "#194e64", new DateTime(2020, 9, 1, 0, 24, 26, 369, DateTimeKind.Local).AddTicks(2416), "The SQL protocol is down, back up the cross-platform protocol so we can back up the SQL protocol!", 164 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 507, "#0e4c0b", new DateTime(2020, 8, 9, 3, 35, 45, 229, DateTimeKind.Local).AddTicks(4194), "You can't generate the monitor without compressing the online JSON monitor!", 165 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 286, "#48105e", new DateTime(2021, 2, 2, 0, 43, 40, 66, DateTimeKind.Local).AddTicks(7552), "Try to override the THX bandwidth, maybe it will override the cross-platform bandwidth!", 89 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 526, "#3d3310", new DateTime(2020, 6, 19, 21, 17, 47, 127, DateTimeKind.Local).AddTicks(2064), "The GB sensor is down, synthesize the virtual sensor so we can synthesize the GB sensor!", 159 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 313, "#0c706a", new DateTime(2020, 3, 11, 17, 52, 59, 771, DateTimeKind.Local).AddTicks(4287), "I'll generate the open-source PCI matrix, that should matrix the PCI matrix!", 159 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 618, "#565c32", new DateTime(2020, 11, 22, 10, 20, 51, 538, DateTimeKind.Local).AddTicks(3870), "transmitting the circuit won't do anything, we need to parse the wireless IB circuit!", 155 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 76, "#2a0932", new DateTime(2020, 6, 10, 22, 13, 23, 777, DateTimeKind.Local).AddTicks(3016), "Try to generate the SQL port, maybe it will generate the solid state port!", 155 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 171, "#167b6e", new DateTime(2020, 10, 8, 10, 49, 47, 47, DateTimeKind.Local).AddTicks(4211), "If we program the circuit, we can get to the COM circuit through the open-source COM circuit!", 79 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 797, "#3e4380", new DateTime(2020, 10, 28, 5, 21, 33, 974, DateTimeKind.Local).AddTicks(9679), "bypassing the bandwidth won't do anything, we need to program the cross-platform SAS bandwidth!", 79 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 451, "#60172f", new DateTime(2020, 5, 24, 22, 55, 49, 77, DateTimeKind.Local).AddTicks(9095), "Use the wireless SCSI bandwidth, then you can hack the wireless bandwidth!", 80 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 485, "#5e5729", new DateTime(2020, 6, 29, 8, 1, 39, 93, DateTimeKind.Local).AddTicks(5785), "parsing the panel won't do anything, we need to connect the primary ADP panel!", 80 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1075, "#6c5f02", new DateTime(2020, 7, 31, 15, 41, 38, 44, DateTimeKind.Local).AddTicks(2679), "We need to reboot the redundant HTTP system!", 153 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 850, "#341e20", new DateTime(2020, 4, 10, 6, 34, 24, 84, DateTimeKind.Local).AddTicks(24), "You can't bypass the pixel without calculating the back-end SSL pixel!", 153 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1028, "#240c20", new DateTime(2020, 8, 10, 2, 42, 10, 94, DateTimeKind.Local).AddTicks(8680), "We need to index the redundant SQL protocol!", 155 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 738, "#1e650c", new DateTime(2020, 5, 21, 8, 41, 42, 425, DateTimeKind.Local).AddTicks(2986), "You can't hack the protocol without connecting the redundant SDD protocol!", 153 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 639, "#150e58", new DateTime(2020, 4, 30, 12, 32, 12, 180, DateTimeKind.Local).AddTicks(8202), "If we hack the port, we can get to the JBOD port through the bluetooth JBOD port!", 153 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 540, "#022f68", new DateTime(2020, 8, 19, 11, 29, 14, 742, DateTimeKind.Local).AddTicks(7875), "Try to hack the TCP protocol, maybe it will hack the optical protocol!", 153 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 795, "#4d234e", new DateTime(2020, 11, 27, 0, 8, 1, 205, DateTimeKind.Local).AddTicks(5363), "You can't synthesize the application without connecting the auxiliary XSS application!", 80 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 937, "#1b7f16", new DateTime(2020, 5, 17, 2, 19, 8, 660, DateTimeKind.Local).AddTicks(672), "If we generate the port, we can get to the GB port through the open-source GB port!", 80 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 695, "#2f3258", new DateTime(2020, 8, 27, 3, 33, 18, 847, DateTimeKind.Local).AddTicks(4368), "I'll connect the redundant SSL feed, that should feed the SSL feed!", 152 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 310, "#415666", new DateTime(2020, 11, 5, 18, 4, 32, 555, DateTimeKind.Local).AddTicks(1004), "We need to hack the neural SMS array!", 81 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 316, "#0d1c08", new DateTime(2020, 4, 28, 4, 3, 0, 907, DateTimeKind.Local).AddTicks(5161), "You can't quantify the array without parsing the wireless JSON array!", 81 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 343, "#6b537e", new DateTime(2020, 11, 27, 14, 9, 13, 270, DateTimeKind.Local).AddTicks(2151), "You can't quantify the alarm without copying the cross-platform HDD alarm!", 81 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 715, "#7e295e", new DateTime(2020, 4, 27, 18, 0, 13, 225, DateTimeKind.Local).AddTicks(8368), "The PCI bandwidth is down, quantify the haptic bandwidth so we can quantify the PCI bandwidth!", 153 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 384, "#387f67", new DateTime(2020, 6, 4, 17, 6, 28, 319, DateTimeKind.Local).AddTicks(717), "If we index the sensor, we can get to the USB sensor through the auxiliary USB sensor!", 159 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1074, "#563e67", new DateTime(2020, 4, 18, 11, 31, 14, 39, DateTimeKind.Local).AddTicks(5675), "You can't back up the firewall without navigating the solid state SQL firewall!", 155 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 232, "#573231", new DateTime(2020, 10, 13, 15, 9, 42, 233, DateTimeKind.Local).AddTicks(1696), "Use the redundant XML card, then you can input the redundant card!", 156 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 33, "#5f5614", new DateTime(2020, 12, 5, 23, 32, 32, 837, DateTimeKind.Local).AddTicks(9838), "If we transmit the pixel, we can get to the IB pixel through the wireless IB pixel!", 159 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 509, "#18310b", new DateTime(2020, 3, 27, 2, 24, 10, 155, DateTimeKind.Local).AddTicks(7615), "parsing the application won't do anything, we need to quantify the cross-platform JSON application!", 77 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 806, "#471f79", new DateTime(2020, 8, 3, 9, 48, 34, 228, DateTimeKind.Local).AddTicks(3795), "If we compress the system, we can get to the SDD system through the redundant SDD system!", 77 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1171, "#251436", new DateTime(2020, 11, 28, 19, 22, 51, 271, DateTimeKind.Local).AddTicks(1666), "We need to index the back-end FTP microchip!", 77 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1084, "#3c5742", new DateTime(2020, 6, 6, 18, 3, 26, 885, DateTimeKind.Local).AddTicks(5195), "Try to bypass the THX driver, maybe it will bypass the wireless driver!", 158 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1056, "#654b01", new DateTime(2020, 8, 24, 16, 4, 45, 665, DateTimeKind.Local).AddTicks(3577), "I'll parse the bluetooth SMTP port, that should port the SMTP port!", 158 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 522, "#7d0c5e", new DateTime(2020, 10, 25, 6, 38, 51, 181, DateTimeKind.Local).AddTicks(4173), "indexing the feed won't do anything, we need to program the online AI feed!", 158 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 325, "#2a2844", new DateTime(2021, 2, 5, 11, 42, 35, 916, DateTimeKind.Local).AddTicks(4940), "If we navigate the application, we can get to the XML application through the open-source XML application!", 158 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 35, "#687b4b", new DateTime(2020, 6, 22, 14, 55, 52, 877, DateTimeKind.Local).AddTicks(2580), "Try to index the TCP bus, maybe it will index the neural bus!", 79 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1176, "#6e644e", new DateTime(2020, 9, 9, 2, 51, 30, 240, DateTimeKind.Local).AddTicks(5477), "Use the solid state AGP protocol, then you can bypass the solid state protocol!", 77 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1116, "#506b36", new DateTime(2020, 3, 26, 16, 49, 57, 77, DateTimeKind.Local).AddTicks(5558), "Use the bluetooth XSS hard drive, then you can navigate the bluetooth hard drive!", 157 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1023, "#286942", new DateTime(2020, 6, 7, 14, 26, 6, 83, DateTimeKind.Local).AddTicks(1486), "The AGP monitor is down, quantify the mobile monitor so we can quantify the AGP monitor!", 157 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 344, "#531667", new DateTime(2020, 12, 13, 17, 59, 14, 579, DateTimeKind.Local).AddTicks(5153), "We need to quantify the solid state USB circuit!", 157 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 448, "#310727", new DateTime(2020, 4, 28, 23, 18, 4, 347, DateTimeKind.Local).AddTicks(5388), "The FTP array is down, back up the optical array so we can back up the FTP array!", 78 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1062, "#070639", new DateTime(2020, 3, 26, 10, 37, 24, 248, DateTimeKind.Local).AddTicks(9660), "Try to navigate the AGP array, maybe it will navigate the wireless array!", 78 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 459, "#3b4b72", new DateTime(2020, 10, 10, 14, 14, 41, 958, DateTimeKind.Local).AddTicks(1319), "Try to connect the COM bus, maybe it will connect the back-end bus!", 156 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 442, "#435136", new DateTime(2020, 3, 21, 23, 16, 55, 855, DateTimeKind.Local).AddTicks(6657), "parsing the transmitter won't do anything, we need to override the primary SCSI transmitter!", 156 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 255, "#44561a", new DateTime(2020, 12, 2, 18, 37, 24, 796, DateTimeKind.Local).AddTicks(5776), "Use the wireless JSON driver, then you can back up the wireless driver!", 156 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1140, "#1b4a49", new DateTime(2020, 7, 10, 0, 47, 14, 211, DateTimeKind.Local).AddTicks(2542), "If we override the transmitter, we can get to the FTP transmitter through the open-source FTP transmitter!", 157 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 368, "#7a5d09", new DateTime(2021, 1, 19, 7, 6, 9, 606, DateTimeKind.Local).AddTicks(3422), "I'll index the cross-platform SAS microchip, that should microchip the SAS microchip!", 89 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 381, "#740f74", new DateTime(2021, 1, 13, 14, 35, 1, 585, DateTimeKind.Local).AddTicks(5566), "If we bypass the interface, we can get to the SMTP interface through the redundant SMTP interface!", 89 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1097, "#714337", new DateTime(2021, 2, 28, 18, 31, 54, 709, DateTimeKind.Local).AddTicks(6026), "If we parse the card, we can get to the CSS card through the bluetooth CSS card!", 89 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 334, "#131700", new DateTime(2021, 1, 1, 8, 3, 44, 364, DateTimeKind.Local).AddTicks(7521), "Try to compress the PCI pixel, maybe it will compress the primary pixel!", 100 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1066, "#665602", new DateTime(2020, 3, 24, 9, 17, 26, 903, DateTimeKind.Local).AddTicks(111), "We need to navigate the primary XSS pixel!", 116 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 776, "#6d1656", new DateTime(2020, 10, 21, 7, 59, 0, 703, DateTimeKind.Local).AddTicks(5073), "hacking the microchip won't do anything, we need to generate the 1080p JSON microchip!", 116 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 292, "#3f120b", new DateTime(2020, 3, 20, 13, 38, 0, 772, DateTimeKind.Local).AddTicks(8834), "I'll copy the neural HDD application, that should application the HDD application!", 116 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 161, "#5b6920", new DateTime(2020, 9, 20, 2, 22, 29, 856, DateTimeKind.Local).AddTicks(4146), "If we synthesize the panel, we can get to the HDD panel through the haptic HDD panel!", 116 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 146, "#7b2f24", new DateTime(2020, 11, 14, 3, 1, 29, 11, DateTimeKind.Local).AddTicks(8176), "If we reboot the driver, we can get to the RAM driver through the back-end RAM driver!", 116 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1060, "#172022", new DateTime(2020, 3, 24, 15, 29, 48, 71, DateTimeKind.Local).AddTicks(2857), "Use the bluetooth XSS microchip, then you can quantify the bluetooth microchip!", 100 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1143, "#57670b", new DateTime(2020, 8, 3, 15, 43, 27, 602, DateTimeKind.Local).AddTicks(4661), "I'll compress the multi-byte ADP bandwidth, that should bandwidth the ADP bandwidth!", 115 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1061, "#592b36", new DateTime(2020, 12, 20, 10, 45, 36, 181, DateTimeKind.Local).AddTicks(1938), "Try to index the FTP bandwidth, maybe it will index the primary bandwidth!", 99 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 358, "#312a26", new DateTime(2021, 1, 5, 9, 7, 57, 493, DateTimeKind.Local).AddTicks(3429), "Use the open-source SAS pixel, then you can back up the open-source pixel!", 115 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 174, "#05730b", new DateTime(2020, 9, 29, 10, 55, 29, 585, DateTimeKind.Local).AddTicks(6340), "Use the cross-platform USB system, then you can parse the cross-platform system!", 115 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 350, "#536619", new DateTime(2020, 4, 1, 5, 53, 6, 743, DateTimeKind.Local).AddTicks(5045), "bypassing the panel won't do anything, we need to bypass the auxiliary XML panel!", 101 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1159, "#535f2e", new DateTime(2020, 12, 29, 11, 17, 32, 387, DateTimeKind.Local).AddTicks(3029), "bypassing the protocol won't do anything, we need to compress the optical THX protocol!", 114 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1147, "#2d7374", new DateTime(2020, 9, 19, 13, 4, 56, 793, DateTimeKind.Local).AddTicks(3192), "You can't index the port without navigating the primary HTTP port!", 114 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 588, "#6c145f", new DateTime(2020, 5, 11, 2, 15, 8, 718, DateTimeKind.Local).AddTicks(9952), "Try to back up the SCSI program, maybe it will back up the 1080p program!", 114 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 396, "#5d4a2a", new DateTime(2020, 5, 30, 4, 40, 52, 590, DateTimeKind.Local).AddTicks(5365), "If we back up the protocol, we can get to the HDD protocol through the multi-byte HDD protocol!", 101 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 622, "#604753", new DateTime(2020, 9, 6, 11, 19, 51, 758, DateTimeKind.Local).AddTicks(7594), "synthesizing the card won't do anything, we need to copy the auxiliary EXE card!", 101 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 677, "#0a3f3a", new DateTime(2020, 12, 24, 1, 59, 31, 209, DateTimeKind.Local).AddTicks(4553), "We need to input the haptic SDD card!", 101 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 356, "#564809", new DateTime(2020, 7, 8, 16, 52, 12, 492, DateTimeKind.Local).AddTicks(2072), "If we copy the feed, we can get to the FTP feed through the auxiliary FTP feed!", 115 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 789, "#396e54", new DateTime(2020, 5, 22, 6, 1, 9, 20, DateTimeKind.Local).AddTicks(7070), "Use the wireless AI protocol, then you can copy the wireless protocol!", 101 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 957, "#391222", new DateTime(2020, 3, 25, 4, 36, 24, 950, DateTimeKind.Local).AddTicks(7002), "If we parse the hard drive, we can get to the HDD hard drive through the multi-byte HDD hard drive!", 99 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 84, "#587139", new DateTime(2020, 9, 3, 2, 47, 54, 55, DateTimeKind.Local).AddTicks(6362), "synthesizing the alarm won't do anything, we need to back up the digital EXE alarm!", 117 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1095, "#236c0e", new DateTime(2020, 9, 2, 13, 5, 38, 33, DateTimeKind.Local).AddTicks(1477), "I'll hack the mobile PNG hard drive, that should hard drive the PNG hard drive!", 119 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1085, "#013e27", new DateTime(2021, 1, 11, 10, 36, 4, 380, DateTimeKind.Local).AddTicks(4127), "The FTP bus is down, back up the optical bus so we can back up the FTP bus!", 119 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1078, "#3b0864", new DateTime(2020, 6, 6, 19, 11, 31, 882, DateTimeKind.Local).AddTicks(2386), "I'll program the auxiliary SMTP array, that should array the SMTP array!", 119 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 975, "#485907", new DateTime(2020, 11, 20, 18, 1, 29, 294, DateTimeKind.Local).AddTicks(5364), "Try to transmit the RSS sensor, maybe it will transmit the primary sensor!", 119 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 644, "#082e2e", new DateTime(2021, 1, 18, 11, 37, 19, 985, DateTimeKind.Local).AddTicks(2275), "I'll compress the optical XML application, that should application the XML application!", 119 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 632, "#376b66", new DateTime(2020, 10, 28, 17, 57, 54, 807, DateTimeKind.Local).AddTicks(1578), "You can't index the feed without programming the cross-platform SMS feed!", 119 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 499, "#461747", new DateTime(2020, 5, 9, 23, 39, 52, 639, DateTimeKind.Local).AddTicks(1491), "bypassing the array won't do anything, we need to navigate the auxiliary SQL array!", 119 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 373, "#145238", new DateTime(2020, 8, 5, 21, 35, 13, 857, DateTimeKind.Local).AddTicks(4193), "You can't bypass the feed without navigating the cross-platform USB feed!", 119 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 308, "#1f3040", new DateTime(2021, 2, 25, 11, 36, 28, 850, DateTimeKind.Local).AddTicks(3893), "Try to program the XML bus, maybe it will program the mobile bus!", 99 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 996, "#426b3c", new DateTime(2021, 3, 1, 16, 15, 15, 479, DateTimeKind.Local).AddTicks(8200), "I'll hack the open-source AI interface, that should interface the AI interface!", 97 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1059, "#411108", new DateTime(2020, 3, 16, 7, 11, 58, 159, DateTimeKind.Local).AddTicks(4926), "If we override the application, we can get to the USB application through the cross-platform USB application!", 118 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 109, "#217965", new DateTime(2020, 3, 22, 7, 25, 39, 226, DateTimeKind.Local).AddTicks(3148), "If we generate the monitor, we can get to the SSL monitor through the mobile SSL monitor!", 118 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1030, "#113217", new DateTime(2020, 11, 8, 10, 17, 28, 354, DateTimeKind.Local).AddTicks(4789), "Try to program the JSON driver, maybe it will program the virtual driver!", 98 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1188, "#7b0c62", new DateTime(2020, 3, 23, 8, 25, 17, 830, DateTimeKind.Local).AddTicks(8505), "We need to input the haptic SAS monitor!", 98 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1000, "#457531", new DateTime(2020, 6, 4, 3, 34, 45, 16, DateTimeKind.Local).AddTicks(2003), "You can't calculate the pixel without synthesizing the auxiliary FTP pixel!", 117 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 909, "#382044", new DateTime(2020, 7, 12, 18, 42, 48, 8, DateTimeKind.Local).AddTicks(6062), "The CSS sensor is down, index the redundant sensor so we can index the CSS sensor!", 117 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 647, "#74642d", new DateTime(2020, 4, 20, 1, 1, 19, 513, DateTimeKind.Local).AddTicks(7149), "If we index the bandwidth, we can get to the HTTP bandwidth through the solid state HTTP bandwidth!", 117 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 452, "#36084a", new DateTime(2020, 10, 4, 2, 32, 35, 753, DateTimeKind.Local).AddTicks(7410), "If we copy the feed, we can get to the XML feed through the open-source XML feed!", 117 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1057, "#1e484b", new DateTime(2021, 1, 27, 15, 57, 26, 680, DateTimeKind.Local).AddTicks(7386), "Try to hack the SQL hard drive, maybe it will hack the redundant hard drive!", 97 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 898, "#611c38", new DateTime(2020, 7, 15, 21, 14, 0, 510, DateTimeKind.Local).AddTicks(8957), "You can't bypass the program without overriding the cross-platform SSL program!", 97 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1029, "#60353a", new DateTime(2020, 12, 30, 10, 49, 56, 864, DateTimeKind.Local).AddTicks(7675), "We need to transmit the solid state TCP circuit!", 101 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1042, "#3a6162", new DateTime(2020, 7, 25, 19, 10, 0, 214, DateTimeKind.Local).AddTicks(5318), "If we transmit the feed, we can get to the SDD feed through the digital SDD feed!", 101 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 54, "#525e4c", new DateTime(2020, 4, 17, 12, 27, 35, 729, DateTimeKind.Local).AddTicks(5526), "You can't synthesize the bandwidth without backing up the cross-platform RAM bandwidth!", 104 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 331, "#1e0b44", new DateTime(2020, 6, 25, 5, 55, 43, 763, DateTimeKind.Local).AddTicks(8659), "We need to parse the digital THX interface!", 104 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 610, "#194230", new DateTime(2020, 7, 9, 0, 21, 35, 839, DateTimeKind.Local).AddTicks(4437), "Use the primary HDD bus, then you can reboot the primary bus!", 104 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 630, "#224f48", new DateTime(2020, 7, 27, 19, 22, 12, 973, DateTimeKind.Local).AddTicks(6769), "programming the feed won't do anything, we need to transmit the multi-byte JSON feed!", 104 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 614, "#215a10", new DateTime(2020, 6, 8, 14, 14, 55, 870, DateTimeKind.Local).AddTicks(1178), "We need to navigate the mobile XSS monitor!", 109 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 670, "#406a44", new DateTime(2021, 1, 25, 5, 4, 49, 589, DateTimeKind.Local).AddTicks(3081), "The PCI protocol is down, transmit the multi-byte protocol so we can transmit the PCI protocol!", 104 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 907, "#1d7817", new DateTime(2020, 3, 26, 4, 8, 46, 153, DateTimeKind.Local).AddTicks(8491), "Use the auxiliary SDD transmitter, then you can navigate the auxiliary transmitter!", 104 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 945, "#072260", new DateTime(2020, 4, 23, 0, 10, 47, 65, DateTimeKind.Local).AddTicks(1099), "You can't program the sensor without quantifying the digital SCSI sensor!", 104 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 8, "#09534d", new DateTime(2020, 5, 19, 5, 50, 49, 665, DateTimeKind.Local).AddTicks(3405), "Use the solid state COM microchip, then you can program the solid state microchip!", 110 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 962, "#4b635b", new DateTime(2020, 3, 11, 9, 0, 52, 368, DateTimeKind.Local).AddTicks(1124), "Try to transmit the JBOD microchip, maybe it will transmit the primary microchip!", 104 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 744, "#4f6465", new DateTime(2020, 4, 23, 23, 42, 0, 246, DateTimeKind.Local).AddTicks(656), "connecting the circuit won't do anything, we need to bypass the digital ADP circuit!", 108 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 561, "#387533", new DateTime(2021, 1, 14, 17, 42, 38, 212, DateTimeKind.Local).AddTicks(9933), "compressing the alarm won't do anything, we need to synthesize the online JBOD alarm!", 108 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 944, "#0c6f5b", new DateTime(2020, 7, 21, 9, 38, 51, 773, DateTimeKind.Local).AddTicks(3037), "You can't navigate the sensor without navigating the primary XML sensor!", 107 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 577, "#66226c", new DateTime(2021, 2, 13, 13, 40, 16, 618, DateTimeKind.Local).AddTicks(457), "We need to quantify the cross-platform COM bus!", 107 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 430, "#7f3e06", new DateTime(2020, 9, 3, 22, 25, 39, 745, DateTimeKind.Local).AddTicks(719), "We need to hack the digital ADP capacitor!", 105 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 491, "#087132", new DateTime(2020, 4, 28, 21, 52, 10, 981, DateTimeKind.Local).AddTicks(150), "If we transmit the alarm, we can get to the SSL alarm through the multi-byte SSL alarm!", 105 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1008, "#270c42", new DateTime(2020, 8, 22, 21, 48, 45, 75, DateTimeKind.Local).AddTicks(9321), "Try to copy the COM hard drive, maybe it will copy the bluetooth hard drive!", 106 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 855, "#203e72", new DateTime(2021, 2, 8, 20, 36, 57, 511, DateTimeKind.Local).AddTicks(1963), "copying the monitor won't do anything, we need to parse the redundant JSON monitor!", 106 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 755, "#31282a", new DateTime(2021, 1, 29, 10, 47, 6, 72, DateTimeKind.Local).AddTicks(1408), "The PCI card is down, parse the online card so we can parse the PCI card!", 108 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1033, "#377b6e", new DateTime(2020, 12, 10, 6, 58, 12, 456, DateTimeKind.Local).AddTicks(7997), "transmitting the system won't do anything, we need to index the haptic JBOD system!", 101 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 79, "#191927", new DateTime(2021, 1, 15, 13, 41, 36, 316, DateTimeKind.Local).AddTicks(9071), "I'll copy the optical IB circuit, that should circuit the IB circuit!", 110 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 902, "#0b5365", new DateTime(2020, 10, 31, 23, 29, 34, 543, DateTimeKind.Local).AddTicks(50), "You can't parse the matrix without synthesizing the open-source SMTP matrix!", 110 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1081, "#7c343b", new DateTime(2020, 11, 22, 1, 34, 52, 920, DateTimeKind.Local).AddTicks(8133), "I'll reboot the digital HDD pixel, that should pixel the HDD pixel!", 101 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1124, "#4b750b", new DateTime(2020, 3, 3, 17, 16, 27, 625, DateTimeKind.Local).AddTicks(2425), "Try to index the TCP circuit, maybe it will index the auxiliary circuit!", 113 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 970, "#7a6833", new DateTime(2020, 3, 31, 21, 56, 57, 160, DateTimeKind.Local).AddTicks(2709), "You can't back up the interface without bypassing the solid state SMS interface!", 113 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 774, "#6b223d", new DateTime(2020, 10, 28, 9, 1, 28, 634, DateTimeKind.Local).AddTicks(9293), "We need to parse the digital RSS hard drive!", 113 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 719, "#66087f", new DateTime(2021, 2, 4, 21, 35, 51, 909, DateTimeKind.Local).AddTicks(6189), "Use the optical JSON program, then you can index the optical program!", 113 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 655, "#495958", new DateTime(2020, 7, 8, 15, 21, 41, 446, DateTimeKind.Local).AddTicks(7012), "We need to override the virtual JBOD panel!", 113 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 604, "#324244", new DateTime(2020, 7, 15, 19, 1, 54, 288, DateTimeKind.Local).AddTicks(2815), "You can't synthesize the protocol without generating the redundant HTTP protocol!", 113 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 274, "#006d40", new DateTime(2021, 2, 5, 18, 59, 57, 988, DateTimeKind.Local).AddTicks(9120), "We need to parse the optical PCI firewall!", 113 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 304, "#750f30", new DateTime(2020, 3, 14, 1, 29, 20, 119, DateTimeKind.Local).AddTicks(7966), "generating the protocol won't do anything, we need to back up the virtual JBOD protocol!", 110 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 236, "#324338", new DateTime(2020, 7, 22, 21, 42, 31, 190, DateTimeKind.Local).AddTicks(958), "If we transmit the program, we can get to the RAM program through the online RAM program!", 113 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 716, "#283e42", new DateTime(2020, 6, 6, 14, 14, 24, 293, DateTimeKind.Local).AddTicks(912), "The RAM sensor is down, reboot the bluetooth sensor so we can reboot the RAM sensor!", 102 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 753, "#4d6503", new DateTime(2020, 12, 12, 21, 0, 25, 940, DateTimeKind.Local).AddTicks(1744), "indexing the sensor won't do anything, we need to connect the online EXE sensor!", 102 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1018, "#3b4e3d", new DateTime(2020, 8, 7, 20, 9, 16, 578, DateTimeKind.Local).AddTicks(858), "I'll generate the auxiliary ADP circuit, that should circuit the ADP circuit!", 111 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 402, "#752d30", new DateTime(2020, 9, 10, 20, 35, 10, 733, DateTimeKind.Local).AddTicks(4173), "parsing the program won't do anything, we need to program the 1080p ADP program!", 111 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 389, "#3d005d", new DateTime(2020, 11, 9, 3, 18, 53, 170, DateTimeKind.Local).AddTicks(5476), "Use the primary SSL array, then you can reboot the primary array!", 111 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 301, "#3e6106", new DateTime(2020, 5, 29, 18, 20, 0, 191, DateTimeKind.Local).AddTicks(5343), "generating the driver won't do anything, we need to program the mobile ADP driver!", 103 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 923, "#391567", new DateTime(2020, 5, 26, 13, 28, 27, 788, DateTimeKind.Local).AddTicks(2662), "If we synthesize the array, we can get to the ADP array through the neural ADP array!", 103 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1199, "#1f2b3d", new DateTime(2021, 1, 3, 20, 19, 19, 661, DateTimeKind.Local).AddTicks(8446), "If we navigate the driver, we can get to the THX driver through the online THX driver!", 103 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 876, "#365677", new DateTime(2021, 2, 9, 4, 47, 50, 641, DateTimeKind.Local).AddTicks(4591), "Try to program the SSL panel, maybe it will program the redundant panel!", 112 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 605, "#1e341c", new DateTime(2020, 5, 5, 17, 45, 2, 870, DateTimeKind.Local).AddTicks(8105), "The AI capacitor is down, navigate the primary capacitor so we can navigate the AI capacitor!", 167 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 324, "#7e605c", new DateTime(2020, 6, 16, 16, 23, 59, 14, DateTimeKind.Local).AddTicks(3389), "copying the bandwidth won't do anything, we need to index the primary CSS bandwidth!", 97 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 888, "#5b3a37", new DateTime(2020, 4, 17, 12, 4, 45, 967, DateTimeKind.Local).AddTicks(5025), "If we synthesize the sensor, we can get to the SDD sensor through the bluetooth SDD sensor!", 96 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 637, "#23026a", new DateTime(2020, 5, 15, 16, 48, 53, 531, DateTimeKind.Local).AddTicks(5973), "If we index the matrix, we can get to the HTTP matrix through the redundant HTTP matrix!", 130 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 385, "#581872", new DateTime(2021, 1, 1, 1, 1, 37, 335, DateTimeKind.Local).AddTicks(2480), "The RAM bandwidth is down, quantify the bluetooth bandwidth so we can quantify the RAM bandwidth!", 130 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1196, "#567e79", new DateTime(2021, 3, 1, 7, 55, 30, 603, DateTimeKind.Local).AddTicks(5746), "I'll hack the neural RSS application, that should application the RSS application!", 129 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 822, "#31280f", new DateTime(2020, 5, 30, 0, 20, 47, 668, DateTimeKind.Local).AddTicks(3030), "You can't program the alarm without bypassing the auxiliary HDD alarm!", 129 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 585, "#40661e", new DateTime(2020, 8, 15, 11, 31, 10, 525, DateTimeKind.Local).AddTicks(6835), "If we hack the matrix, we can get to the AI matrix through the redundant AI matrix!", 129 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 240, "#237c62", new DateTime(2020, 5, 3, 14, 4, 45, 280, DateTimeKind.Local).AddTicks(5443), "Use the digital EXE capacitor, then you can transmit the digital capacitor!", 129 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 229, "#114650", new DateTime(2020, 10, 16, 2, 56, 8, 339, DateTimeKind.Local).AddTicks(6564), "The HTTP circuit is down, parse the bluetooth circuit so we can parse the HTTP circuit!", 129 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 143, "#745339", new DateTime(2020, 3, 23, 13, 55, 10, 424, DateTimeKind.Local).AddTicks(3853), "If we hack the card, we can get to the THX card through the mobile THX card!", 129 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 782, "#0a3711", new DateTime(2020, 10, 14, 4, 27, 20, 958, DateTimeKind.Local).AddTicks(8610), "I'll transmit the solid state RSS hard drive, that should hard drive the RSS hard drive!", 91 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 254, "#072a0a", new DateTime(2021, 1, 14, 1, 51, 9, 921, DateTimeKind.Local).AddTicks(6071), "You can't copy the bus without transmitting the bluetooth JSON bus!", 92 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 684, "#276633", new DateTime(2020, 10, 9, 3, 45, 57, 65, DateTimeKind.Local).AddTicks(7103), "Try to navigate the TCP alarm, maybe it will navigate the online alarm!", 92 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 911, "#16432f", new DateTime(2020, 8, 7, 15, 35, 3, 89, DateTimeKind.Local).AddTicks(3481), "If we hack the array, we can get to the AI array through the digital AI array!", 128 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 796, "#342700", new DateTime(2020, 8, 22, 12, 52, 40, 503, DateTimeKind.Local).AddTicks(4422), "The AGP bandwidth is down, bypass the online bandwidth so we can bypass the AGP bandwidth!", 128 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 726, "#5f6b6d", new DateTime(2021, 1, 18, 19, 58, 22, 855, DateTimeKind.Local).AddTicks(6460), "If we copy the capacitor, we can get to the XML capacitor through the primary XML capacitor!", 128 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 579, "#192174", new DateTime(2020, 8, 27, 2, 26, 20, 681, DateTimeKind.Local).AddTicks(8629), "I'll copy the solid state SCSI protocol, that should protocol the SCSI protocol!", 128 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 501, "#62725a", new DateTime(2020, 8, 3, 23, 48, 15, 260, DateTimeKind.Local).AddTicks(9752), "The AI microchip is down, input the cross-platform microchip so we can input the AI microchip!", 128 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 294, "#373836", new DateTime(2021, 1, 18, 22, 43, 13, 58, DateTimeKind.Local).AddTicks(6434), "Try to transmit the PCI monitor, maybe it will transmit the bluetooth monitor!", 128 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 572, "#305d5c", new DateTime(2020, 8, 20, 23, 20, 53, 360, DateTimeKind.Local).AddTicks(6415), "Use the multi-byte RAM matrix, then you can generate the multi-byte matrix!", 127 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 429, "#107455", new DateTime(2020, 3, 23, 15, 49, 4, 17, DateTimeKind.Local).AddTicks(2728), "generating the transmitter won't do anything, we need to parse the mobile TCP transmitter!", 92 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 519, "#20214d", new DateTime(2020, 9, 22, 4, 58, 45, 326, DateTimeKind.Local).AddTicks(6686), "The USB microchip is down, back up the multi-byte microchip so we can back up the USB microchip!", 127 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 379, "#447376", new DateTime(2020, 9, 5, 4, 54, 11, 115, DateTimeKind.Local).AddTicks(5372), "We need to transmit the wireless PNG bus!", 131 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 893, "#173127", new DateTime(2020, 11, 25, 21, 1, 3, 950, DateTimeKind.Local).AddTicks(3626), "I'll hack the online HDD bus, that should bus the HDD bus!", 131 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 986, "#1b785a", new DateTime(2020, 5, 18, 14, 46, 56, 868, DateTimeKind.Local).AddTicks(5488), "programming the capacitor won't do anything, we need to parse the virtual SCSI capacitor!", 134 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 801, "#513f0c", new DateTime(2020, 11, 25, 14, 7, 25, 229, DateTimeKind.Local).AddTicks(8982), "You can't quantify the panel without copying the optical AGP panel!", 134 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 253, "#59361f", new DateTime(2020, 9, 20, 10, 41, 45, 790, DateTimeKind.Local).AddTicks(537), "If we quantify the microchip, we can get to the JSON microchip through the open-source JSON microchip!", 90 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 366, "#19624d", new DateTime(2021, 1, 9, 8, 22, 27, 998, DateTimeKind.Local).AddTicks(9195), "Use the virtual RAM array, then you can connect the virtual array!", 90 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 711, "#41581c", new DateTime(2021, 2, 21, 23, 51, 20, 677, DateTimeKind.Local).AddTicks(6366), "We need to transmit the redundant EXE bandwidth!", 90 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 981, "#050243", new DateTime(2020, 5, 16, 14, 15, 37, 98, DateTimeKind.Local).AddTicks(3478), "Try to parse the IB driver, maybe it will parse the open-source driver!", 133 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 467, "#1e217f", new DateTime(2020, 4, 12, 8, 9, 42, 124, DateTimeKind.Local).AddTicks(5033), "If we program the card, we can get to the SQL card through the back-end SQL card!", 133 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 123, "#7e0d74", new DateTime(2020, 6, 13, 20, 1, 27, 946, DateTimeKind.Local).AddTicks(67), "Try to synthesize the HDD alarm, maybe it will synthesize the 1080p alarm!", 133 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 793, "#3d4121", new DateTime(2021, 2, 16, 21, 23, 24, 598, DateTimeKind.Local).AddTicks(9035), "Try to generate the SDD driver, maybe it will generate the redundant driver!", 131 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 730, "#242c34", new DateTime(2020, 10, 15, 6, 54, 55, 44, DateTimeKind.Local).AddTicks(8355), "You can't input the firewall without synthesizing the neural SMTP firewall!", 132 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 458, "#22775c", new DateTime(2020, 10, 1, 22, 21, 38, 549, DateTimeKind.Local).AddTicks(1353), "synthesizing the system won't do anything, we need to program the solid state EXE system!", 132 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 30, "#782010", new DateTime(2020, 4, 7, 0, 33, 12, 338, DateTimeKind.Local).AddTicks(6795), "Use the digital SMTP feed, then you can parse the digital feed!", 132 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 60, "#222b70", new DateTime(2020, 7, 29, 10, 8, 4, 996, DateTimeKind.Local).AddTicks(2264), "Try to generate the SSL hard drive, maybe it will generate the auxiliary hard drive!", 91 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 245, "#33743a", new DateTime(2020, 6, 26, 6, 0, 33, 605, DateTimeKind.Local).AddTicks(3896), "If we transmit the port, we can get to the XML port through the virtual XML port!", 91 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 256, "#4e752d", new DateTime(2020, 9, 29, 7, 43, 39, 761, DateTimeKind.Local).AddTicks(6081), "Try to program the CSS transmitter, maybe it will program the online transmitter!", 91 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 530, "#4c3725", new DateTime(2020, 4, 24, 23, 52, 34, 892, DateTimeKind.Local).AddTicks(8689), "synthesizing the sensor won't do anything, we need to quantify the multi-byte THX sensor!", 91 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1050, "#37156f", new DateTime(2020, 6, 29, 23, 37, 31, 314, DateTimeKind.Local).AddTicks(4877), "The AI application is down, calculate the neural application so we can calculate the AI application!", 131 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 942, "#0a2547", new DateTime(2021, 2, 19, 2, 49, 48, 205, DateTimeKind.Local).AddTicks(7027), "Use the 1080p HDD feed, then you can calculate the 1080p feed!", 131 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 609, "#613a3d", new DateTime(2021, 2, 3, 6, 11, 49, 360, DateTimeKind.Local).AddTicks(8334), "If we connect the application, we can get to the RSS application through the wireless RSS application!", 132 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 37, "#745611", new DateTime(2020, 6, 18, 12, 32, 20, 955, DateTimeKind.Local).AddTicks(8809), "parsing the array won't do anything, we need to synthesize the optical SMS array!", 97 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 388, "#3d0751", new DateTime(2020, 3, 25, 3, 40, 31, 532, DateTimeKind.Local).AddTicks(7604), "Use the primary COM alarm, then you can transmit the primary alarm!", 127 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 400, "#3c3f49", new DateTime(2020, 8, 20, 13, 25, 56, 479, DateTimeKind.Local).AddTicks(8855), "The PNG feed is down, navigate the multi-byte feed so we can navigate the PNG feed!", 93 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 846, "#4a1669", new DateTime(2020, 5, 30, 14, 14, 44, 895, DateTimeKind.Local).AddTicks(3493), "Try to program the JSON card, maybe it will program the optical card!", 95 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1103, "#073938", new DateTime(2020, 6, 7, 23, 24, 15, 992, DateTimeKind.Local).AddTicks(1722), "Use the optical IB feed, then you can back up the optical feed!", 95 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 954, "#7c3940", new DateTime(2020, 7, 20, 1, 26, 17, 622, DateTimeKind.Local).AddTicks(1282), "backing up the hard drive won't do anything, we need to navigate the auxiliary GB hard drive!", 123 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 953, "#700204", new DateTime(2020, 6, 21, 13, 2, 16, 88, DateTimeKind.Local).AddTicks(7805), "The JBOD firewall is down, calculate the wireless firewall so we can calculate the JBOD firewall!", 123 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 411, "#4a0e23", new DateTime(2021, 1, 4, 10, 18, 42, 364, DateTimeKind.Local).AddTicks(7018), "We need to connect the auxiliary XML sensor!", 122 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1054, "#3c7753", new DateTime(2020, 4, 15, 5, 34, 48, 70, DateTimeKind.Local).AddTicks(7873), "Use the auxiliary THX matrix, then you can index the auxiliary matrix!", 121 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 768, "#375773", new DateTime(2020, 4, 29, 10, 37, 5, 691, DateTimeKind.Local).AddTicks(2448), "You can't index the panel without programming the solid state JBOD panel!", 121 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 462, "#1c601c", new DateTime(2020, 7, 6, 3, 58, 13, 917, DateTimeKind.Local).AddTicks(334), "We need to navigate the auxiliary XML array!", 121 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 453, "#7e6d66", new DateTime(2020, 9, 20, 22, 57, 27, 173, DateTimeKind.Local).AddTicks(223), "If we quantify the application, we can get to the SSL application through the cross-platform SSL application!", 95 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 81, "#286e7d", new DateTime(2020, 12, 10, 12, 51, 52, 368, DateTimeKind.Local).AddTicks(5934), "Try to generate the SMS card, maybe it will generate the primary card!", 96 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 336, "#5a7422", new DateTime(2020, 7, 17, 16, 44, 14, 204, DateTimeKind.Local).AddTicks(8824), "You can't connect the driver without synthesizing the back-end TCP driver!", 96 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 407, "#0d2021", new DateTime(2020, 9, 20, 9, 25, 19, 107, DateTimeKind.Local).AddTicks(3350), "The FTP bandwidth is down, calculate the optical bandwidth so we can calculate the FTP bandwidth!", 96 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 903, "#2e0b1f", new DateTime(2020, 7, 31, 17, 33, 25, 577, DateTimeKind.Local).AddTicks(5946), "We need to input the virtual XML hard drive!", 120 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 895, "#146f0e", new DateTime(2020, 8, 28, 9, 17, 30, 763, DateTimeKind.Local).AddTicks(4290), "You can't index the protocol without quantifying the online SDD protocol!", 120 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 496, "#651440", new DateTime(2020, 10, 25, 2, 3, 35, 648, DateTimeKind.Local).AddTicks(6535), "I'll calculate the cross-platform SSL circuit, that should circuit the SSL circuit!", 120 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 449, "#024324", new DateTime(2021, 2, 22, 3, 26, 57, 730, DateTimeKind.Local).AddTicks(3211), "You can't program the feed without backing up the neural SSL feed!", 120 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 348, "#7f1e0c", new DateTime(2020, 6, 5, 23, 43, 23, 858, DateTimeKind.Local).AddTicks(2917), "The JSON protocol is down, bypass the online protocol so we can bypass the JSON protocol!", 120 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 419, "#1f255c", new DateTime(2020, 3, 30, 16, 14, 44, 74, DateTimeKind.Local).AddTicks(795), "Try to generate the TCP interface, maybe it will generate the auxiliary interface!", 96 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 164, "#4b2830", new DateTime(2020, 8, 24, 11, 19, 40, 829, DateTimeKind.Local).AddTicks(4430), "We need to program the redundant IB application!", 96 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 195, "#4b6e70", new DateTime(2020, 8, 24, 22, 54, 6, 847, DateTimeKind.Local).AddTicks(8644), "connecting the program won't do anything, we need to override the cross-platform USB program!", 93 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 151, "#0f3a15", new DateTime(2020, 11, 3, 12, 8, 48, 73, DateTimeKind.Local).AddTicks(2083), "If we navigate the alarm, we can get to the JSON alarm through the virtual JSON alarm!", 95 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 299, "#664d10", new DateTime(2020, 12, 13, 19, 2, 7, 649, DateTimeKind.Local).AddTicks(9125), "Use the 1080p PNG feed, then you can bypass the 1080p feed!", 124 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1163, "#241b0b", new DateTime(2020, 11, 17, 12, 22, 6, 187, DateTimeKind.Local).AddTicks(8408), "Use the virtual AGP hard drive, then you can copy the virtual hard drive!", 126 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1073, "#307543", new DateTime(2020, 12, 1, 4, 38, 52, 931, DateTimeKind.Local).AddTicks(3807), "Use the primary IB transmitter, then you can copy the primary transmitter!", 126 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 732, "#2a2a2d", new DateTime(2020, 12, 31, 9, 53, 1, 787, DateTimeKind.Local).AddTicks(9731), "Use the online CSS system, then you can hack the online system!", 126 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 603, "#0a0d36", new DateTime(2020, 9, 19, 4, 20, 56, 561, DateTimeKind.Local).AddTicks(1933), "hacking the port won't do anything, we need to compress the multi-byte JSON port!", 126 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 466, "#340b30", new DateTime(2020, 6, 23, 0, 32, 52, 857, DateTimeKind.Local).AddTicks(5848), "hacking the bus won't do anything, we need to copy the auxiliary GB bus!", 126 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 409, "#7e1626", new DateTime(2020, 12, 29, 17, 55, 46, 514, DateTimeKind.Local).AddTicks(7646), "The XML system is down, input the back-end system so we can input the XML system!", 126 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 518, "#020e1d", new DateTime(2020, 12, 29, 3, 46, 58, 475, DateTimeKind.Local).AddTicks(9128), "I'll back up the bluetooth XML application, that should application the XML application!", 93 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 675, "#753422", new DateTime(2020, 7, 10, 10, 12, 43, 238, DateTimeKind.Local).AddTicks(59), "We need to transmit the neural THX system!", 93 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 110, "#26567c", new DateTime(2020, 7, 20, 9, 41, 50, 513, DateTimeKind.Local).AddTicks(1247), "Use the online EXE driver, then you can navigate the online driver!", 95 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 747, "#622c70", new DateTime(2020, 10, 17, 1, 16, 56, 270, DateTimeKind.Local).AddTicks(6305), "Use the wireless SQL program, then you can back up the wireless program!", 93 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 770, "#7c5e45", new DateTime(2020, 3, 28, 7, 37, 7, 387, DateTimeKind.Local).AddTicks(6823), "navigating the feed won't do anything, we need to quantify the online HTTP feed!", 125 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 599, "#236b56", new DateTime(2020, 4, 3, 3, 18, 31, 453, DateTimeKind.Local).AddTicks(563), "generating the circuit won't do anything, we need to hack the mobile SDD circuit!", 125 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 584, "#2f3b63", new DateTime(2020, 8, 30, 7, 36, 44, 898, DateTimeKind.Local).AddTicks(2834), "The GB system is down, compress the digital system so we can compress the GB system!", 125 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 157, "#40667c", new DateTime(2021, 2, 8, 14, 34, 35, 138, DateTimeKind.Local).AddTicks(2956), "If we reboot the protocol, we can get to the USB protocol through the auxiliary USB protocol!", 125 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1049, "#752454", new DateTime(2020, 11, 7, 13, 23, 27, 261, DateTimeKind.Local).AddTicks(7632), "If we transmit the panel, we can get to the XML panel through the haptic XML panel!", 93 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 383, "#055f6a", new DateTime(2020, 9, 12, 17, 42, 13, 369, DateTimeKind.Local).AddTicks(1912), "The SSL panel is down, reboot the digital panel so we can reboot the SSL panel!", 94 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 590, "#384b45", new DateTime(2020, 7, 17, 9, 51, 20, 275, DateTimeKind.Local).AddTicks(8873), "Use the haptic SSL card, then you can compress the haptic card!", 94 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 739, "#27644f", new DateTime(2020, 8, 30, 21, 23, 43, 204, DateTimeKind.Local).AddTicks(4121), "If we navigate the circuit, we can get to the FTP circuit through the back-end FTP circuit!", 94 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 871, "#262305", new DateTime(2020, 11, 15, 6, 1, 7, 510, DateTimeKind.Local).AddTicks(4405), "Try to index the XSS transmitter, maybe it will index the online transmitter!", 125 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1150, "#452b79", new DateTime(2020, 8, 16, 16, 28, 28, 118, DateTimeKind.Local).AddTicks(9020), "The PCI feed is down, parse the neural feed so we can parse the PCI feed!", 224 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 767, "#355754", new DateTime(2020, 8, 10, 16, 57, 2, 851, DateTimeKind.Local).AddTicks(8038), "The CSS card is down, index the cross-platform card so we can index the CSS card!", 167 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1045, "#585067", new DateTime(2020, 6, 7, 5, 23, 13, 780, DateTimeKind.Local).AddTicks(3535), "The SCSI hard drive is down, transmit the wireless hard drive so we can transmit the SCSI hard drive!", 72 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 651, "#7c0d02", new DateTime(2020, 3, 6, 3, 37, 36, 898, DateTimeKind.Local).AddTicks(8083), "I'll parse the neural SAS capacitor, that should capacitor the SAS capacitor!", 208 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 597, "#5c4149", new DateTime(2020, 11, 12, 18, 32, 2, 281, DateTimeKind.Local).AddTicks(8651), "Try to parse the RAM alarm, maybe it will parse the bluetooth alarm!", 208 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 5, "#0a5e4c", new DateTime(2020, 6, 5, 11, 3, 43, 291, DateTimeKind.Local).AddTicks(1634), "connecting the array won't do anything, we need to quantify the cross-platform FTP array!", 208 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 611, "#602d09", new DateTime(2020, 4, 16, 5, 59, 12, 908, DateTimeKind.Local).AddTicks(7414), "Use the 1080p SMS bandwidth, then you can connect the 1080p bandwidth!", 49 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 720, "#612e77", new DateTime(2020, 8, 29, 4, 3, 48, 468, DateTimeKind.Local).AddTicks(1547), "The PNG pixel is down, quantify the wireless pixel so we can quantify the PNG pixel!", 49 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 757, "#557966", new DateTime(2020, 12, 24, 1, 54, 40, 371, DateTimeKind.Local).AddTicks(6247), "I'll bypass the auxiliary XSS monitor, that should monitor the XSS monitor!", 49 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 941, "#600e2e", new DateTime(2021, 1, 17, 3, 28, 48, 624, DateTimeKind.Local).AddTicks(3437), "I'll quantify the back-end RSS monitor, that should monitor the RSS monitor!", 207 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 802, "#2e2140", new DateTime(2020, 8, 24, 22, 22, 6, 143, DateTimeKind.Local).AddTicks(8011), "You can't program the application without hacking the redundant PCI application!", 207 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 504, "#683655", new DateTime(2020, 7, 20, 2, 1, 20, 686, DateTimeKind.Local).AddTicks(6008), "We need to override the bluetooth SMTP feed!", 207 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 431, "#6d0b46", new DateTime(2020, 9, 4, 14, 8, 35, 701, DateTimeKind.Local).AddTicks(1569), "We need to back up the online PNG circuit!", 207 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 175, "#397e76", new DateTime(2020, 5, 28, 13, 54, 25, 201, DateTimeKind.Local).AddTicks(6438), "If we transmit the hard drive, we can get to the AI hard drive through the back-end AI hard drive!", 207 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 790, "#227d3c", new DateTime(2020, 3, 22, 11, 54, 14, 447, DateTimeKind.Local).AddTicks(2316), "We need to quantify the 1080p PCI driver!", 49 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 956, "#724241", new DateTime(2021, 1, 10, 18, 20, 15, 290, DateTimeKind.Local).AddTicks(2501), "The XML firewall is down, quantify the wireless firewall so we can quantify the XML firewall!", 49 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 929, "#49423b", new DateTime(2020, 9, 29, 3, 26, 11, 839, DateTimeKind.Local).AddTicks(1651), "You can't quantify the program without quantifying the cross-platform AGP program!", 206 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 839, "#6a4580", new DateTime(2020, 6, 8, 3, 38, 45, 625, DateTimeKind.Local).AddTicks(1814), "The COM system is down, calculate the redundant system so we can calculate the COM system!", 206 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 791, "#7a6442", new DateTime(2020, 7, 3, 8, 35, 3, 62, DateTimeKind.Local).AddTicks(51), "The EXE protocol is down, bypass the multi-byte protocol so we can bypass the EXE protocol!", 206 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 505, "#290750", new DateTime(2020, 11, 5, 3, 46, 49, 303, DateTimeKind.Local).AddTicks(8203), "Try to generate the SCSI interface, maybe it will generate the auxiliary interface!", 206 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 783, "#79631a", new DateTime(2021, 3, 1, 14, 11, 23, 543, DateTimeKind.Local).AddTicks(2610), "If we generate the firewall, we can get to the AGP firewall through the virtual AGP firewall!", 208 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 840, "#611a3b", new DateTime(2021, 2, 16, 8, 5, 6, 432, DateTimeKind.Local).AddTicks(4597), "Use the primary PNG firewall, then you can bypass the primary firewall!", 208 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 134, "#4d4c11", new DateTime(2020, 8, 29, 1, 37, 46, 720, DateTimeKind.Local).AddTicks(6978), "You can't index the alarm without transmitting the digital USB alarm!", 209 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 177, "#670154", new DateTime(2021, 1, 25, 12, 39, 12, 229, DateTimeKind.Local).AddTicks(1923), "If we compress the bandwidth, we can get to the ADP bandwidth through the bluetooth ADP bandwidth!", 209 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 18, "#60254d", new DateTime(2020, 12, 8, 3, 26, 11, 130, DateTimeKind.Local).AddTicks(8489), "We need to index the wireless TCP feed!", 48 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 97, "#17236f", new DateTime(2021, 1, 2, 0, 49, 36, 444, DateTimeKind.Local).AddTicks(5627), "Try to input the AGP microchip, maybe it will input the cross-platform microchip!", 48 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 119, "#6b5078", new DateTime(2020, 5, 27, 9, 30, 18, 454, DateTimeKind.Local).AddTicks(8901), "We need to navigate the wireless JBOD monitor!", 48 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 279, "#4c5141", new DateTime(2021, 1, 29, 12, 54, 49, 515, DateTimeKind.Local).AddTicks(2852), "Try to connect the SDD sensor, maybe it will connect the open-source sensor!", 48 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 571, "#030a74", new DateTime(2021, 3, 2, 14, 8, 55, 283, DateTimeKind.Local).AddTicks(6450), "If we reboot the bandwidth, we can get to the SAS bandwidth through the cross-platform SAS bandwidth!", 48 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 916, "#281423", new DateTime(2020, 5, 30, 23, 25, 2, 641, DateTimeKind.Local).AddTicks(6455), "Use the haptic EXE system, then you can connect the haptic system!", 48 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 926, "#247c79", new DateTime(2020, 3, 7, 8, 46, 16, 495, DateTimeKind.Local).AddTicks(4818), "Try to parse the JBOD monitor, maybe it will parse the auxiliary monitor!", 48 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 721, "#1d7067", new DateTime(2020, 3, 27, 14, 53, 10, 730, DateTimeKind.Local).AddTicks(9942), "We need to copy the haptic COM array!", 211 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 525, "#143717", new DateTime(2020, 10, 13, 16, 49, 44, 679, DateTimeKind.Local).AddTicks(374), "If we back up the feed, we can get to the IB feed through the multi-byte IB feed!", 50 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 46, "#0b6230", new DateTime(2020, 4, 7, 23, 19, 47, 517, DateTimeKind.Local).AddTicks(6788), "We need to bypass the online THX program!", 211 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1094, "#7d0244", new DateTime(2020, 9, 4, 0, 59, 41, 533, DateTimeKind.Local).AddTicks(9500), "You can't back up the program without synthesizing the neural RSS program!", 48 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1101, "#3a7857", new DateTime(2020, 12, 24, 13, 5, 19, 911, DateTimeKind.Local).AddTicks(1328), "overriding the bus won't do anything, we need to hack the virtual CSS bus!", 48 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1195, "#08445a", new DateTime(2020, 8, 19, 18, 38, 33, 958, DateTimeKind.Local).AddTicks(7008), "parsing the system won't do anything, we need to program the bluetooth XML system!", 48 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 779, "#273526", new DateTime(2020, 6, 4, 6, 49, 26, 493, DateTimeKind.Local).AddTicks(5332), "navigating the system won't do anything, we need to transmit the open-source THX system!", 210 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 727, "#3c4238", new DateTime(2021, 1, 1, 8, 44, 10, 785, DateTimeKind.Local).AddTicks(1244), "Use the primary SMTP protocol, then you can connect the primary protocol!", 210 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 481, "#56526b", new DateTime(2020, 7, 3, 14, 2, 45, 6, DateTimeKind.Local).AddTicks(5085), "If we back up the interface, we can get to the SCSI interface through the open-source SCSI interface!", 210 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 743, "#0d3f21", new DateTime(2020, 9, 12, 15, 33, 25, 310, DateTimeKind.Local).AddTicks(9451), "I'll copy the open-source AI program, that should program the AI program!", 209 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 282, "#583d1e", new DateTime(2020, 5, 23, 3, 50, 42, 305, DateTimeKind.Local).AddTicks(4021), "If we bypass the transmitter, we can get to the EXE transmitter through the redundant EXE transmitter!", 209 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1058, "#204b19", new DateTime(2020, 8, 9, 5, 43, 42, 878, DateTimeKind.Local).AddTicks(9336), "Try to bypass the COM hard drive, maybe it will bypass the bluetooth hard drive!", 48 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1182, "#003731", new DateTime(2020, 12, 15, 10, 22, 35, 81, DateTimeKind.Local).AddTicks(1620), "I'll program the back-end FTP hard drive, that should hard drive the FTP hard drive!", 50 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1113, "#0f1208", new DateTime(2020, 5, 2, 2, 19, 38, 950, DateTimeKind.Local).AddTicks(8080), "generating the program won't do anything, we need to index the redundant SCSI program!", 205 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 978, "#3a2460", new DateTime(2020, 6, 23, 13, 21, 26, 142, DateTimeKind.Local).AddTicks(750), "If we navigate the card, we can get to the IB card through the optical IB card!", 205 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1068, "#354a60", new DateTime(2020, 12, 18, 15, 36, 35, 887, DateTimeKind.Local).AddTicks(3486), "bypassing the port won't do anything, we need to calculate the auxiliary AI port!", 201 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 447, "#210a0e", new DateTime(2020, 7, 2, 6, 3, 56, 553, DateTimeKind.Local).AddTicks(9002), "If we parse the monitor, we can get to the JBOD monitor through the online JBOD monitor!", 201 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 410, "#7f3c7b", new DateTime(2020, 4, 22, 20, 32, 36, 431, DateTimeKind.Local).AddTicks(2264), "The SQL protocol is down, parse the neural protocol so we can parse the SQL protocol!", 201 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 374, "#164a49", new DateTime(2020, 9, 20, 12, 12, 54, 343, DateTimeKind.Local).AddTicks(6923), "backing up the driver won't do anything, we need to index the haptic SMTP driver!", 201 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 536, "#3b376b", new DateTime(2020, 4, 3, 5, 9, 33, 771, DateTimeKind.Local).AddTicks(6077), "Use the digital AI panel, then you can quantify the digital panel!", 54 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1077, "#3c4771", new DateTime(2020, 3, 16, 17, 47, 1, 559, DateTimeKind.Local).AddTicks(2585), "If we copy the monitor, we can get to the HTTP monitor through the 1080p HTTP monitor!", 200 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1043, "#6b023d", new DateTime(2020, 5, 6, 1, 0, 19, 799, DateTimeKind.Local).AddTicks(6699), "We need to program the back-end HDD protocol!", 200 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 963, "#432d7d", new DateTime(2020, 10, 10, 19, 57, 16, 56, DateTimeKind.Local).AddTicks(1055), "If we program the bus, we can get to the RSS bus through the auxiliary RSS bus!", 200 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1024, "#004132", new DateTime(2020, 3, 20, 10, 19, 43, 266, DateTimeKind.Local).AddTicks(474), "You can't transmit the sensor without parsing the bluetooth ADP sensor!", 53 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 150, "#76301a", new DateTime(2020, 9, 19, 9, 17, 51, 17, DateTimeKind.Local).AddTicks(1862), "You can't copy the pixel without bypassing the back-end IB pixel!", 200 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 591, "#622517", new DateTime(2021, 1, 24, 3, 28, 17, 256, DateTimeKind.Local).AddTicks(6275), "The EXE microchip is down, back up the virtual microchip so we can back up the EXE microchip!", 54 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 960, "#2c2726", new DateTime(2020, 6, 20, 17, 36, 42, 820, DateTimeKind.Local).AddTicks(5564), "backing up the pixel won't do anything, we need to index the auxiliary FTP pixel!", 199 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 650, "#6b6c0a", new DateTime(2020, 10, 28, 19, 6, 0, 464, DateTimeKind.Local).AddTicks(8458), "transmitting the sensor won't do anything, we need to override the 1080p TCP sensor!", 199 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 616, "#254c35", new DateTime(2020, 4, 15, 15, 15, 25, 737, DateTimeKind.Local).AddTicks(9106), "I'll parse the back-end PCI bandwidth, that should bandwidth the PCI bandwidth!", 199 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 473, "#042c19", new DateTime(2020, 10, 6, 3, 42, 26, 458, DateTimeKind.Local).AddTicks(5776), "I'll bypass the primary JSON interface, that should interface the JSON interface!", 55 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 486, "#65055f", new DateTime(2020, 3, 26, 22, 26, 57, 934, DateTimeKind.Local).AddTicks(9104), "Use the haptic SMS sensor, then you can parse the haptic sensor!", 55 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 271, "#2c5b30", new DateTime(2020, 6, 26, 11, 18, 23, 155, DateTimeKind.Local).AddTicks(1090), "We need to connect the neural SAS array!", 198 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 28, "#5e4e34", new DateTime(2020, 3, 7, 20, 4, 57, 317, DateTimeKind.Local).AddTicks(1305), "If we generate the sensor, we can get to the PCI sensor through the redundant PCI sensor!", 198 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 50, "#7c5e26", new DateTime(2021, 1, 27, 17, 19, 13, 669, DateTimeKind.Local).AddTicks(8346), "If we quantify the feed, we can get to the XML feed through the virtual XML feed!", 200 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 149, "#420541", new DateTime(2020, 5, 31, 1, 9, 5, 549, DateTimeKind.Local).AddTicks(8759), "parsing the panel won't do anything, we need to bypass the back-end IB panel!", 212 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 979, "#3c7509", new DateTime(2020, 11, 12, 12, 22, 57, 352, DateTimeKind.Local).AddTicks(6610), "I'll program the auxiliary COM alarm, that should alarm the COM alarm!", 53 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 606, "#080678", new DateTime(2020, 10, 22, 18, 29, 25, 117, DateTimeKind.Local).AddTicks(905), "Use the auxiliary SMS program, then you can calculate the auxiliary program!", 53 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 701, "#5f4330", new DateTime(2020, 9, 26, 13, 0, 59, 99, DateTimeKind.Local).AddTicks(4754), "The AGP sensor is down, hack the solid state sensor so we can hack the AGP sensor!", 205 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 351, "#4e3b54", new DateTime(2020, 9, 18, 22, 38, 13, 492, DateTimeKind.Local).AddTicks(725), "We need to copy the back-end SDD matrix!", 205 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1178, "#413861", new DateTime(2020, 4, 12, 21, 21, 33, 945, DateTimeKind.Local).AddTicks(1100), "If we synthesize the capacitor, we can get to the PNG capacitor through the optical PNG capacitor!", 204 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1170, "#26634e", new DateTime(2020, 12, 9, 10, 51, 24, 413, DateTimeKind.Local).AddTicks(1729), "Try to transmit the IB firewall, maybe it will transmit the back-end firewall!", 204 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 209, "#5d4c08", new DateTime(2021, 2, 2, 23, 28, 18, 895, DateTimeKind.Local).AddTicks(1985), "The USB panel is down, back up the online panel so we can back up the USB panel!", 204 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 27, "#65120d", new DateTime(2020, 4, 11, 18, 21, 49, 951, DateTimeKind.Local).AddTicks(7696), "If we index the pixel, we can get to the SQL pixel through the redundant SQL pixel!", 204 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 16, "#556d42", new DateTime(2020, 11, 13, 14, 39, 44, 481, DateTimeKind.Local).AddTicks(5574), "backing up the transmitter won't do anything, we need to synthesize the mobile HDD transmitter!", 204 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 563, "#07166e", new DateTime(2021, 3, 3, 6, 26, 51, 105, DateTimeKind.Local).AddTicks(3762), "Use the bluetooth HTTP port, then you can back up the bluetooth port!", 51 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 703, "#19801d", new DateTime(2021, 2, 26, 15, 26, 57, 206, DateTimeKind.Local).AddTicks(2412), "We need to index the wireless COM matrix!", 53 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 653, "#254a54", new DateTime(2020, 7, 19, 13, 29, 36, 22, DateTimeKind.Local).AddTicks(2120), "You can't program the bus without synthesizing the 1080p TCP bus!", 51 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1027, "#706a3a", new DateTime(2020, 6, 25, 12, 20, 13, 948, DateTimeKind.Local).AddTicks(2712), "Use the auxiliary JSON microchip, then you can quantify the auxiliary microchip!", 51 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1174, "#3e5819", new DateTime(2020, 11, 13, 17, 20, 34, 137, DateTimeKind.Local).AddTicks(1703), "I'll transmit the 1080p THX feed, that should feed the THX feed!", 203 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 587, "#1b580f", new DateTime(2020, 8, 26, 11, 24, 34, 978, DateTimeKind.Local).AddTicks(9783), "We need to bypass the cross-platform JSON capacitor!", 203 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 393, "#02633f", new DateTime(2020, 8, 7, 1, 18, 58, 973, DateTimeKind.Local).AddTicks(1372), "overriding the card won't do anything, we need to connect the wireless SDD card!", 203 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 112, "#3d1039", new DateTime(2020, 6, 16, 5, 24, 37, 912, DateTimeKind.Local).AddTicks(1854), "You can't synthesize the bus without quantifying the back-end GB bus!", 53 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 215, "#272b4e", new DateTime(2021, 2, 6, 5, 58, 34, 211, DateTimeKind.Local).AddTicks(7714), "We need to navigate the primary HDD program!", 53 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 904, "#5b4e02", new DateTime(2020, 5, 30, 12, 52, 43, 186, DateTimeKind.Local).AddTicks(3089), "Use the multi-byte CSS pixel, then you can program the multi-byte pixel!", 202 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 22, "#0e7a36", new DateTime(2020, 5, 6, 12, 41, 53, 779, DateTimeKind.Local).AddTicks(7240), "I'll parse the multi-byte HTTP bus, that should bus the HTTP bus!", 202 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 920, "#00314e", new DateTime(2020, 11, 12, 23, 57, 57, 366, DateTimeKind.Local).AddTicks(5457), "Use the haptic PNG feed, then you can copy the haptic feed!", 51 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 270, "#194771", new DateTime(2020, 9, 2, 17, 5, 55, 134, DateTimeKind.Local).AddTicks(5084), "copying the matrix won't do anything, we need to compress the 1080p RSS matrix!", 212 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 272, "#0d095c", new DateTime(2021, 1, 2, 3, 42, 41, 582, DateTimeKind.Local).AddTicks(8287), "We need to bypass the optical HTTP monitor!", 212 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 700, "#7c2909", new DateTime(2020, 11, 21, 17, 20, 32, 214, DateTimeKind.Local).AddTicks(6869), "We need to compress the primary GB program!", 212 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 880, "#251e23", new DateTime(2021, 1, 23, 3, 40, 5, 576, DateTimeKind.Local).AddTicks(7859), "The TCP firewall is down, program the virtual firewall so we can program the TCP firewall!", 221 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 878, "#037328", new DateTime(2020, 3, 5, 19, 17, 50, 319, DateTimeKind.Local).AddTicks(2141), "We need to parse the neural SMS circuit!", 221 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 829, "#262f10", new DateTime(2021, 1, 27, 16, 44, 59, 861, DateTimeKind.Local).AddTicks(818), "I'll compress the virtual FTP port, that should port the FTP port!", 221 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 803, "#1f1318", new DateTime(2020, 10, 5, 16, 27, 54, 311, DateTimeKind.Local).AddTicks(81), "We need to bypass the virtual XML array!", 221 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 882, "#4b1245", new DateTime(2020, 4, 21, 17, 48, 38, 886, DateTimeKind.Local).AddTicks(8243), "I'll hack the open-source FTP system, that should system the FTP system!", 220 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 820, "#311b71", new DateTime(2020, 4, 13, 20, 35, 4, 144, DateTimeKind.Local).AddTicks(5632), "The XML array is down, navigate the auxiliary array so we can navigate the XML array!", 220 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 191, "#4b5d76", new DateTime(2020, 7, 4, 18, 24, 42, 992, DateTimeKind.Local).AddTicks(3168), "The USB driver is down, back up the primary driver so we can back up the USB driver!", 220 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 13, "#214320", new DateTime(2020, 3, 7, 20, 36, 27, 582, DateTimeKind.Local).AddTicks(3992), "You can't generate the matrix without quantifying the auxiliary SSL matrix!", 43 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 890, "#090f71", new DateTime(2021, 2, 7, 13, 23, 29, 560, DateTimeKind.Local).AddTicks(8048), "You can't generate the hard drive without quantifying the redundant CSS hard drive!", 221 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 217, "#572003", new DateTime(2020, 3, 22, 20, 39, 51, 712, DateTimeKind.Local).AddTicks(431), "You can't index the feed without copying the 1080p SDD feed!", 43 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 317, "#80471b", new DateTime(2020, 3, 29, 0, 59, 11, 171, DateTimeKind.Local).AddTicks(5279), "You can't index the feed without connecting the mobile COM feed!", 43 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 414, "#404c18", new DateTime(2020, 8, 30, 6, 33, 50, 137, DateTimeKind.Local).AddTicks(9157), "You can't copy the pixel without generating the bluetooth PCI pixel!", 43 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1126, "#692f17", new DateTime(2020, 12, 22, 3, 54, 28, 414, DateTimeKind.Local).AddTicks(3757), "Try to input the SQL driver, maybe it will input the online driver!", 219 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1001, "#306d72", new DateTime(2020, 4, 3, 10, 2, 49, 234, DateTimeKind.Local).AddTicks(770), "We need to index the solid state FTP application!", 219 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 817, "#782304", new DateTime(2020, 12, 6, 8, 45, 13, 533, DateTimeKind.Local).AddTicks(956), "quantifying the application won't do anything, we need to calculate the multi-byte TCP application!", 219 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 482, "#161244", new DateTime(2020, 11, 15, 3, 59, 28, 781, DateTimeKind.Local).AddTicks(3830), "You can't generate the hard drive without programming the optical XSS hard drive!", 219 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 261, "#05203b", new DateTime(2020, 9, 28, 9, 22, 22, 566, DateTimeKind.Local).AddTicks(2466), "If we parse the port, we can get to the PCI port through the back-end PCI port!", 219 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 61, "#605305", new DateTime(2020, 5, 25, 21, 42, 44, 725, DateTimeKind.Local).AddTicks(5190), "Use the cross-platform XML protocol, then you can hack the cross-platform protocol!", 219 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 227, "#544378", new DateTime(2021, 2, 21, 15, 6, 6, 961, DateTimeKind.Local).AddTicks(6445), "I'll calculate the online SSL transmitter, that should transmitter the SSL transmitter!", 43 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 53, "#58123d", new DateTime(2020, 9, 22, 10, 10, 0, 490, DateTimeKind.Local).AddTicks(6354), "parsing the system won't do anything, we need to navigate the optical RAM system!", 219 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 547, "#7d0201", new DateTime(2020, 8, 31, 11, 35, 16, 435, DateTimeKind.Local).AddTicks(3336), "calculating the system won't do anything, we need to calculate the open-source GB system!", 222 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 980, "#3a603b", new DateTime(2021, 1, 29, 13, 37, 24, 138, DateTimeKind.Local).AddTicks(2988), "I'll navigate the back-end XSS firewall, that should firewall the XSS firewall!", 222 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 934, "#274967", new DateTime(2020, 7, 27, 16, 28, 36, 397, DateTimeKind.Local).AddTicks(4234), "I'll program the digital GB card, that should card the GB card!", 224 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 849, "#44377b", new DateTime(2020, 3, 22, 4, 0, 41, 991, DateTimeKind.Local).AddTicks(3050), "I'll back up the 1080p EXE application, that should application the EXE application!", 224 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 642, "#146c5b", new DateTime(2020, 3, 10, 17, 11, 9, 838, DateTimeKind.Local).AddTicks(6825), "We need to override the redundant JBOD circuit!", 224 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 433, "#3d245a", new DateTime(2020, 4, 4, 20, 14, 5, 491, DateTimeKind.Local).AddTicks(3412), "Use the mobile RSS sensor, then you can parse the mobile sensor!", 224 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 380, "#4a553d", new DateTime(2020, 9, 15, 3, 43, 30, 920, DateTimeKind.Local).AddTicks(6756), "We need to connect the virtual HDD bus!", 224 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 213, "#2b2b77", new DateTime(2021, 2, 8, 13, 49, 43, 199, DateTimeKind.Local).AddTicks(2977), "Try to quantify the GB sensor, maybe it will quantify the 1080p sensor!", 224 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 148, "#740e09", new DateTime(2020, 3, 17, 22, 23, 8, 325, DateTimeKind.Local).AddTicks(1789), "We need to program the open-source SAS hard drive!", 224 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 87, "#1d0873", new DateTime(2020, 3, 24, 21, 23, 5, 103, DateTimeKind.Local).AddTicks(5795), "The ADP transmitter is down, copy the haptic transmitter so we can copy the ADP transmitter!", 224 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 973, "#246d39", new DateTime(2020, 6, 30, 23, 57, 52, 161, DateTimeKind.Local).AddTicks(6952), "Try to program the GB application, maybe it will program the virtual application!", 222 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 218, "#7c044b", new DateTime(2021, 3, 2, 0, 58, 12, 602, DateTimeKind.Local).AddTicks(5121), "We need to navigate the digital TCP application!", 42 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 531, "#1e1017", new DateTime(2021, 2, 7, 5, 29, 18, 686, DateTimeKind.Local).AddTicks(2939), "If we compress the firewall, we can get to the FTP firewall through the cross-platform FTP firewall!", 42 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 792, "#5a6e73", new DateTime(2020, 5, 22, 0, 12, 20, 441, DateTimeKind.Local).AddTicks(94), "You can't calculate the circuit without overriding the auxiliary USB circuit!", 42 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 991, "#7b3070", new DateTime(2020, 5, 1, 6, 20, 26, 55, DateTimeKind.Local).AddTicks(4918), "I'll input the online EXE matrix, that should matrix the EXE matrix!", 42 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 919, "#69626c", new DateTime(2020, 6, 24, 19, 58, 11, 298, DateTimeKind.Local).AddTicks(7978), "Try to calculate the COM bandwidth, maybe it will calculate the online bandwidth!", 223 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 858, "#392761", new DateTime(2020, 11, 29, 9, 32, 18, 620, DateTimeKind.Local).AddTicks(7619), "The SQL transmitter is down, index the bluetooth transmitter so we can index the SQL transmitter!", 223 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 461, "#2d784a", new DateTime(2021, 1, 27, 22, 43, 59, 279, DateTimeKind.Local).AddTicks(9191), "The TCP sensor is down, parse the solid state sensor so we can parse the TCP sensor!", 223 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1167, "#452170", new DateTime(2020, 10, 19, 19, 36, 17, 727, DateTimeKind.Local).AddTicks(2401), "The PNG port is down, transmit the bluetooth port so we can transmit the PNG port!", 42 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1082, "#65141d", new DateTime(2020, 8, 7, 16, 49, 54, 834, DateTimeKind.Local).AddTicks(8432), "The EXE microchip is down, generate the back-end microchip so we can generate the EXE microchip!", 222 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 440, "#2e2454", new DateTime(2020, 5, 7, 11, 59, 14, 525, DateTimeKind.Local).AddTicks(292), "The AI matrix is down, parse the redundant matrix so we can parse the AI matrix!", 42 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 691, "#5b7056", new DateTime(2020, 10, 9, 18, 39, 8, 423, DateTimeKind.Local).AddTicks(2528), "The THX array is down, program the cross-platform array so we can program the THX array!", 55 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 968, "#266621", new DateTime(2020, 11, 11, 20, 27, 53, 720, DateTimeKind.Local).AddTicks(7223), "Try to compress the SMTP bus, maybe it will compress the auxiliary bus!", 43 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1115, "#193b72", new DateTime(2020, 9, 12, 17, 27, 8, 330, DateTimeKind.Local).AddTicks(9865), "The XSS bus is down, copy the multi-byte bus so we can copy the XSS bus!", 43 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1021, "#582054", new DateTime(2020, 5, 4, 1, 56, 55, 722, DateTimeKind.Local).AddTicks(9466), "We need to parse the neural ADP array!", 215 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 939, "#594e6a", new DateTime(2020, 8, 25, 2, 44, 53, 148, DateTimeKind.Local).AddTicks(5840), "Use the multi-byte RSS bus, then you can hack the multi-byte bus!", 215 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 863, "#7e350a", new DateTime(2020, 7, 5, 21, 56, 9, 715, DateTimeKind.Local).AddTicks(8445), "We need to back up the multi-byte XML monitor!", 215 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 804, "#596d0a", new DateTime(2021, 1, 31, 16, 35, 43, 833, DateTimeKind.Local).AddTicks(8742), "We need to parse the bluetooth RSS pixel!", 215 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 435, "#572d67", new DateTime(2020, 5, 13, 7, 53, 38, 737, DateTimeKind.Local).AddTicks(108), "Use the back-end RAM circuit, then you can parse the back-end circuit!", 215 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 427, "#0a2f45", new DateTime(2020, 9, 30, 13, 30, 14, 607, DateTimeKind.Local).AddTicks(5173), "Try to bypass the SCSI transmitter, maybe it will bypass the bluetooth transmitter!", 215 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 62, "#1f285f", new DateTime(2021, 2, 19, 0, 2, 1, 979, DateTimeKind.Local).AddTicks(6141), "You can't connect the microchip without compressing the auxiliary CSS microchip!", 46 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1004, "#1d6607", new DateTime(2021, 1, 9, 20, 43, 25, 69, DateTimeKind.Local).AddTicks(8112), "Use the primary XML port, then you can transmit the primary port!", 214 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1032, "#0b0904", new DateTime(2020, 12, 30, 3, 48, 35, 990, DateTimeKind.Local).AddTicks(2303), "You can't synthesize the application without compressing the auxiliary PNG application!", 215 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 672, "#352104", new DateTime(2020, 9, 30, 9, 55, 57, 1, DateTimeKind.Local).AddTicks(813), "The PNG matrix is down, quantify the neural matrix so we can quantify the PNG matrix!", 214 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 105, "#59542e", new DateTime(2020, 8, 11, 1, 29, 13, 566, DateTimeKind.Local).AddTicks(6186), "I'll generate the bluetooth XSS feed, that should feed the XSS feed!", 214 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 327, "#5d1d41", new DateTime(2020, 12, 10, 21, 56, 40, 553, DateTimeKind.Local).AddTicks(870), "We need to synthesize the auxiliary GB driver!", 46 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 418, "#135169", new DateTime(2020, 7, 6, 6, 18, 37, 213, DateTimeKind.Local).AddTicks(5008), "You can't synthesize the panel without generating the optical SMTP panel!", 46 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 532, "#42303c", new DateTime(2020, 9, 6, 7, 22, 43, 884, DateTimeKind.Local).AddTicks(2743), "bypassing the firewall won't do anything, we need to hack the haptic SSL firewall!", 46 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 931, "#795479", new DateTime(2020, 9, 17, 4, 55, 31, 635, DateTimeKind.Local).AddTicks(6557), "We need to compress the primary SSL monitor!", 213 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 347, "#0c5621", new DateTime(2020, 4, 3, 21, 48, 56, 990, DateTimeKind.Local).AddTicks(5208), "You can't input the monitor without copying the haptic JBOD monitor!", 47 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1192, "#1a1225", new DateTime(2020, 7, 25, 0, 39, 34, 338, DateTimeKind.Local).AddTicks(7741), "We need to compress the open-source TCP microchip!", 212 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 892, "#20622b", new DateTime(2021, 1, 28, 21, 56, 25, 251, DateTimeKind.Local).AddTicks(2743), "If we reboot the bandwidth, we can get to the XSS bandwidth through the mobile XSS bandwidth!", 212 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 216, "#540a23", new DateTime(2021, 3, 3, 11, 21, 36, 112, DateTimeKind.Local).AddTicks(8961), "We need to bypass the solid state RSS transmitter!", 214 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 993, "#453469", new DateTime(2020, 4, 1, 23, 29, 46, 308, DateTimeKind.Local).AddTicks(5515), "We need to connect the back-end SSL pixel!", 43 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1106, "#3a701e", new DateTime(2020, 7, 23, 7, 15, 21, 144, DateTimeKind.Local).AddTicks(4642), "If we connect the monitor, we can get to the COM monitor through the online COM monitor!", 215 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 276, "#1b7f1c", new DateTime(2020, 3, 10, 23, 14, 37, 701, DateTimeKind.Local).AddTicks(231), "Try to index the THX sensor, maybe it will index the multi-byte sensor!", 45 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 70, "#1b3558", new DateTime(2021, 2, 3, 1, 56, 30, 322, DateTimeKind.Local).AddTicks(4888), "Try to calculate the SAS driver, maybe it will calculate the multi-byte driver!", 44 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 404, "#0d0e06", new DateTime(2021, 1, 24, 13, 27, 51, 272, DateTimeKind.Local).AddTicks(5275), "If we transmit the program, we can get to the SCSI program through the cross-platform SCSI program!", 44 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 737, "#162238", new DateTime(2020, 8, 3, 7, 5, 30, 680, DateTimeKind.Local).AddTicks(3754), "I'll transmit the online RAM panel, that should panel the RAM panel!", 218 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 877, "#3f7f07", new DateTime(2020, 7, 27, 23, 18, 33, 504, DateTimeKind.Local).AddTicks(2813), "The HTTP feed is down, reboot the cross-platform feed so we can reboot the HTTP feed!", 44 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1127, "#534950", new DateTime(2020, 7, 15, 3, 44, 15, 834, DateTimeKind.Local).AddTicks(1179), "You can't generate the card without programming the redundant ADP card!", 217 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 640, "#36755b", new DateTime(2020, 3, 5, 7, 19, 2, 16, DateTimeKind.Local).AddTicks(6742), "The PCI alarm is down, override the neural alarm so we can override the PCI alarm!", 217 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 627, "#5b2e45", new DateTime(2020, 9, 19, 8, 49, 7, 738, DateTimeKind.Local).AddTicks(7980), "We need to program the multi-byte AGP circuit!", 217 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 266, "#3c5a5e", new DateTime(2020, 7, 27, 16, 30, 56, 474, DateTimeKind.Local).AddTicks(7344), "I'll transmit the 1080p RSS capacitor, that should capacitor the RSS capacitor!", 217 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 364, "#7b4812", new DateTime(2021, 1, 23, 7, 9, 27, 379, DateTimeKind.Local).AddTicks(8181), "The PNG system is down, input the optical system so we can input the PNG system!", 45 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 192, "#642f50", new DateTime(2020, 3, 5, 20, 17, 12, 977, DateTimeKind.Local).AddTicks(9233), "Use the virtual FTP monitor, then you can override the virtual monitor!", 45 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 947, "#591859", new DateTime(2020, 11, 8, 5, 46, 54, 525, DateTimeKind.Local).AddTicks(5274), "I'll override the open-source GB card, that should card the GB card!", 216 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 943, "#257971", new DateTime(2020, 3, 6, 18, 26, 59, 757, DateTimeKind.Local).AddTicks(9021), "Use the multi-byte ADP hard drive, then you can program the multi-byte hard drive!", 216 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 729, "#180b24", new DateTime(2021, 2, 20, 6, 9, 41, 494, DateTimeKind.Local).AddTicks(281), "You can't hack the card without generating the 1080p COM card!", 216 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 634, "#697d7b", new DateTime(2020, 10, 13, 5, 2, 36, 593, DateTimeKind.Local).AddTicks(1601), "The JBOD matrix is down, hack the 1080p matrix so we can hack the JBOD matrix!", 216 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 445, "#176102", new DateTime(2020, 12, 25, 1, 43, 49, 455, DateTimeKind.Local).AddTicks(3944), "bypassing the driver won't do anything, we need to hack the haptic COM driver!", 216 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 12, "#591f16", new DateTime(2021, 1, 17, 1, 28, 11, 613, DateTimeKind.Local).AddTicks(5911), "Use the solid state JSON card, then you can program the solid state card!", 216 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 241, "#7b3448", new DateTime(2020, 5, 3, 5, 19, 38, 924, DateTimeKind.Local).AddTicks(5708), "quantifying the capacitor won't do anything, we need to parse the cross-platform SMS capacitor!", 45 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 250, "#620c24", new DateTime(2020, 5, 17, 13, 0, 55, 631, DateTimeKind.Local).AddTicks(5737), "Use the haptic SDD feed, then you can transmit the haptic feed!", 45 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 220, "#73542d", new DateTime(2020, 10, 24, 14, 40, 8, 563, DateTimeKind.Local).AddTicks(7004), "We need to synthesize the auxiliary RAM circuit!", 45 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 821, "#6e6d53", new DateTime(2020, 9, 13, 15, 25, 48, 577, DateTimeKind.Local).AddTicks(8953), "Use the open-source SMTP program, then you can copy the open-source program!", 55 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1002, "#62532c", new DateTime(2021, 2, 11, 15, 41, 26, 119, DateTimeKind.Local).AddTicks(3470), "If we quantify the pixel, we can get to the PCI pixel through the redundant PCI pixel!", 55 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1137, "#723e33", new DateTime(2020, 5, 20, 20, 56, 10, 381, DateTimeKind.Local).AddTicks(5796), "If we override the hard drive, we can get to the THX hard drive through the auxiliary THX hard drive!", 197 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 511, "#57613e", new DateTime(2020, 5, 10, 5, 56, 19, 401, DateTimeKind.Local).AddTicks(364), "Use the online XML driver, then you can hack the online driver!", 65 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 983, "#0b6980", new DateTime(2020, 8, 26, 4, 42, 17, 899, DateTimeKind.Local).AddTicks(3307), "I'll transmit the solid state XSS matrix, that should matrix the XSS matrix!", 65 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1157, "#21746a", new DateTime(2020, 11, 1, 21, 57, 9, 748, DateTimeKind.Local).AddTicks(8930), "You can't synthesize the interface without navigating the optical RAM interface!", 65 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 94, "#504d69", new DateTime(2020, 6, 15, 13, 33, 19, 564, DateTimeKind.Local).AddTicks(2362), "You can't transmit the pixel without indexing the redundant FTP pixel!", 66 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 856, "#5e2225", new DateTime(2020, 8, 17, 11, 4, 4, 289, DateTimeKind.Local).AddTicks(8644), "We need to reboot the digital RSS protocol!", 177 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 733, "#42750e", new DateTime(2020, 4, 29, 13, 37, 24, 38, DateTimeKind.Local).AddTicks(5226), "hacking the array won't do anything, we need to back up the haptic PCI array!", 177 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 460, "#5c3356", new DateTime(2020, 4, 13, 13, 12, 22, 859, DateTimeKind.Local).AddTicks(9293), "Use the digital SAS circuit, then you can index the digital circuit!", 67 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1087, "#5c5846", new DateTime(2020, 7, 12, 18, 45, 38, 165, DateTimeKind.Local).AddTicks(8319), "I'll generate the haptic SQL application, that should application the SQL application!", 67 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 100, "#258004", new DateTime(2020, 11, 2, 16, 31, 4, 661, DateTimeKind.Local).AddTicks(7283), "If we transmit the panel, we can get to the HTTP panel through the neural HTTP panel!", 178 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 59, "#4a0966", new DateTime(2020, 5, 30, 5, 32, 13, 491, DateTimeKind.Local).AddTicks(9444), "The ADP card is down, calculate the multi-byte card so we can calculate the ADP card!", 68 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1089, "#170c31", new DateTime(2020, 10, 29, 4, 36, 50, 762, DateTimeKind.Local).AddTicks(5915), "The ADP port is down, transmit the multi-byte port so we can transmit the ADP port!", 176 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 615, "#790d26", new DateTime(2020, 9, 6, 0, 32, 39, 9, DateTimeKind.Local).AddTicks(1596), "generating the sensor won't do anything, we need to bypass the back-end JSON sensor!", 176 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 222, "#0c1b2a", new DateTime(2020, 5, 11, 21, 55, 39, 919, DateTimeKind.Local).AddTicks(9541), "If we connect the card, we can get to the SSL card through the haptic SSL card!", 176 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 318, "#552e31", new DateTime(2020, 4, 15, 13, 55, 9, 10, DateTimeKind.Local).AddTicks(5931), "programming the program won't do anything, we need to reboot the online SMTP program!", 68 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 694, "#052c00", new DateTime(2020, 4, 11, 14, 0, 27, 420, DateTimeKind.Local).AddTicks(2967), "Use the haptic THX alarm, then you can generate the haptic alarm!", 68 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 837, "#681211", new DateTime(2021, 2, 12, 2, 8, 20, 900, DateTimeKind.Local).AddTicks(9000), "If we program the protocol, we can get to the JSON protocol through the virtual JSON protocol!", 68 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 842, "#15284c", new DateTime(2020, 8, 8, 18, 42, 42, 799, DateTimeKind.Local).AddTicks(2752), "Try to index the SQL circuit, maybe it will index the 1080p circuit!", 68 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 516, "#385d2b", new DateTime(2020, 10, 24, 10, 10, 4, 944, DateTimeKind.Local).AddTicks(1529), "Use the optical AGP firewall, then you can transmit the optical firewall!", 175 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1153, "#3b2707", new DateTime(2020, 6, 14, 23, 10, 54, 848, DateTimeKind.Local).AddTicks(7891), "programming the alarm won't do anything, we need to connect the redundant EXE alarm!", 176 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 415, "#691059", new DateTime(2020, 9, 18, 3, 41, 50, 452, DateTimeKind.Local).AddTicks(4731), "If we connect the pixel, we can get to the PNG pixel through the back-end PNG pixel!", 175 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 345, "#34726f", new DateTime(2020, 6, 22, 9, 59, 56, 59, DateTimeKind.Local).AddTicks(4954), "The SCSI firewall is down, program the mobile firewall so we can program the SCSI firewall!", 178 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 713, "#195a7b", new DateTime(2020, 10, 8, 13, 28, 55, 313, DateTimeKind.Local).AddTicks(5871), "You can't override the bus without quantifying the bluetooth PNG bus!", 178 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 777, "#6e5f46", new DateTime(2020, 11, 16, 19, 50, 4, 208, DateTimeKind.Local).AddTicks(7149), "The FTP matrix is down, compress the haptic matrix so we can compress the FTP matrix!", 180 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 775, "#0d747b", new DateTime(2020, 10, 15, 6, 3, 34, 802, DateTimeKind.Local).AddTicks(5002), "Use the solid state SDD circuit, then you can index the solid state circuit!", 180 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 652, "#133224", new DateTime(2020, 7, 19, 22, 44, 40, 626, DateTimeKind.Local).AddTicks(7309), "If we compress the driver, we can get to the XML driver through the mobile XML driver!", 180 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 601, "#291105", new DateTime(2020, 10, 16, 16, 24, 18, 185, DateTimeKind.Local).AddTicks(6164), "If we program the interface, we can get to the COM interface through the mobile COM interface!", 180 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 503, "#282251", new DateTime(2020, 4, 14, 22, 49, 8, 522, DateTimeKind.Local).AddTicks(3056), "If we input the bandwidth, we can get to the COM bandwidth through the 1080p COM bandwidth!", 180 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 398, "#0b453f", new DateTime(2020, 11, 12, 22, 20, 58, 923, DateTimeKind.Local).AddTicks(6260), "I'll input the wireless PCI capacitor, that should capacitor the PCI capacitor!", 180 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 306, "#3a4829", new DateTime(2020, 3, 27, 10, 18, 8, 897, DateTimeKind.Local).AddTicks(1913), "You can't index the feed without overriding the haptic CSS feed!", 180 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 135, "#622f20", new DateTime(2020, 9, 21, 2, 12, 11, 293, DateTimeKind.Local).AddTicks(502), "You can't connect the hard drive without synthesizing the optical HTTP hard drive!", 180 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 362, "#685e5d", new DateTime(2020, 3, 28, 10, 13, 47, 20, DateTimeKind.Local).AddTicks(5676), "The XSS firewall is down, transmit the cross-platform firewall so we can transmit the XSS firewall!", 178 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 113, "#36383f", new DateTime(2020, 3, 27, 15, 12, 13, 859, DateTimeKind.Local).AddTicks(2586), "The SQL bus is down, compress the mobile bus so we can compress the SQL bus!", 180 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 823, "#44112e", new DateTime(2020, 3, 11, 11, 35, 12, 773, DateTimeKind.Local).AddTicks(1224), "If we override the circuit, we can get to the RSS circuit through the cross-platform RSS circuit!", 179 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 510, "#667904", new DateTime(2020, 8, 21, 11, 9, 10, 349, DateTimeKind.Local).AddTicks(2760), "The AI bandwidth is down, transmit the primary bandwidth so we can transmit the AI bandwidth!", 179 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 162, "#424478", new DateTime(2020, 5, 24, 0, 4, 42, 325, DateTimeKind.Local).AddTicks(8437), "The RAM interface is down, quantify the primary interface so we can quantify the RAM interface!", 65 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 260, "#144819", new DateTime(2020, 3, 22, 10, 57, 47, 136, DateTimeKind.Local).AddTicks(2805), "I'll bypass the open-source SCSI matrix, that should matrix the SCSI matrix!", 65 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 423, "#4c2f60", new DateTime(2020, 10, 30, 0, 40, 46, 121, DateTimeKind.Local).AddTicks(2205), "You can't program the bandwidth without quantifying the primary AI bandwidth!", 65 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 502, "#243441", new DateTime(2021, 1, 3, 5, 30, 59, 843, DateTimeKind.Local).AddTicks(5124), "If we override the system, we can get to the RAM system through the back-end RAM system!", 65 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1111, "#027a48", new DateTime(2020, 5, 8, 15, 39, 1, 569, DateTimeKind.Local).AddTicks(6857), "You can't calculate the panel without hacking the haptic USB panel!", 178 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1034, "#466066", new DateTime(2020, 4, 28, 1, 40, 12, 819, DateTimeKind.Local).AddTicks(8721), "If we program the application, we can get to the CSS application through the cross-platform CSS application!", 178 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 96, "#4e6d1e", new DateTime(2020, 11, 10, 9, 28, 14, 153, DateTimeKind.Local).AddTicks(3180), "You can't back up the capacitor without indexing the multi-byte JSON capacitor!", 180 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 859, "#4b6b03", new DateTime(2021, 1, 30, 3, 53, 11, 157, DateTimeKind.Local).AddTicks(4354), "The JSON array is down, program the primary array so we can program the JSON array!", 180 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 248, "#41182c", new DateTime(2020, 8, 20, 14, 3, 41, 742, DateTimeKind.Local).AddTicks(9005), "I'll compress the virtual RSS driver, that should driver the RSS driver!", 175 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1102, "#535d71", new DateTime(2021, 1, 22, 19, 54, 43, 765, DateTimeKind.Local).AddTicks(5235), "If we generate the feed, we can get to the AGP feed through the haptic AGP feed!", 174 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 159, "#220419", new DateTime(2020, 11, 5, 22, 50, 59, 195, DateTimeKind.Local).AddTicks(6406), "The XSS card is down, parse the auxiliary card so we can parse the XSS card!", 170 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 108, "#665f15", new DateTime(2020, 11, 4, 12, 37, 49, 433, DateTimeKind.Local).AddTicks(7575), "Try to compress the SCSI interface, maybe it will compress the online interface!", 170 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 65, "#640c48", new DateTime(2020, 4, 21, 14, 39, 7, 317, DateTimeKind.Local).AddTicks(7484), "Try to navigate the PNG port, maybe it will navigate the neural port!", 170 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 872, "#48587f", new DateTime(2020, 7, 26, 13, 40, 41, 509, DateTimeKind.Local).AddTicks(5193), "We need to override the 1080p SAS array!", 71 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1038, "#2b4247", new DateTime(2020, 7, 14, 5, 44, 15, 962, DateTimeKind.Local).AddTicks(4050), "You can't synthesize the transmitter without copying the auxiliary SCSI transmitter!", 71 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1096, "#3d6935", new DateTime(2020, 9, 7, 9, 39, 54, 459, DateTimeKind.Local).AddTicks(3849), "Try to override the SMS transmitter, maybe it will override the back-end transmitter!", 169 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1022, "#596b7c", new DateTime(2020, 12, 16, 13, 33, 7, 428, DateTimeKind.Local).AddTicks(5270), "Use the online FTP bandwidth, then you can bypass the online bandwidth!", 169 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 844, "#360011", new DateTime(2021, 2, 15, 4, 13, 55, 653, DateTimeKind.Local).AddTicks(6382), "The SAS sensor is down, navigate the bluetooth sensor so we can navigate the SAS sensor!", 169 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 242, "#072810", new DateTime(2020, 8, 12, 23, 15, 57, 259, DateTimeKind.Local).AddTicks(2239), "If we program the driver, we can get to the JSON driver through the mobile JSON driver!", 170 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 562, "#397376", new DateTime(2020, 9, 10, 14, 27, 16, 996, DateTimeKind.Local).AddTicks(2254), "The USB port is down, synthesize the back-end port so we can synthesize the USB port!", 169 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 169, "#710906", new DateTime(2020, 7, 4, 7, 9, 5, 97, DateTimeKind.Local).AddTicks(5814), "I'll program the solid state SCSI panel, that should panel the SCSI panel!", 72 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 170, "#0f637d", new DateTime(2021, 2, 22, 12, 17, 15, 805, DateTimeKind.Local).AddTicks(1492), "If we program the firewall, we can get to the SCSI firewall through the back-end SCSI firewall!", 72 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 564, "#662680", new DateTime(2021, 1, 14, 8, 39, 36, 203, DateTimeKind.Local).AddTicks(2418), "If we navigate the capacitor, we can get to the CSS capacitor through the neural CSS capacitor!", 72 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 696, "#317d2c", new DateTime(2020, 10, 4, 6, 38, 2, 863, DateTimeKind.Local).AddTicks(5305), "Use the bluetooth SMTP feed, then you can override the bluetooth feed!", 72 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 710, "#3b1822", new DateTime(2021, 1, 9, 1, 43, 26, 847, DateTimeKind.Local).AddTicks(4686), "We need to connect the multi-byte EXE pixel!", 72 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 824, "#570639", new DateTime(2020, 6, 19, 21, 47, 2, 482, DateTimeKind.Local).AddTicks(2975), "I'll navigate the solid state XSS card, that should card the XSS card!", 72 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1156, "#5b2a55", new DateTime(2020, 9, 14, 16, 34, 43, 434, DateTimeKind.Local).AddTicks(8246), "navigating the program won't do anything, we need to navigate the 1080p RAM program!", 168 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 210, "#6d3701", new DateTime(2020, 6, 16, 15, 21, 5, 869, DateTimeKind.Local).AddTicks(5654), "parsing the port won't do anything, we need to navigate the auxiliary COM port!", 168 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 469, "#1a696f", new DateTime(2020, 12, 30, 3, 51, 10, 224, DateTimeKind.Local).AddTicks(5761), "Use the mobile RAM array, then you can bypass the mobile array!", 169 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1177, "#5e6f1b", new DateTime(2020, 4, 12, 9, 3, 20, 925, DateTimeKind.Local).AddTicks(201), "You can't compress the transmitter without backing up the open-source USB transmitter!", 174 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 478, "#502b30", new DateTime(2020, 10, 21, 8, 43, 59, 249, DateTimeKind.Local).AddTicks(4317), "Use the haptic SCSI bus, then you can parse the haptic bus!", 170 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 760, "#295431", new DateTime(2020, 4, 14, 16, 26, 16, 880, DateTimeKind.Local).AddTicks(3244), "Use the online AI monitor, then you can copy the online monitor!", 170 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 89, "#143662", new DateTime(2020, 7, 7, 12, 36, 24, 332, DateTimeKind.Local).AddTicks(5139), "The SAS capacitor is down, compress the online capacitor so we can compress the SAS capacitor!", 69 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 293, "#6f6613", new DateTime(2020, 12, 14, 7, 49, 32, 117, DateTimeKind.Local).AddTicks(1088), "The SAS sensor is down, generate the virtual sensor so we can generate the SAS sensor!", 69 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 371, "#656770", new DateTime(2020, 6, 21, 19, 16, 26, 481, DateTimeKind.Local).AddTicks(5302), "You can't copy the matrix without connecting the haptic SSL matrix!", 69 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 751, "#147f2c", new DateTime(2020, 4, 21, 13, 42, 15, 460, DateTimeKind.Local).AddTicks(3415), "Try to reboot the JBOD pixel, maybe it will reboot the bluetooth pixel!", 69 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 673, "#3b2214", new DateTime(2021, 2, 4, 6, 44, 38, 76, DateTimeKind.Local).AddTicks(6602), "You can't reboot the card without parsing the mobile XML card!", 70 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 897, "#57183e", new DateTime(2020, 7, 6, 17, 38, 16, 577, DateTimeKind.Local).AddTicks(7923), "If we back up the driver, we can get to the EXE driver through the mobile EXE driver!", 70 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 570, "#0a3a25", new DateTime(2020, 9, 23, 8, 58, 33, 681, DateTimeKind.Local).AddTicks(9605), "The IB capacitor is down, program the 1080p capacitor so we can program the IB capacitor!", 172 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 472, "#0f0616", new DateTime(2021, 2, 15, 2, 57, 58, 249, DateTimeKind.Local).AddTicks(9905), "I'll generate the auxiliary PNG card, that should card the PNG card!", 172 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 567, "#080c50", new DateTime(2020, 11, 10, 19, 54, 47, 586, DateTimeKind.Local).AddTicks(4380), "Use the solid state THX system, then you can input the solid state system!", 170 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 382, "#3c4b28", new DateTime(2020, 9, 8, 15, 47, 58, 695, DateTimeKind.Local).AddTicks(5573), "You can't reboot the capacitor without synthesizing the solid state SMTP capacitor!", 172 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1186, "#1a696c", new DateTime(2020, 6, 7, 13, 28, 36, 907, DateTimeKind.Local).AddTicks(8739), "overriding the feed won't do anything, we need to navigate the solid state PNG feed!", 70 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1180, "#0d4032", new DateTime(2020, 6, 13, 8, 13, 35, 545, DateTimeKind.Local).AddTicks(9790), "Use the neural THX monitor, then you can back up the neural monitor!", 171 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1012, "#29544b", new DateTime(2020, 7, 23, 6, 56, 59, 776, DateTimeKind.Local).AddTicks(5258), "overriding the transmitter won't do anything, we need to synthesize the virtual IB transmitter!", 171 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 724, "#3e6b0e", new DateTime(2020, 4, 4, 11, 56, 3, 264, DateTimeKind.Local).AddTicks(3705), "Use the virtual SMTP firewall, then you can bypass the virtual firewall!", 171 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 446, "#644936", new DateTime(2020, 9, 23, 7, 24, 47, 13, DateTimeKind.Local).AddTicks(9696), "You can't generate the system without indexing the auxiliary HDD system!", 171 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 19, "#67450c", new DateTime(2020, 4, 26, 11, 39, 39, 410, DateTimeKind.Local).AddTicks(3027), "Try to navigate the USB capacitor, maybe it will navigate the digital capacitor!", 71 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 289, "#48654b", new DateTime(2021, 1, 22, 1, 17, 44, 353, DateTimeKind.Local).AddTicks(912), "You can't back up the bandwidth without transmitting the virtual GB bandwidth!", 71 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 906, "#2d3e24", new DateTime(2020, 4, 3, 5, 49, 52, 775, DateTimeKind.Local).AddTicks(9004), "I'll compress the virtual GB interface, that should interface the GB interface!", 170 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1123, "#542518", new DateTime(2020, 6, 14, 4, 50, 55, 159, DateTimeKind.Local).AddTicks(954), "Try to compress the HTTP transmitter, maybe it will compress the bluetooth transmitter!", 70 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1165, "#0c2870", new DateTime(2020, 11, 29, 15, 24, 32, 793, DateTimeKind.Local).AddTicks(5813), "The COM array is down, bypass the mobile array so we can bypass the COM array!", 167 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 273, "#5c1441", new DateTime(2020, 3, 19, 3, 58, 12, 751, DateTimeKind.Local).AddTicks(1085), "We need to hack the online CSS protocol!", 181 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1017, "#726914", new DateTime(2020, 8, 4, 3, 2, 51, 294, DateTimeKind.Local).AddTicks(3490), "Try to bypass the COM bus, maybe it will bypass the auxiliary bus!", 63 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 176, "#4f3a60", new DateTime(2020, 7, 22, 7, 52, 54, 65, DateTimeKind.Local).AddTicks(2234), "Use the 1080p THX capacitor, then you can transmit the 1080p capacitor!", 58 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 524, "#196f72", new DateTime(2020, 8, 15, 21, 30, 3, 468, DateTimeKind.Local).AddTicks(400), "You can't parse the port without overriding the open-source SQL port!", 58 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 885, "#125311", new DateTime(2021, 2, 13, 23, 5, 54, 284, DateTimeKind.Local).AddTicks(630), "I'll index the solid state RAM application, that should application the RAM application!", 58 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 976, "#343d67", new DateTime(2020, 4, 17, 7, 26, 55, 610, DateTimeKind.Local).AddTicks(4336), "I'll copy the back-end XSS port, that should port the XSS port!", 58 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1129, "#680b5c", new DateTime(2020, 3, 30, 15, 23, 54, 424, DateTimeKind.Local).AddTicks(5597), "We need to index the wireless SMTP array!", 58 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1047, "#3a7967", new DateTime(2020, 3, 24, 23, 49, 27, 588, DateTimeKind.Local).AddTicks(5562), "You can't compress the microchip without synthesizing the multi-byte JSON microchip!", 191 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 972, "#0e2b7d", new DateTime(2020, 12, 30, 6, 48, 21, 677, DateTimeKind.Local).AddTicks(7182), "We need to navigate the wireless SAS microchip!", 191 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 894, "#4a6d3c", new DateTime(2021, 2, 7, 19, 19, 34, 214, DateTimeKind.Local).AddTicks(4174), "You can't quantify the circuit without bypassing the neural JBOD circuit!", 191 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 312, "#1c3f22", new DateTime(2020, 9, 16, 20, 37, 38, 904, DateTimeKind.Local).AddTicks(8059), "I'll parse the back-end JBOD monitor, that should monitor the JBOD monitor!", 192 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 527, "#00726e", new DateTime(2020, 11, 3, 20, 41, 58, 988, DateTimeKind.Local).AddTicks(2281), "We need to quantify the back-end XSS system!", 191 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 441, "#6c0d55", new DateTime(2020, 3, 17, 17, 15, 36, 94, DateTimeKind.Local).AddTicks(6667), "If we parse the port, we can get to the XML port through the back-end XML port!", 191 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 360, "#184335", new DateTime(2020, 4, 24, 3, 36, 6, 463, DateTimeKind.Local).AddTicks(2226), "I'll parse the digital SQL pixel, that should pixel the SQL pixel!", 191 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 187, "#656e5c", new DateTime(2020, 3, 5, 19, 55, 40, 469, DateTimeKind.Local).AddTicks(3135), "The XML capacitor is down, reboot the haptic capacitor so we can reboot the XML capacitor!", 59 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1164, "#7f1b5c", new DateTime(2020, 8, 20, 16, 29, 51, 730, DateTimeKind.Local).AddTicks(5597), "Use the wireless COM transmitter, then you can connect the wireless transmitter!", 190 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 969, "#634c29", new DateTime(2021, 2, 4, 2, 49, 42, 546, DateTimeKind.Local).AddTicks(4689), "Try to transmit the SSL program, maybe it will transmit the open-source program!", 190 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 924, "#436737", new DateTime(2020, 8, 25, 16, 28, 2, 351, DateTimeKind.Local).AddTicks(5621), "You can't copy the application without quantifying the cross-platform EXE application!", 190 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 853, "#33471f", new DateTime(2021, 1, 7, 14, 46, 1, 948, DateTimeKind.Local).AddTicks(2143), "backing up the panel won't do anything, we need to hack the haptic SDD panel!", 190 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 421, "#512918", new DateTime(2020, 11, 7, 7, 36, 0, 254, DateTimeKind.Local).AddTicks(2001), "The SSL panel is down, bypass the haptic panel so we can bypass the SSL panel!", 190 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 498, "#21667c", new DateTime(2020, 11, 22, 6, 36, 55, 351, DateTimeKind.Local).AddTicks(8726), "calculating the circuit won't do anything, we need to back up the 1080p TCP circuit!", 191 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 179, "#1a2351", new DateTime(2020, 6, 7, 19, 13, 31, 445, DateTimeKind.Local).AddTicks(4442), "I'll bypass the 1080p SSL feed, that should feed the SSL feed!", 190 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 333, "#172203", new DateTime(2020, 7, 3, 23, 35, 38, 450, DateTimeKind.Local).AddTicks(1066), "Use the digital HTTP system, then you can generate the digital system!", 192 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1071, "#142038", new DateTime(2020, 10, 3, 2, 1, 22, 98, DateTimeKind.Local).AddTicks(4181), "I'll bypass the wireless GB sensor, that should sensor the GB sensor!", 192 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 185, "#58360c", new DateTime(2020, 9, 16, 12, 10, 41, 873, DateTimeKind.Local).AddTicks(6799), "copying the protocol won't do anything, we need to program the digital JBOD protocol!", 197 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 683, "#121836", new DateTime(2020, 11, 6, 7, 56, 5, 238, DateTimeKind.Local).AddTicks(7412), "You can't reboot the capacitor without indexing the neural AGP capacitor!", 56 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1185, "#1d3f7b", new DateTime(2020, 12, 10, 7, 36, 35, 579, DateTimeKind.Local).AddTicks(7733), "You can't connect the microchip without backing up the online SMS microchip!", 56 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 950, "#6e4a47", new DateTime(2021, 2, 11, 6, 21, 10, 146, DateTimeKind.Local).AddTicks(4639), "If we quantify the monitor, we can get to the JBOD monitor through the auxiliary JBOD monitor!", 196 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 690, "#337f2b", new DateTime(2020, 6, 22, 2, 24, 46, 866, DateTimeKind.Local).AddTicks(9739), "transmitting the feed won't do anything, we need to input the redundant GB feed!", 196 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1145, "#7b596c", new DateTime(2020, 8, 13, 21, 59, 27, 117, DateTimeKind.Local).AddTicks(4207), "We need to compress the optical SAS protocol!", 195 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 984, "#416f06", new DateTime(2020, 8, 9, 8, 25, 1, 163, DateTimeKind.Local).AddTicks(3724), "We need to program the back-end SQL circuit!", 195 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 740, "#266b68", new DateTime(2020, 8, 10, 5, 59, 37, 219, DateTimeKind.Local).AddTicks(6792), "The GB transmitter is down, hack the online transmitter so we can hack the GB transmitter!", 195 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 559, "#3d5e74", new DateTime(2020, 12, 3, 18, 57, 15, 732, DateTimeKind.Local).AddTicks(4114), "We need to back up the 1080p HTTP program!", 192 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 64, "#392912", new DateTime(2020, 9, 17, 22, 20, 6, 262, DateTimeKind.Local).AddTicks(3609), "I'll quantify the primary IB capacitor, that should capacitor the IB capacitor!", 57 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 556, "#5a4610", new DateTime(2020, 7, 27, 0, 19, 14, 948, DateTimeKind.Local).AddTicks(2754), "Use the auxiliary IB monitor, then you can transmit the auxiliary monitor!", 57 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 660, "#482c5a", new DateTime(2020, 7, 20, 16, 37, 26, 643, DateTimeKind.Local).AddTicks(6038), "programming the port won't do anything, we need to connect the cross-platform ADP port!", 57 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1160, "#5a2d10", new DateTime(2020, 10, 18, 6, 32, 36, 889, DateTimeKind.Local).AddTicks(7651), "You can't index the circuit without bypassing the open-source SAS circuit!", 193 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 971, "#226253", new DateTime(2020, 8, 28, 14, 15, 26, 121, DateTimeKind.Local).AddTicks(5646), "The SQL alarm is down, back up the virtual alarm so we can back up the SQL alarm!", 193 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 813, "#04455d", new DateTime(2020, 4, 1, 7, 3, 5, 214, DateTimeKind.Local).AddTicks(5927), "The SDD application is down, quantify the digital application so we can quantify the SDD application!", 193 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 228, "#775d2e", new DateTime(2020, 6, 25, 5, 19, 9, 692, DateTimeKind.Local).AddTicks(6674), "The RSS array is down, calculate the auxiliary array so we can calculate the RSS array!", 193 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 211, "#1e364f", new DateTime(2020, 5, 20, 18, 24, 26, 763, DateTimeKind.Local).AddTicks(1949), "Try to quantify the PNG pixel, maybe it will quantify the primary pixel!", 193 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 82, "#216165", new DateTime(2020, 6, 9, 19, 8, 51, 316, DateTimeKind.Local).AddTicks(6527), "We need to reboot the auxiliary SSL hard drive!", 58 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 102, "#2b5771", new DateTime(2020, 12, 19, 5, 12, 5, 294, DateTimeKind.Local).AddTicks(5223), "If we quantify the card, we can get to the GB card through the haptic GB card!", 57 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1051, "#2d0074", new DateTime(2020, 9, 2, 8, 59, 47, 296, DateTimeKind.Local).AddTicks(1574), "hacking the array won't do anything, we need to index the optical XML array!", 63 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 80, "#4c5306", new DateTime(2020, 7, 20, 16, 18, 22, 744, DateTimeKind.Local).AddTicks(7928), "You can't back up the microchip without backing up the redundant PCI microchip!", 190 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 200, "#57097e", new DateTime(2020, 7, 16, 16, 18, 8, 785, DateTimeKind.Local).AddTicks(3594), "The SQL alarm is down, generate the online alarm so we can generate the SQL alarm!", 59 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 353, "#734b26", new DateTime(2021, 1, 19, 6, 1, 36, 251, DateTimeKind.Local).AddTicks(807), "compressing the matrix won't do anything, we need to reboot the mobile RAM matrix!", 61 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1151, "#17657d", new DateTime(2020, 10, 20, 6, 48, 17, 92, DateTimeKind.Local).AddTicks(8612), "You can't parse the panel without synthesizing the virtual JBOD panel!", 185 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 583, "#805545", new DateTime(2020, 12, 11, 5, 23, 14, 757, DateTimeKind.Local).AddTicks(4114), "I'll parse the back-end SCSI hard drive, that should hard drive the SCSI hard drive!", 185 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1120, "#533547", new DateTime(2020, 3, 22, 9, 42, 57, 379, DateTimeKind.Local).AddTicks(1936), "If we hack the port, we can get to the SCSI port through the redundant SCSI port!", 184 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 864, "#3d421a", new DateTime(2020, 11, 5, 20, 30, 55, 845, DateTimeKind.Local).AddTicks(3378), "I'll connect the virtual XSS firewall, that should firewall the XSS firewall!", 184 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 889, "#3e0f21", new DateTime(2020, 5, 15, 7, 51, 38, 722, DateTimeKind.Local).AddTicks(9403), "Use the bluetooth RSS panel, then you can compress the bluetooth panel!", 183 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 825, "#406b49", new DateTime(2020, 6, 19, 14, 4, 1, 147, DateTimeKind.Local).AddTicks(3601), "I'll input the redundant RAM port, that should port the RAM port!", 183 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 807, "#334853", new DateTime(2020, 5, 20, 5, 30, 28, 136, DateTimeKind.Local).AddTicks(7558), "Try to compress the CSS array, maybe it will compress the mobile array!", 183 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 239, "#11771b", new DateTime(2021, 2, 26, 23, 6, 14, 47, DateTimeKind.Local).AddTicks(4821), "I'll override the neural SMS circuit, that should circuit the SMS circuit!", 186 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 450, "#1a4078", new DateTime(2020, 7, 21, 1, 56, 11, 347, DateTimeKind.Local).AddTicks(1514), "If we index the sensor, we can get to the XML sensor through the haptic XML sensor!", 183 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 277, "#140970", new DateTime(2020, 8, 9, 4, 32, 0, 200, DateTimeKind.Local).AddTicks(5654), "We need to generate the haptic PNG matrix!", 62 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 756, "#543147", new DateTime(2020, 7, 18, 11, 39, 33, 675, DateTimeKind.Local).AddTicks(4747), "If we connect the bandwidth, we can get to the SSL bandwidth through the primary SSL bandwidth!", 62 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 999, "#511674", new DateTime(2020, 8, 21, 11, 4, 39, 529, DateTimeKind.Local).AddTicks(5733), "Use the cross-platform THX feed, then you can generate the cross-platform feed!", 182 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 867, "#39661d", new DateTime(2020, 8, 9, 8, 40, 40, 480, DateTimeKind.Local).AddTicks(627), "You can't connect the sensor without parsing the cross-platform SCSI sensor!", 182 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 145, "#443057", new DateTime(2020, 5, 1, 8, 14, 3, 591, DateTimeKind.Local).AddTicks(29), "synthesizing the card won't do anything, we need to back up the open-source SMS card!", 182 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 91, "#697901", new DateTime(2020, 11, 18, 9, 2, 46, 525, DateTimeKind.Local).AddTicks(6444), "You can't generate the sensor without copying the 1080p HTTP sensor!", 182 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 31, "#700754", new DateTime(2020, 12, 27, 10, 0, 35, 323, DateTimeKind.Local).AddTicks(7214), "Use the optical JSON bandwidth, then you can input the optical bandwidth!", 63 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 186, "#486955", new DateTime(2020, 4, 24, 10, 47, 41, 907, DateTimeKind.Local).AddTicks(9379), "The SCSI capacitor is down, connect the 1080p capacitor so we can connect the SCSI capacitor!", 63 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 49, "#14610a", new DateTime(2020, 8, 17, 16, 15, 43, 887, DateTimeKind.Local).AddTicks(8770), "The AGP application is down, synthesize the auxiliary application so we can synthesize the AGP application!", 183 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 47, "#1a5927", new DateTime(2020, 6, 1, 16, 12, 58, 60, DateTimeKind.Local).AddTicks(3208), "Use the neural SDD array, then you can synthesize the neural array!", 190 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1026, "#0b786b", new DateTime(2020, 11, 25, 10, 45, 29, 499, DateTimeKind.Local).AddTicks(6761), "You can't compress the driver without generating the haptic USB driver!", 60 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 646, "#254938", new DateTime(2020, 10, 15, 18, 12, 51, 331, DateTimeKind.Local).AddTicks(2834), "Use the wireless EXE sensor, then you can synthesize the wireless sensor!", 60 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 226, "#6c690d", new DateTime(2020, 11, 24, 9, 47, 36, 556, DateTimeKind.Local).AddTicks(533), "I'll generate the auxiliary PCI sensor, that should sensor the PCI sensor!", 59 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1080, "#45233b", new DateTime(2020, 9, 11, 11, 30, 4, 464, DateTimeKind.Local).AddTicks(5613), "We need to override the cross-platform TCP sensor!", 189 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 784, "#103041", new DateTime(2020, 6, 22, 3, 57, 17, 510, DateTimeKind.Local).AddTicks(1128), "If we bypass the bandwidth, we can get to the XML bandwidth through the redundant XML bandwidth!", 189 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 493, "#5d727a", new DateTime(2020, 12, 30, 17, 23, 59, 202, DateTimeKind.Local).AddTicks(8003), "I'll compress the wireless SSL microchip, that should microchip the SSL microchip!", 189 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 500, "#432b04", new DateTime(2020, 6, 2, 21, 1, 34, 625, DateTimeKind.Local).AddTicks(7712), "You can't parse the card without synthesizing the back-end JBOD card!", 59 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 565, "#6e4332", new DateTime(2020, 3, 25, 11, 29, 12, 696, DateTimeKind.Local).AddTicks(4341), "If we copy the feed, we can get to the FTP feed through the cross-platform FTP feed!", 59 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 608, "#596e01", new DateTime(2021, 2, 3, 11, 19, 45, 647, DateTimeKind.Local).AddTicks(2635), "If we copy the panel, we can get to the AGP panel through the digital AGP panel!", 59 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 951, "#433244", new DateTime(2020, 3, 14, 4, 34, 9, 601, DateTimeKind.Local).AddTicks(8502), "Try to hack the GB sensor, maybe it will hack the bluetooth sensor!", 59 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1016, "#1d5c22", new DateTime(2021, 2, 17, 4, 18, 43, 913, DateTimeKind.Local).AddTicks(242), "The FTP program is down, program the open-source program so we can program the FTP program!", 60 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1088, "#234102", new DateTime(2020, 12, 10, 17, 36, 16, 982, DateTimeKind.Local).AddTicks(7343), "Try to generate the SAS protocol, maybe it will generate the wireless protocol!", 188 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 538, "#4f7406", new DateTime(2020, 7, 16, 11, 21, 41, 701, DateTimeKind.Local).AddTicks(7006), "We need to index the 1080p JSON interface!", 188 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 265, "#2f7934", new DateTime(2020, 12, 13, 14, 50, 35, 308, DateTimeKind.Local).AddTicks(3092), "You can't generate the system without synthesizing the wireless RSS system!", 188 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 763, "#2b0a06", new DateTime(2020, 6, 27, 8, 48, 6, 835, DateTimeKind.Local).AddTicks(3893), "connecting the circuit won't do anything, we need to connect the 1080p FTP circuit!", 187 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 349, "#243d2d", new DateTime(2020, 7, 17, 18, 41, 58, 117, DateTimeKind.Local).AddTicks(1607), "Use the primary IB array, then you can copy the primary array!", 187 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 156, "#726d7c", new DateTime(2020, 4, 21, 20, 29, 38, 855, DateTimeKind.Local).AddTicks(2167), "overriding the system won't do anything, we need to program the mobile CSS system!", 187 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 75, "#331d00", new DateTime(2021, 1, 13, 9, 32, 21, 56, DateTimeKind.Local).AddTicks(1731), "I'll index the bluetooth SMS driver, that should driver the SMS driver!", 187 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 26, "#326521", new DateTime(2020, 4, 23, 9, 55, 35, 227, DateTimeKind.Local).AddTicks(7896), "Use the digital JSON transmitter, then you can override the digital transmitter!", 187 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 305, "#2b1f65", new DateTime(2020, 4, 1, 2, 9, 47, 79, DateTimeKind.Local).AddTicks(2418), "I'll parse the wireless AI microchip, that should microchip the AI microchip!", 60 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 636, "#6e231a", new DateTime(2020, 8, 11, 13, 39, 7, 414, DateTimeKind.Local).AddTicks(664), "I'll calculate the bluetooth SDD protocol, that should protocol the SDD protocol!", 188 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1132, "#1e6144", new DateTime(2020, 5, 15, 20, 47, 52, 134, DateTimeKind.Local).AddTicks(28), "Use the wireless SQL pixel, then you can override the wireless pixel!", 300 });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 13, "Північний Ігор", 25, "Україна", new DateTime(2020, 5, 31, 22, 33, 58, 194, DateTimeKind.Local).AddTicks(9602), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 606, "Західний Альберт", 1229, "Україна", new DateTime(2020, 12, 4, 2, 35, 31, 968, DateTimeKind.Local).AddTicks(4619), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 324, "Південний Зборислав", 660, "Україна", new DateTime(2020, 5, 29, 17, 19, 44, 116, DateTimeKind.Local).AddTicks(7318), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 584, "Північний Аскольд", 1185, "Україна", new DateTime(2020, 11, 23, 3, 30, 21, 315, DateTimeKind.Local).AddTicks(7027), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 727, "Південний Горислав", 1452, "Україна", new DateTime(2020, 4, 26, 0, 33, 53, 752, DateTimeKind.Local).AddTicks(1554), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 19, "Західний Корнелій", 36, "Україна", new DateTime(2020, 6, 25, 7, 10, 39, 953, DateTimeKind.Local).AddTicks(7092), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 646, "Харків", 1305, "Україна", new DateTime(2020, 3, 27, 14, 55, 42, 131, DateTimeKind.Local).AddTicks(1000), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 167, "Південний Родіон", 324, "Україна", new DateTime(2020, 9, 3, 9, 22, 31, 727, DateTimeKind.Local).AddTicks(990), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 333, "Північний Велемир", 682, "Україна", new DateTime(2020, 11, 6, 1, 36, 39, 196, DateTimeKind.Local).AddTicks(6728), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 399, "Західний Костянтин", 809, "Україна", new DateTime(2021, 2, 12, 21, 44, 34, 22, DateTimeKind.Local).AddTicks(9686), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 572, "Західний Всевлад", 1158, "Україна", new DateTime(2020, 5, 7, 18, 8, 39, 117, DateTimeKind.Local).AddTicks(7398), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 116, "Західний Ян", 214, "Україна", new DateTime(2020, 9, 10, 6, 28, 22, 755, DateTimeKind.Local).AddTicks(1782), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 186, "Південний Нестор", 373, "Україна", new DateTime(2020, 8, 6, 6, 23, 14, 330, DateTimeKind.Local).AddTicks(9409), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 275, "Східний Ратимир", 565, "Україна", new DateTime(2020, 10, 28, 19, 48, 19, 615, DateTimeKind.Local).AddTicks(7412), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 124, "Львів", 228, "Україна", new DateTime(2020, 6, 15, 13, 0, 17, 514, DateTimeKind.Local).AddTicks(7941), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 718, "Південний Ярема", 1435, "Україна", new DateTime(2020, 8, 30, 17, 28, 11, 30, DateTimeKind.Local).AddTicks(2907), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 603, "Північний Звенигор", 1221, "Україна", new DateTime(2020, 6, 11, 12, 37, 39, 973, DateTimeKind.Local).AddTicks(7513), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 576, "Олександрія", 1165, "Україна", new DateTime(2020, 9, 10, 23, 25, 16, 945, DateTimeKind.Local).AddTicks(6430), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 204, "Бердянськ", 404, "Україна", new DateTime(2020, 12, 6, 6, 40, 38, 226, DateTimeKind.Local).AddTicks(6393), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 375, "Східний Стожар", 760, "Україна", new DateTime(2021, 1, 6, 6, 18, 28, 153, DateTimeKind.Local).AddTicks(3796), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 448, "Південний Братослав", 918, "Україна", new DateTime(2020, 9, 5, 13, 42, 58, 949, DateTimeKind.Local).AddTicks(7943), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 152, "Східний Георгій", 293, "Україна", new DateTime(2020, 12, 9, 9, 27, 26, 668, DateTimeKind.Local).AddTicks(5337), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 423, "Північний Борис", 849, "Україна", new DateTime(2020, 5, 10, 16, 22, 31, 255, DateTimeKind.Local).AddTicks(8650), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 367, "Чернівці", 743, "Україна", new DateTime(2020, 12, 23, 13, 0, 0, 736, DateTimeKind.Local).AddTicks(1283), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 446, "Івано-Франківськ", 915, "Україна", new DateTime(2020, 12, 20, 1, 49, 27, 389, DateTimeKind.Local).AddTicks(1001), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 502, "Східний Богдан", 1015, "Україна", new DateTime(2020, 12, 24, 1, 24, 55, 232, DateTimeKind.Local).AddTicks(7030), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 665, "Кіровоград", 1336, "Україна", new DateTime(2020, 8, 11, 23, 46, 7, 546, DateTimeKind.Local).AddTicks(8404), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 64, "Північний Добромисл", 113, "Україна", new DateTime(2021, 1, 18, 6, 17, 49, 851, DateTimeKind.Local).AddTicks(6880), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 164, "Північний Омелян", 317, "Україна", new DateTime(2020, 5, 4, 4, 44, 57, 47, DateTimeKind.Local).AddTicks(5052), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 581, "Північний Мстислав", 1181, "Україна", new DateTime(2021, 2, 19, 10, 29, 59, 115, DateTimeKind.Local).AddTicks(3220), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 635, "Київ", 1281, "Україна", new DateTime(2020, 4, 22, 18, 6, 44, 583, DateTimeKind.Local).AddTicks(3820), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 93, "Західний Всеволод", 171, "Україна", new DateTime(2020, 5, 16, 23, 42, 57, 947, DateTimeKind.Local).AddTicks(2187), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 245, "Суми", 504, "Україна", new DateTime(2020, 12, 30, 13, 48, 32, 908, DateTimeKind.Local).AddTicks(8469), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 685, "Павлоград", 1371, "Україна", new DateTime(2020, 3, 27, 13, 10, 0, 417, DateTimeKind.Local).AddTicks(3747), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 419, "Кременчук", 844, "Україна", new DateTime(2020, 7, 23, 4, 7, 20, 870, DateTimeKind.Local).AddTicks(7404), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 254, "Північний Хвалимир", 519, "Україна", new DateTime(2020, 5, 14, 14, 28, 46, 513, DateTimeKind.Local).AddTicks(5810), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 460, "Шостка", 939, "Україна", new DateTime(2020, 5, 8, 5, 54, 6, 38, DateTimeKind.Local).AddTicks(629), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 471, "Східний Любомир", 956, "Україна", new DateTime(2020, 8, 28, 7, 0, 15, 886, DateTimeKind.Local).AddTicks(699), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 583, "Кременчук", 1184, "Україна", new DateTime(2020, 7, 18, 10, 58, 54, 345, DateTimeKind.Local).AddTicks(3925), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 71, "Керч", 131, "Україна", new DateTime(2020, 5, 5, 2, 55, 32, 298, DateTimeKind.Local).AddTicks(2014), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 156, "Одеса", 302, "Україна", new DateTime(2020, 7, 5, 17, 27, 55, 932, DateTimeKind.Local).AddTicks(5940), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 298, "Північний Лаврентій", 612, "Україна", new DateTime(2020, 9, 17, 10, 30, 47, 961, DateTimeKind.Local).AddTicks(9252), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 171, "Сєвєродонецьк", 332, "Україна", new DateTime(2020, 4, 17, 14, 27, 34, 640, DateTimeKind.Local).AddTicks(390), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 197, "Східний Семибор", 391, "Україна", new DateTime(2021, 2, 4, 19, 33, 38, 902, DateTimeKind.Local).AddTicks(2271), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 628, "Бердянськ", 1269, "Україна", new DateTime(2020, 3, 25, 15, 34, 8, 758, DateTimeKind.Local).AddTicks(1732), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 144, "Північний Захарій", 273, "Україна", new DateTime(2020, 6, 8, 4, 24, 33, 669, DateTimeKind.Local).AddTicks(8098), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 96, "Західний Златомир", 180, "Україна", new DateTime(2020, 6, 2, 6, 36, 52, 329, DateTimeKind.Local).AddTicks(4588), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 404, "Мелітополь", 816, "Україна", new DateTime(2020, 9, 13, 0, 9, 3, 143, DateTimeKind.Local).AddTicks(5883), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 233, "Дніпродзержинськ", 472, "Україна", new DateTime(2020, 7, 22, 15, 31, 23, 709, DateTimeKind.Local).AddTicks(325), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 547, "Мукачеве", 1112, "Україна", new DateTime(2021, 1, 13, 8, 27, 56, 541, DateTimeKind.Local).AddTicks(4656), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 652, "Бердичів", 1313, "Україна", new DateTime(2020, 5, 26, 15, 19, 59, 972, DateTimeKind.Local).AddTicks(3458), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 91, "Бердичів", 169, "Україна", new DateTime(2020, 7, 29, 9, 10, 17, 872, DateTimeKind.Local).AddTicks(5874), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 247, "Умань", 506, "Україна", new DateTime(2021, 1, 4, 0, 29, 56, 500, DateTimeKind.Local).AddTicks(2582), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 385, "Північний Ілля", 779, "Україна", new DateTime(2021, 1, 13, 0, 41, 58, 147, DateTimeKind.Local).AddTicks(5015), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 571, "Західний Маркіян", 1157, "Україна", new DateTime(2020, 11, 13, 4, 22, 13, 122, DateTimeKind.Local).AddTicks(5367), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 642, "Мелітополь", 1295, "Україна", new DateTime(2020, 5, 13, 8, 1, 34, 811, DateTimeKind.Local).AddTicks(4459), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 698, "Конотоп", 1395, "Україна", new DateTime(2020, 4, 12, 19, 29, 53, 28, DateTimeKind.Local).AddTicks(2073), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 140, "Західний Герасим", 265, "Україна", new DateTime(2020, 7, 6, 15, 17, 7, 486, DateTimeKind.Local).AddTicks(1607), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 149, "Шостка", 289, "Україна", new DateTime(2020, 8, 14, 3, 31, 18, 819, DateTimeKind.Local).AddTicks(5751), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 472, "Східний Ізяслав", 957, "Україна", new DateTime(2020, 8, 4, 8, 6, 53, 68, DateTimeKind.Local).AddTicks(7018), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 677, "Сімферополь", 1361, "Україна", new DateTime(2020, 3, 6, 4, 57, 57, 278, DateTimeKind.Local).AddTicks(4053), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 534, "Західний Братомил", 1090, "Україна", new DateTime(2020, 5, 30, 0, 30, 50, 751, DateTimeKind.Local).AddTicks(4127), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 680, "Житомир", 1364, "Україна", new DateTime(2020, 10, 3, 4, 31, 49, 329, DateTimeKind.Local).AddTicks(2872), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 103, "Східний Денис", 195, "Україна", new DateTime(2020, 8, 8, 18, 16, 11, 178, DateTimeKind.Local).AddTicks(88), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 500, "Євпаторія", 1012, "Україна", new DateTime(2021, 1, 19, 15, 23, 23, 533, DateTimeKind.Local).AddTicks(6910), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 182, "Північний Ладо", 368, "Україна", new DateTime(2021, 1, 11, 21, 40, 43, 831, DateTimeKind.Local).AddTicks(7502), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 99, "Західний Олег", 188, "Україна", new DateTime(2020, 6, 25, 15, 15, 44, 841, DateTimeKind.Local).AddTicks(9372), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 138, "Бердянськ", 259, "Україна", new DateTime(2021, 2, 23, 9, 22, 41, 896, DateTimeKind.Local).AddTicks(2362), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 39, "Західний Лад", 74, "Україна", new DateTime(2020, 5, 5, 23, 16, 34, 280, DateTimeKind.Local).AddTicks(6935), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 682, "Суми", 1368, "Україна", new DateTime(2020, 3, 4, 3, 8, 21, 831, DateTimeKind.Local).AddTicks(8543), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 619, "Західний Назарій", 1255, "Україна", new DateTime(2020, 8, 15, 1, 7, 26, 265, DateTimeKind.Local).AddTicks(329), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 438, "Шостка", 890, "Україна", new DateTime(2020, 3, 6, 22, 53, 55, 859, DateTimeKind.Local).AddTicks(6141), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 721, "Східний Адріян", 1443, "Україна", new DateTime(2020, 7, 7, 13, 50, 13, 651, DateTimeKind.Local).AddTicks(5454), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 65, "Вінниця", 115, "Україна", new DateTime(2020, 12, 6, 3, 23, 12, 83, DateTimeKind.Local).AddTicks(3746), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 30, "Східний Боримисл", 54, "Україна", new DateTime(2020, 10, 3, 6, 53, 6, 311, DateTimeKind.Local).AddTicks(3179), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 132, "Красний Луч", 243, "Україна", new DateTime(2021, 2, 11, 8, 45, 57, 283, DateTimeKind.Local).AddTicks(958), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 351, "Південний Звенимир", 721, "Україна", new DateTime(2020, 9, 13, 6, 8, 11, 81, DateTimeKind.Local).AddTicks(5706), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 426, "Алчевськ", 855, "Україна", new DateTime(2020, 12, 18, 17, 59, 15, 793, DateTimeKind.Local).AddTicks(1370), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 14, "Біла Церква", 28, "Україна", new DateTime(2020, 11, 5, 17, 47, 9, 527, DateTimeKind.Local).AddTicks(4455), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 109, "Південний Святополк", 205, "Україна", new DateTime(2020, 8, 13, 3, 56, 17, 63, DateTimeKind.Local).AddTicks(7806), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 610, "Львів", 1233, "Україна", new DateTime(2020, 8, 19, 8, 37, 12, 205, DateTimeKind.Local).AddTicks(8090), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 343, "Південний Костянтин", 704, "Україна", new DateTime(2020, 8, 28, 9, 24, 49, 607, DateTimeKind.Local).AddTicks(387), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 265, "Лисичанськ", 544, "Україна", new DateTime(2020, 6, 24, 20, 45, 29, 935, DateTimeKind.Local).AddTicks(9330), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 341, "Південний Боримисл", 699, "Україна", new DateTime(2020, 8, 15, 16, 16, 47, 175, DateTimeKind.Local).AddTicks(816), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 485, "Північний Єремій", 979, "Україна", new DateTime(2020, 4, 2, 22, 49, 31, 884, DateTimeKind.Local).AddTicks(8673), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 509, "Маріуполь", 1029, "Україна", new DateTime(2020, 9, 8, 0, 53, 34, 189, DateTimeKind.Local).AddTicks(5924), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 640, "Павлоград", 1291, "Україна", new DateTime(2020, 9, 7, 19, 11, 28, 863, DateTimeKind.Local).AddTicks(2437), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 43, "Лисичанськ", 79, "Україна", new DateTime(2020, 3, 21, 12, 29, 1, 968, DateTimeKind.Local).AddTicks(4015), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 190, "Кривий Ріг", 379, "Україна", new DateTime(2020, 4, 5, 0, 17, 45, 277, DateTimeKind.Local).AddTicks(1325), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 368, "Івано-Франківськ", 745, "Україна", new DateTime(2020, 5, 3, 0, 59, 48, 330, DateTimeKind.Local).AddTicks(7099), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 447, "Маріуполь", 917, "Україна", new DateTime(2020, 10, 23, 5, 38, 4, 556, DateTimeKind.Local).AddTicks(3493), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 623, "Західний Лад", 1260, "Україна", new DateTime(2020, 5, 17, 8, 54, 34, 40, DateTimeKind.Local).AddTicks(8232), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 429, "Севастополь", 862, "Україна", new DateTime(2020, 5, 26, 8, 35, 24, 511, DateTimeKind.Local).AddTicks(6232), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 656, "Північний Славомир", 1321, "Україна", new DateTime(2020, 4, 3, 5, 42, 24, 112, DateTimeKind.Local).AddTicks(6901), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 180, "Ужгород", 361, "Україна", new DateTime(2020, 9, 16, 22, 35, 7, 717, DateTimeKind.Local).AddTicks(4367), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 335, "Північний Юхим", 688, "Україна", new DateTime(2020, 3, 20, 14, 58, 10, 506, DateTimeKind.Local).AddTicks(439), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 618, "Південний Гнат", 1254, "Україна", new DateTime(2020, 6, 8, 22, 0, 48, 533, DateTimeKind.Local).AddTicks(3204), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 751, "Харків", 1492, "Україна", new DateTime(2020, 10, 22, 17, 55, 25, 428, DateTimeKind.Local).AddTicks(9171), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 676, "Західний Братимир", 1360, "Україна", new DateTime(2020, 12, 6, 18, 34, 36, 44, DateTimeKind.Local).AddTicks(4341), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 386, "Лисичанськ", 782, "Україна", new DateTime(2020, 11, 9, 6, 57, 23, 315, DateTimeKind.Local).AddTicks(2230), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 528, "Східний Божен", 1072, "Україна", new DateTime(2020, 10, 16, 13, 26, 34, 704, DateTimeKind.Local).AddTicks(144), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 602, "Західний Тихон", 1219, "Україна", new DateTime(2021, 2, 8, 12, 43, 59, 105, DateTimeKind.Local).AddTicks(5038), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 651, "Східний Мирослав", 1311, "Україна", new DateTime(2021, 1, 7, 6, 14, 42, 94, DateTimeKind.Local).AddTicks(7899), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 63, "Південний Георгій", 110, "Україна", new DateTime(2020, 5, 7, 11, 25, 41, 722, DateTimeKind.Local).AddTicks(6114), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 246, "Черкаси", 505, "Україна", new DateTime(2020, 3, 11, 19, 51, 29, 512, DateTimeKind.Local).AddTicks(8516), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 712, "Кременчук", 1423, "Україна", new DateTime(2020, 9, 10, 5, 43, 27, 573, DateTimeKind.Local).AddTicks(5311), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 545, "Бердичів", 1108, "Україна", new DateTime(2020, 11, 6, 0, 50, 54, 171, DateTimeKind.Local).AddTicks(8155), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 346, "Слов’янськ", 710, "Україна", new DateTime(2020, 12, 17, 21, 59, 9, 429, DateTimeKind.Local).AddTicks(6976), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 707, "Шостка", 1415, "Україна", new DateTime(2020, 7, 28, 9, 34, 31, 125, DateTimeKind.Local).AddTicks(706), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 567, "Південний Чорнота", 1150, "Україна", new DateTime(2020, 3, 12, 13, 43, 14, 294, DateTimeKind.Local).AddTicks(4850), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 704, "Кривий Ріг", 1403, "Україна", new DateTime(2020, 10, 4, 20, 32, 14, 258, DateTimeKind.Local).AddTicks(7990), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 44, "Запоріжжя", 80, "Україна", new DateTime(2020, 7, 9, 5, 26, 7, 968, DateTimeKind.Local).AddTicks(231), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 69, "Біла Церква", 124, "Україна", new DateTime(2020, 8, 13, 4, 57, 36, 663, DateTimeKind.Local).AddTicks(6151), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 122, "Північний Всеслав", 225, "Україна", new DateTime(2020, 4, 14, 9, 5, 18, 915, DateTimeKind.Local).AddTicks(8916), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 330, "Бердичів", 677, "Україна", new DateTime(2020, 6, 16, 8, 29, 31, 236, DateTimeKind.Local).AddTicks(7585), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 206, "Запоріжжя", 409, "Україна", new DateTime(2021, 1, 11, 15, 52, 14, 636, DateTimeKind.Local).AddTicks(4888), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 78, "Луганськ", 141, "Україна", new DateTime(2020, 5, 14, 5, 34, 36, 235, DateTimeKind.Local).AddTicks(4887), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 569, "Північний Любозар", 1155, "Україна", new DateTime(2020, 8, 23, 20, 38, 36, 883, DateTimeKind.Local).AddTicks(38), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 37, "Західний Дмитро", 69, "Україна", new DateTime(2020, 10, 14, 2, 24, 35, 628, DateTimeKind.Local).AddTicks(3858), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 142, "Севастополь", 270, "Україна", new DateTime(2021, 2, 1, 20, 35, 50, 39, DateTimeKind.Local).AddTicks(6722), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 329, "Західний Буревіст", 671, "Україна", new DateTime(2020, 5, 24, 18, 54, 28, 851, DateTimeKind.Local).AddTicks(9661), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 22, "Київ", 39, "Україна", new DateTime(2020, 12, 28, 3, 50, 7, 362, DateTimeKind.Local).AddTicks(6991), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 86, "Північний Кузьма", 163, "Україна", new DateTime(2020, 7, 22, 23, 48, 45, 420, DateTimeKind.Local).AddTicks(6941), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 289, "Павлоград", 590, "Україна", new DateTime(2020, 7, 13, 21, 11, 44, 736, DateTimeKind.Local).AddTicks(4832), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 544, "Олександрія", 1107, "Україна", new DateTime(2020, 8, 28, 4, 30, 57, 171, DateTimeKind.Local).AddTicks(2160), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 195, "Західний Омелян", 386, "Україна", new DateTime(2020, 6, 19, 18, 49, 4, 4, DateTimeKind.Local).AddTicks(2332), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 288, "Маріуполь", 587, "Україна", new DateTime(2020, 8, 7, 6, 16, 40, 626, DateTimeKind.Local).AddTicks(4199), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 258, "Київ", 529, "Україна", new DateTime(2020, 8, 3, 8, 33, 33, 182, DateTimeKind.Local).AddTicks(5291), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 478, "Східний Радим", 966, "Україна", new DateTime(2020, 8, 28, 1, 15, 50, 991, DateTimeKind.Local).AddTicks(9462), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 45, "Південний Листвич", 81, "Україна", new DateTime(2020, 8, 10, 13, 53, 35, 324, DateTimeKind.Local).AddTicks(3581), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 392, "Кривий Ріг", 792, "Україна", new DateTime(2020, 4, 3, 8, 14, 20, 720, DateTimeKind.Local).AddTicks(7076), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 418, "Алчевськ", 843, "Україна", new DateTime(2021, 2, 27, 19, 9, 21, 490, DateTimeKind.Local).AddTicks(7875), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 370, "Слов’янськ", 748, "Україна", new DateTime(2020, 8, 18, 2, 1, 26, 639, DateTimeKind.Local).AddTicks(6092), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 51, "Північний Ратимир", 88, "Україна", new DateTime(2020, 8, 2, 21, 48, 31, 511, DateTimeKind.Local).AddTicks(600), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 366, "Західний Натан", 742, "Україна", new DateTime(2020, 7, 4, 3, 59, 23, 252, DateTimeKind.Local).AddTicks(1836), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 621, "Чернівці", 1258, "Україна", new DateTime(2020, 9, 11, 11, 18, 54, 936, DateTimeKind.Local).AddTicks(3467), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 117, "Західний В’ячеслав", 215, "Україна", new DateTime(2020, 8, 3, 2, 41, 12, 475, DateTimeKind.Local).AddTicks(8998), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 249, "Шостка", 509, "Україна", new DateTime(2020, 9, 3, 22, 2, 18, 798, DateTimeKind.Local).AddTicks(1165), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 653, "Бровари", 1314, "Україна", new DateTime(2020, 3, 14, 14, 27, 30, 774, DateTimeKind.Local).AddTicks(4226), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 339, "Західний Назар", 696, "Україна", new DateTime(2020, 11, 17, 21, 22, 16, 991, DateTimeKind.Local).AddTicks(4510), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 634, "Маріуполь", 1280, "Україна", new DateTime(2020, 8, 28, 0, 35, 35, 617, DateTimeKind.Local).AddTicks(8139), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 750, "Севастополь", 1489, "Україна", new DateTime(2021, 1, 3, 21, 40, 43, 669, DateTimeKind.Local).AddTicks(1745), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 722, "Кривий Ріг", 1444, "Україна", new DateTime(2020, 5, 16, 1, 0, 25, 325, DateTimeKind.Local).AddTicks(2714), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 17, "Північний Аркадій", 32, "Україна", new DateTime(2020, 4, 12, 11, 58, 37, 807, DateTimeKind.Local).AddTicks(8055), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 74, "Південний Роксолан", 136, "Україна", new DateTime(2020, 11, 11, 16, 27, 51, 850, DateTimeKind.Local).AddTicks(2073), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 304, "Південний Омелян", 622, "Україна", new DateTime(2020, 4, 23, 12, 45, 47, 961, DateTimeKind.Local).AddTicks(385), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 453, "Бердянськ", 929, "Україна", new DateTime(2020, 12, 22, 17, 12, 43, 843, DateTimeKind.Local).AddTicks(1050), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 561, "Південний Зоремир", 1139, "Україна", new DateTime(2020, 4, 23, 12, 18, 23, 642, DateTimeKind.Local).AddTicks(9665), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 562, "Вінниця", 1141, "Україна", new DateTime(2020, 3, 21, 18, 37, 27, 267, DateTimeKind.Local).AddTicks(3969), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 615, "Південний Сніжан", 1244, "Україна", new DateTime(2021, 2, 13, 19, 48, 11, 954, DateTimeKind.Local).AddTicks(2515), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 736, "Нікополь", 1465, "Україна", new DateTime(2021, 2, 10, 12, 20, 28, 387, DateTimeKind.Local).AddTicks(2858), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 127, "Шостка", 233, "Україна", new DateTime(2020, 9, 16, 4, 11, 56, 225, DateTimeKind.Local).AddTicks(6309), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 277, "Миколаїв", 569, "Україна", new DateTime(2020, 11, 11, 16, 3, 39, 921, DateTimeKind.Local).AddTicks(2887), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 378, "Ялта", 765, "Україна", new DateTime(2020, 4, 5, 9, 51, 59, 314, DateTimeKind.Local).AddTicks(3306), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 458, "Східний Тихон", 936, "Україна", new DateTime(2020, 11, 11, 2, 45, 23, 943, DateTimeKind.Local).AddTicks(5964), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 496, "Слов’янськ", 1004, "Україна", new DateTime(2020, 12, 4, 12, 18, 35, 166, DateTimeKind.Local).AddTicks(8128), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 474, "Львів", 960, "Україна", new DateTime(2020, 7, 9, 18, 56, 38, 937, DateTimeKind.Local).AddTicks(8151), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 525, "Східний Захар", 1063, "Україна", new DateTime(2021, 1, 22, 18, 12, 39, 164, DateTimeKind.Local).AddTicks(6791), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 596, "Західний Азарій", 1210, "Україна", new DateTime(2021, 1, 18, 18, 29, 17, 624, DateTimeKind.Local).AddTicks(6466), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 711, "Ужгород", 1420, "Україна", new DateTime(2020, 7, 5, 14, 43, 45, 159, DateTimeKind.Local).AddTicks(4860), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 76, "Миколаїв", 139, "Україна", new DateTime(2021, 1, 29, 11, 55, 35, 704, DateTimeKind.Local).AddTicks(1381), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 272, "Харків", 561, "Україна", new DateTime(2020, 8, 24, 21, 28, 7, 942, DateTimeKind.Local).AddTicks(7344), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 212, "Південний Ярема", 423, "Україна", new DateTime(2021, 2, 3, 4, 8, 17, 157, DateTimeKind.Local).AddTicks(4483), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 660, "Південний Ілля", 1327, "Україна", new DateTime(2020, 3, 6, 21, 3, 35, 526, DateTimeKind.Local).AddTicks(5212), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 394, "Північний Григорій", 799, "Україна", new DateTime(2020, 10, 1, 7, 27, 17, 23, DateTimeKind.Local).AddTicks(2195), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 81, "Східний Кузьма", 154, "Україна", new DateTime(2020, 7, 29, 15, 29, 34, 511, DateTimeKind.Local).AddTicks(5351), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 203, "Східний Звенигор", 403, "Україна", new DateTime(2020, 3, 12, 13, 19, 24, 948, DateTimeKind.Local).AddTicks(3241), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 637, "Сімферополь", 1285, "Україна", new DateTime(2021, 1, 31, 10, 30, 5, 18, DateTimeKind.Local).AddTicks(7402), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 673, "Сімферополь", 1352, "Україна", new DateTime(2021, 1, 26, 4, 40, 5, 792, DateTimeKind.Local).AddTicks(2597), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 641, "Західний Славута", 1293, "Україна", new DateTime(2020, 10, 31, 2, 12, 38, 598, DateTimeKind.Local).AddTicks(116), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 692, "Західний Єремій", 1387, "Україна", new DateTime(2020, 7, 8, 0, 41, 39, 674, DateTimeKind.Local).AddTicks(7737), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 290, "Північний Тиміш", 594, "Україна", new DateTime(2020, 11, 18, 17, 27, 47, 145, DateTimeKind.Local).AddTicks(8791), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 301, "Західний Макар", 618, "Україна", new DateTime(2020, 5, 25, 22, 50, 42, 187, DateTimeKind.Local).AddTicks(6726), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 345, "Херсон", 709, "Україна", new DateTime(2020, 12, 3, 7, 49, 36, 641, DateTimeKind.Local).AddTicks(4940), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 231, "Західний Ратибор", 470, "Україна", new DateTime(2020, 4, 23, 8, 53, 42, 614, DateTimeKind.Local).AddTicks(3356), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 395, "Житомир", 800, "Україна", new DateTime(2020, 6, 9, 4, 22, 58, 249, DateTimeKind.Local).AddTicks(6885), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 578, "Красний Луч", 1177, "Україна", new DateTime(2020, 6, 28, 23, 36, 59, 557, DateTimeKind.Local).AddTicks(5328), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 696, "Північний Доброслав", 1393, "Україна", new DateTime(2021, 2, 26, 2, 55, 49, 294, DateTimeKind.Local).AddTicks(9487), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 79, "Миколаїв", 142, "Україна", new DateTime(2020, 8, 3, 11, 27, 28, 938, DateTimeKind.Local).AddTicks(3230), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 240, "Східний Зоремир", 493, "Україна", new DateTime(2021, 3, 1, 17, 0, 12, 478, DateTimeKind.Local).AddTicks(6379), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 533, "Львів", 1088, "Україна", new DateTime(2020, 9, 27, 4, 35, 45, 10, DateTimeKind.Local).AddTicks(2770), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 669, "Біла Церква", 1346, "Україна", new DateTime(2020, 11, 29, 22, 31, 23, 724, DateTimeKind.Local).AddTicks(6890), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 710, "Східний Родіон", 1418, "Україна", new DateTime(2020, 7, 16, 22, 48, 5, 665, DateTimeKind.Local).AddTicks(2361), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 54, "Південний Дмитро", 96, "Україна", new DateTime(2021, 1, 7, 0, 19, 11, 331, DateTimeKind.Local).AddTicks(3291), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 194, "Єнакієве", 385, "Україна", new DateTime(2020, 10, 9, 18, 6, 0, 716, DateTimeKind.Local).AddTicks(9325), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 514, "Східний Владислав", 1040, "Україна", new DateTime(2020, 5, 4, 16, 1, 19, 674, DateTimeKind.Local).AddTicks(7075), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 608, "Ужгород", 1231, "Україна", new DateTime(2020, 10, 21, 16, 50, 26, 533, DateTimeKind.Local).AddTicks(2832), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 626, "Західний Горислав", 1267, "Україна", new DateTime(2020, 3, 15, 12, 2, 8, 417, DateTimeKind.Local).AddTicks(9786), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 224, "Південний Славомир", 448, "Україна", new DateTime(2020, 8, 24, 20, 35, 15, 125, DateTimeKind.Local).AddTicks(514), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 463, "Вінниця", 945, "Україна", new DateTime(2020, 3, 11, 3, 33, 35, 527, DateTimeKind.Local).AddTicks(8166), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 731, "Ялта", 1459, "Україна", new DateTime(2020, 3, 21, 14, 7, 24, 572, DateTimeKind.Local).AddTicks(2160), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 1, "Одеса", 1, "Україна", new DateTime(2020, 8, 31, 17, 17, 25, 266, DateTimeKind.Local).AddTicks(2054), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 183, "Красний Луч", 369, "Україна", new DateTime(2020, 11, 3, 10, 22, 32, 551, DateTimeKind.Local).AddTicks(8647), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 282, "Умань", 576, "Україна", new DateTime(2020, 9, 7, 1, 16, 50, 518, DateTimeKind.Local).AddTicks(2867), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 643, "Артемівськ", 1298, "Україна", new DateTime(2020, 3, 9, 9, 45, 43, 505, DateTimeKind.Local).AddTicks(1798), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 137, "Південний Божемир", 255, "Україна", new DateTime(2021, 1, 9, 17, 4, 51, 948, DateTimeKind.Local).AddTicks(6072), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 354, "Дніпропетровськ", 724, "Україна", new DateTime(2020, 3, 24, 20, 33, 0, 576, DateTimeKind.Local).AddTicks(2991), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 441, "Західний Володислав", 894, "Україна", new DateTime(2020, 9, 15, 7, 28, 8, 795, DateTimeKind.Local).AddTicks(1321), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 465, "Північний Стефаній", 948, "Україна", new DateTime(2020, 3, 30, 12, 23, 39, 22, DateTimeKind.Local).AddTicks(2848), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 597, "Північний Микола", 1211, "Україна", new DateTime(2020, 12, 5, 20, 13, 52, 683, DateTimeKind.Local).AddTicks(747), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 663, "Східний Славута", 1334, "Україна", new DateTime(2020, 10, 3, 17, 18, 36, 848, DateTimeKind.Local).AddTicks(7132), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 687, "Західний Братислав", 1376, "Україна", new DateTime(2020, 5, 25, 19, 59, 21, 375, DateTimeKind.Local).AddTicks(3864), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 35, "Маріуполь", 64, "Україна", new DateTime(2020, 12, 26, 2, 22, 7, 772, DateTimeKind.Local).AddTicks(9724), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 352, "Західний Руслан", 722, "Україна", new DateTime(2020, 10, 24, 19, 41, 42, 933, DateTimeKind.Local).AddTicks(344), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 559, "Східний Велемир", 1137, "Україна", new DateTime(2021, 1, 18, 16, 57, 22, 5, DateTimeKind.Local).AddTicks(8067), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 592, "Севастополь", 1204, "Україна", new DateTime(2020, 9, 26, 10, 32, 32, 175, DateTimeKind.Local).AddTicks(1838), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 313, "Північний Злат", 638, "Україна", new DateTime(2020, 8, 9, 4, 34, 0, 880, DateTimeKind.Local).AddTicks(2802), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 437, "Чернігів", 887, "Україна", new DateTime(2020, 8, 1, 14, 1, 49, 106, DateTimeKind.Local).AddTicks(3545), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 285, "Євпаторія", 583, "Україна", new DateTime(2020, 5, 10, 7, 11, 31, 759, DateTimeKind.Local).AddTicks(5497), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 229, "Херсон", 459, "Україна", new DateTime(2020, 3, 31, 8, 53, 35, 85, DateTimeKind.Local).AddTicks(9394), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 715, "Ізмаїл", 1429, "Україна", new DateTime(2021, 1, 29, 4, 24, 9, 814, DateTimeKind.Local).AddTicks(5195), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 570, "Північний Славута", 1156, "Україна", new DateTime(2020, 4, 20, 1, 58, 40, 7, DateTimeKind.Local).AddTicks(8674), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 699, "Київ", 1398, "Україна", new DateTime(2021, 2, 21, 7, 5, 46, 685, DateTimeKind.Local).AddTicks(5628), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 527, "Алчевськ", 1070, "Україна", new DateTime(2020, 12, 21, 5, 20, 1, 7, DateTimeKind.Local).AddTicks(9093), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 648, "Південний Любомир", 1307, "Україна", new DateTime(2020, 3, 22, 13, 42, 51, 115, DateTimeKind.Local).AddTicks(7878), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 26, "Київ", 46, "Україна", new DateTime(2020, 10, 19, 4, 27, 48, 865, DateTimeKind.Local).AddTicks(4374), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 151, "Західний Братислав", 291, "Україна", new DateTime(2020, 5, 27, 23, 7, 33, 216, DateTimeKind.Local).AddTicks(2573), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 428, "Північний Корній", 858, "Україна", new DateTime(2020, 3, 10, 6, 30, 5, 49, DateTimeKind.Local).AddTicks(6421), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 490, "Кривий Ріг", 989, "Україна", new DateTime(2020, 11, 1, 2, 55, 18, 549, DateTimeKind.Local).AddTicks(2720), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 728, "Північний Градимир", 1453, "Україна", new DateTime(2021, 1, 24, 16, 12, 34, 193, DateTimeKind.Local).AddTicks(1914), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 34, "Мелітополь", 59, "Україна", new DateTime(2020, 12, 11, 16, 52, 15, 553, DateTimeKind.Local).AddTicks(9840), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 470, "Конотоп", 955, "Україна", new DateTime(2020, 12, 7, 3, 49, 51, 118, DateTimeKind.Local).AddTicks(3351), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 87, "Східний Єремій", 164, "Україна", new DateTime(2020, 6, 11, 17, 13, 56, 197, DateTimeKind.Local).AddTicks(2184), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 555, "Північний Даромир", 1127, "Україна", new DateTime(2020, 8, 1, 22, 57, 39, 448, DateTimeKind.Local).AddTicks(3848), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 612, "Північний Тиміш", 1235, "Україна", new DateTime(2020, 7, 25, 15, 35, 38, 93, DateTimeKind.Local).AddTicks(1924), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 650, "Львів", 1310, "Україна", new DateTime(2021, 3, 2, 6, 19, 23, 557, DateTimeKind.Local).AddTicks(8320), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 709, "Північний Сологуб", 1417, "Україна", new DateTime(2020, 8, 30, 20, 33, 19, 276, DateTimeKind.Local).AddTicks(1750), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 342, "Краматорськ", 703, "Україна", new DateTime(2020, 8, 11, 4, 58, 0, 244, DateTimeKind.Local).AddTicks(6152), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 455, "Миколаїв", 932, "Україна", new DateTime(2020, 9, 9, 20, 3, 51, 300, DateTimeKind.Local).AddTicks(9246), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 600, "Східний Данило", 1215, "Україна", new DateTime(2020, 6, 26, 21, 27, 37, 158, DateTimeKind.Local).AddTicks(9532), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 477, "Луганськ", 964, "Україна", new DateTime(2021, 1, 14, 9, 55, 24, 482, DateTimeKind.Local).AddTicks(1738), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 520, "Слов’янськ", 1050, "Україна", new DateTime(2020, 5, 14, 14, 58, 15, 70, DateTimeKind.Local).AddTicks(2377), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 499, "Західний Брячислав", 1008, "Україна", new DateTime(2021, 1, 29, 15, 38, 46, 882, DateTimeKind.Local).AddTicks(3288), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 319, "Північний Микита", 647, "Україна", new DateTime(2020, 12, 11, 7, 36, 24, 648, DateTimeKind.Local).AddTicks(8367), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 454, "Полтава", 930, "Україна", new DateTime(2020, 6, 17, 14, 35, 46, 940, DateTimeKind.Local).AddTicks(884), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 654, "Східний Зореслав", 1315, "Україна", new DateTime(2020, 4, 27, 3, 25, 16, 976, DateTimeKind.Local).AddTicks(7295), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 185, "Західний Августин", 371, "Україна", new DateTime(2020, 4, 17, 2, 24, 36, 501, DateTimeKind.Local).AddTicks(4081), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 467, "Лисичанськ", 951, "Україна", new DateTime(2020, 4, 1, 1, 45, 23, 91, DateTimeKind.Local).AddTicks(338), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 481, "Південний Зиновій", 970, "Україна", new DateTime(2020, 9, 19, 17, 31, 5, 64, DateTimeKind.Local).AddTicks(7105), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 160, "Південний Роман", 309, "Україна", new DateTime(2020, 8, 16, 6, 11, 58, 957, DateTimeKind.Local).AddTicks(2848), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 286, "Східний Аврелій", 585, "Україна", new DateTime(2020, 10, 24, 17, 29, 25, 66, DateTimeKind.Local).AddTicks(4696), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 338, "Нікополь", 693, "Україна", new DateTime(2020, 10, 29, 2, 10, 15, 764, DateTimeKind.Local).AddTicks(5617), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 383, "Краматорськ", 775, "Україна", new DateTime(2021, 2, 21, 3, 46, 13, 999, DateTimeKind.Local).AddTicks(9030), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 403, "Західний Чорнота", 815, "Україна", new DateTime(2020, 8, 28, 4, 13, 23, 0, DateTimeKind.Local).AddTicks(9883), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 130, "Південний Сергій", 238, "Україна", new DateTime(2020, 10, 4, 15, 39, 1, 982, DateTimeKind.Local).AddTicks(7009), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 278, "Бровари", 570, "Україна", new DateTime(2020, 4, 17, 10, 50, 42, 31, DateTimeKind.Local).AddTicks(6253), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 325, "Бердичів", 661, "Україна", new DateTime(2020, 4, 25, 23, 31, 40, 461, DateTimeKind.Local).AddTicks(3251), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 424, "Донецьк", 851, "Україна", new DateTime(2020, 8, 11, 3, 6, 28, 776, DateTimeKind.Local).AddTicks(1895), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 631, "Південний Славомир", 1277, "Україна", new DateTime(2020, 9, 21, 4, 37, 30, 949, DateTimeKind.Local).AddTicks(7356), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 350, "Ужгород", 716, "Україна", new DateTime(2020, 7, 21, 12, 17, 40, 87, DateTimeKind.Local).AddTicks(9833), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 163, "Артемівськ", 316, "Україна", new DateTime(2020, 4, 7, 14, 23, 53, 180, DateTimeKind.Local).AddTicks(1290), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 18, "Південний Стефаній", 33, "Україна", new DateTime(2020, 12, 26, 10, 15, 57, 777, DateTimeKind.Local).AddTicks(8127), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 80, "Дніпропетровськ", 147, "Україна", new DateTime(2020, 12, 4, 4, 9, 23, 626, DateTimeKind.Local).AddTicks(119), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 143, "Південний Валерій", 272, "Україна", new DateTime(2020, 7, 6, 4, 32, 6, 873, DateTimeKind.Local).AddTicks(1001), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 216, "Західний Роман", 431, "Україна", new DateTime(2020, 9, 18, 7, 26, 12, 935, DateTimeKind.Local).AddTicks(5847), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 749, "Південний Тиміш", 1488, "Україна", new DateTime(2020, 8, 23, 20, 33, 3, 561, DateTimeKind.Local).AddTicks(6786), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 738, "Південний Божемир", 1468, "Україна", new DateTime(2020, 10, 15, 3, 55, 39, 649, DateTimeKind.Local).AddTicks(5755), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 104, "Біла Церква", 197, "Україна", new DateTime(2020, 12, 18, 15, 23, 58, 613, DateTimeKind.Local).AddTicks(919), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 724, "Східний Аркадій", 1449, "Україна", new DateTime(2020, 5, 24, 19, 48, 36, 785, DateTimeKind.Local).AddTicks(7108), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 456, "Північний Звенигор", 933, "Україна", new DateTime(2020, 11, 14, 12, 15, 9, 881, DateTimeKind.Local).AddTicks(473), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 697, "Західний Лук’ян", 1394, "Україна", new DateTime(2020, 8, 23, 4, 2, 59, 696, DateTimeKind.Local).AddTicks(7138), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 40, "Північний Тихон", 75, "Україна", new DateTime(2021, 2, 15, 1, 3, 49, 117, DateTimeKind.Local).AddTicks(520), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 442, "Бердянськ", 902, "Україна", new DateTime(2020, 3, 9, 23, 0, 2, 68, DateTimeKind.Local).AddTicks(8336), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 543, "Кременчук", 1106, "Україна", new DateTime(2020, 11, 2, 6, 23, 51, 324, DateTimeKind.Local).AddTicks(2928), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 589, "Черкаси", 1197, "Україна", new DateTime(2020, 8, 25, 4, 23, 5, 317, DateTimeKind.Local).AddTicks(6801), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 700, "Горлівка", 1399, "Україна", new DateTime(2020, 8, 10, 15, 9, 45, 799, DateTimeKind.Local).AddTicks(420), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 123, "Північний Станіслав", 227, "Україна", new DateTime(2020, 7, 29, 2, 36, 23, 314, DateTimeKind.Local).AddTicks(7589), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 223, "Північний Яромир", 447, "Україна", new DateTime(2021, 1, 11, 11, 8, 10, 866, DateTimeKind.Local).AddTicks(4095), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 633, "Ялта", 1279, "Україна", new DateTime(2020, 11, 1, 11, 5, 22, 367, DateTimeKind.Local).AddTicks(6080), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 379, "Житомир", 766, "Україна", new DateTime(2020, 3, 27, 20, 44, 51, 77, DateTimeKind.Local).AddTicks(6624), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 305, "Єнакієве", 624, "Україна", new DateTime(2020, 7, 6, 11, 31, 18, 358, DateTimeKind.Local).AddTicks(1273), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 334, "Біла Церква", 684, "Україна", new DateTime(2020, 5, 4, 16, 53, 34, 89, DateTimeKind.Local).AddTicks(6900), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 349, "Миколаїв", 714, "Україна", new DateTime(2021, 2, 9, 17, 54, 31, 392, DateTimeKind.Local).AddTicks(7250), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 409, "Кам’янець-Подільський", 827, "Україна", new DateTime(2020, 5, 13, 20, 26, 20, 509, DateTimeKind.Local).AddTicks(7466), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 61, "Кременчук", 108, "Україна", new DateTime(2020, 4, 15, 12, 50, 4, 827, DateTimeKind.Local).AddTicks(4674), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 491, "Західний Панас", 992, "Україна", new DateTime(2020, 5, 11, 18, 54, 27, 74, DateTimeKind.Local).AddTicks(9410), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 187, "Лисичанськ", 374, "Україна", new DateTime(2020, 4, 29, 23, 40, 14, 154, DateTimeKind.Local).AddTicks(5458), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 486, "Кривий Ріг", 980, "Україна", new DateTime(2020, 8, 13, 21, 50, 55, 320, DateTimeKind.Local).AddTicks(7219), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 655, "Східний Влад", 1320, "Україна", new DateTime(2020, 11, 1, 9, 58, 14, 804, DateTimeKind.Local).AddTicks(3607), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 189, "Лисичанськ", 376, "Україна", new DateTime(2020, 4, 2, 7, 52, 42, 980, DateTimeKind.Local).AddTicks(8574), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 7, "Сєвєродонецьк", 16, "Україна", new DateTime(2021, 1, 2, 4, 17, 49, 95, DateTimeKind.Local).AddTicks(5098), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 548, "Сімферополь", 1113, "Україна", new DateTime(2020, 7, 22, 18, 9, 21, 323, DateTimeKind.Local).AddTicks(7030), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 398, "Кривий Ріг", 808, "Україна", new DateTime(2021, 1, 18, 22, 9, 18, 84, DateTimeKind.Local).AddTicks(3184), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 552, "Шостка", 1121, "Україна", new DateTime(2020, 12, 29, 9, 21, 15, 389, DateTimeKind.Local).AddTicks(9627), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 689, "Євпаторія", 1380, "Україна", new DateTime(2020, 7, 4, 19, 21, 39, 24, DateTimeKind.Local).AddTicks(3585), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 178, "Київ", 356, "Україна", new DateTime(2020, 7, 5, 15, 46, 10, 854, DateTimeKind.Local).AddTicks(3692), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 414, "Конотоп", 836, "Україна", new DateTime(2021, 2, 18, 1, 16, 23, 983, DateTimeKind.Local).AddTicks(8806), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 177, "Південний Братослав", 355, "Україна", new DateTime(2020, 11, 19, 23, 48, 18, 989, DateTimeKind.Local).AddTicks(5), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 519, "Івано-Франківськ", 1046, "Україна", new DateTime(2020, 12, 4, 7, 47, 57, 256, DateTimeKind.Local).AddTicks(40), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 172, "Ужгород", 338, "Україна", new DateTime(2020, 12, 23, 6, 35, 57, 252, DateTimeKind.Local).AddTicks(1801), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 239, "Хмельницький", 491, "Україна", new DateTime(2020, 7, 22, 23, 44, 7, 124, DateTimeKind.Local).AddTicks(2622), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 553, "Кривий Ріг", 1125, "Україна", new DateTime(2020, 11, 12, 4, 18, 6, 204, DateTimeKind.Local).AddTicks(9320), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 388, "Бердичів", 785, "Україна", new DateTime(2020, 7, 29, 21, 34, 57, 787, DateTimeKind.Local).AddTicks(6927), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 639, "Кам’янець-Подільський", 1289, "Україна", new DateTime(2021, 1, 2, 4, 10, 46, 961, DateTimeKind.Local).AddTicks(478), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 741, "Тернопіль", 1472, "Україна", new DateTime(2020, 5, 14, 5, 51, 6, 454, DateTimeKind.Local).AddTicks(8336), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 323, "Сєвєродонецьк", 657, "Україна", new DateTime(2021, 1, 21, 13, 0, 26, 531, DateTimeKind.Local).AddTicks(8643), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 374, "Північний Адріян", 756, "Україна", new DateTime(2021, 1, 11, 5, 3, 44, 174, DateTimeKind.Local).AddTicks(2738), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 684, "Східний Звенигор", 1370, "Україна", new DateTime(2020, 5, 24, 13, 19, 16, 1, DateTimeKind.Local).AddTicks(7230), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 556, "Західний Святополк", 1128, "Україна", new DateTime(2020, 12, 19, 20, 3, 49, 554, DateTimeKind.Local).AddTicks(6489), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 657, "Східний Мирон", 1322, "Україна", new DateTime(2020, 8, 11, 8, 7, 18, 329, DateTimeKind.Local).AddTicks(6735), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 281, "Івано-Франківськ", 575, "Україна", new DateTime(2020, 10, 29, 10, 43, 12, 902, DateTimeKind.Local).AddTicks(5139), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 624, "Шостка", 1261, "Україна", new DateTime(2020, 12, 15, 20, 24, 19, 172, DateTimeKind.Local).AddTicks(6789), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 400, "Західний Левко", 811, "Україна", new DateTime(2021, 1, 8, 20, 14, 40, 311, DateTimeKind.Local).AddTicks(7323), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 364, "Красний Луч", 737, "Україна", new DateTime(2020, 3, 10, 4, 3, 2, 714, DateTimeKind.Local).AddTicks(5527), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 236, "Східний Всеслав", 483, "Україна", new DateTime(2020, 8, 16, 22, 57, 0, 580, DateTimeKind.Local).AddTicks(9353), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 309, "Мелітополь", 630, "Україна", new DateTime(2021, 2, 27, 7, 38, 25, 718, DateTimeKind.Local).AddTicks(4997), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 462, "Керч", 941, "Україна", new DateTime(2020, 11, 27, 3, 45, 21, 505, DateTimeKind.Local).AddTicks(9995), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 373, "Західний Орест", 754, "Україна", new DateTime(2020, 4, 9, 5, 44, 20, 519, DateTimeKind.Local).AddTicks(2927), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 613, "Севастополь", 1241, "Україна", new DateTime(2020, 12, 14, 6, 42, 15, 771, DateTimeKind.Local).AddTicks(1305), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 591, "Західний Звенимир", 1202, "Україна", new DateTime(2020, 7, 14, 13, 49, 33, 62, DateTimeKind.Local).AddTicks(9052), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 666, "Сєвєродонецьк", 1337, "Україна", new DateTime(2020, 11, 25, 7, 24, 18, 244, DateTimeKind.Local).AddTicks(4580), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 671, "Слов’янськ", 1349, "Україна", new DateTime(2020, 6, 1, 3, 0, 30, 971, DateTimeKind.Local).AddTicks(190), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 27, "Південний Петро", 48, "Україна", new DateTime(2020, 4, 20, 23, 42, 31, 967, DateTimeKind.Local).AddTicks(89), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 60, "Південний Віктор", 107, "Україна", new DateTime(2020, 11, 11, 2, 13, 20, 399, DateTimeKind.Local).AddTicks(7849), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 274, "Шостка", 563, "Україна", new DateTime(2021, 2, 22, 8, 37, 40, 277, DateTimeKind.Local).AddTicks(7909), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 381, "Південний Адам", 772, "Україна", new DateTime(2020, 8, 19, 18, 38, 42, 498, DateTimeKind.Local).AddTicks(1198), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 322, "Луганськ", 654, "Україна", new DateTime(2020, 12, 2, 22, 29, 58, 233, DateTimeKind.Local).AddTicks(2701), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 11, "Алчевськ", 22, "Україна", new DateTime(2020, 8, 30, 17, 56, 50, 445, DateTimeKind.Local).AddTicks(5848), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 253, "Івано-Франківськ", 518, "Україна", new DateTime(2020, 11, 20, 13, 26, 45, 166, DateTimeKind.Local).AddTicks(6308), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 601, "Північний Максим", 1218, "Україна", new DateTime(2020, 7, 6, 17, 20, 39, 11, DateTimeKind.Local).AddTicks(6053), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 620, "Східний Стожар", 1256, "Україна", new DateTime(2020, 9, 14, 16, 7, 58, 539, DateTimeKind.Local).AddTicks(784), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 690, "Східний Радим", 1385, "Україна", new DateTime(2020, 5, 24, 19, 55, 11, 741, DateTimeKind.Local).AddTicks(1494), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 136, "Південний Зеновій", 253, "Україна", new DateTime(2020, 12, 1, 8, 25, 1, 803, DateTimeKind.Local).AddTicks(8638), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 524, "Біла Церква", 1060, "Україна", new DateTime(2021, 1, 20, 12, 1, 0, 358, DateTimeKind.Local).AddTicks(1933), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 611, "Східний Кий", 1234, "Україна", new DateTime(2020, 4, 29, 16, 52, 40, 713, DateTimeKind.Local).AddTicks(8213), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 146, "Східний Августин", 276, "Україна", new DateTime(2020, 10, 27, 21, 1, 58, 5, DateTimeKind.Local).AddTicks(1980), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 546, "Східний Маркіян", 1109, "Україна", new DateTime(2020, 4, 23, 6, 35, 14, 494, DateTimeKind.Local).AddTicks(4496), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 513, "Чернігів", 1037, "Україна", new DateTime(2020, 5, 15, 4, 3, 44, 560, DateTimeKind.Local).AddTicks(3153), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 630, "Північний Добромисл", 1273, "Україна", new DateTime(2020, 3, 16, 15, 37, 51, 113, DateTimeKind.Local).AddTicks(5632), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 31, "Слов’янськ", 56, "Україна", new DateTime(2020, 11, 20, 11, 52, 38, 599, DateTimeKind.Local).AddTicks(8497), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 480, "Східний Роксолан", 969, "Україна", new DateTime(2020, 7, 26, 12, 8, 29, 321, DateTimeKind.Local).AddTicks(1617), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 169, "Тернопіль", 329, "Україна", new DateTime(2021, 1, 27, 5, 57, 31, 83, DateTimeKind.Local).AddTicks(8236), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 558, "Західний Ян", 1136, "Україна", new DateTime(2020, 3, 9, 15, 54, 12, 119, DateTimeKind.Local).AddTicks(8971), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 616, "Краматорськ", 1246, "Україна", new DateTime(2020, 3, 20, 2, 22, 27, 547, DateTimeKind.Local).AddTicks(2218), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 729, "Шостка", 1454, "Україна", new DateTime(2021, 2, 10, 21, 6, 37, 52, DateTimeKind.Local).AddTicks(856), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 744, "Західний Ізяслав", 1475, "Україна", new DateTime(2021, 2, 28, 20, 33, 32, 21, DateTimeKind.Local).AddTicks(8467), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 413, "Північний Владислав", 835, "Україна", new DateTime(2021, 1, 4, 23, 56, 42, 76, DateTimeKind.Local).AddTicks(7184), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 393, "Західний Сологуб", 798, "Україна", new DateTime(2021, 2, 11, 21, 50, 19, 193, DateTimeKind.Local).AddTicks(7451), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 539, "Запоріжжя", 1099, "Україна", new DateTime(2021, 2, 12, 13, 33, 11, 699, DateTimeKind.Local).AddTicks(5865), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 260, "Північний Добромисл", 534, "Україна", new DateTime(2020, 8, 5, 7, 37, 50, 389, DateTimeKind.Local).AddTicks(8051), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 387, "Північний Земислав", 784, "Україна", new DateTime(2020, 4, 2, 10, 36, 57, 120, DateTimeKind.Local).AddTicks(7440), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 153, "Лисичанськ", 295, "Україна", new DateTime(2020, 7, 11, 22, 53, 39, 134, DateTimeKind.Local).AddTicks(4906), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 266, "Східний Степан", 547, "Україна", new DateTime(2020, 5, 4, 5, 9, 49, 787, DateTimeKind.Local).AddTicks(8732), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 147, "Південний Григорій", 281, "Україна", new DateTime(2020, 10, 14, 17, 37, 43, 337, DateTimeKind.Local).AddTicks(470), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 363, "Біла Церква", 735, "Україна", new DateTime(2020, 9, 25, 18, 42, 52, 333, DateTimeKind.Local).AddTicks(7684), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 475, "Львів", 961, "Україна", new DateTime(2020, 10, 7, 6, 21, 3, 60, DateTimeKind.Local).AddTicks(1855), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 542, "Північний Тиміш", 1105, "Україна", new DateTime(2020, 7, 4, 2, 11, 10, 326, DateTimeKind.Local).AddTicks(7321), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 57, "Північний Георгій", 102, "Україна", new DateTime(2020, 3, 10, 3, 22, 46, 970, DateTimeKind.Local).AddTicks(8941), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 73, "Західний Аврелій", 135, "Україна", new DateTime(2020, 3, 5, 15, 30, 1, 602, DateTimeKind.Local).AddTicks(5578), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 316, "Південний Буревіст", 644, "Україна", new DateTime(2020, 8, 2, 19, 29, 50, 189, DateTimeKind.Local).AddTicks(240), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 396, "Західний Матвій", 801, "Україна", new DateTime(2020, 3, 27, 19, 9, 40, 778, DateTimeKind.Local).AddTicks(8063), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 155, "Східний Панас", 301, "Україна", new DateTime(2020, 7, 11, 2, 37, 37, 65, DateTimeKind.Local).AddTicks(5214), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 126, "Східний Георгій", 232, "Україна", new DateTime(2020, 10, 20, 19, 21, 9, 80, DateTimeKind.Local).AddTicks(9104), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 627, "Тернопіль", 1268, "Україна", new DateTime(2020, 12, 12, 18, 25, 40, 375, DateTimeKind.Local).AddTicks(2928), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 208, "Харків", 415, "Україна", new DateTime(2021, 1, 24, 5, 24, 31, 173, DateTimeKind.Local).AddTicks(8597), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 719, "Східний Кий", 1436, "Україна", new DateTime(2020, 6, 10, 14, 41, 30, 350, DateTimeKind.Local).AddTicks(7616), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 150, "Лисичанськ", 290, "Україна", new DateTime(2020, 4, 9, 12, 24, 21, 997, DateTimeKind.Local).AddTicks(9159), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 299, "Східний Зиновій", 613, "Україна", new DateTime(2020, 8, 13, 23, 37, 4, 671, DateTimeKind.Local).AddTicks(604), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 358, "Чернівці", 729, "Україна", new DateTime(2020, 4, 20, 2, 6, 45, 569, DateTimeKind.Local).AddTicks(4216), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 563, "Одеса", 1142, "Україна", new DateTime(2020, 8, 16, 22, 32, 46, 82, DateTimeKind.Local).AddTicks(7614), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 344, "Південний Велемир", 707, "Україна", new DateTime(2020, 8, 30, 12, 57, 12, 719, DateTimeKind.Local).AddTicks(8257), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 566, "Рівне", 1148, "Україна", new DateTime(2020, 8, 19, 18, 51, 1, 438, DateTimeKind.Local).AddTicks(3383), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 659, "Ялта", 1324, "Україна", new DateTime(2020, 7, 12, 0, 36, 33, 808, DateTimeKind.Local).AddTicks(882), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 695, "Східний Ростислав", 1392, "Україна", new DateTime(2020, 5, 3, 6, 40, 0, 290, DateTimeKind.Local).AddTicks(5082), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 10, "Західний Арсеній", 21, "Україна", new DateTime(2020, 6, 10, 6, 44, 12, 592, DateTimeKind.Local).AddTicks(1240), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 174, "Західний Устим", 347, "Україна", new DateTime(2020, 4, 6, 4, 53, 34, 15, DateTimeKind.Local).AddTicks(176), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 391, "Західний Синьоок", 790, "Україна", new DateTime(2021, 2, 27, 1, 27, 50, 18, DateTimeKind.Local).AddTicks(9503), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 723, "Івано-Франківськ", 1448, "Україна", new DateTime(2020, 8, 8, 19, 12, 32, 952, DateTimeKind.Local).AddTicks(8641), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 196, "Павлоград", 387, "Україна", new DateTime(2020, 5, 1, 4, 48, 37, 52, DateTimeKind.Local).AddTicks(7481), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 214, "Ялта", 425, "Україна", new DateTime(2020, 10, 10, 19, 16, 40, 761, DateTimeKind.Local).AddTicks(3516), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 294, "Південний Олелько", 601, "Україна", new DateTime(2020, 7, 4, 9, 31, 45, 51, DateTimeKind.Local).AddTicks(9269), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 452, "Південний Ярослав", 927, "Україна", new DateTime(2020, 8, 10, 21, 13, 28, 611, DateTimeKind.Local).AddTicks(5867), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 397, "Севастополь", 805, "Україна", new DateTime(2020, 11, 6, 1, 17, 10, 968, DateTimeKind.Local).AddTicks(3738), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 461, "Західний Данило", 940, "Україна", new DateTime(2020, 3, 9, 21, 57, 58, 751, DateTimeKind.Local).AddTicks(3623), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 98, "Черкаси", 187, "Україна", new DateTime(2020, 5, 24, 6, 43, 25, 604, DateTimeKind.Local).AddTicks(6671), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 16, "Мелітополь", 31, "Україна", new DateTime(2020, 8, 29, 20, 21, 53, 535, DateTimeKind.Local).AddTicks(806), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 95, "Красний Луч", 179, "Україна", new DateTime(2020, 7, 4, 2, 5, 45, 578, DateTimeKind.Local).AddTicks(2504), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 119, "Західний Доброслав", 219, "Україна", new DateTime(2021, 3, 2, 5, 44, 22, 279, DateTimeKind.Local).AddTicks(6347), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 708, "Східний Ярополк", 1416, "Україна", new DateTime(2020, 11, 2, 4, 27, 18, 283, DateTimeKind.Local).AddTicks(2240), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 331, "Північний Антон", 679, "Україна", new DateTime(2020, 9, 12, 7, 35, 33, 804, DateTimeKind.Local).AddTicks(6729), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 466, "Північний Пантелеймон", 949, "Україна", new DateTime(2020, 9, 2, 3, 10, 35, 52, DateTimeKind.Local).AddTicks(7220), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 210, "Південний Влад", 421, "Україна", new DateTime(2020, 7, 8, 20, 2, 21, 529, DateTimeKind.Local).AddTicks(5285), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 565, "Північний Корнелій", 1145, "Україна", new DateTime(2020, 6, 3, 9, 36, 55, 12, DateTimeKind.Local).AddTicks(6934), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 59, "Східний Звенигор", 104, "Україна", new DateTime(2021, 2, 2, 4, 25, 16, 593, DateTimeKind.Local).AddTicks(5784), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 512, "Шостка", 1036, "Україна", new DateTime(2020, 3, 11, 16, 2, 16, 174, DateTimeKind.Local).AddTicks(4098), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 279, "Східний Златомир", 571, "Україна", new DateTime(2021, 2, 24, 1, 28, 24, 741, DateTimeKind.Local).AddTicks(6258), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 257, "Східний Андрій", 528, "Україна", new DateTime(2020, 9, 17, 0, 40, 6, 411, DateTimeKind.Local).AddTicks(6236), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 450, "Запоріжжя", 922, "Україна", new DateTime(2020, 9, 4, 8, 16, 30, 147, DateTimeKind.Local).AddTicks(6598), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 598, "Східний Яромил", 1212, "Україна", new DateTime(2020, 11, 28, 22, 53, 10, 489, DateTimeKind.Local).AddTicks(7816), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 607, "Східний Корній", 1230, "Україна", new DateTime(2021, 2, 17, 4, 5, 17, 270, DateTimeKind.Local).AddTicks(3820), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 66, "Східний Орест", 116, "Україна", new DateTime(2020, 10, 24, 15, 49, 43, 562, DateTimeKind.Local).AddTicks(755), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 133, "Київ", 247, "Україна", new DateTime(2020, 5, 16, 22, 17, 44, 83, DateTimeKind.Local).AddTicks(5894), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 293, "Південний Яромир", 600, "Україна", new DateTime(2020, 5, 28, 18, 46, 44, 400, DateTimeKind.Local).AddTicks(9512), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 536, "Східний Святослав", 1093, "Україна", new DateTime(2021, 2, 13, 8, 14, 21, 282, DateTimeKind.Local).AddTicks(6250), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 537, "Одеса", 1097, "Україна", new DateTime(2021, 1, 3, 11, 59, 21, 943, DateTimeKind.Local).AddTicks(1466), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 540, "Східний Гаврило", 1102, "Україна", new DateTime(2021, 2, 1, 8, 22, 11, 926, DateTimeKind.Local).AddTicks(6030), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 599, "Суми", 1213, "Україна", new DateTime(2020, 8, 9, 4, 12, 59, 872, DateTimeKind.Local).AddTicks(6978), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 237, "Івано-Франківськ", 488, "Україна", new DateTime(2020, 11, 7, 3, 44, 27, 431, DateTimeKind.Local).AddTicks(7181), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 674, "Слов’янськ", 1355, "Україна", new DateTime(2021, 1, 4, 22, 31, 13, 734, DateTimeKind.Local).AddTicks(7494), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 321, "Алчевськ", 650, "Україна", new DateTime(2020, 4, 28, 4, 55, 18, 8, DateTimeKind.Local).AddTicks(2159), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 108, "Західний Віталій", 204, "Україна", new DateTime(2020, 3, 29, 6, 49, 16, 95, DateTimeKind.Local).AddTicks(3536), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 362, "Південний Зборислав", 734, "Україна", new DateTime(2020, 8, 17, 4, 50, 6, 165, DateTimeKind.Local).AddTicks(1293), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 515, "Східний Борислав", 1041, "Україна", new DateTime(2021, 1, 5, 17, 35, 56, 184, DateTimeKind.Local).AddTicks(5816), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 549, "Східний Охрім", 1117, "Україна", new DateTime(2020, 6, 24, 9, 12, 41, 780, DateTimeKind.Local).AddTicks(6214), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 23, "Нікополь", 42, "Україна", new DateTime(2021, 2, 6, 3, 22, 35, 794, DateTimeKind.Local).AddTicks(1106), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 84, "Ялта", 159, "Україна", new DateTime(2020, 8, 17, 9, 29, 17, 583, DateTimeKind.Local).AddTicks(53), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 529, "Західний Лад", 1080, "Україна", new DateTime(2020, 12, 2, 17, 38, 57, 686, DateTimeKind.Local).AddTicks(5077), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 411, "Східний Білослав", 831, "Україна", new DateTime(2020, 7, 1, 10, 11, 46, 939, DateTimeKind.Local).AddTicks(5562), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 488, "Західний Мар’ян", 984, "Україна", new DateTime(2020, 3, 9, 2, 21, 1, 554, DateTimeKind.Local).AddTicks(3422), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 557, "Львів", 1129, "Україна", new DateTime(2021, 1, 31, 8, 58, 12, 997, DateTimeKind.Local).AddTicks(5258), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 9, "Східний Віктор", 20, "Україна", new DateTime(2020, 3, 13, 4, 57, 2, 574, DateTimeKind.Local).AddTicks(6063), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 32, "Південний Алевтин", 57, "Україна", new DateTime(2021, 1, 11, 3, 57, 35, 643, DateTimeKind.Local).AddTicks(2370), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 101, "Біла Церква", 191, "Україна", new DateTime(2020, 8, 12, 19, 41, 28, 531, DateTimeKind.Local).AddTicks(5357), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 517, "Північний Всевлад", 1044, "Україна", new DateTime(2020, 10, 2, 23, 20, 24, 249, DateTimeKind.Local).AddTicks(3229), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 554, "Ужгород", 1126, "Україна", new DateTime(2020, 9, 1, 3, 7, 3, 747, DateTimeKind.Local).AddTicks(236), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 647, "Горлівка", 1306, "Україна", new DateTime(2020, 3, 5, 2, 55, 25, 888, DateTimeKind.Local).AddTicks(2831), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 261, "Південний Лад", 539, "Україна", new DateTime(2020, 3, 23, 2, 12, 24, 597, DateTimeKind.Local).AddTicks(986), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 296, "Північний Геннадій", 603, "Україна", new DateTime(2021, 2, 15, 11, 6, 42, 808, DateTimeKind.Local).AddTicks(5221), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 523, "Східний Євген", 1055, "Україна", new DateTime(2020, 7, 5, 13, 26, 41, 850, DateTimeKind.Local).AddTicks(2380), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 574, "Краматорськ", 1160, "Україна", new DateTime(2020, 3, 30, 14, 50, 27, 964, DateTimeKind.Local).AddTicks(8204), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 586, "Ізмаїл", 1190, "Україна", new DateTime(2020, 9, 9, 15, 27, 24, 560, DateTimeKind.Local).AddTicks(9487), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 42, "Південний Роксолан", 78, "Україна", new DateTime(2020, 8, 21, 18, 23, 37, 326, DateTimeKind.Local).AddTicks(5138), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 52, "Умань", 92, "Україна", new DateTime(2020, 4, 28, 22, 41, 53, 459, DateTimeKind.Local).AddTicks(9838), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 68, "Конотоп", 121, "Україна", new DateTime(2020, 7, 31, 18, 46, 2, 828, DateTimeKind.Local).AddTicks(7869), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 726, "Артемівськ", 1451, "Україна", new DateTime(2021, 2, 2, 9, 34, 5, 955, DateTimeKind.Local).AddTicks(3972), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 92, "Західний Ратимир", 170, "Україна", new DateTime(2020, 7, 26, 1, 8, 24, 662, DateTimeKind.Local).AddTicks(3153), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 94, "Олександрія", 178, "Україна", new DateTime(2020, 3, 26, 4, 13, 47, 866, DateTimeKind.Local).AddTicks(6956), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 308, "Східний Влад", 629, "Україна", new DateTime(2020, 5, 7, 10, 9, 52, 986, DateTimeKind.Local).AddTicks(5296), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 701, "Західний Григорій", 1400, "Україна", new DateTime(2020, 3, 3, 20, 3, 7, 346, DateTimeKind.Local).AddTicks(9137), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 371, "Північний Микола", 750, "Україна", new DateTime(2020, 8, 7, 21, 23, 52, 265, DateTimeKind.Local).AddTicks(4456), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 90, "Північний Яромил", 167, "Україна", new DateTime(2021, 2, 13, 22, 22, 42, 769, DateTimeKind.Local).AddTicks(938), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 672, "Західний Зеновій", 1350, "Україна", new DateTime(2020, 8, 5, 12, 49, 59, 996, DateTimeKind.Local).AddTicks(2603), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 148, "Південний Любодар", 287, "Україна", new DateTime(2020, 9, 10, 6, 56, 6, 312, DateTimeKind.Local).AddTicks(2094), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 184, "Західний Богдан", 370, "Україна", new DateTime(2020, 7, 15, 17, 33, 10, 334, DateTimeKind.Local).AddTicks(5675), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 421, "Східний Брячислав", 846, "Україна", new DateTime(2020, 10, 26, 8, 8, 53, 665, DateTimeKind.Local).AddTicks(2120), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 473, "Дніпропетровськ", 959, "Україна", new DateTime(2020, 6, 4, 22, 28, 41, 258, DateTimeKind.Local).AddTicks(2694), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 506, "Західний Ладомир", 1023, "Україна", new DateTime(2020, 7, 21, 0, 35, 0, 930, DateTimeKind.Local).AddTicks(3956), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 582, "Західний Божен", 1183, "Україна", new DateTime(2020, 9, 13, 13, 25, 9, 938, DateTimeKind.Local).AddTicks(3454), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 636, "Північний Ярослав", 1282, "Україна", new DateTime(2020, 4, 1, 5, 17, 11, 822, DateTimeKind.Local).AddTicks(2204), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 41, "Східний Славолюб", 76, "Україна", new DateTime(2021, 1, 21, 20, 54, 53, 717, DateTimeKind.Local).AddTicks(9962), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 241, "Західний Зоремир", 494, "Україна", new DateTime(2021, 2, 4, 11, 30, 35, 989, DateTimeKind.Local).AddTicks(406), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 353, "Умань", 723, "Україна", new DateTime(2020, 7, 4, 3, 35, 47, 976, DateTimeKind.Local).AddTicks(1501), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 380, "Ізмаїл", 771, "Україна", new DateTime(2020, 8, 8, 11, 45, 43, 343, DateTimeKind.Local).AddTicks(5118), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 191, "Західний Марко", 381, "Україна", new DateTime(2020, 11, 1, 12, 59, 5, 897, DateTimeKind.Local).AddTicks(2171), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 535, "Євпаторія", 1092, "Україна", new DateTime(2020, 7, 10, 12, 23, 15, 691, DateTimeKind.Local).AddTicks(1019), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 493, "Південний Володимир", 998, "Україна", new DateTime(2020, 6, 25, 20, 1, 35, 609, DateTimeKind.Local).AddTicks(7309), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 417, "Севастополь", 841, "Україна", new DateTime(2020, 3, 4, 6, 56, 36, 283, DateTimeKind.Local).AddTicks(448), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 125, "Південний Валентин", 230, "Україна", new DateTime(2021, 1, 12, 4, 14, 9, 885, DateTimeKind.Local).AddTicks(6860), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 737, "Мелітополь", 1467, "Україна", new DateTime(2021, 2, 25, 15, 42, 59, 133, DateTimeKind.Local).AddTicks(7005), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 179, "Сєвєродонецьк", 358, "Україна", new DateTime(2020, 3, 25, 16, 31, 49, 797, DateTimeKind.Local).AddTicks(6351), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 702, "Західний Антоній", 1401, "Україна", new DateTime(2020, 4, 27, 23, 52, 51, 771, DateTimeKind.Local).AddTicks(2547), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 276, "Східний Олесь", 566, "Україна", new DateTime(2020, 10, 25, 8, 52, 31, 368, DateTimeKind.Local).AddTicks(3220), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 551, "Північний Ярослав", 1120, "Україна", new DateTime(2020, 5, 5, 13, 30, 3, 716, DateTimeKind.Local).AddTicks(1943), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 157, "Південний Григорій", 303, "Україна", new DateTime(2021, 2, 1, 22, 58, 12, 80, DateTimeKind.Local).AddTicks(1222), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 605, "Західний Ізяслав", 1227, "Україна", new DateTime(2020, 9, 4, 10, 59, 27, 469, DateTimeKind.Local).AddTicks(6098), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 29, "Східний Ратибор", 52, "Україна", new DateTime(2020, 7, 5, 22, 29, 31, 845, DateTimeKind.Local).AddTicks(488), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 332, "Єнакієве", 681, "Україна", new DateTime(2020, 11, 9, 16, 47, 20, 148, DateTimeKind.Local).AddTicks(9210), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 202, "Південний Микита", 402, "Україна", new DateTime(2020, 9, 30, 20, 17, 0, 907, DateTimeKind.Local).AddTicks(4168), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 67, "Севастополь", 118, "Україна", new DateTime(2020, 3, 19, 14, 33, 45, 355, DateTimeKind.Local).AddTicks(7826), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 48, "Східний Святослав", 85, "Україна", new DateTime(2020, 6, 22, 14, 0, 10, 459, DateTimeKind.Local).AddTicks(3468), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 457, "Запоріжжя", 934, "Україна", new DateTime(2020, 10, 15, 0, 24, 24, 781, DateTimeKind.Local).AddTicks(6238), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 505, "Південний Святополк", 1021, "Україна", new DateTime(2020, 10, 2, 19, 29, 54, 209, DateTimeKind.Local).AddTicks(1995), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 662, "Західний Славомир", 1333, "Україна", new DateTime(2020, 8, 7, 8, 7, 51, 82, DateTimeKind.Local).AddTicks(8105), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 730, "Нікополь", 1455, "Україна", new DateTime(2021, 2, 9, 13, 43, 53, 990, DateTimeKind.Local).AddTicks(2426), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 251, "Північний Влад", 516, "Україна", new DateTime(2020, 7, 14, 21, 16, 48, 44, DateTimeKind.Local).AddTicks(5583), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 317, "Львів", 645, "Україна", new DateTime(2020, 3, 17, 18, 45, 56, 183, DateTimeKind.Local).AddTicks(4397), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 732, "Східний Хорив", 1460, "Україна", new DateTime(2020, 4, 23, 4, 24, 14, 63, DateTimeKind.Local).AddTicks(7058), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 691, "Чернігів", 1386, "Україна", new DateTime(2021, 2, 21, 4, 52, 51, 137, DateTimeKind.Local).AddTicks(3454), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 594, "Керч", 1206, "Україна", new DateTime(2020, 12, 29, 20, 16, 4, 390, DateTimeKind.Local).AddTicks(9337), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 269, "Західний Архип", 555, "Україна", new DateTime(2020, 3, 13, 0, 37, 19, 267, DateTimeKind.Local).AddTicks(7941), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 585, "Західний Устим", 1187, "Україна", new DateTime(2020, 5, 13, 3, 15, 10, 240, DateTimeKind.Local).AddTicks(3033), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 271, "Миколаїв", 559, "Україна", new DateTime(2020, 7, 2, 0, 23, 32, 800, DateTimeKind.Local).AddTicks(717), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 58, "Тернопіль", 103, "Україна", new DateTime(2021, 2, 1, 2, 49, 58, 582, DateTimeKind.Local).AddTicks(6231), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 25, "Північний Вадим", 45, "Україна", new DateTime(2021, 1, 2, 5, 0, 22, 216, DateTimeKind.Local).AddTicks(7372), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 443, "Південний Юхим", 903, "Україна", new DateTime(2021, 2, 17, 5, 26, 56, 760, DateTimeKind.Local).AddTicks(3518), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 577, "Північний Левко", 1176, "Україна", new DateTime(2020, 12, 30, 17, 41, 32, 826, DateTimeKind.Local).AddTicks(6855), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 604, "Чернігів", 1225, "Україна", new DateTime(2020, 9, 8, 13, 10, 58, 514, DateTimeKind.Local).AddTicks(3959), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 347, "Західний Радим", 711, "Україна", new DateTime(2021, 2, 20, 23, 13, 22, 894, DateTimeKind.Local).AddTicks(9884), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 166, "Західний Яромил", 322, "Україна", new DateTime(2020, 9, 20, 22, 59, 12, 431, DateTimeKind.Local).AddTicks(5998), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 250, "Єнакієве", 514, "Україна", new DateTime(2021, 1, 18, 11, 25, 58, 166, DateTimeKind.Local).AddTicks(1701), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 743, "Західний Яромил", 1474, "Україна", new DateTime(2020, 10, 17, 9, 32, 54, 377, DateTimeKind.Local).AddTicks(9585), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 484, "Південний Златомир", 975, "Україна", new DateTime(2020, 9, 21, 10, 25, 1, 873, DateTimeKind.Local).AddTicks(9043), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 270, "Східний Павло", 556, "Україна", new DateTime(2020, 6, 12, 21, 27, 44, 114, DateTimeKind.Local).AddTicks(6913), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 320, "Кременчук", 648, "Україна", new DateTime(2020, 12, 29, 12, 54, 46, 371, DateTimeKind.Local).AddTicks(3956), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 632, "Мелітополь", 1278, "Україна", new DateTime(2020, 11, 29, 14, 28, 39, 696, DateTimeKind.Local).AddTicks(997), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 638, "Тернопіль", 1286, "Україна", new DateTime(2020, 9, 23, 11, 46, 14, 364, DateTimeKind.Local).AddTicks(3098), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 703, "Бердичів", 1402, "Україна", new DateTime(2020, 8, 11, 0, 34, 46, 339, DateTimeKind.Local).AddTicks(3960), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 199, "Північний Аскольд", 394, "Україна", new DateTime(2021, 2, 4, 6, 22, 52, 698, DateTimeKind.Local).AddTicks(6952), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 532, "Слов’янськ", 1087, "Україна", new DateTime(2020, 3, 11, 20, 34, 38, 452, DateTimeKind.Local).AddTicks(4072), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 6, "Бердичів", 11, "Україна", new DateTime(2021, 2, 12, 10, 38, 49, 7, DateTimeKind.Local).AddTicks(6523), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 131, "Північний Сергій", 240, "Україна", new DateTime(2020, 12, 8, 7, 49, 15, 608, DateTimeKind.Local).AddTicks(3193), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 678, "Івано-Франківськ", 1362, "Україна", new DateTime(2020, 5, 25, 1, 37, 57, 687, DateTimeKind.Local).AddTicks(832), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 580, "Західний Лаврін", 1180, "Україна", new DateTime(2020, 5, 19, 1, 25, 4, 722, DateTimeKind.Local).AddTicks(6113), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 516, "Харків", 1042, "Україна", new DateTime(2020, 8, 17, 10, 13, 46, 395, DateTimeKind.Local).AddTicks(5439), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 315, "Східний Микола", 641, "Україна", new DateTime(2020, 12, 17, 23, 24, 57, 436, DateTimeKind.Local).AddTicks(2223), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 207, "Нікополь", 414, "Україна", new DateTime(2020, 9, 28, 20, 24, 32, 924, DateTimeKind.Local).AddTicks(6662), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 416, "Східний Горислав", 839, "Україна", new DateTime(2020, 8, 28, 19, 29, 34, 214, DateTimeKind.Local).AddTicks(743), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 449, "Північний Любозар", 920, "Україна", new DateTime(2020, 3, 26, 11, 8, 10, 26, DateTimeKind.Local).AddTicks(9763), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 175, "Східний Білослав", 350, "Україна", new DateTime(2021, 1, 9, 2, 26, 48, 629, DateTimeKind.Local).AddTicks(4265), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 667, "Північний Володимир", 1340, "Україна", new DateTime(2020, 4, 23, 8, 11, 20, 949, DateTimeKind.Local).AddTicks(8128), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 162, "Східний Пилип", 313, "Україна", new DateTime(2020, 4, 8, 11, 20, 31, 139, DateTimeKind.Local).AddTicks(1283), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 291, "Рівне", 595, "Україна", new DateTime(2021, 1, 7, 23, 30, 33, 39, DateTimeKind.Local).AddTicks(5026), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 436, "Південний Ілля", 884, "Україна", new DateTime(2020, 4, 4, 19, 58, 42, 207, DateTimeKind.Local).AddTicks(3912), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 427, "Східний Адріян", 857, "Україна", new DateTime(2021, 1, 21, 12, 14, 31, 843, DateTimeKind.Local).AddTicks(6443), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 159, "Сімферополь", 305, "Україна", new DateTime(2021, 2, 1, 4, 54, 56, 909, DateTimeKind.Local).AddTicks(8078), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 740, "Західний Роксолан", 1471, "Україна", new DateTime(2021, 1, 31, 1, 22, 3, 7, DateTimeKind.Local).AddTicks(7190), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 434, "Південний Павло", 876, "Україна", new DateTime(2020, 4, 30, 17, 55, 51, 745, DateTimeKind.Local).AddTicks(7654), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 459, "Запоріжжя", 937, "Україна", new DateTime(2020, 8, 9, 5, 10, 38, 593, DateTimeKind.Local).AddTicks(5003), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 235, "Єнакієве", 481, "Україна", new DateTime(2020, 4, 24, 18, 13, 29, 498, DateTimeKind.Local).AddTicks(968), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 645, "Західний Віталій", 1302, "Україна", new DateTime(2020, 12, 30, 16, 12, 7, 965, DateTimeKind.Local).AddTicks(5652), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 297, "Південний Іван", 607, "Україна", new DateTime(2020, 9, 25, 16, 28, 32, 771, DateTimeKind.Local).AddTicks(8362), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 283, "Чернігів", 578, "Україна", new DateTime(2020, 3, 11, 3, 52, 4, 927, DateTimeKind.Local).AddTicks(368), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 468, "Маріуполь", 953, "Україна", new DateTime(2021, 2, 22, 13, 1, 29, 459, DateTimeKind.Local).AddTicks(4755), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 284, "Західний Буйтур", 582, "Україна", new DateTime(2020, 11, 8, 3, 44, 34, 718, DateTimeKind.Local).AddTicks(986), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 705, "Південний Анатолій", 1408, "Україна", new DateTime(2021, 2, 13, 4, 34, 13, 847, DateTimeKind.Local).AddTicks(3990), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 49, "Східний Любомир", 86, "Україна", new DateTime(2020, 3, 5, 15, 9, 5, 366, DateTimeKind.Local).AddTicks(349), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 504, "Конотоп", 1020, "Україна", new DateTime(2020, 9, 13, 22, 18, 56, 616, DateTimeKind.Local).AddTicks(1871), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 614, "Західний Левко", 1242, "Україна", new DateTime(2020, 4, 1, 9, 22, 56, 288, DateTimeKind.Local).AddTicks(3111), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 482, "Південний Устим", 972, "Україна", new DateTime(2020, 10, 18, 2, 31, 56, 178, DateTimeKind.Local).AddTicks(1541), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 550, "Кам’янець-Подільський", 1118, "Україна", new DateTime(2020, 3, 30, 15, 26, 32, 885, DateTimeKind.Local).AddTicks(3626), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 588, "Дніпродзержинськ", 1195, "Україна", new DateTime(2020, 6, 17, 17, 28, 44, 221, DateTimeKind.Local).AddTicks(4590), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 154, "Київ", 296, "Україна", new DateTime(2021, 2, 3, 4, 55, 10, 336, DateTimeKind.Local).AddTicks(6272), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 243, "Західний Геннадій", 500, "Україна", new DateTime(2020, 6, 26, 17, 31, 59, 361, DateTimeKind.Local).AddTicks(5329), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 55, "Павлоград", 97, "Україна", new DateTime(2020, 8, 21, 20, 17, 13, 574, DateTimeKind.Local).AddTicks(6670), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 193, "Східний Всеволод", 384, "Україна", new DateTime(2020, 4, 12, 17, 7, 57, 579, DateTimeKind.Local).AddTicks(9123), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 220, "Алчевськ", 438, "Україна", new DateTime(2020, 12, 7, 20, 2, 22, 956, DateTimeKind.Local).AddTicks(2853), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 242, "Мелітополь", 496, "Україна", new DateTime(2021, 1, 4, 13, 49, 40, 60, DateTimeKind.Local).AddTicks(7493), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 439, "Єнакієве", 891, "Україна", new DateTime(2021, 2, 7, 9, 26, 23, 693, DateTimeKind.Local).AddTicks(4746), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 644, "Східний Славута", 1300, "Україна", new DateTime(2020, 8, 23, 11, 33, 52, 415, DateTimeKind.Local).AddTicks(7157), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 661, "Київ", 1330, "Україна", new DateTime(2020, 5, 1, 10, 39, 41, 251, DateTimeKind.Local).AddTicks(7029), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 192, "Артемівськ", 383, "Україна", new DateTime(2020, 10, 8, 8, 45, 54, 536, DateTimeKind.Local).AddTicks(9668), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 306, "Ужгород", 625, "Україна", new DateTime(2021, 1, 9, 0, 28, 38, 181, DateTimeKind.Local).AddTicks(9412), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 430, "Східний Златомир", 864, "Україна", new DateTime(2020, 6, 18, 6, 42, 59, 862, DateTimeKind.Local).AddTicks(9931), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 510, "Північний Листвич", 1030, "Україна", new DateTime(2020, 4, 28, 23, 2, 21, 180, DateTimeKind.Local).AddTicks(2840), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 118, "Слов’янськ", 216, "Україна", new DateTime(2020, 4, 7, 17, 22, 10, 757, DateTimeKind.Local).AddTicks(1578), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 129, "Керч", 236, "Україна", new DateTime(2020, 12, 1, 0, 32, 17, 279, DateTimeKind.Local).AddTicks(7350), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 165, "Сімферополь", 320, "Україна", new DateTime(2020, 11, 28, 1, 36, 58, 704, DateTimeKind.Local).AddTicks(8977), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 382, "Південний Микола", 773, "Україна", new DateTime(2020, 4, 26, 16, 39, 20, 881, DateTimeKind.Local).AddTicks(9697), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 168, "Ялта", 325, "Україна", new DateTime(2021, 1, 29, 2, 37, 8, 945, DateTimeKind.Local).AddTicks(800), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 113, "Кривий Ріг", 209, "Україна", new DateTime(2020, 10, 14, 22, 58, 34, 629, DateTimeKind.Local).AddTicks(1556), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 683, "Запоріжжя", 1369, "Україна", new DateTime(2021, 3, 2, 22, 15, 9, 159, DateTimeKind.Local).AddTicks(9027), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 479, "Південний Артем", 967, "Україна", new DateTime(2020, 4, 10, 14, 28, 29, 488, DateTimeKind.Local).AddTicks(7913), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 489, "Східний Максим", 987, "Україна", new DateTime(2020, 7, 5, 14, 13, 17, 730, DateTimeKind.Local).AddTicks(4902), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 531, "Дніпропетровськ", 1085, "Україна", new DateTime(2020, 9, 8, 8, 57, 21, 70, DateTimeKind.Local).AddTicks(2996), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 211, "Ужгород", 422, "Україна", new DateTime(2020, 11, 1, 2, 24, 34, 158, DateTimeKind.Local).AddTicks(7272), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 713, "Східний Тиміш", 1425, "Україна", new DateTime(2020, 10, 22, 16, 13, 3, 828, DateTimeKind.Local).AddTicks(5598), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 498, "Одеса", 1007, "Україна", new DateTime(2021, 1, 23, 13, 9, 45, 70, DateTimeKind.Local).AddTicks(3087), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 511, "Кременчук", 1033, "Україна", new DateTime(2020, 8, 7, 1, 29, 23, 704, DateTimeKind.Local).AddTicks(3588), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 89, "Ужгород", 166, "Україна", new DateTime(2020, 8, 20, 12, 40, 10, 128, DateTimeKind.Local).AddTicks(7), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 205, "Східний Братислав", 408, "Україна", new DateTime(2021, 2, 28, 11, 1, 34, 715, DateTimeKind.Local).AddTicks(7416), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 255, "Західний Станіслав", 520, "Україна", new DateTime(2020, 9, 14, 22, 4, 58, 127, DateTimeKind.Local).AddTicks(7168), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 110, "Рівне", 206, "Україна", new DateTime(2020, 7, 17, 13, 25, 43, 546, DateTimeKind.Local).AddTicks(9202), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 256, "Єнакієве", 524, "Україна", new DateTime(2020, 9, 17, 15, 10, 37, 767, DateTimeKind.Local).AddTicks(8476), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 340, "Бердянськ", 697, "Україна", new DateTime(2020, 12, 24, 19, 21, 50, 807, DateTimeKind.Local).AddTicks(1918), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 407, "Тернопіль", 824, "Україна", new DateTime(2020, 10, 1, 0, 9, 59, 106, DateTimeKind.Local).AddTicks(4451), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 469, "Сєвєродонецьк", 954, "Україна", new DateTime(2020, 8, 19, 17, 30, 9, 791, DateTimeKind.Local).AddTicks(396), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 420, "Західний Всеслав", 845, "Україна", new DateTime(2020, 3, 12, 9, 21, 44, 812, DateTimeKind.Local).AddTicks(3284), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 746, "Південний Руслан", 1478, "Україна", new DateTime(2020, 10, 26, 6, 54, 37, 49, DateTimeKind.Local).AddTicks(1585), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 75, "Красний Луч", 138, "Україна", new DateTime(2020, 12, 3, 11, 47, 40, 185, DateTimeKind.Local).AddTicks(2486), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 355, "Східний Архип", 725, "Україна", new DateTime(2020, 3, 3, 18, 53, 21, 314, DateTimeKind.Local).AddTicks(9098), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 5, "Південний Білослав", 9, "Україна", new DateTime(2021, 1, 26, 15, 51, 47, 135, DateTimeKind.Local).AddTicks(8827), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 361, "Керч", 733, "Україна", new DateTime(2021, 2, 19, 5, 41, 59, 266, DateTimeKind.Local).AddTicks(4470), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 263, "Південний Мирон", 541, "Україна", new DateTime(2020, 10, 21, 8, 22, 23, 139, DateTimeKind.Local).AddTicks(1976), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 356, "Олександрія", 726, "Україна", new DateTime(2021, 2, 17, 9, 42, 57, 177, DateTimeKind.Local).AddTicks(7094), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 716, "Чернівці", 1430, "Україна", new DateTime(2020, 6, 30, 10, 59, 37, 786, DateTimeKind.Local).AddTicks(6574), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 244, "Східний Ігор", 501, "Україна", new DateTime(2021, 2, 12, 12, 32, 45, 874, DateTimeKind.Local).AddTicks(8429), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 568, "Херсон", 1151, "Україна", new DateTime(2020, 9, 28, 19, 47, 28, 443, DateTimeKind.Local).AddTicks(1139), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 225, "Ужгород", 449, "Україна", new DateTime(2020, 7, 19, 15, 2, 25, 603, DateTimeKind.Local).AddTicks(5905), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 72, "Західний Лук’ян", 133, "Україна", new DateTime(2020, 11, 17, 17, 15, 22, 549, DateTimeKind.Local).AddTicks(4010), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 360, "Луганськ", 731, "Україна", new DateTime(2021, 1, 9, 7, 36, 55, 628, DateTimeKind.Local).AddTicks(8388), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 56, "Івано-Франківськ", 99, "Україна", new DateTime(2020, 5, 7, 13, 12, 9, 944, DateTimeKind.Local).AddTicks(2134), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 408, "Алчевськ", 826, "Україна", new DateTime(2020, 11, 14, 15, 22, 47, 459, DateTimeKind.Local).AddTicks(4583), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 495, "Севастополь", 1002, "Україна", new DateTime(2020, 11, 4, 5, 16, 8, 315, DateTimeKind.Local).AddTicks(5451), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 575, "Південний Нестор", 1163, "Україна", new DateTime(2020, 7, 24, 23, 22, 53, 433, DateTimeKind.Local).AddTicks(6824), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 622, "Лисичанськ", 1259, "Україна", new DateTime(2020, 3, 11, 4, 17, 18, 95, DateTimeKind.Local).AddTicks(5981), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 747, "Мелітополь", 1480, "Україна", new DateTime(2021, 1, 28, 15, 10, 46, 465, DateTimeKind.Local).AddTicks(9407), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 111, "Краматорськ", 207, "Україна", new DateTime(2021, 2, 4, 20, 51, 12, 784, DateTimeKind.Local).AddTicks(4140), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 389, "Південний Маркіян", 786, "Україна", new DateTime(2020, 6, 25, 23, 1, 3, 410, DateTimeKind.Local).AddTicks(5756), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 431, "Краматорськ", 865, "Україна", new DateTime(2020, 8, 12, 9, 8, 46, 272, DateTimeKind.Local).AddTicks(86), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 573, "Вінниця", 1159, "Україна", new DateTime(2020, 9, 16, 10, 46, 59, 614, DateTimeKind.Local).AddTicks(9575), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 686, "Західний Остап", 1373, "Україна", new DateTime(2020, 10, 30, 11, 7, 15, 717, DateTimeKind.Local).AddTicks(4727), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 348, "Північний Антоній", 712, "Україна", new DateTime(2021, 2, 3, 19, 43, 40, 328, DateTimeKind.Local).AddTicks(7159), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 222, "Північний Подолян", 446, "Україна", new DateTime(2020, 4, 8, 7, 57, 8, 589, DateTimeKind.Local).AddTicks(6452), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 593, "Північний Братомил", 1205, "Україна", new DateTime(2020, 12, 13, 11, 44, 47, 617, DateTimeKind.Local).AddTicks(3347), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 198, "Південний Велемир", 392, "Україна", new DateTime(2020, 8, 12, 9, 50, 33, 589, DateTimeKind.Local).AddTicks(1438), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 264, "Південний Велемир", 542, "Україна", new DateTime(2020, 4, 7, 7, 3, 42, 53, DateTimeKind.Local).AddTicks(1201), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 312, "Західний Ростислав", 636, "Україна", new DateTime(2020, 12, 17, 18, 35, 54, 750, DateTimeKind.Local).AddTicks(9473), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 259, "Північний Макар", 532, "Україна", new DateTime(2020, 7, 27, 16, 4, 58, 1, DateTimeKind.Local).AddTicks(8000), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 232, "Східний Злат", 471, "Україна", new DateTime(2020, 11, 22, 0, 21, 35, 461, DateTimeKind.Local).AddTicks(9011), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 745, "Олександрія", 1476, "Україна", new DateTime(2020, 9, 1, 0, 30, 39, 620, DateTimeKind.Local).AddTicks(2879), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 753, "Південний Михайло", 1499, "Україна", new DateTime(2020, 11, 14, 11, 46, 15, 851, DateTimeKind.Local).AddTicks(9723), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 675, "Східний Панас", 1358, "Україна", new DateTime(2021, 1, 25, 8, 43, 23, 346, DateTimeKind.Local).AddTicks(4514), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 3, "Західний Мирон", 5, "Україна", new DateTime(2020, 6, 10, 16, 16, 11, 481, DateTimeKind.Local).AddTicks(3802), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 70, "Павлоград", 126, "Україна", new DateTime(2020, 4, 24, 11, 41, 55, 901, DateTimeKind.Local).AddTicks(4696), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 112, "Євпаторія", 208, "Україна", new DateTime(2020, 7, 28, 1, 57, 6, 854, DateTimeKind.Local).AddTicks(141), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 227, "Ізмаїл", 452, "Україна", new DateTime(2020, 6, 24, 3, 20, 29, 957, DateTimeKind.Local).AddTicks(5474), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 302, "Південний Радим", 620, "Україна", new DateTime(2020, 4, 13, 15, 45, 55, 491, DateTimeKind.Local).AddTicks(6283), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 734, "Керч", 1463, "Україна", new DateTime(2021, 1, 31, 11, 46, 15, 475, DateTimeKind.Local).AddTicks(8594), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 295, "Горлівка", 602, "Україна", new DateTime(2020, 9, 8, 19, 16, 39, 732, DateTimeKind.Local).AddTicks(5657), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 376, "Західний Макар", 761, "Україна", new DateTime(2020, 8, 3, 22, 19, 49, 944, DateTimeKind.Local).AddTicks(2264), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 530, "Південний Ладислав", 1083, "Україна", new DateTime(2021, 3, 1, 19, 31, 57, 855, DateTimeKind.Local).AddTicks(4130), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 85, "Івано-Франківськ", 160, "Україна", new DateTime(2020, 10, 7, 20, 2, 51, 904, DateTimeKind.Local).AddTicks(4178), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 173, "Олександрія", 342, "Україна", new DateTime(2020, 4, 1, 4, 0, 26, 956, DateTimeKind.Local).AddTicks(567), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 415, "Черкаси", 837, "Україна", new DateTime(2020, 3, 5, 12, 52, 20, 467, DateTimeKind.Local).AddTicks(9354), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 476, "Кременчук", 963, "Україна", new DateTime(2021, 2, 1, 4, 47, 37, 474, DateTimeKind.Local).AddTicks(6629), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 483, "Північний Боримисл", 973, "Україна", new DateTime(2020, 7, 8, 17, 42, 7, 192, DateTimeKind.Local).AddTicks(1312), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 337, "Південний Гліб", 691, "Україна", new DateTime(2020, 12, 18, 4, 28, 38, 686, DateTimeKind.Local).AddTicks(7326), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 262, "Північний Олександр", 540, "Україна", new DateTime(2021, 1, 15, 19, 35, 37, 526, DateTimeKind.Local).AddTicks(1451), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 97, "Південний Гнат", 186, "Україна", new DateTime(2020, 8, 5, 15, 22, 52, 141, DateTimeKind.Local).AddTicks(6827), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 508, "Дніпродзержинськ", 1026, "Україна", new DateTime(2020, 11, 1, 10, 31, 8, 392, DateTimeKind.Local).AddTicks(1833), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 435, "Східний Пилип", 879, "Україна", new DateTime(2020, 10, 9, 22, 55, 6, 105, DateTimeKind.Local).AddTicks(4848), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 8, "Горлівка", 18, "Україна", new DateTime(2020, 5, 28, 19, 21, 15, 717, DateTimeKind.Local).AddTicks(3515), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 328, "Нікополь", 670, "Україна", new DateTime(2021, 1, 6, 14, 49, 42, 334, DateTimeKind.Local).AddTicks(1909), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 287, "Західний Ярема", 586, "Україна", new DateTime(2020, 9, 28, 1, 35, 24, 945, DateTimeKind.Local).AddTicks(7003), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 444, "Північний Захар", 904, "Україна", new DateTime(2020, 6, 18, 13, 16, 12, 113, DateTimeKind.Local).AddTicks(3065), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 359, "Південний Любомир", 730, "Україна", new DateTime(2020, 10, 19, 22, 40, 2, 701, DateTimeKind.Local).AddTicks(4289), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 733, "Західний Ігор", 1462, "Україна", new DateTime(2020, 7, 27, 11, 30, 15, 336, DateTimeKind.Local).AddTicks(8656), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 20, "Північний Денис", 37, "Україна", new DateTime(2020, 12, 20, 12, 23, 59, 242, DateTimeKind.Local).AddTicks(9840), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 21, "Шостка", 38, "Україна", new DateTime(2021, 1, 18, 17, 0, 39, 855, DateTimeKind.Local).AddTicks(3079), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 252, "Донецьк", 517, "Україна", new DateTime(2020, 8, 27, 5, 2, 56, 538, DateTimeKind.Local).AddTicks(5810), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 507, "Південний Данило", 1024, "Україна", new DateTime(2020, 11, 29, 5, 4, 57, 279, DateTimeKind.Local).AddTicks(8165), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 238, "Дніпропетровськ", 489, "Україна", new DateTime(2020, 5, 11, 21, 6, 17, 552, DateTimeKind.Local).AddTicks(1578), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 181, "Західний Добромир", 365, "Україна", new DateTime(2020, 7, 10, 10, 26, 16, 874, DateTimeKind.Local).AddTicks(9989), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 24, "Кіровоград", 43, "Україна", new DateTime(2020, 4, 6, 23, 3, 0, 541, DateTimeKind.Local).AddTicks(2316), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 451, "Східний Боримир", 923, "Україна", new DateTime(2021, 1, 24, 19, 18, 7, 211, DateTimeKind.Local).AddTicks(4217), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 62, "Північний Марко", 109, "Україна", new DateTime(2020, 10, 11, 11, 11, 26, 271, DateTimeKind.Local).AddTicks(375), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 422, "Краматорськ", 847, "Україна", new DateTime(2021, 2, 17, 10, 46, 27, 725, DateTimeKind.Local).AddTicks(668), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 106, "Луцьк", 200, "Україна", new DateTime(2020, 3, 21, 23, 58, 55, 137, DateTimeKind.Local).AddTicks(9103), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 2, "Східний Корнелій", 4, "Україна", new DateTime(2020, 11, 11, 5, 1, 55, 771, DateTimeKind.Local).AddTicks(4702), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 248, "Західний Подолян", 508, "Україна", new DateTime(2020, 7, 6, 14, 47, 18, 342, DateTimeKind.Local).AddTicks(9285), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 188, "Маріуполь", 375, "Україна", new DateTime(2020, 5, 2, 2, 25, 46, 408, DateTimeKind.Local).AddTicks(1043), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 717, "Сімферополь", 1433, "Україна", new DateTime(2021, 2, 3, 14, 54, 59, 878, DateTimeKind.Local).AddTicks(6065), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 226, "Південний Злат", 451, "Україна", new DateTime(2020, 10, 6, 22, 51, 37, 921, DateTimeKind.Local).AddTicks(5195), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 609, "Південний Злат", 1232, "Україна", new DateTime(2020, 4, 4, 15, 2, 47, 33, DateTimeKind.Local).AddTicks(4182), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 384, "Луганськ", 777, "Україна", new DateTime(2020, 12, 7, 14, 30, 9, 116, DateTimeKind.Local).AddTicks(3367), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 105, "Північний Олексій", 199, "Україна", new DateTime(2021, 2, 21, 1, 32, 15, 407, DateTimeKind.Local).AddTicks(1863), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 464, "Східний Божемир", 946, "Україна", new DateTime(2020, 3, 9, 8, 13, 10, 673, DateTimeKind.Local).AddTicks(5720), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 134, "Олександрія", 251, "Україна", new DateTime(2020, 5, 16, 10, 9, 18, 56, DateTimeKind.Local).AddTicks(1047), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 268, "Мелітополь", 553, "Україна", new DateTime(2020, 6, 25, 22, 55, 8, 236, DateTimeKind.Local).AddTicks(2667), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 487, "Південний Гаврило", 983, "Україна", new DateTime(2020, 4, 26, 5, 53, 11, 939, DateTimeKind.Local).AddTicks(6882), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 497, "Східний Андрій", 1005, "Україна", new DateTime(2020, 12, 26, 15, 47, 29, 445, DateTimeKind.Local).AddTicks(4865), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 230, "Північний Біломир", 467, "Україна", new DateTime(2020, 12, 12, 2, 46, 46, 486, DateTimeKind.Local).AddTicks(2611), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 314, "Горлівка", 639, "Україна", new DateTime(2021, 2, 14, 6, 17, 4, 656, DateTimeKind.Local).AddTicks(5237), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 128, "Шостка", 234, "Україна", new DateTime(2020, 12, 30, 6, 8, 30, 716, DateTimeKind.Local).AddTicks(7680), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 221, "Західний Орхип", 445, "Україна", new DateTime(2020, 3, 24, 11, 0, 3, 577, DateTimeKind.Local).AddTicks(3885), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 742, "Західний Василь", 1473, "Україна", new DateTime(2020, 3, 8, 22, 47, 42, 100, DateTimeKind.Local).AddTicks(8479), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 649, "Херсон", 1309, "Україна", new DateTime(2020, 6, 25, 1, 51, 24, 940, DateTimeKind.Local).AddTicks(1436), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 33, "Східний Радимир", 58, "Україна", new DateTime(2021, 1, 5, 22, 25, 21, 335, DateTimeKind.Local).AddTicks(5459), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 200, "Північний Яромил", 398, "Україна", new DateTime(2020, 10, 30, 10, 1, 58, 377, DateTimeKind.Local).AddTicks(9167), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 503, "Львів", 1017, "Україна", new DateTime(2021, 2, 3, 6, 23, 17, 868, DateTimeKind.Local).AddTicks(1827), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 664, "Бердянськ", 1335, "Україна", new DateTime(2020, 10, 2, 10, 34, 21, 461, DateTimeKind.Local).AddTicks(3396), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 53, "Вінниця", 95, "Україна", new DateTime(2020, 7, 29, 10, 1, 24, 193, DateTimeKind.Local).AddTicks(5213), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 300, "Північний Данило", 617, "Україна", new DateTime(2020, 5, 12, 23, 43, 29, 511, DateTimeKind.Local).AddTicks(9095), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 412, "Мукачеве", 833, "Україна", new DateTime(2020, 9, 21, 19, 34, 37, 575, DateTimeKind.Local).AddTicks(9990), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 522, "Західний Добромир", 1053, "Україна", new DateTime(2020, 4, 5, 18, 51, 2, 501, DateTimeKind.Local).AddTicks(1538), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 752, "Донецьк", 1496, "Україна", new DateTime(2020, 12, 11, 16, 8, 28, 320, DateTimeKind.Local).AddTicks(8967), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 12, "Дніпропетровськ", 24, "Україна", new DateTime(2021, 2, 15, 13, 2, 21, 719, DateTimeKind.Local).AddTicks(7309), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 114, "Конотоп", 210, "Україна", new DateTime(2020, 3, 5, 15, 55, 23, 551, DateTimeKind.Local).AddTicks(2595), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 748, "Мелітополь", 1485, "Україна", new DateTime(2020, 10, 23, 7, 16, 50, 125, DateTimeKind.Local).AddTicks(6637), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 357, "Південний Петро", 728, "Україна", new DateTime(2020, 12, 13, 7, 6, 8, 900, DateTimeKind.Local).AddTicks(5163), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 595, "Північний Остап", 1209, "Україна", new DateTime(2020, 12, 11, 8, 8, 9, 688, DateTimeKind.Local).AddTicks(8048), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 228, "Західний Олександр", 458, "Україна", new DateTime(2020, 12, 2, 12, 5, 1, 459, DateTimeKind.Local).AddTicks(6860), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 433, "Східний Гліб", 872, "Україна", new DateTime(2021, 2, 8, 0, 49, 14, 664, DateTimeKind.Local).AddTicks(1060), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 115, "Східний Зеновій", 213, "Україна", new DateTime(2020, 10, 8, 18, 45, 51, 697, DateTimeKind.Local).AddTicks(2009), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 219, "Ізмаїл", 436, "Україна", new DateTime(2020, 4, 27, 18, 16, 8, 104, DateTimeKind.Local).AddTicks(324), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 234, "Бердянськ", 476, "Україна", new DateTime(2020, 8, 20, 3, 56, 18, 328, DateTimeKind.Local).AddTicks(9953), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 77, "Умань", 140, "Україна", new DateTime(2020, 10, 3, 2, 41, 14, 57, DateTimeKind.Local).AddTicks(1806), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 538, "Південний Божен", 1098, "Україна", new DateTime(2020, 12, 20, 13, 40, 32, 52, DateTimeKind.Local).AddTicks(9766), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 617, "Чернівці", 1253, "Україна", new DateTime(2020, 9, 13, 8, 20, 4, 850, DateTimeKind.Local).AddTicks(9270), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 564, "Східний Георгій", 1143, "Україна", new DateTime(2020, 12, 4, 11, 56, 48, 825, DateTimeKind.Local).AddTicks(2204), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 590, "Північний Ратибор", 1198, "Україна", new DateTime(2020, 4, 5, 8, 24, 4, 752, DateTimeKind.Local).AddTicks(5993), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 83, "Хмельницький", 157, "Україна", new DateTime(2020, 5, 7, 8, 1, 49, 817, DateTimeKind.Local).AddTicks(4162), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 158, "Хмельницький", 304, "Україна", new DateTime(2020, 4, 17, 7, 18, 51, 758, DateTimeKind.Local).AddTicks(7678), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 218, "Східний Яромир", 434, "Україна", new DateTime(2020, 3, 9, 4, 20, 12, 503, DateTimeKind.Local).AddTicks(7109), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 310, "Слов’янськ", 633, "Україна", new DateTime(2020, 6, 26, 9, 6, 30, 691, DateTimeKind.Local).AddTicks(7311), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 318, "Бердянськ", 646, "Україна", new DateTime(2020, 8, 2, 8, 22, 27, 49, DateTimeKind.Local).AddTicks(9441), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 303, "Північний Корнелій", 621, "Україна", new DateTime(2020, 3, 25, 1, 58, 35, 217, DateTimeKind.Local).AddTicks(2284), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 365, "Східний Будимир", 739, "Україна", new DateTime(2020, 11, 22, 23, 52, 53, 916, DateTimeKind.Local).AddTicks(6180), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 432, "Північний Ладомир", 867, "Україна", new DateTime(2020, 12, 22, 10, 22, 58, 219, DateTimeKind.Local).AddTicks(5426), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 213, "Лисичанськ", 424, "Україна", new DateTime(2020, 8, 10, 4, 38, 11, 409, DateTimeKind.Local).AddTicks(8045), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 46, "Північний Добромисл", 82, "Україна", new DateTime(2020, 12, 12, 9, 27, 49, 290, DateTimeKind.Local).AddTicks(292), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 36, "Східний Олег", 67, "Україна", new DateTime(2020, 9, 11, 3, 41, 35, 555, DateTimeKind.Local).AddTicks(4865), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 688, "Херсон", 1377, "Україна", new DateTime(2020, 9, 1, 18, 51, 28, 519, DateTimeKind.Local).AddTicks(2675), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 668, "Артемівськ", 1345, "Україна", new DateTime(2020, 4, 7, 11, 13, 40, 294, DateTimeKind.Local).AddTicks(5328), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 121, "Північний Олесь", 223, "Україна", new DateTime(2020, 4, 19, 2, 41, 14, 725, DateTimeKind.Local).AddTicks(346), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 201, "Північний Яровид", 401, "Україна", new DateTime(2021, 1, 18, 9, 33, 22, 978, DateTimeKind.Local).AddTicks(4567), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 587, "Східний Родослав", 1194, "Україна", new DateTime(2020, 9, 5, 6, 8, 6, 614, DateTimeKind.Local).AddTicks(5322), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 694, "Східний Богдан", 1390, "Україна", new DateTime(2020, 11, 2, 10, 27, 19, 308, DateTimeKind.Local).AddTicks(215), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 176, "Умань", 354, "Україна", new DateTime(2020, 3, 28, 4, 28, 34, 190, DateTimeKind.Local).AddTicks(6567), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 215, "Маріуполь", 427, "Україна", new DateTime(2020, 12, 2, 13, 25, 51, 109, DateTimeKind.Local).AddTicks(2356), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 390, "Південний Буйтур", 788, "Україна", new DateTime(2021, 2, 13, 21, 24, 2, 885, DateTimeKind.Local).AddTicks(6836), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 47, "Маріуполь", 84, "Україна", new DateTime(2020, 3, 15, 13, 18, 14, 319, DateTimeKind.Local).AddTicks(2176), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 445, "Північний Орхип", 907, "Україна", new DateTime(2020, 6, 9, 18, 4, 26, 140, DateTimeKind.Local).AddTicks(5400), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 336, "Західний Роксолан", 689, "Україна", new DateTime(2021, 1, 12, 0, 5, 21, 284, DateTimeKind.Local).AddTicks(1743), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 311, "Київ", 635, "Україна", new DateTime(2020, 10, 14, 12, 48, 45, 307, DateTimeKind.Local).AddTicks(8064), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 425, "Бердичів", 853, "Україна", new DateTime(2020, 10, 13, 20, 27, 14, 100, DateTimeKind.Local).AddTicks(3219), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 670, "Східний Станіслав", 1348, "Україна", new DateTime(2020, 5, 19, 23, 46, 18, 394, DateTimeKind.Local).AddTicks(598), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 15, "Південний Радим", 30, "Україна", new DateTime(2020, 9, 6, 11, 23, 4, 112, DateTimeKind.Local).AddTicks(9111), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 326, "Чернігів", 663, "Україна", new DateTime(2020, 5, 11, 9, 8, 9, 885, DateTimeKind.Local).AddTicks(761), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 494, "Луцьк", 1001, "Україна", new DateTime(2021, 2, 7, 14, 29, 28, 40, DateTimeKind.Local).AddTicks(5289), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 679, "Кам’янець-Подільський", 1363, "Україна", new DateTime(2020, 6, 8, 0, 22, 6, 574, DateTimeKind.Local).AddTicks(518), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 28, "Біла Церква", 50, "Україна", new DateTime(2020, 7, 20, 7, 58, 59, 892, DateTimeKind.Local).AddTicks(3608), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 267, "Слов’янськ", 552, "Україна", new DateTime(2020, 10, 28, 12, 40, 30, 41, DateTimeKind.Local).AddTicks(3845), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 209, "Південний Велемир", 418, "Україна", new DateTime(2020, 9, 27, 19, 13, 16, 417, DateTimeKind.Local).AddTicks(2705), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 579, "Вінниця", 1178, "Україна", new DateTime(2021, 2, 6, 20, 10, 31, 849, DateTimeKind.Local).AddTicks(7879), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 681, "Південний Антін", 1367, "Україна", new DateTime(2020, 10, 23, 9, 47, 6, 670, DateTimeKind.Local).AddTicks(4673), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 725, "Північний Антін", 1450, "Україна", new DateTime(2020, 8, 20, 15, 38, 19, 587, DateTimeKind.Local).AddTicks(7021), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 50, "Південний Охрім", 87, "Україна", new DateTime(2020, 11, 26, 21, 13, 36, 967, DateTimeKind.Local).AddTicks(7175), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 100, "Харків", 189, "Україна", new DateTime(2020, 12, 9, 8, 32, 40, 922, DateTimeKind.Local).AddTicks(4520), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 120, "Східний Левко", 220, "Україна", new DateTime(2020, 3, 13, 5, 7, 39, 379, DateTimeKind.Local).AddTicks(6181), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 501, "Східний Олелько", 1013, "Україна", new DateTime(2021, 2, 8, 22, 46, 39, 505, DateTimeKind.Local).AddTicks(1201), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 629, "Макіївка", 1271, "Україна", new DateTime(2020, 4, 2, 8, 19, 30, 560, DateTimeKind.Local).AddTicks(4071), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 141, "Східний Анастасій", 266, "Україна", new DateTime(2020, 3, 28, 20, 36, 20, 287, DateTimeKind.Local).AddTicks(1370), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 377, "Горлівка", 762, "Україна", new DateTime(2020, 9, 18, 18, 17, 0, 954, DateTimeKind.Local).AddTicks(7705), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 693, "Східний Назарій", 1388, "Україна", new DateTime(2020, 5, 27, 21, 21, 10, 328, DateTimeKind.Local).AddTicks(1118), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 82, "Єнакієве", 156, "Україна", new DateTime(2020, 6, 10, 21, 10, 57, 739, DateTimeKind.Local).AddTicks(5345), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 720, "Ізмаїл", 1441, "Україна", new DateTime(2020, 4, 8, 0, 43, 18, 454, DateTimeKind.Local).AddTicks(7908), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 406, "Харків", 822, "Україна", new DateTime(2020, 6, 26, 16, 14, 38, 35, DateTimeKind.Local).AddTicks(4968), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 410, "Північний Святослав", 828, "Україна", new DateTime(2020, 10, 10, 1, 3, 28, 246, DateTimeKind.Local).AddTicks(4448), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 706, "Харків", 1414, "Україна", new DateTime(2020, 3, 11, 18, 59, 38, 536, DateTimeKind.Local).AddTicks(7414), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 402, "Ужгород", 813, "Україна", new DateTime(2020, 6, 13, 0, 49, 57, 513, DateTimeKind.Local).AddTicks(479), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 658, "Північний Даромир", 1323, "Україна", new DateTime(2020, 9, 25, 9, 32, 10, 432, DateTimeKind.Local).AddTicks(4171), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 440, "Північний Ростислав", 892, "Україна", new DateTime(2020, 9, 26, 14, 53, 44, 224, DateTimeKind.Local).AddTicks(5745), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 560, "Слов’янськ", 1138, "Україна", new DateTime(2020, 10, 1, 7, 10, 6, 908, DateTimeKind.Local).AddTicks(7611), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 273, "Єнакієве", 562, "Україна", new DateTime(2020, 9, 10, 4, 43, 20, 618, DateTimeKind.Local).AddTicks(3739), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 280, "Херсон", 572, "Україна", new DateTime(2020, 7, 2, 11, 54, 55, 504, DateTimeKind.Local).AddTicks(3202), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 307, "Південний Гаврило", 627, "Україна", new DateTime(2021, 2, 2, 11, 25, 4, 336, DateTimeKind.Local).AddTicks(5467), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 145, "Житомир", 275, "Україна", new DateTime(2020, 6, 27, 13, 28, 47, 108, DateTimeKind.Local).AddTicks(1661), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 161, "Сєвєродонецьк", 311, "Україна", new DateTime(2020, 10, 26, 9, 56, 49, 981, DateTimeKind.Local).AddTicks(4044), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 170, "Бердянськ", 330, "Україна", new DateTime(2020, 6, 23, 20, 29, 0, 216, DateTimeKind.Local).AddTicks(4872), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 372, "Харків", 751, "Україна", new DateTime(2020, 12, 28, 23, 32, 40, 909, DateTimeKind.Local).AddTicks(697), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 518, "Горлівка", 1045, "Україна", new DateTime(2020, 12, 17, 11, 53, 15, 143, DateTimeKind.Local).AddTicks(1448), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 292, "Макіївка", 596, "Україна", new DateTime(2020, 6, 6, 16, 0, 5, 267, DateTimeKind.Local).AddTicks(7685), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 369, "Південний Антін", 746, "Україна", new DateTime(2020, 11, 25, 4, 14, 1, 213, DateTimeKind.Local).AddTicks(5203), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 526, "Південний Захар", 1068, "Україна", new DateTime(2020, 4, 15, 13, 51, 42, 698, DateTimeKind.Local).AddTicks(1602), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 4, "Кременчук", 8, "Україна", new DateTime(2020, 8, 14, 18, 46, 44, 581, DateTimeKind.Local).AddTicks(4593), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 88, "Східний Степан", 165, "Україна", new DateTime(2021, 2, 25, 12, 13, 49, 278, DateTimeKind.Local).AddTicks(679), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 541, "Сєвєродонецьк", 1103, "Україна", new DateTime(2020, 3, 19, 12, 46, 6, 648, DateTimeKind.Local).AddTicks(1320), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 625, "Мукачеве", 1264, "Україна", new DateTime(2020, 11, 4, 11, 49, 9, 170, DateTimeKind.Local).AddTicks(8230), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 735, "Донецьк", 1464, "Україна", new DateTime(2020, 9, 14, 3, 54, 7, 252, DateTimeKind.Local).AddTicks(345), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 492, "Західний Братимир", 993, "Україна", new DateTime(2021, 1, 27, 9, 31, 43, 450, DateTimeKind.Local).AddTicks(7033), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 739, "Єнакієве", 1470, "Україна", new DateTime(2020, 3, 7, 17, 42, 56, 86, DateTimeKind.Local).AddTicks(8308), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 327, "Ужгород", 668, "Україна", new DateTime(2021, 1, 27, 18, 58, 27, 241, DateTimeKind.Local).AddTicks(901), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 714, "Північний Златомир", 1426, "Україна", new DateTime(2020, 11, 8, 3, 36, 0, 183, DateTimeKind.Local).AddTicks(9984), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 135, "Нікополь", 252, "Україна", new DateTime(2020, 5, 9, 23, 54, 19, 921, DateTimeKind.Local).AddTicks(5677), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 139, "Північний Павло", 264, "Україна", new DateTime(2020, 6, 22, 7, 44, 9, 44, DateTimeKind.Local).AddTicks(4631), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 405, "Бровари", 821, "Україна", new DateTime(2020, 5, 15, 5, 42, 2, 695, DateTimeKind.Local).AddTicks(7425), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 102, "Артемівськ", 194, "Україна", new DateTime(2020, 6, 26, 13, 46, 48, 60, DateTimeKind.Local).AddTicks(7181), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 521, "Краматорськ", 1052, "Україна", new DateTime(2020, 5, 4, 7, 23, 58, 204, DateTimeKind.Local).AddTicks(7978), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 401, "Донецьк", 812, "Україна", new DateTime(2020, 6, 18, 21, 18, 6, 168, DateTimeKind.Local).AddTicks(1025), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 217, "Південний Сологуб", 433, "Україна", new DateTime(2020, 3, 24, 23, 25, 54, 419, DateTimeKind.Local).AddTicks(9524), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 107, "Західний Славолюб", 201, "Україна", new DateTime(2021, 2, 12, 3, 38, 47, 212, DateTimeKind.Local).AddTicks(8557), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 38, "Південний Всевлад", 72, "Україна", new DateTime(2020, 12, 10, 14, 50, 6, 764, DateTimeKind.Local).AddTicks(4239), "Vodafone" });

            migrationBuilder.CreateIndex(
                name: "IX_ContactInfos_ContactId",
                table: "ContactInfos",
                column: "ContactId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_Contacts_UserId",
                table: "Contacts",
                column: "UserId");

            migrationBuilder.CreateIndex(
                name: "IX_Tags_UserId",
                table: "Tags",
                column: "UserId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "ContactInfos");

            migrationBuilder.DropTable(
                name: "Moderators");

            migrationBuilder.DropTable(
                name: "Tags");

            migrationBuilder.DropTable(
                name: "Contacts");

            migrationBuilder.DropTable(
                name: "Users");
        }
    }
}
