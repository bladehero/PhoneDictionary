using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace PhoneDictionary.Data.Infrastructure.Migrations
{
    public partial class PasswordHashFix : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Moderators",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Login = table.Column<string>(type: "TEXT", nullable: true),
                    Password = table.Column<string>(type: "TEXT", maxLength: 32, nullable: true),
                    CreatedAt = table.Column<DateTime>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Moderators", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Users",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Name = table.Column<string>(type: "TEXT", nullable: true),
                    CreatedAt = table.Column<DateTime>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Users", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Contacts",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Value = table.Column<string>(type: "TEXT", nullable: true),
                    ContactType = table.Column<int>(type: "INTEGER", nullable: false),
                    UserId = table.Column<int>(type: "INTEGER", nullable: false),
                    ContactInfoId = table.Column<int>(type: "INTEGER", nullable: true),
                    CreatedAt = table.Column<DateTime>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Contacts", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Contacts_Users_UserId",
                        column: x => x.UserId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Tags",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Text = table.Column<string>(type: "TEXT", nullable: true),
                    Color = table.Column<string>(type: "TEXT", nullable: true),
                    UserId = table.Column<int>(type: "INTEGER", nullable: false),
                    CreatedAt = table.Column<DateTime>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Tags", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Tags_Users_UserId",
                        column: x => x.UserId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ContactInfos",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Country = table.Column<string>(type: "TEXT", nullable: true),
                    City = table.Column<string>(type: "TEXT", nullable: true),
                    Provider = table.Column<string>(type: "TEXT", nullable: true),
                    ContactId = table.Column<int>(type: "INTEGER", nullable: false),
                    CreatedAt = table.Column<DateTime>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ContactInfos", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ContactInfos_Contacts_ContactId",
                        column: x => x.ContactId,
                        principalTable: "Contacts",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "Moderators",
                columns: new[] { "Id", "CreatedAt", "Login", "Password" },
                values: new object[] { 1, new DateTime(2021, 3, 3, 12, 24, 3, 249, DateTimeKind.Local).AddTicks(2068), "admin", "D8578EDF8458CE06FBC5BB76A58C5CA4" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 204, new DateTime(2020, 4, 27, 9, 30, 6, 827, DateTimeKind.Local).AddTicks(6889), "Ликера Роменець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 203, new DateTime(2020, 4, 15, 21, 15, 53, 75, DateTimeKind.Local).AddTicks(4781), "Антон Зварич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 202, new DateTime(2020, 10, 12, 13, 25, 46, 292, DateTimeKind.Local).AddTicks(7527), "Влада Силецька" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 201, new DateTime(2021, 1, 24, 5, 10, 14, 770, DateTimeKind.Local).AddTicks(2484), "Орест Гладух" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 200, new DateTime(2020, 6, 9, 1, 22, 23, 661, DateTimeKind.Local).AddTicks(1753), "Петро Горбач" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 199, new DateTime(2020, 12, 15, 10, 41, 58, 515, DateTimeKind.Local).AddTicks(8995), "Борис Глинський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 205, new DateTime(2020, 12, 13, 12, 20, 31, 832, DateTimeKind.Local).AddTicks(504), "Немира Лагойда" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 198, new DateTime(2020, 4, 11, 22, 0, 3, 857, DateTimeKind.Local).AddTicks(4643), "Калина Бамбула" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 196, new DateTime(2020, 9, 18, 11, 10, 25, 349, DateTimeKind.Local).AddTicks(7412), "Діяна Петришина" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 195, new DateTime(2020, 12, 23, 3, 31, 20, 742, DateTimeKind.Local).AddTicks(1884), "Доброслава Сердюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 194, new DateTime(2020, 10, 4, 6, 59, 18, 171, DateTimeKind.Local).AddTicks(7323), "Ликера Кивач" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 193, new DateTime(2020, 10, 5, 16, 4, 56, 947, DateTimeKind.Local).AddTicks(1482), "Анжела Данилко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 192, new DateTime(2020, 11, 22, 16, 6, 17, 445, DateTimeKind.Local).AddTicks(2887), "Арсеній Шестак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 191, new DateTime(2021, 2, 13, 2, 44, 55, 130, DateTimeKind.Local).AddTicks(2123), "Палажка Коман" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 197, new DateTime(2020, 10, 1, 11, 11, 48, 835, DateTimeKind.Local).AddTicks(5469), "Болеслав Кононець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 206, new DateTime(2020, 4, 12, 16, 56, 51, 304, DateTimeKind.Local).AddTicks(6621), "Катерина Горова" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 207, new DateTime(2021, 1, 28, 19, 20, 12, 89, DateTimeKind.Local).AddTicks(296), "Варвара Мазун" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 208, new DateTime(2020, 9, 7, 13, 54, 32, 840, DateTimeKind.Local).AddTicks(8585), "Омелян Горбач" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 223, new DateTime(2020, 12, 14, 18, 52, 36, 314, DateTimeKind.Local).AddTicks(1727), "Стефаній Єрмак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 222, new DateTime(2020, 4, 21, 14, 43, 0, 386, DateTimeKind.Local).AddTicks(4343), "В’ячеслав Уманець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 221, new DateTime(2020, 4, 6, 2, 45, 22, 597, DateTimeKind.Local).AddTicks(3658), "Антін Компанієць" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 220, new DateTime(2020, 7, 18, 6, 2, 39, 552, DateTimeKind.Local).AddTicks(3723), "Феодосія Галатей" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 219, new DateTime(2020, 9, 6, 12, 30, 22, 899, DateTimeKind.Local).AddTicks(6778), "Володислав Єрмак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 218, new DateTime(2020, 8, 12, 20, 55, 17, 941, DateTimeKind.Local).AddTicks(2991), "Варвара Лящук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 217, new DateTime(2020, 11, 17, 12, 16, 10, 935, DateTimeKind.Local).AddTicks(5850), "Олесь Лагойда" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 216, new DateTime(2021, 1, 21, 14, 33, 38, 74, DateTimeKind.Local).AddTicks(6499), "Аделаїда Марієвська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 215, new DateTime(2020, 4, 24, 20, 0, 14, 624, DateTimeKind.Local).AddTicks(8678), "Болеслава Слободян" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 214, new DateTime(2020, 6, 15, 3, 48, 12, 805, DateTimeKind.Local).AddTicks(7678), "Тур Малкович" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 213, new DateTime(2021, 2, 18, 14, 11, 20, 929, DateTimeKind.Local).AddTicks(7727), "Віленіна Лящук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 212, new DateTime(2020, 12, 21, 1, 25, 54, 892, DateTimeKind.Local).AddTicks(2372), "Микола Коман" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 211, new DateTime(2020, 8, 24, 15, 10, 27, 537, DateTimeKind.Local).AddTicks(2690), "Захар Луговий" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 210, new DateTime(2020, 3, 13, 10, 3, 4, 599, DateTimeKind.Local).AddTicks(7274), "Орислава Скиба" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 209, new DateTime(2021, 1, 31, 5, 11, 10, 517, DateTimeKind.Local).AddTicks(966), "Ладислав Пригода" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 190, new DateTime(2020, 12, 12, 18, 47, 48, 582, DateTimeKind.Local).AddTicks(758), "Аполлонія Вередун" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 189, new DateTime(2020, 5, 28, 18, 46, 1, 550, DateTimeKind.Local).AddTicks(2342), "Остап Сплюх" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 188, new DateTime(2020, 11, 26, 19, 56, 17, 37, DateTimeKind.Local).AddTicks(5009), "Устим Гнатишин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 187, new DateTime(2020, 11, 7, 5, 23, 29, 80, DateTimeKind.Local).AddTicks(1702), "Анатолія Червоній" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 167, new DateTime(2021, 2, 5, 0, 44, 32, 995, DateTimeKind.Local).AddTicks(894), "Долеслава Михайлюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 166, new DateTime(2021, 1, 20, 14, 20, 2, 913, DateTimeKind.Local).AddTicks(7961), "Щек Балабан" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 165, new DateTime(2020, 10, 14, 18, 22, 9, 209, DateTimeKind.Local).AddTicks(7569), "Валерія Компанієць" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 164, new DateTime(2020, 5, 19, 3, 16, 56, 674, DateTimeKind.Local).AddTicks(2878), "Юлія Семеночко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 163, new DateTime(2020, 11, 17, 9, 54, 31, 419, DateTimeKind.Local).AddTicks(3571), "Андрій Романів" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 162, new DateTime(2020, 9, 7, 4, 5, 4, 566, DateTimeKind.Local).AddTicks(803), "Натан Петрин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 161, new DateTime(2020, 5, 10, 6, 55, 40, 75, DateTimeKind.Local).AddTicks(7805), "Брячислав Лахман" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 160, new DateTime(2020, 10, 28, 7, 11, 36, 19, DateTimeKind.Local).AddTicks(1464), "Всеслава Брицька" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 159, new DateTime(2020, 7, 19, 5, 49, 40, 50, DateTimeKind.Local).AddTicks(8543), "Валентина Борочко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 158, new DateTime(2020, 12, 9, 4, 26, 0, 549, DateTimeKind.Local).AddTicks(3019), "Олександра Притула" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 157, new DateTime(2021, 2, 8, 14, 5, 19, 105, DateTimeKind.Local).AddTicks(7627), "Єремій Демчишин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 156, new DateTime(2020, 5, 18, 22, 47, 23, 480, DateTimeKind.Local).AddTicks(460), "Божена Унич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 155, new DateTime(2021, 1, 23, 16, 47, 24, 536, DateTimeKind.Local).AddTicks(3721), "Назарій Трясило" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 154, new DateTime(2021, 2, 12, 10, 3, 0, 577, DateTimeKind.Local).AddTicks(7824), "Анна Шудрик" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 153, new DateTime(2020, 7, 4, 11, 45, 4, 94, DateTimeKind.Local).AddTicks(1346), "Герасим Ющук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 168, new DateTime(2020, 3, 10, 18, 18, 54, 182, DateTimeKind.Local).AddTicks(4897), "Потішана Семещук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 224, new DateTime(2020, 5, 13, 3, 27, 43, 396, DateTimeKind.Local).AddTicks(1359), "Мечислава Бондаренко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 169, new DateTime(2021, 2, 7, 19, 6, 20, 830, DateTimeKind.Local).AddTicks(4421), "Ігор Дмитрук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 171, new DateTime(2021, 2, 8, 13, 53, 35, 910, DateTimeKind.Local).AddTicks(9466), "Антін Лобачевський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 186, new DateTime(2020, 6, 8, 22, 2, 47, 965, DateTimeKind.Local).AddTicks(6839), "Добромила Сідляк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 185, new DateTime(2020, 9, 25, 21, 41, 30, 675, DateTimeKind.Local).AddTicks(4946), "Матвій Балицький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 184, new DateTime(2020, 12, 5, 18, 33, 59, 723, DateTimeKind.Local).AddTicks(8840), "Антоній Верещук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 183, new DateTime(2020, 7, 19, 3, 51, 23, 745, DateTimeKind.Local).AddTicks(37), "Божемир Гойко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 182, new DateTime(2021, 1, 5, 2, 43, 23, 682, DateTimeKind.Local).AddTicks(5734), "Богдан Дмитришин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 181, new DateTime(2020, 7, 23, 8, 46, 34, 154, DateTimeKind.Local).AddTicks(2292), "Віленіна Мазун" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 180, new DateTime(2020, 5, 20, 20, 56, 50, 875, DateTimeKind.Local).AddTicks(3915), "Мотря Слободян" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 179, new DateTime(2020, 8, 18, 6, 32, 29, 235, DateTimeKind.Local).AddTicks(4575), "Забава Лагойда" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 178, new DateTime(2020, 6, 27, 0, 29, 5, 273, DateTimeKind.Local).AddTicks(3231), "Алевтин Ярмак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 177, new DateTime(2020, 7, 28, 3, 5, 53, 821, DateTimeKind.Local).AddTicks(2167), "Сологуб Бондаренко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 176, new DateTime(2020, 11, 24, 22, 58, 4, 694, DateTimeKind.Local).AddTicks(1531), "Раїса Лобачевська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 175, new DateTime(2021, 2, 16, 6, 27, 39, 394, DateTimeKind.Local).AddTicks(2573), "Афанасій Василишин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 174, new DateTime(2020, 7, 11, 8, 13, 58, 658, DateTimeKind.Local).AddTicks(5286), "Всеслав Дмитрук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 173, new DateTime(2021, 1, 29, 12, 18, 31, 125, DateTimeKind.Local).AddTicks(893), "Пелагія Михайлюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 172, new DateTime(2020, 10, 4, 16, 3, 8, 200, DateTimeKind.Local).AddTicks(1486), "Тихон Луцький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 170, new DateTime(2020, 12, 10, 14, 10, 32, 801, DateTimeKind.Local).AddTicks(7577), "Аполлінарія Поривай" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 225, new DateTime(2020, 8, 1, 2, 3, 45, 97, DateTimeKind.Local).AddTicks(6378), "Оксана Линдик" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 226, new DateTime(2020, 4, 18, 6, 40, 49, 994, DateTimeKind.Local).AddTicks(8634), "Ігор Луцьків" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 227, new DateTime(2021, 1, 18, 2, 8, 23, 674, DateTimeKind.Local).AddTicks(2142), "Віра Роменець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 280, new DateTime(2020, 11, 24, 13, 27, 25, 141, DateTimeKind.Local).AddTicks(757), "Потап Юхно" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 279, new DateTime(2021, 3, 2, 7, 28, 2, 437, DateTimeKind.Local).AddTicks(9613), "Листвич Пригода" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 278, new DateTime(2020, 5, 18, 21, 17, 23, 353, DateTimeKind.Local).AddTicks(5259), "Геннадій Малкович" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 277, new DateTime(2020, 12, 29, 21, 29, 37, 178, DateTimeKind.Local).AddTicks(6869), "Тамара Гаман" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 276, new DateTime(2020, 6, 26, 12, 45, 9, 847, DateTimeKind.Local).AddTicks(4517), "Добромила Сідлецька" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 275, new DateTime(2021, 1, 4, 14, 20, 54, 76, DateTimeKind.Local).AddTicks(3759), "Гарнослав Лученко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 274, new DateTime(2020, 3, 5, 23, 15, 46, 536, DateTimeKind.Local).AddTicks(9324), "Софія Галатей" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 273, new DateTime(2020, 11, 29, 18, 27, 0, 163, DateTimeKind.Local).AddTicks(27), "Захар Павлишин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 272, new DateTime(2020, 9, 25, 21, 51, 58, 205, DateTimeKind.Local).AddTicks(634), "Ада Вітряк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 271, new DateTime(2020, 5, 7, 20, 2, 37, 633, DateTimeKind.Local).AddTicks(1189), "Устина Барановська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 270, new DateTime(2020, 10, 27, 3, 51, 49, 639, DateTimeKind.Local).AddTicks(3228), "Ростислава Григоришина" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 269, new DateTime(2020, 3, 17, 2, 55, 26, 801, DateTimeKind.Local).AddTicks(5541), "Мстислав Луговий" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 268, new DateTime(2020, 11, 7, 20, 21, 21, 662, DateTimeKind.Local).AddTicks(8921), "Назарій Червоній" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 267, new DateTime(2020, 9, 15, 6, 51, 41, 455, DateTimeKind.Local).AddTicks(4034), "Юлія Витребенько" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 266, new DateTime(2020, 7, 25, 21, 35, 8, 826, DateTimeKind.Local).AddTicks(8172), "Мстислав Гнатишин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 281, new DateTime(2020, 10, 16, 10, 53, 57, 172, DateTimeKind.Local).AddTicks(8973), "Лаврін Кордун" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 265, new DateTime(2020, 11, 7, 20, 28, 39, 116, DateTimeKind.Local).AddTicks(9451), "Андрій Павлів" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 282, new DateTime(2020, 3, 19, 18, 35, 35, 955, DateTimeKind.Local).AddTicks(2235), "Буйтур Трясун" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 284, new DateTime(2020, 9, 11, 17, 47, 4, 913, DateTimeKind.Local).AddTicks(9279), "Ярослав Дзюба" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 299, new DateTime(2021, 2, 6, 16, 41, 16, 247, DateTimeKind.Local).AddTicks(5614), "Павліна Марків" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 298, new DateTime(2020, 6, 18, 17, 24, 14, 53, DateTimeKind.Local).AddTicks(9139), "Павліна Москалюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 297, new DateTime(2020, 11, 12, 20, 30, 10, 119, DateTimeKind.Local).AddTicks(7163), "Аврелій Сторожук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 296, new DateTime(2020, 5, 23, 2, 57, 6, 10, DateTimeKind.Local).AddTicks(7487), "Адріян Лобачевський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 295, new DateTime(2020, 10, 10, 23, 53, 33, 620, DateTimeKind.Local).AddTicks(3116), "Власта Малкович" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 294, new DateTime(2020, 12, 18, 11, 4, 4, 857, DateTimeKind.Local).AddTicks(8419), "Іннеса Скиба" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 293, new DateTime(2021, 1, 12, 13, 31, 21, 289, DateTimeKind.Local).AddTicks(8261), "Данило Яловий" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 292, new DateTime(2020, 12, 6, 10, 20, 35, 347, DateTimeKind.Local).AddTicks(1599), "Влад Данилко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 291, new DateTime(2020, 5, 18, 12, 48, 54, 321, DateTimeKind.Local).AddTicks(9136), "Сніжана Пасічник" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 290, new DateTime(2020, 12, 7, 14, 13, 39, 597, DateTimeKind.Local).AddTicks(5830), "Борис Гнатишин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 289, new DateTime(2020, 9, 3, 10, 8, 1, 415, DateTimeKind.Local).AddTicks(1269), "Злата Семещук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 288, new DateTime(2020, 9, 17, 12, 18, 33, 243, DateTimeKind.Local).AddTicks(5156), "Марина Гладківська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 287, new DateTime(2020, 5, 17, 4, 9, 51, 595, DateTimeKind.Local).AddTicks(6365), "Вадим Сушко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 286, new DateTime(2020, 7, 9, 11, 56, 54, 697, DateTimeKind.Local).AddTicks(4099), "Станіслав Опенько" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 285, new DateTime(2020, 7, 10, 14, 48, 11, 255, DateTimeKind.Local).AddTicks(2889), "Антонія Міняйло" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 283, new DateTime(2020, 6, 19, 16, 40, 5, 671, DateTimeKind.Local).AddTicks(8522), "Звенислава Зварич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 152, new DateTime(2021, 3, 1, 22, 54, 26, 492, DateTimeKind.Local).AddTicks(8220), "Білослав Ємець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 264, new DateTime(2020, 10, 4, 12, 37, 1, 565, DateTimeKind.Local).AddTicks(5769), "Омелян Москаль" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 262, new DateTime(2020, 11, 4, 4, 55, 19, 220, DateTimeKind.Local).AddTicks(5387), "Панас Ющук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 242, new DateTime(2020, 8, 8, 2, 9, 4, 1, DateTimeKind.Local).AddTicks(9455), "Таїсія Притула" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 241, new DateTime(2020, 4, 15, 17, 22, 49, 417, DateTimeKind.Local).AddTicks(2673), "Ада Унич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 240, new DateTime(2020, 10, 24, 3, 11, 49, 307, DateTimeKind.Local).AddTicks(5308), "Устина Пономарів" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 239, new DateTime(2020, 12, 20, 11, 26, 38, 339, DateTimeKind.Local).AddTicks(8082), "Іванна Зленко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 238, new DateTime(2021, 1, 15, 5, 53, 32, 486, DateTimeKind.Local).AddTicks(2800), "Катерина Громико" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 237, new DateTime(2020, 9, 12, 1, 9, 11, 51, DateTimeKind.Local).AddTicks(8846), "Пелагія Бачей" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 236, new DateTime(2020, 7, 27, 8, 36, 2, 458, DateTimeKind.Local).AddTicks(7633), "Адам Балабан" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 235, new DateTime(2020, 7, 17, 7, 0, 21, 327, DateTimeKind.Local).AddTicks(870), "Ірма Милославська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 234, new DateTime(2020, 9, 14, 16, 59, 50, 532, DateTimeKind.Local).AddTicks(7397), "Юліан Ялюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 233, new DateTime(2021, 2, 19, 22, 25, 33, 707, DateTimeKind.Local).AddTicks(4653), "Анастасія Гайдук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 232, new DateTime(2020, 9, 25, 2, 46, 51, 300, DateTimeKind.Local).AddTicks(9425), "Далемир Гордійчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 231, new DateTime(2021, 1, 10, 6, 11, 25, 278, DateTimeKind.Local).AddTicks(9986), "Тарас Силецький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 230, new DateTime(2020, 4, 5, 16, 55, 44, 839, DateTimeKind.Local).AddTicks(9311), "Агапія Дурдинець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 229, new DateTime(2020, 7, 30, 8, 14, 40, 236, DateTimeKind.Local).AddTicks(2638), "Ярина Гриневська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 228, new DateTime(2020, 5, 13, 6, 53, 4, 910, DateTimeKind.Local).AddTicks(1446), "Микита Кандиба" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 243, new DateTime(2020, 8, 18, 2, 2, 9, 259, DateTimeKind.Local).AddTicks(5387), "Братимир Роменець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 263, new DateTime(2020, 5, 17, 23, 21, 36, 990, DateTimeKind.Local).AddTicks(313), "Семибор Паращук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 244, new DateTime(2020, 8, 16, 20, 23, 17, 244, DateTimeKind.Local).AddTicks(8354), "Юліанна Шевченко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 246, new DateTime(2020, 5, 25, 7, 45, 28, 371, DateTimeKind.Local).AddTicks(9247), "Велемир Третяк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 261, new DateTime(2020, 3, 28, 3, 44, 52, 775, DateTimeKind.Local).AddTicks(1561), "Даромир Галаєнко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 260, new DateTime(2020, 12, 18, 19, 48, 41, 268, DateTimeKind.Local).AddTicks(5342), "Агрипина Паращук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 259, new DateTime(2020, 4, 21, 21, 3, 20, 203, DateTimeKind.Local).AddTicks(2210), "Божемир Маринич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 258, new DateTime(2020, 4, 23, 8, 47, 52, 248, DateTimeKind.Local).AddTicks(1968), "Валерій Бердник" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 257, new DateTime(2020, 10, 28, 10, 30, 21, 438, DateTimeKind.Local).AddTicks(6392), "Ярина Гладух" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 256, new DateTime(2020, 9, 7, 4, 45, 30, 550, DateTimeKind.Local).AddTicks(2637), "Доляна Довгалевська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 255, new DateTime(2020, 9, 19, 18, 15, 45, 421, DateTimeKind.Local).AddTicks(5501), "Аделаїда Латан" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 254, new DateTime(2021, 1, 12, 3, 17, 53, 876, DateTimeKind.Local).AddTicks(4031), "Буйтур Щербак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 253, new DateTime(2020, 9, 21, 7, 35, 40, 42, DateTimeKind.Local).AddTicks(1441), "Ярина Єрмак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 252, new DateTime(2020, 12, 28, 9, 19, 37, 999, DateTimeKind.Local).AddTicks(5572), "Марія Шамрило" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 251, new DateTime(2020, 6, 1, 11, 1, 24, 335, DateTimeKind.Local).AddTicks(3120), "Діана Прядун" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 250, new DateTime(2020, 9, 25, 8, 59, 16, 127, DateTimeKind.Local).AddTicks(738), "Родослав Андрухович" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 249, new DateTime(2020, 8, 18, 1, 21, 45, 705, DateTimeKind.Local).AddTicks(4165), "Марко Слободян" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 248, new DateTime(2020, 3, 21, 1, 6, 43, 161, DateTimeKind.Local).AddTicks(8634), "Златомир Силецький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 247, new DateTime(2020, 7, 4, 12, 7, 59, 7, DateTimeKind.Local).AddTicks(3510), "Феодосія Гриневецька" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 245, new DateTime(2020, 8, 1, 10, 3, 44, 903, DateTimeKind.Local).AddTicks(9662), "Горимир Потебенько" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 300, new DateTime(2020, 3, 19, 5, 22, 16, 249, DateTimeKind.Local).AddTicks(6318), "Святополк Брицький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 151, new DateTime(2020, 10, 10, 19, 52, 28, 865, DateTimeKind.Local).AddTicks(7431), "Біляна Милославська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 149, new DateTime(2020, 3, 26, 14, 15, 26, 397, DateTimeKind.Local).AddTicks(1761), "Матвій Волощук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 53, new DateTime(2020, 4, 26, 22, 43, 5, 286, DateTimeKind.Local).AddTicks(8915), "Антін Балабух" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 52, new DateTime(2021, 1, 27, 12, 31, 18, 393, DateTimeKind.Local).AddTicks(4892), "Звенигор Сосюра" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 51, new DateTime(2020, 7, 31, 19, 50, 30, 786, DateTimeKind.Local).AddTicks(3962), "Борис Лобачевський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 50, new DateTime(2021, 1, 1, 0, 36, 21, 909, DateTimeKind.Local).AddTicks(1119), "Добромир Лазірко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 49, new DateTime(2020, 7, 15, 23, 10, 54, 566, DateTimeKind.Local).AddTicks(4165), "Роксолана Москаль" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 48, new DateTime(2020, 9, 17, 5, 44, 49, 726, DateTimeKind.Local).AddTicks(5886), "Агапія Гарай" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 54, new DateTime(2020, 6, 4, 4, 45, 49, 551, DateTimeKind.Local).AddTicks(9097), "Вадим Дурдинець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 47, new DateTime(2020, 10, 12, 11, 42, 23, 723, DateTimeKind.Local).AddTicks(8157), "Хорив Гойко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 45, new DateTime(2021, 2, 9, 18, 4, 33, 809, DateTimeKind.Local).AddTicks(3188), "Зорина Ломова" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 44, new DateTime(2020, 11, 28, 21, 5, 39, 169, DateTimeKind.Local).AddTicks(5908), "Вадим Петрин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 43, new DateTime(2020, 6, 9, 12, 14, 20, 644, DateTimeKind.Local).AddTicks(3241), "Радимир Яворівський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 42, new DateTime(2021, 2, 4, 13, 32, 18, 304, DateTimeKind.Local).AddTicks(554), "Поліна Тиндарей" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 41, new DateTime(2021, 1, 24, 10, 1, 27, 671, DateTimeKind.Local).AddTicks(6125), "Меланія Погиба" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 40, new DateTime(2020, 11, 22, 21, 51, 11, 140, DateTimeKind.Local).AddTicks(8893), "Роксолан Коваленко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 46, new DateTime(2020, 4, 18, 12, 3, 2, 894, DateTimeKind.Local).AddTicks(2078), "Анастасія Магера" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 55, new DateTime(2020, 6, 13, 10, 39, 41, 987, DateTimeKind.Local).AddTicks(3045), "Іван Роменець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 56, new DateTime(2020, 4, 9, 1, 51, 6, 863, DateTimeKind.Local).AddTicks(2709), "Сніжан Петлюра" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 57, new DateTime(2020, 11, 30, 1, 40, 41, 929, DateTimeKind.Local).AddTicks(4925), "Антонида Яцьків" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 72, new DateTime(2020, 9, 5, 22, 4, 2, 604, DateTimeKind.Local).AddTicks(2012), "Олександра Семещук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 71, new DateTime(2020, 9, 1, 7, 26, 19, 702, DateTimeKind.Local).AddTicks(3862), "Валерія Трясун" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 70, new DateTime(2020, 10, 6, 8, 58, 39, 926, DateTimeKind.Local).AddTicks(7444), "Антонія Марків" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 69, new DateTime(2020, 5, 25, 23, 59, 28, 882, DateTimeKind.Local).AddTicks(1022), "Мілана Лазірко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 68, new DateTime(2020, 4, 21, 2, 19, 6, 118, DateTimeKind.Local).AddTicks(315), "Ганна Коломієць" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 67, new DateTime(2020, 11, 12, 12, 21, 47, 995, DateTimeKind.Local).AddTicks(654), "Златомир Галатей" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 66, new DateTime(2020, 9, 29, 22, 20, 50, 512, DateTimeKind.Local).AddTicks(5092), "Жозефіна Лахман" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 65, new DateTime(2021, 1, 13, 21, 49, 7, 219, DateTimeKind.Local).AddTicks(1140), "Віргінія Боярчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 64, new DateTime(2020, 8, 13, 12, 57, 52, 306, DateTimeKind.Local).AddTicks(6572), "Володимир Миклухо" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 63, new DateTime(2021, 2, 21, 19, 13, 29, 117, DateTimeKind.Local).AddTicks(1968), "Захарій Москаль" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 62, new DateTime(2020, 8, 4, 7, 38, 19, 587, DateTimeKind.Local).AddTicks(8372), "Денис Пагутяк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 61, new DateTime(2020, 5, 7, 2, 45, 4, 67, DateTimeKind.Local).AddTicks(1397), "Анна Боярчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 60, new DateTime(2020, 4, 8, 13, 2, 55, 932, DateTimeKind.Local).AddTicks(7077), "Алла Паламарчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 59, new DateTime(2020, 3, 20, 4, 1, 46, 615, DateTimeKind.Local).AddTicks(9974), "Ігор Яцьків" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 58, new DateTime(2020, 12, 13, 9, 22, 51, 45, DateTimeKind.Local).AddTicks(2921), "Всеслав Степанець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 39, new DateTime(2021, 1, 23, 13, 23, 22, 123, DateTimeKind.Local).AddTicks(542), "Наталія Шкараба" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 38, new DateTime(2020, 12, 2, 3, 34, 35, 421, DateTimeKind.Local).AddTicks(1615), "Стефаній Мазило" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 37, new DateTime(2020, 9, 22, 22, 13, 8, 236, DateTimeKind.Local).AddTicks(6219), "Ярополк Стоян" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 36, new DateTime(2020, 3, 14, 8, 57, 13, 976, DateTimeKind.Local).AddTicks(3046), "Палажка Бабух" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 16, new DateTime(2020, 5, 11, 18, 24, 35, 994, DateTimeKind.Local).AddTicks(6579), "Сніжан Пономарів" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 15, new DateTime(2020, 7, 4, 5, 50, 37, 982, DateTimeKind.Local).AddTicks(5323), "Азалія Сторожук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 14, new DateTime(2021, 1, 30, 20, 24, 24, 347, DateTimeKind.Local).AddTicks(4897), "Брячислав Григоришин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 13, new DateTime(2020, 4, 13, 1, 56, 17, 650, DateTimeKind.Local).AddTicks(2246), "Дарина Андрухович" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 12, new DateTime(2020, 10, 14, 0, 9, 0, 956, DateTimeKind.Local).AddTicks(5120), "Олександра Дурдинець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 11, new DateTime(2020, 10, 15, 15, 50, 17, 12, DateTimeKind.Local).AddTicks(1448), "Віталіна Бабух" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 10, new DateTime(2020, 11, 7, 8, 47, 38, 213, DateTimeKind.Local).AddTicks(3270), "Анатолій Марків" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 9, new DateTime(2020, 11, 5, 4, 52, 17, 976, DateTimeKind.Local).AddTicks(3805), "Віолетта Ємець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 8, new DateTime(2020, 3, 4, 16, 50, 41, 619, DateTimeKind.Local).AddTicks(8962), "Забава Горбач" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 7, new DateTime(2020, 7, 31, 12, 41, 55, 729, DateTimeKind.Local).AddTicks(2087), "Кузьма Потебенько" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 6, new DateTime(2020, 9, 12, 2, 58, 2, 848, DateTimeKind.Local).AddTicks(820), "Ксенія Павленко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 5, new DateTime(2020, 6, 16, 12, 6, 8, 883, DateTimeKind.Local).AddTicks(5156), "Звенислав Городоцький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 4, new DateTime(2021, 2, 27, 22, 13, 16, 415, DateTimeKind.Local).AddTicks(4298), "Любомир Паламарчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 3, new DateTime(2020, 4, 18, 19, 10, 8, 116, DateTimeKind.Local).AddTicks(4439), "Боримисл Степанець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 2, new DateTime(2020, 9, 6, 14, 25, 45, 348, DateTimeKind.Local).AddTicks(5710), "Агата Луцька" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 17, new DateTime(2020, 8, 31, 3, 5, 17, 250, DateTimeKind.Local).AddTicks(667), "Віола Поривай" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 73, new DateTime(2020, 9, 28, 8, 25, 18, 300, DateTimeKind.Local).AddTicks(5607), "Щек Коваленко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 18, new DateTime(2020, 4, 4, 3, 46, 26, 994, DateTimeKind.Local).AddTicks(532), "Назарій Башук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 20, new DateTime(2020, 11, 3, 20, 18, 34, 519, DateTimeKind.Local).AddTicks(8195), "Боримир Уманець" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 35, new DateTime(2020, 7, 18, 15, 25, 17, 692, DateTimeKind.Local).AddTicks(9626), "Синьоок Боярчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 34, new DateTime(2020, 8, 18, 20, 53, 35, 895, DateTimeKind.Local).AddTicks(5773), "Володислав Розпутній" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 33, new DateTime(2020, 3, 24, 14, 46, 14, 929, DateTimeKind.Local).AddTicks(3123), "Земислав Ганич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 32, new DateTime(2021, 2, 10, 4, 59, 20, 723, DateTimeKind.Local).AddTicks(8923), "Агапія Пригода" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 31, new DateTime(2020, 9, 1, 18, 24, 22, 29, DateTimeKind.Local).AddTicks(5127), "Віктор Латаний" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 30, new DateTime(2020, 8, 15, 1, 33, 18, 452, DateTimeKind.Local).AddTicks(3666), "Мирослав Миклухо" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 29, new DateTime(2020, 9, 30, 15, 23, 28, 402, DateTimeKind.Local).AddTicks(5522), "Гаврило Москаль" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 28, new DateTime(2020, 4, 9, 22, 52, 50, 622, DateTimeKind.Local).AddTicks(6972), "Валентина Сідлецька" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 27, new DateTime(2020, 8, 5, 14, 20, 33, 938, DateTimeKind.Local).AddTicks(1592), "Злата Левадовська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 26, new DateTime(2020, 3, 19, 8, 37, 27, 255, DateTimeKind.Local).AddTicks(4513), "Захарій Стецьків" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 25, new DateTime(2020, 6, 24, 23, 50, 35, 57, DateTimeKind.Local).AddTicks(6553), "Всеволод Зленко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 24, new DateTime(2020, 4, 27, 12, 59, 15, 668, DateTimeKind.Local).AddTicks(6914), "Боримисл Петришин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 23, new DateTime(2020, 11, 1, 14, 28, 29, 161, DateTimeKind.Local).AddTicks(9768), "Зінаїда Корнїйчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 22, new DateTime(2020, 10, 12, 15, 49, 17, 17, DateTimeKind.Local).AddTicks(3297), "Каріна Ромочко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 21, new DateTime(2020, 9, 30, 19, 21, 55, 986, DateTimeKind.Local).AddTicks(6412), "Ігор Приймак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 19, new DateTime(2020, 5, 23, 20, 8, 37, 672, DateTimeKind.Local).AddTicks(5775), "Василь Червоній" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 74, new DateTime(2020, 8, 30, 2, 58, 39, 917, DateTimeKind.Local).AddTicks(2019), "Лаврентій Лахман" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 75, new DateTime(2020, 8, 26, 6, 26, 11, 458, DateTimeKind.Local).AddTicks(2005), "Марина Балабуха" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 76, new DateTime(2020, 11, 11, 4, 8, 44, 33, DateTimeKind.Local).AddTicks(7217), "Божемир Гордійчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 129, new DateTime(2020, 5, 28, 3, 50, 13, 821, DateTimeKind.Local).AddTicks(6806), "Агнеса Поривайло" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 128, new DateTime(2020, 5, 26, 18, 55, 51, 338, DateTimeKind.Local).AddTicks(7793), "Марина Федоришина" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 127, new DateTime(2020, 8, 24, 13, 47, 34, 805, DateTimeKind.Local).AddTicks(9554), "Яромир Могилевський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 126, new DateTime(2021, 2, 26, 23, 28, 42, 705, DateTimeKind.Local).AddTicks(6153), "Оксана Карпух" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 125, new DateTime(2020, 4, 11, 5, 10, 24, 49, DateTimeKind.Local).AddTicks(3586), "Руслан Балабух" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 124, new DateTime(2020, 12, 27, 14, 25, 8, 877, DateTimeKind.Local).AddTicks(6225), "Ладо Сторчак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 123, new DateTime(2020, 10, 5, 1, 21, 51, 932, DateTimeKind.Local).AddTicks(3273), "Доброслав Шевченко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 122, new DateTime(2020, 7, 17, 15, 33, 24, 346, DateTimeKind.Local).AddTicks(1624), "Аскольд Ющик" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 121, new DateTime(2020, 7, 2, 15, 14, 2, 587, DateTimeKind.Local).AddTicks(9578), "Кузьма Василин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 120, new DateTime(2020, 7, 4, 2, 42, 1, 744, DateTimeKind.Local).AddTicks(3349), "Потап Юрчишин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 119, new DateTime(2020, 4, 6, 22, 39, 10, 973, DateTimeKind.Local).AddTicks(6054), "Костянтин Мазайло" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 118, new DateTime(2020, 9, 14, 6, 30, 49, 303, DateTimeKind.Local).AddTicks(4659), "Мечислава Третяк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 117, new DateTime(2020, 6, 16, 5, 20, 47, 878, DateTimeKind.Local).AddTicks(7864), "Олександр Скоропадський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 116, new DateTime(2021, 2, 7, 6, 27, 12, 436, DateTimeKind.Local).AddTicks(7886), "Арсеній Пендик" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 115, new DateTime(2021, 2, 4, 15, 45, 1, 991, DateTimeKind.Local).AddTicks(9055), "Аполлінарія Ногачевська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 130, new DateTime(2020, 9, 2, 5, 7, 12, 84, DateTimeKind.Local).AddTicks(4108), "Яровид Поривайло" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 114, new DateTime(2020, 7, 16, 9, 8, 38, 391, DateTimeKind.Local).AddTicks(404), "Віолетта Дзюба" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 131, new DateTime(2020, 4, 19, 14, 16, 36, 602, DateTimeKind.Local).AddTicks(6135), "Антоній Євпак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 133, new DateTime(2020, 3, 28, 19, 19, 36, 903, DateTimeKind.Local).AddTicks(8191), "Панас Мазило" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 148, new DateTime(2021, 1, 26, 2, 36, 16, 128, DateTimeKind.Local).AddTicks(6750), "Світлана Коваленко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 147, new DateTime(2020, 6, 22, 8, 11, 16, 444, DateTimeKind.Local).AddTicks(8939), "Августин Лобачевський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 146, new DateTime(2021, 1, 15, 23, 55, 32, 756, DateTimeKind.Local).AddTicks(1766), "Ратимир Андрухович" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 145, new DateTime(2020, 8, 6, 3, 55, 23, 636, DateTimeKind.Local).AddTicks(557), "Мечислав Гладківський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 144, new DateTime(2021, 2, 14, 4, 43, 8, 264, DateTimeKind.Local).AddTicks(8325), "Біломир Поліщук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 143, new DateTime(2020, 7, 10, 4, 13, 51, 724, DateTimeKind.Local).AddTicks(8269), "Злата Галаціон" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 142, new DateTime(2021, 2, 3, 23, 6, 20, 949, DateTimeKind.Local).AddTicks(4205), "Мечислава Маковецька" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 141, new DateTime(2020, 3, 9, 22, 42, 56, 311, DateTimeKind.Local).AddTicks(2998), "Артемія Кульчицька" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 140, new DateTime(2021, 1, 16, 3, 26, 27, 327, DateTimeKind.Local).AddTicks(4328), "Яромир Палій" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 139, new DateTime(2020, 6, 8, 4, 43, 14, 448, DateTimeKind.Local).AddTicks(5751), "Майя Приймак" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 138, new DateTime(2020, 6, 23, 7, 31, 4, 786, DateTimeKind.Local).AddTicks(9555), "Власта Бабух" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 137, new DateTime(2020, 11, 30, 10, 49, 12, 846, DateTimeKind.Local).AddTicks(9336), "Лад Лящук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 136, new DateTime(2020, 4, 17, 2, 37, 51, 329, DateTimeKind.Local).AddTicks(3852), "Роксолана Сердюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 135, new DateTime(2021, 2, 13, 22, 59, 13, 239, DateTimeKind.Local).AddTicks(4873), "В’ячеслава Ліхно" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 134, new DateTime(2020, 4, 27, 16, 40, 12, 190, DateTimeKind.Local).AddTicks(1172), "Квітка Городоцька" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 132, new DateTime(2021, 1, 23, 4, 31, 43, 241, DateTimeKind.Local).AddTicks(886), "Орина Данилко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 150, new DateTime(2020, 5, 13, 12, 9, 51, 440, DateTimeKind.Local).AddTicks(4839), "Христина Галаціон" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 113, new DateTime(2020, 10, 11, 16, 22, 48, 644, DateTimeKind.Local).AddTicks(4143), "Добромисла Васильківська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 111, new DateTime(2020, 4, 27, 12, 48, 2, 936, DateTimeKind.Local).AddTicks(164), "Палажка Тарасюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 91, new DateTime(2020, 4, 23, 8, 11, 54, 805, DateTimeKind.Local).AddTicks(3467), "Добромира Плаксій" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 90, new DateTime(2020, 8, 26, 21, 23, 31, 846, DateTimeKind.Local).AddTicks(6016), "Добромисл Марієвський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 89, new DateTime(2020, 9, 21, 2, 6, 31, 589, DateTimeKind.Local).AddTicks(2870), "Ангеліна Сердюк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 88, new DateTime(2020, 8, 4, 1, 5, 12, 24, DateTimeKind.Local).AddTicks(224), "Яровид Гордійчук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 87, new DateTime(2020, 10, 16, 7, 54, 23, 645, DateTimeKind.Local).AddTicks(5330), "Адам Сідляк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 86, new DateTime(2020, 10, 27, 13, 49, 2, 416, DateTimeKind.Local).AddTicks(9256), "Гордій Федоришин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 85, new DateTime(2021, 1, 23, 13, 0, 45, 135, DateTimeKind.Local).AddTicks(6123), "Роман Іванців" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 84, new DateTime(2020, 10, 9, 22, 19, 18, 520, DateTimeKind.Local).AddTicks(3439), "Зборислав Романишин" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 83, new DateTime(2021, 2, 26, 8, 30, 20, 300, DateTimeKind.Local).AddTicks(1909), "Марічка Кордун" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 82, new DateTime(2020, 6, 18, 23, 35, 33, 529, DateTimeKind.Local).AddTicks(8257), "Тимофій Забіла" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 81, new DateTime(2020, 6, 21, 12, 59, 20, 59, DateTimeKind.Local).AddTicks(8259), "Дмитро Карпух" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 80, new DateTime(2020, 4, 21, 20, 10, 37, 990, DateTimeKind.Local).AddTicks(6970), "Квітослава Бачей" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 79, new DateTime(2020, 11, 26, 13, 58, 36, 644, DateTimeKind.Local).AddTicks(2515), "Звенислав Линдик" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 78, new DateTime(2020, 10, 17, 21, 11, 3, 600, DateTimeKind.Local).AddTicks(99), "Далеслава Ковальська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 77, new DateTime(2020, 4, 20, 21, 50, 30, 94, DateTimeKind.Local).AddTicks(335), "Олександр Маковецький" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 92, new DateTime(2020, 3, 12, 1, 38, 32, 353, DateTimeKind.Local).AddTicks(8251), "Марія Гладківська" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 112, new DateTime(2020, 3, 13, 10, 16, 39, 850, DateTimeKind.Local).AddTicks(5607), "Радимир Сплюх" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 93, new DateTime(2021, 2, 22, 2, 23, 41, 976, DateTimeKind.Local).AddTicks(1352), "Яромил Гриневський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 95, new DateTime(2020, 8, 27, 16, 4, 59, 360, DateTimeKind.Local).AddTicks(5092), "Яромир Дзюба" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 110, new DateTime(2020, 9, 5, 9, 50, 21, 84, DateTimeKind.Local).AddTicks(8261), "Агата Линдик" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 109, new DateTime(2020, 5, 25, 10, 49, 9, 246, DateTimeKind.Local).AddTicks(7151), "Охрім Мотрієнко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 108, new DateTime(2021, 2, 1, 5, 9, 44, 839, DateTimeKind.Local).AddTicks(5232), "Всеволод Довгалевський" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 107, new DateTime(2020, 10, 15, 22, 30, 45, 372, DateTimeKind.Local).AddTicks(4744), "Юхима Дмитришина" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 106, new DateTime(2020, 5, 4, 23, 37, 49, 836, DateTimeKind.Local).AddTicks(3168), "Горимир Гойко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 105, new DateTime(2020, 3, 7, 2, 34, 1, 395, DateTimeKind.Local).AddTicks(2061), "Юстина Марків" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 104, new DateTime(2020, 4, 3, 4, 43, 43, 427, DateTimeKind.Local).AddTicks(4050), "Мечислав Гарай" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 103, new DateTime(2021, 2, 2, 18, 26, 33, 76, DateTimeKind.Local).AddTicks(6904), "Маркіян Кулинич" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 102, new DateTime(2020, 4, 21, 22, 36, 51, 910, DateTimeKind.Local).AddTicks(2270), "Олександр Витребенько" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 101, new DateTime(2020, 11, 16, 21, 59, 2, 845, DateTimeKind.Local).AddTicks(9019), "Любава Гришко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 100, new DateTime(2020, 12, 13, 10, 17, 35, 90, DateTimeKind.Local).AddTicks(6357), "Віргінія Ликович" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 99, new DateTime(2020, 10, 27, 3, 2, 0, 946, DateTimeKind.Local).AddTicks(4129), "Жозефіна Палій" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 98, new DateTime(2020, 10, 30, 4, 15, 32, 179, DateTimeKind.Local).AddTicks(4745), "Августин Сідляк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 97, new DateTime(2020, 3, 17, 9, 37, 0, 242, DateTimeKind.Local).AddTicks(1198), "Аделіна Лученко" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 96, new DateTime(2020, 8, 29, 23, 52, 14, 502, DateTimeKind.Local).AddTicks(6685), "Добромир Верещук" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 94, new DateTime(2021, 2, 24, 17, 16, 36, 538, DateTimeKind.Local).AddTicks(6259), "Таїсія Третяк" });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Id", "CreatedAt", "Name" },
                values: new object[] { 1, new DateTime(2021, 2, 25, 17, 39, 44, 673, DateTimeKind.Local).AddTicks(2438), "Алевтина Зінкевич" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 4, null, 1, new DateTime(2020, 8, 31, 8, 24, 42, 846, DateTimeKind.Local).AddTicks(4302), 1, "Zoremir_Demchishina@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 670, null, 1, new DateTime(2020, 9, 24, 12, 47, 43, 626, DateTimeKind.Local).AddTicks(7126), 133, "Vitalii.Mazilo99@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 596, null, 1, new DateTime(2020, 10, 9, 15, 53, 15, 799, DateTimeKind.Local).AddTicks(8064), 133, "Svyatopolk_Likovich59@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 523, null, 0, new DateTime(2020, 4, 29, 0, 21, 41, 893, DateTimeKind.Local).AddTicks(8821), 133, "(098) 013-58-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 78, null, 0, new DateTime(2020, 5, 20, 9, 50, 14, 283, DateTimeKind.Local).AddTicks(4307), 243, "(097) 866-82-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 229, null, 0, new DateTime(2020, 3, 27, 5, 43, 0, 568, DateTimeKind.Local).AddTicks(3840), 243, "(073) 686-40-17" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 293, null, 0, new DateTime(2020, 8, 8, 7, 43, 23, 657, DateTimeKind.Local).AddTicks(431), 243, "(098) 260-89-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1294, null, 0, new DateTime(2020, 8, 26, 21, 36, 55, 453, DateTimeKind.Local).AddTicks(9239), 132, "(066) 585-82-05" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 967, null, 0, new DateTime(2020, 11, 17, 18, 11, 56, 981, DateTimeKind.Local).AddTicks(7175), 132, "(097) 867-95-99" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 345, null, 0, new DateTime(2020, 4, 26, 18, 26, 20, 731, DateTimeKind.Local).AddTicks(7281), 243, "(063) 573-23-80" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 516, null, 1, new DateTime(2020, 10, 20, 16, 35, 16, 7, DateTimeKind.Local).AddTicks(3900), 243, "Vlasta_Stoyan@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 752, null, 0, new DateTime(2020, 3, 9, 23, 41, 49, 224, DateTimeKind.Local).AddTicks(4475), 133, "(092) 817-39-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1406, null, 0, new DateTime(2020, 9, 3, 2, 10, 49, 354, DateTimeKind.Local).AddTicks(5148), 131, "(091) 440-57-23" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1191, null, 1, new DateTime(2020, 10, 7, 21, 41, 34, 318, DateTimeKind.Local).AddTicks(3979), 131, "Bozhemir_Shkaraba52@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 731, null, 1, new DateTime(2020, 5, 23, 3, 28, 56, 621, DateTimeKind.Local).AddTicks(2128), 131, "Blagovista0@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 665, null, 1, new DateTime(2020, 9, 27, 14, 36, 4, 827, DateTimeKind.Local).AddTicks(7528), 131, "Agripina41@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 334, null, 0, new DateTime(2020, 5, 24, 10, 25, 56, 673, DateTimeKind.Local).AddTicks(5016), 131, "(091) 987-45-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 250, null, 1, new DateTime(2021, 1, 15, 13, 42, 23, 377, DateTimeKind.Local).AddTicks(5963), 131, "Ganna.Petrishin@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 218, null, 0, new DateTime(2021, 2, 26, 6, 12, 19, 422, DateTimeKind.Local).AddTicks(5043), 131, "(095) 325-34-44" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 101, null, 1, new DateTime(2020, 11, 13, 7, 48, 24, 383, DateTimeKind.Local).AddTicks(2362), 131, "Potishana16@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 28, null, 1, new DateTime(2021, 1, 7, 13, 27, 44, 865, DateTimeKind.Local).AddTicks(7594), 131, "Markiyan_Gaichuk77@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 735, null, 1, new DateTime(2020, 6, 20, 22, 15, 7, 431, DateTimeKind.Local).AddTicks(5469), 243, "Vilenina24@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1353, null, 1, new DateTime(2021, 1, 12, 23, 37, 42, 182, DateTimeKind.Local).AddTicks(5590), 243, "Orest.Cushko@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1393, null, 1, new DateTime(2021, 1, 2, 15, 33, 52, 327, DateTimeKind.Local).AddTicks(1830), 131, "Yaromil.Serdyuk@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 494, null, 0, new DateTime(2020, 6, 3, 3, 43, 41, 965, DateTimeKind.Local).AddTicks(5412), 130, "(050) 084-18-75" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 799, null, 0, new DateTime(2020, 7, 3, 14, 48, 56, 329, DateTimeKind.Local).AddTicks(6897), 133, "(095) 807-13-34" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1496, null, 0, new DateTime(2021, 2, 20, 11, 19, 5, 890, DateTimeKind.Local).AddTicks(4439), 133, "(092) 809-57-99" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1023, null, 1, new DateTime(2020, 6, 19, 12, 12, 24, 784, DateTimeKind.Local).AddTicks(1207), 136, "Zlatomir27@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 452, null, 0, new DateTime(2020, 8, 8, 21, 35, 4, 915, DateTimeKind.Local).AddTicks(6774), 136, "(073) 448-52-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 341, null, 0, new DateTime(2020, 8, 25, 3, 28, 47, 424, DateTimeKind.Local).AddTicks(8271), 136, "(050) 092-66-54" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 87, null, 1, new DateTime(2020, 10, 18, 10, 45, 59, 298, DateTimeKind.Local).AddTicks(2592), 136, "Vsevlad.Mazailo@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 77, null, 0, new DateTime(2020, 8, 27, 21, 23, 17, 620, DateTimeKind.Local).AddTicks(6402), 242, "(097) 129-03-63" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 305, null, 0, new DateTime(2020, 3, 24, 22, 4, 32, 592, DateTimeKind.Local).AddTicks(2997), 242, "(095) 272-21-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 339, null, 1, new DateTime(2021, 1, 8, 22, 47, 37, 933, DateTimeKind.Local).AddTicks(9659), 242, "Boris.Lyutii42@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 736, null, 0, new DateTime(2021, 2, 1, 8, 48, 52, 717, DateTimeKind.Local).AddTicks(5753), 242, "(094) 823-48-37" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1472, null, 1, new DateTime(2020, 7, 4, 9, 48, 34, 583, DateTimeKind.Local).AddTicks(747), 135, "Larisa_Mariyevska34@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1295, null, 0, new DateTime(2020, 11, 18, 10, 7, 32, 864, DateTimeKind.Local).AddTicks(2197), 135, "(096) 263-32-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1196, null, 1, new DateTime(2020, 5, 29, 13, 7, 5, 33, DateTimeKind.Local).AddTicks(9081), 133, "Kii_Shkaraba43@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1155, null, 1, new DateTime(2020, 7, 4, 9, 41, 13, 851, DateTimeKind.Local).AddTicks(9035), 135, "Oresta.Kivach@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 307, null, 1, new DateTime(2020, 9, 1, 18, 1, 49, 304, DateTimeKind.Local).AddTicks(6933), 135, "Alevtin54@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 862, null, 1, new DateTime(2020, 4, 13, 22, 26, 28, 427, DateTimeKind.Local).AddTicks(1016), 242, "Vlada_Plaksii@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 920, null, 0, new DateTime(2021, 2, 17, 17, 58, 19, 118, DateTimeKind.Local).AddTicks(8748), 242, "(097) 774-37-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1094, null, 1, new DateTime(2020, 9, 3, 11, 55, 21, 484, DateTimeKind.Local).AddTicks(3083), 242, "Lyubislava.Sayenko@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1376, null, 0, new DateTime(2020, 7, 1, 16, 41, 21, 486, DateTimeKind.Local).AddTicks(3598), 242, "(096) 389-53-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1371, null, 1, new DateTime(2020, 4, 16, 12, 0, 45, 655, DateTimeKind.Local).AddTicks(9758), 134, "Yulian_Serdyuk@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1180, null, 0, new DateTime(2020, 7, 8, 13, 45, 33, 726, DateTimeKind.Local).AddTicks(7693), 134, "(091) 438-57-03" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 706, null, 1, new DateTime(2020, 11, 1, 14, 47, 15, 210, DateTimeKind.Local).AddTicks(8539), 134, "Olelko.Openko51@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 241, null, 0, new DateTime(2020, 4, 19, 23, 27, 54, 850, DateTimeKind.Local).AddTicks(9297), 134, "(097) 760-63-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 123, null, 0, new DateTime(2020, 10, 23, 17, 10, 32, 868, DateTimeKind.Local).AddTicks(2019), 134, "(066) 094-64-83" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 445, null, 0, new DateTime(2021, 1, 29, 6, 48, 37, 936, DateTimeKind.Local).AddTicks(4209), 135, "(073) 464-90-91" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1195, null, 0, new DateTime(2020, 4, 27, 10, 47, 25, 380, DateTimeKind.Local).AddTicks(563), 136, "(091) 866-42-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 325, null, 0, new DateTime(2020, 8, 15, 2, 45, 46, 554, DateTimeKind.Local).AddTicks(8027), 130, "(073) 102-76-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 927, null, 0, new DateTime(2020, 11, 6, 6, 2, 4, 741, DateTimeKind.Local).AddTicks(4836), 244, "(063) 685-04-88" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 371, null, 1, new DateTime(2021, 1, 8, 5, 57, 3, 252, DateTimeKind.Local).AddTicks(9703), 246, "Adriana77@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1202, null, 1, new DateTime(2020, 7, 24, 20, 26, 30, 107, DateTimeKind.Local).AddTicks(5269), 126, "Vilenina_Kalach@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 512, null, 1, new DateTime(2020, 3, 9, 14, 59, 37, 546, DateTimeKind.Local).AddTicks(238), 126, "Lidiya_Korecka@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 592, null, 1, new DateTime(2020, 8, 31, 10, 23, 41, 906, DateTimeKind.Local).AddTicks(1379), 246, "Feodosiya_Kulchicka@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 893, null, 1, new DateTime(2021, 1, 17, 12, 3, 55, 279, DateTimeKind.Local).AddTicks(3713), 246, "Borimisl.Sosyura74@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1205, null, 0, new DateTime(2020, 8, 30, 7, 55, 23, 959, DateTimeKind.Local).AddTicks(5354), 246, "(097) 243-84-91" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 990, null, 0, new DateTime(2021, 1, 15, 23, 7, 2, 100, DateTimeKind.Local).AddTicks(7563), 125, "(098) 889-80-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 820, null, 1, new DateTime(2020, 8, 6, 6, 10, 58, 490, DateTimeKind.Local).AddTicks(8086), 125, "Mechislava.Borovska@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 290, null, 0, new DateTime(2020, 5, 14, 15, 32, 4, 281, DateTimeKind.Local).AddTicks(2991), 125, "(091) 260-30-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 16, null, 0, new DateTime(2020, 10, 18, 22, 37, 37, 722, DateTimeKind.Local).AddTicks(2314), 125, "(098) 790-52-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 326, null, 0, new DateTime(2020, 11, 9, 9, 57, 34, 610, DateTimeKind.Local).AddTicks(1478), 246, "(098) 048-81-16" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1213, null, 1, new DateTime(2020, 10, 23, 21, 32, 36, 896, DateTimeKind.Local).AddTicks(1123), 246, "Shek28@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1492, null, 0, new DateTime(2020, 10, 17, 4, 26, 22, 459, DateTimeKind.Local).AddTicks(5309), 246, "(066) 522-55-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1420, null, 1, new DateTime(2021, 1, 10, 10, 11, 59, 978, DateTimeKind.Local).AddTicks(4366), 123, "Yaropolk81@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1265, null, 1, new DateTime(2020, 3, 27, 2, 8, 49, 179, DateTimeKind.Local).AddTicks(2199), 123, "Albert.Stigailo87@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 973, null, 0, new DateTime(2020, 6, 30, 0, 56, 59, 309, DateTimeKind.Local).AddTicks(924), 123, "(097) 224-86-29" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 115, null, 1, new DateTime(2020, 8, 21, 11, 56, 5, 135, DateTimeKind.Local).AddTicks(6801), 123, "Virginiya44@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 106, null, 0, new DateTime(2020, 5, 1, 15, 42, 10, 905, DateTimeKind.Local).AddTicks(7067), 123, "(099) 156-01-30" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 149, null, 1, new DateTime(2020, 12, 1, 8, 21, 45, 959, DateTimeKind.Local).AddTicks(8594), 247, "Marina_Tryasun17@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1365, null, 0, new DateTime(2020, 6, 19, 2, 44, 22, 518, DateTimeKind.Local).AddTicks(220), 122, "(097) 945-96-84" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1345, null, 1, new DateTime(2020, 9, 30, 16, 13, 47, 892, DateTimeKind.Local).AddTicks(5531), 122, "Potap_Veredun47@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1273, null, 1, new DateTime(2020, 8, 18, 3, 29, 17, 107, DateTimeKind.Local).AddTicks(9110), 122, "Melaniya_Skoropadska@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1075, null, 1, new DateTime(2020, 8, 25, 17, 58, 14, 905, DateTimeKind.Local).AddTicks(7319), 124, "Zakhar_Yavorivska@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 815, null, 0, new DateTime(2020, 7, 26, 12, 0, 33, 390, DateTimeKind.Local).AddTicks(9784), 244, "(098) 152-56-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 277, null, 0, new DateTime(2021, 1, 30, 22, 10, 13, 617, DateTimeKind.Local).AddTicks(8783), 246, "(044) 692-21-03" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1108, null, 0, new DateTime(2020, 11, 14, 5, 39, 32, 73, DateTimeKind.Local).AddTicks(2521), 127, "(098) 086-79-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 947, null, 0, new DateTime(2020, 11, 2, 12, 51, 15, 317, DateTimeKind.Local).AddTicks(794), 244, "(095) 366-80-54" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1481, null, 0, new DateTime(2020, 5, 8, 15, 44, 48, 898, DateTimeKind.Local).AddTicks(6708), 129, "(091) 504-73-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1458, null, 1, new DateTime(2021, 1, 12, 13, 49, 19, 187, DateTimeKind.Local).AddTicks(378), 129, "Kupava50@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1285, null, 0, new DateTime(2020, 8, 8, 4, 20, 58, 782, DateTimeKind.Local).AddTicks(1606), 129, "(098) 128-30-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1134, null, 1, new DateTime(2020, 11, 2, 13, 25, 36, 562, DateTimeKind.Local).AddTicks(2090), 129, "Zoreslav.Pogiba96@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 760, null, 1, new DateTime(2020, 11, 6, 4, 29, 7, 796, DateTimeKind.Local).AddTicks(7868), 129, "Yaroslav_Grigorishina@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 733, null, 1, new DateTime(2020, 3, 24, 8, 16, 10, 70, DateTimeKind.Local).AddTicks(9084), 129, "Gelena0@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 608, null, 1, new DateTime(2020, 4, 29, 7, 37, 2, 727, DateTimeKind.Local).AddTicks(539), 129, "Nemir.Polishuk@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 555, null, 1, new DateTime(2020, 12, 28, 19, 45, 58, 911, DateTimeKind.Local).AddTicks(6853), 129, "Alla15@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 412, null, 1, new DateTime(2021, 1, 24, 5, 41, 38, 12, DateTimeKind.Local).AddTicks(1160), 129, "Bratoslav70@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 506, null, 0, new DateTime(2020, 8, 6, 21, 36, 30, 334, DateTimeKind.Local).AddTicks(5538), 127, "(096) 531-14-08" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 403, null, 1, new DateTime(2020, 6, 14, 11, 15, 12, 832, DateTimeKind.Local).AddTicks(4218), 245, "Yevgen.Yalovii@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 926, null, 1, new DateTime(2021, 1, 1, 6, 24, 9, 467, DateTimeKind.Local).AddTicks(6636), 245, "Grigorii.Latan7@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1431, null, 1, new DateTime(2020, 7, 19, 22, 15, 0, 499, DateTimeKind.Local).AddTicks(166), 128, "Zvenislav.Balaban16@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1272, null, 1, new DateTime(2020, 3, 20, 21, 3, 44, 591, DateTimeKind.Local).AddTicks(6394), 128, "Kharitina.Dzyuba@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 789, null, 1, new DateTime(2020, 12, 25, 14, 36, 28, 224, DateTimeKind.Local).AddTicks(472), 128, "Vasilina_Luchenko@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 725, null, 1, new DateTime(2020, 6, 5, 14, 40, 37, 954, DateTimeKind.Local).AddTicks(5548), 128, "Oleksandra.Moskalyuk46@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 712, null, 1, new DateTime(2020, 6, 17, 10, 24, 13, 378, DateTimeKind.Local).AddTicks(3323), 128, "Gradimir62@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 653, null, 1, new DateTime(2020, 3, 23, 3, 16, 13, 543, DateTimeKind.Local).AddTicks(6245), 128, "Likera_Pasichnik@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 505, null, 0, new DateTime(2020, 5, 13, 5, 25, 21, 370, DateTimeKind.Local).AddTicks(5527), 128, "(099) 207-52-71" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1312, null, 1, new DateTime(2020, 8, 30, 12, 44, 18, 451, DateTimeKind.Local).AddTicks(2272), 127, "Gavrilo.Bachei@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1170, null, 1, new DateTime(2020, 10, 31, 11, 27, 48, 842, DateTimeKind.Local).AddTicks(1365), 127, "Vlada_Yalyuk@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 404, null, 0, new DateTime(2020, 9, 25, 3, 53, 58, 593, DateTimeKind.Local).AddTicks(7585), 245, "(073) 620-26-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1223, null, 0, new DateTime(2020, 11, 22, 13, 33, 2, 213, DateTimeKind.Local).AddTicks(9844), 122, "(096) 407-30-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 524, null, 1, new DateTime(2020, 7, 1, 9, 35, 27, 903, DateTimeKind.Local).AddTicks(9454), 137, "Polina_Grishko48@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 304, null, 0, new DateTime(2020, 7, 26, 22, 29, 56, 122, DateTimeKind.Local).AddTicks(4358), 138, "(093) 652-08-86" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1038, null, 0, new DateTime(2020, 7, 13, 17, 51, 16, 206, DateTimeKind.Local).AddTicks(5184), 148, "(073) 269-24-88" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 988, null, 0, new DateTime(2020, 10, 3, 16, 16, 54, 544, DateTimeKind.Local).AddTicks(7294), 148, "(044) 284-05-45" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 783, null, 1, new DateTime(2020, 12, 1, 19, 45, 16, 116, DateTimeKind.Local).AddTicks(6035), 148, "Zinovii58@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 683, null, 1, new DateTime(2020, 7, 20, 1, 2, 39, 813, DateTimeKind.Local).AddTicks(826), 148, "Gnat_Dmitrishin@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1416, null, 0, new DateTime(2020, 12, 1, 3, 55, 18, 350, DateTimeKind.Local).AddTicks(374), 147, "(073) 185-22-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 921, null, 0, new DateTime(2020, 5, 9, 14, 46, 29, 409, DateTimeKind.Local).AddTicks(9485), 147, "(095) 653-40-64" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 678, null, 0, new DateTime(2020, 5, 4, 6, 55, 42, 470, DateTimeKind.Local).AddTicks(8000), 147, "(099) 507-16-44" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 657, null, 0, new DateTime(2021, 1, 31, 20, 22, 59, 686, DateTimeKind.Local).AddTicks(3688), 147, "(091) 913-61-44" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 565, null, 0, new DateTime(2021, 2, 5, 7, 44, 55, 158, DateTimeKind.Local).AddTicks(1603), 147, "(094) 812-78-91" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 398, null, 0, new DateTime(2020, 5, 16, 1, 36, 20, 490, DateTimeKind.Local).AddTicks(66), 147, "(066) 691-75-62" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1090, null, 0, new DateTime(2020, 10, 4, 9, 45, 10, 85, DateTimeKind.Local).AddTicks(53), 148, "(094) 213-54-24" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 10, null, 1, new DateTime(2020, 5, 29, 10, 41, 37, 278, DateTimeKind.Local).AddTicks(207), 236, "Radim67@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 718, null, 0, new DateTime(2020, 6, 27, 4, 1, 59, 910, DateTimeKind.Local).AddTicks(1133), 236, "(063) 893-34-69" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1386, null, 0, new DateTime(2020, 11, 11, 13, 17, 47, 954, DateTimeKind.Local).AddTicks(1574), 146, "(091) 067-93-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 636, null, 1, new DateTime(2020, 7, 7, 13, 37, 50, 861, DateTimeKind.Local).AddTicks(3624), 146, "Bogdan46@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 400, null, 0, new DateTime(2020, 10, 31, 6, 17, 21, 925, DateTimeKind.Local).AddTicks(5881), 146, "(066) 711-38-82" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 228, null, 1, new DateTime(2020, 8, 17, 22, 38, 38, 154, DateTimeKind.Local).AddTicks(9560), 146, "Anton_Motriyenko@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 533, null, 1, new DateTime(2020, 5, 13, 9, 10, 49, 411, DateTimeKind.Local).AddTicks(8341), 237, "Tetyana.Mazilo@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 580, null, 0, new DateTime(2020, 10, 1, 23, 50, 47, 60, DateTimeKind.Local).AddTicks(9698), 237, "(095) 846-95-90" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 646, null, 1, new DateTime(2020, 11, 30, 1, 58, 44, 316, DateTimeKind.Local).AddTicks(7694), 237, "Bozhen_Sirko18@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 609, null, 0, new DateTime(2021, 1, 6, 4, 4, 30, 970, DateTimeKind.Local).AddTicks(690), 145, "(066) 746-27-19" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 534, null, 0, new DateTime(2020, 8, 7, 23, 48, 0, 315, DateTimeKind.Local).AddTicks(2097), 145, "(091) 517-59-31" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 313, null, 1, new DateTime(2020, 4, 4, 6, 57, 57, 677, DateTimeKind.Local).AddTicks(4732), 236, "Radmila_Mariyevskii50@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 25, null, 0, new DateTime(2020, 5, 23, 10, 17, 54, 763, DateTimeKind.Local).AddTicks(821), 145, "(092) 196-72-73" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1383, null, 0, new DateTime(2020, 3, 23, 16, 8, 32, 25, DateTimeKind.Local).AddTicks(9634), 148, "(099) 252-67-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 353, null, 0, new DateTime(2020, 4, 30, 17, 28, 3, 118, DateTimeKind.Local).AddTicks(7651), 149, "(097) 127-69-36" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 95, null, 1, new DateTime(2020, 9, 6, 11, 36, 33, 96, DateTimeKind.Local).AddTicks(7574), 235, "Mikhailo.Gromiko@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1274, null, 0, new DateTime(2021, 1, 3, 4, 44, 27, 633, DateTimeKind.Local).AddTicks(6077), 151, "(044) 985-57-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 955, null, 1, new DateTime(2020, 5, 28, 0, 49, 45, 977, DateTimeKind.Local).AddTicks(6246), 151, "Zabava.Grechko97@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 923, null, 0, new DateTime(2020, 7, 15, 14, 46, 51, 182, DateTimeKind.Local).AddTicks(7625), 151, "(092) 269-14-36" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 889, null, 1, new DateTime(2020, 6, 14, 0, 40, 13, 665, DateTimeKind.Local).AddTicks(3385), 151, "Zakharii_Kivach60@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 549, null, 1, new DateTime(2020, 10, 7, 0, 43, 1, 928, DateTimeKind.Local).AddTicks(8761), 151, "Violetta55@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 361, null, 1, new DateTime(2020, 8, 31, 19, 39, 38, 244, DateTimeKind.Local).AddTicks(7337), 151, "Darina.Romei1@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 191, null, 1, new DateTime(2020, 7, 6, 10, 49, 19, 728, DateTimeKind.Local).AddTicks(805), 151, "Gennadii_Balaban@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 248, null, 1, new DateTime(2020, 9, 27, 2, 5, 34, 539, DateTimeKind.Local).AddTicks(7632), 235, "Viktor_Tarasyuk@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 366, null, 0, new DateTime(2020, 11, 21, 18, 10, 51, 374, DateTimeKind.Local).AddTicks(769), 235, "(099) 884-16-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1428, null, 1, new DateTime(2020, 12, 19, 5, 7, 14, 517, DateTimeKind.Local).AddTicks(5734), 235, "Afanasiya83@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 513, null, 1, new DateTime(2020, 12, 9, 15, 25, 21, 738, DateTimeKind.Local).AddTicks(194), 235, "Vilina.Yevpak60@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1339, null, 1, new DateTime(2020, 7, 13, 12, 8, 9, 350, DateTimeKind.Local).AddTicks(9582), 235, "Lyubislava39@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1226, null, 1, new DateTime(2020, 3, 20, 9, 23, 44, 61, DateTimeKind.Local).AddTicks(3332), 150, "Anatoliya.Gordiichuk40@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 914, null, 0, new DateTime(2020, 10, 23, 9, 19, 30, 954, DateTimeKind.Local).AddTicks(932), 150, "(092) 823-89-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 616, null, 0, new DateTime(2020, 3, 17, 23, 56, 24, 591, DateTimeKind.Local).AddTicks(3083), 150, "(093) 615-50-61" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 487, null, 1, new DateTime(2021, 2, 2, 10, 29, 46, 516, DateTimeKind.Local).AddTicks(1870), 150, "Lyudmila89@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 440, null, 0, new DateTime(2021, 2, 3, 17, 31, 11, 768, DateTimeKind.Local).AddTicks(9365), 150, "(094) 099-01-72" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1388, null, 1, new DateTime(2020, 11, 16, 1, 13, 27, 473, DateTimeKind.Local).AddTicks(1211), 235, "Mechislava76@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1334, null, 1, new DateTime(2020, 7, 21, 13, 15, 43, 791, DateTimeKind.Local).AddTicks(9809), 149, "Zhanna.Garun@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1178, null, 0, new DateTime(2020, 3, 16, 18, 21, 15, 808, DateTimeKind.Local).AddTicks(3563), 149, "(097) 673-30-02" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 658, null, 0, new DateTime(2020, 5, 5, 6, 29, 8, 9, DateTimeKind.Local).AddTicks(5039), 149, "(066) 561-41-83" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 655, null, 0, new DateTime(2020, 6, 16, 18, 49, 57, 655, DateTimeKind.Local).AddTicks(9992), 235, "(099) 709-72-17" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1282, null, 0, new DateTime(2020, 5, 12, 15, 0, 0, 374, DateTimeKind.Local).AddTicks(2793), 241, "(066) 974-32-09" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 848, null, 1, new DateTime(2020, 3, 16, 4, 37, 40, 904, DateTimeKind.Local).AddTicks(2069), 237, "Pavlina_Shkaraba49@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1400, null, 1, new DateTime(2020, 3, 23, 13, 15, 30, 751, DateTimeKind.Local).AddTicks(433), 237, "Maryan.Svidrigailo@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 694, null, 1, new DateTime(2020, 6, 20, 20, 13, 16, 794, DateTimeKind.Local).AddTicks(8030), 240, "Lyubomira32@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 969, null, 1, new DateTime(2020, 7, 8, 19, 13, 59, 403, DateTimeKind.Local).AddTicks(8641), 240, "Mokrina_Pogiba76@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1327, null, 0, new DateTime(2020, 10, 9, 0, 14, 49, 819, DateTimeKind.Local).AddTicks(3337), 140, "(093) 516-29-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1107, null, 1, new DateTime(2020, 12, 8, 11, 4, 57, 489, DateTimeKind.Local).AddTicks(4552), 140, "Darislava.Bondarenko97@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 991, null, 1, new DateTime(2020, 9, 11, 2, 48, 45, 383, DateTimeKind.Local).AddTicks(8308), 140, "Yukhimiya6@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 790, null, 0, new DateTime(2021, 2, 27, 23, 53, 13, 115, DateTimeKind.Local).AddTicks(5813), 140, "(063) 992-58-54" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 356, null, 1, new DateTime(2020, 11, 5, 20, 43, 21, 413, DateTimeKind.Local).AddTicks(3876), 140, "Oles49@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 283, null, 0, new DateTime(2020, 7, 9, 10, 11, 28, 83, DateTimeKind.Local).AddTicks(7518), 140, "(050) 411-44-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 121, null, 0, new DateTime(2020, 7, 19, 18, 20, 23, 858, DateTimeKind.Local).AddTicks(2109), 140, "(094) 838-33-21" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1152, null, 1, new DateTime(2021, 1, 10, 15, 40, 51, 280, DateTimeKind.Local).AddTicks(6190), 240, "Mikhailo.Bondarenko@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 350, null, 1, new DateTime(2020, 7, 13, 8, 25, 21, 165, DateTimeKind.Local).AddTicks(2726), 240, "Mariya65@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1127, null, 1, new DateTime(2020, 9, 11, 6, 19, 25, 697, DateTimeKind.Local).AddTicks(1938), 139, "Slavuta_Bachei@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 415, null, 0, new DateTime(2020, 9, 24, 0, 28, 7, 825, DateTimeKind.Local).AddTicks(458), 139, "(096) 102-43-17" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 164, null, 0, new DateTime(2020, 12, 23, 5, 39, 20, 630, DateTimeKind.Local).AddTicks(2330), 139, "(094) 590-97-80" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 12, null, 1, new DateTime(2020, 9, 10, 16, 19, 8, 515, DateTimeKind.Local).AddTicks(4971), 241, "Ladislav.Bambula47@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 407, null, 1, new DateTime(2021, 2, 20, 4, 28, 42, 284, DateTimeKind.Local).AddTicks(1029), 241, "Kornii0@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 663, null, 0, new DateTime(2020, 4, 17, 3, 11, 11, 0, DateTimeKind.Local).AddTicks(9680), 241, "(050) 468-02-65" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 679, null, 1, new DateTime(2020, 6, 9, 20, 49, 20, 632, DateTimeKind.Local).AddTicks(3562), 241, "Mikita_Pagutyak52@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1113, null, 0, new DateTime(2020, 12, 5, 4, 58, 0, 898, DateTimeKind.Local).AddTicks(8155), 241, "(092) 621-79-33" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1229, null, 0, new DateTime(2020, 11, 7, 19, 33, 53, 896, DateTimeKind.Local).AddTicks(8340), 241, "(097) 623-24-90" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1169, null, 1, new DateTime(2021, 1, 10, 23, 58, 49, 970, DateTimeKind.Local).AddTicks(2156), 138, "Darii_Romanishina59@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 481, null, 0, new DateTime(2020, 9, 11, 11, 27, 46, 62, DateTimeKind.Local).AddTicks(8803), 138, "(091) 483-48-88" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 810, null, 0, new DateTime(2020, 7, 16, 2, 36, 23, 329, DateTimeKind.Local).AddTicks(3147), 139, "(096) 868-61-36" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1012, null, 1, new DateTime(2020, 3, 8, 4, 42, 45, 411, DateTimeKind.Local).AddTicks(3985), 237, "Anatoliya11@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 83, null, 1, new DateTime(2020, 8, 15, 14, 19, 45, 51, DateTimeKind.Local).AddTicks(5650), 240, "Bogdana76@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 748, null, 1, new DateTime(2020, 4, 6, 3, 34, 47, 500, DateTimeKind.Local).AddTicks(894), 141, "Budimir7@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 176, null, 1, new DateTime(2020, 3, 29, 0, 43, 22, 536, DateTimeKind.Local).AddTicks(8390), 238, "Taras84@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1378, null, 0, new DateTime(2020, 12, 3, 20, 32, 1, 389, DateTimeKind.Local).AddTicks(3851), 238, "(050) 720-72-38" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1410, null, 1, new DateTime(2020, 7, 13, 13, 59, 34, 681, DateTimeKind.Local).AddTicks(8992), 144, "Lyubozar.Zvarich@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1098, null, 0, new DateTime(2020, 12, 13, 20, 9, 13, 538, DateTimeKind.Local).AddTicks(3915), 144, "(066) 456-16-27" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 863, null, 0, new DateTime(2020, 7, 20, 18, 14, 27, 839, DateTimeKind.Local).AddTicks(9972), 144, "(066) 290-11-83" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 521, null, 1, new DateTime(2020, 9, 15, 6, 28, 12, 765, DateTimeKind.Local).AddTicks(2200), 144, "Svyatoslav_Semeshuk39@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 231, null, 0, new DateTime(2020, 10, 1, 0, 23, 50, 792, DateTimeKind.Local).AddTicks(3100), 144, "(091) 269-23-97" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 181, null, 1, new DateTime(2020, 6, 16, 19, 20, 41, 953, DateTimeKind.Local).AddTicks(8859), 144, "Vseslava.Voloshuk99@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1417, null, 1, new DateTime(2020, 5, 21, 15, 57, 41, 437, DateTimeKind.Local).AddTicks(9629), 238, "Diyana7@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1488, null, 1, new DateTime(2020, 8, 20, 8, 7, 4, 960, DateTimeKind.Local).AddTicks(4427), 143, "Shastislav70@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 861, null, 0, new DateTime(2020, 8, 1, 9, 42, 44, 654, DateTimeKind.Local).AddTicks(5046), 239, "(066) 157-30-14" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1296, null, 1, new DateTime(2020, 8, 26, 11, 3, 1, 573, DateTimeKind.Local).AddTicks(5105), 143, "Valentin16@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1156, null, 0, new DateTime(2020, 10, 2, 21, 35, 56, 211, DateTimeKind.Local).AddTicks(5685), 143, "(099) 066-13-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 793, null, 1, new DateTime(2020, 5, 30, 14, 11, 44, 938, DateTimeKind.Local).AddTicks(3297), 143, "Liliya_Moskal@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 143, null, 0, new DateTime(2020, 5, 4, 19, 4, 2, 33, DateTimeKind.Local).AddTicks(3410), 143, "(092) 488-96-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 39, null, 0, new DateTime(2020, 5, 26, 16, 33, 47, 917, DateTimeKind.Local).AddTicks(8229), 143, "(096) 461-34-47" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 490, null, 1, new DateTime(2020, 8, 15, 0, 29, 6, 663, DateTimeKind.Local).AddTicks(4739), 142, "Apolloniya_Gladkivska95@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 105, null, 1, new DateTime(2021, 1, 5, 6, 14, 53, 802, DateTimeKind.Local).AddTicks(3116), 142, "Anzhela_Savicka@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 605, null, 1, new DateTime(2020, 7, 31, 19, 20, 12, 500, DateTimeKind.Local).AddTicks(5811), 239, "Zakhar_Malkovich@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1304, null, 1, new DateTime(2020, 4, 19, 19, 32, 40, 235, DateTimeKind.Local).AddTicks(4399), 141, "Mokrina_Cushko80@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1161, null, 0, new DateTime(2020, 5, 4, 1, 7, 53, 574, DateTimeKind.Local).AddTicks(4906), 141, "(073) 045-10-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1135, null, 1, new DateTime(2021, 1, 11, 13, 5, 22, 165, DateTimeKind.Local).AddTicks(4626), 141, "Olena80@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1284, null, 0, new DateTime(2021, 1, 31, 16, 5, 56, 523, DateTimeKind.Local).AddTicks(3009), 143, "(091) 971-07-38" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 538, null, 1, new DateTime(2020, 8, 3, 6, 30, 22, 158, DateTimeKind.Local).AddTicks(1475), 152, "Anzhela_Gladkivskii@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1216, null, 1, new DateTime(2020, 11, 26, 8, 23, 29, 132, DateTimeKind.Local).AddTicks(6947), 122, "Vira_Luckiv84@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 845, null, 0, new DateTime(2020, 10, 1, 9, 55, 39, 362, DateTimeKind.Local).AddTicks(535), 122, "(095) 393-56-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 435, null, 1, new DateTime(2021, 2, 13, 18, 51, 16, 314, DateTimeKind.Local).AddTicks(5596), 103, "Burevist.Galatei97@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 288, null, 0, new DateTime(2021, 1, 7, 13, 56, 8, 485, DateTimeKind.Local).AddTicks(2612), 103, "(098) 696-92-76" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 244, null, 1, new DateTime(2020, 4, 13, 6, 47, 58, 531, DateTimeKind.Local).AddTicks(4812), 210, "Rodoslav.Bashuk@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 303, null, 0, new DateTime(2020, 9, 28, 5, 2, 16, 284, DateTimeKind.Local).AddTicks(8000), 255, "(093) 081-22-22" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1149, null, 1, new DateTime(2020, 11, 2, 7, 43, 41, 118, DateTimeKind.Local).AddTicks(3596), 102, "Daromir2@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1061, null, 1, new DateTime(2020, 11, 12, 5, 37, 22, 633, DateTimeKind.Local).AddTicks(8437), 102, "Roksolan.Grechko@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 186, null, 0, new DateTime(2020, 10, 15, 15, 47, 31, 900, DateTimeKind.Local).AddTicks(9003), 102, "(073) 344-22-56" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 624, null, 0, new DateTime(2020, 3, 31, 1, 51, 49, 877, DateTimeKind.Local).AddTicks(2330), 255, "(063) 055-14-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 904, null, 0, new DateTime(2020, 10, 30, 22, 39, 7, 907, DateTimeKind.Local).AddTicks(9046), 255, "(093) 847-29-51" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1207, null, 1, new DateTime(2020, 3, 23, 5, 13, 28, 294, DateTimeKind.Local).AddTicks(8776), 255, "Lyudomila_Lazirko@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1185, null, 1, new DateTime(2020, 12, 9, 22, 34, 45, 213, DateTimeKind.Local).AddTicks(2967), 103, "Doleslava.Dmitruk76@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1290, null, 1, new DateTime(2020, 11, 28, 23, 17, 14, 535, DateTimeKind.Local).AddTicks(3868), 255, "Yukhim66@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1318, null, 0, new DateTime(2021, 2, 3, 16, 31, 35, 513, DateTimeKind.Local).AddTicks(7423), 101, "(099) 734-91-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1103, null, 0, new DateTime(2020, 8, 30, 2, 35, 28, 895, DateTimeKind.Local).AddTicks(8146), 101, "(092) 713-25-41" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 776, null, 1, new DateTime(2020, 8, 17, 10, 26, 47, 420, DateTimeKind.Local).AddTicks(8861), 101, "Snizhana.Tkachenko8@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 482, null, 0, new DateTime(2020, 5, 20, 18, 43, 26, 645, DateTimeKind.Local).AddTicks(2282), 101, "(073) 728-38-22" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 329, null, 0, new DateTime(2020, 11, 24, 4, 36, 31, 575, DateTimeKind.Local).AddTicks(4300), 101, "(091) 515-63-96" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 7, null, 1, new DateTime(2020, 11, 26, 11, 8, 42, 165, DateTimeKind.Local).AddTicks(4906), 256, "Oleg9@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 221, null, 0, new DateTime(2020, 4, 30, 0, 47, 13, 490, DateTimeKind.Local).AddTicks(8517), 256, "(099) 653-92-09" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 651, null, 0, new DateTime(2020, 8, 9, 16, 20, 20, 387, DateTimeKind.Local).AddTicks(3047), 256, "(093) 452-67-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1435, null, 1, new DateTime(2020, 11, 21, 16, 18, 18, 528, DateTimeKind.Local).AddTicks(6183), 100, "Boleslava.Yalyuk57@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1380, null, 1, new DateTime(2021, 2, 22, 19, 2, 8, 594, DateTimeKind.Local).AddTicks(9901), 100, "Kuzma.Openko38@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1464, null, 1, new DateTime(2020, 12, 20, 11, 21, 24, 123, DateTimeKind.Local).AddTicks(2034), 255, "Miroslav46@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 337, null, 1, new DateTime(2021, 2, 2, 22, 54, 17, 999, DateTimeKind.Local).AddTicks(5773), 100, "Petro_Kalach57@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 430, null, 1, new DateTime(2020, 5, 9, 3, 58, 56, 376, DateTimeKind.Local).AddTicks(9748), 104, "Borislav_Yavorivskii63@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 767, null, 1, new DateTime(2021, 1, 12, 16, 50, 15, 490, DateTimeKind.Local).AddTicks(9170), 254, "Yaroslav.Romanishina@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 486, null, 1, new DateTime(2021, 1, 11, 5, 24, 39, 233, DateTimeKind.Local).AddTicks(2104), 252, "Bozhemir_Grinevskii@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1324, null, 0, new DateTime(2020, 12, 8, 18, 32, 0, 520, DateTimeKind.Local).AddTicks(6132), 107, "(044) 006-18-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1041, null, 0, new DateTime(2020, 12, 25, 17, 29, 2, 685, DateTimeKind.Local).AddTicks(7065), 107, "(099) 354-71-04" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 114, null, 0, new DateTime(2020, 10, 12, 1, 18, 16, 679, DateTimeKind.Local).AddTicks(4187), 107, "(095) 128-11-22" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 18, null, 0, new DateTime(2020, 12, 18, 1, 12, 51, 163, DateTimeKind.Local).AddTicks(7864), 107, "(097) 154-44-75" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1021, null, 1, new DateTime(2020, 7, 29, 7, 16, 49, 747, DateTimeKind.Local).AddTicks(7270), 252, "Andrii33@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1453, null, 1, new DateTime(2020, 5, 13, 0, 18, 7, 295, DateTimeKind.Local).AddTicks(3929), 252, "Tayisiya.Kivach27@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 294, null, 1, new DateTime(2020, 8, 18, 8, 23, 24, 326, DateTimeKind.Local).AddTicks(1852), 253, "Lyubozar_Potebenko6@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 359, null, 0, new DateTime(2020, 5, 13, 21, 24, 35, 676, DateTimeKind.Local).AddTicks(697), 253, "(093) 393-67-99" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1173, null, 0, new DateTime(2020, 3, 27, 16, 0, 24, 18, DateTimeKind.Local).AddTicks(8399), 253, "(073) 816-78-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1315, null, 0, new DateTime(2021, 2, 11, 9, 33, 34, 154, DateTimeKind.Local).AddTicks(8450), 254, "(063) 958-69-30" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1454, null, 1, new DateTime(2021, 1, 21, 11, 42, 44, 972, DateTimeKind.Local).AddTicks(9953), 106, "Snizhan.Motriyenko@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 497, null, 0, new DateTime(2020, 7, 30, 1, 47, 31, 84, DateTimeKind.Local).AddTicks(2787), 106, "(099) 214-77-15" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 162, null, 0, new DateTime(2021, 2, 20, 2, 54, 6, 67, DateTimeKind.Local).AddTicks(7039), 106, "(096) 276-93-89" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 160, null, 1, new DateTime(2020, 11, 29, 22, 50, 24, 838, DateTimeKind.Local).AddTicks(3608), 106, "Mechislava94@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 51, null, 1, new DateTime(2020, 5, 10, 16, 51, 13, 708, DateTimeKind.Local).AddTicks(9185), 106, "Miloslava.Splyukha@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 372, null, 1, new DateTime(2020, 6, 16, 19, 19, 26, 253, DateTimeKind.Local).AddTicks(4667), 254, "Yaroslava15@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 492, null, 0, new DateTime(2020, 4, 29, 13, 9, 49, 285, DateTimeKind.Local).AddTicks(4278), 254, "(073) 232-90-39" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1471, null, 0, new DateTime(2021, 1, 2, 22, 19, 34, 575, DateTimeKind.Local).AddTicks(955), 105, "(073) 599-69-12" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1059, null, 0, new DateTime(2020, 6, 25, 8, 51, 36, 471, DateTimeKind.Local).AddTicks(4486), 105, "(094) 285-61-21" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 911, null, 1, new DateTime(2020, 11, 5, 1, 40, 3, 714, DateTimeKind.Local).AddTicks(817), 105, "Anastasiya57@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 858, null, 0, new DateTime(2021, 2, 3, 6, 12, 44, 719, DateTimeKind.Local).AddTicks(5293), 105, "(094) 777-54-73" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 768, null, 1, new DateTime(2020, 4, 5, 10, 49, 58, 418, DateTimeKind.Local).AddTicks(255), 106, "Darislava.Miloslavska54@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 29, null, 1, new DateTime(2020, 5, 22, 10, 58, 18, 858, DateTimeKind.Local).AddTicks(6711), 108, "Viola74@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 178, null, 1, new DateTime(2020, 4, 19, 16, 43, 49, 333, DateTimeKind.Local).AddTicks(8679), 257, "Danilo80@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 952, null, 1, new DateTime(2020, 10, 31, 4, 15, 9, 544, DateTimeKind.Local).AddTicks(1557), 99, "Feodosiya.Korecka53@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 335, null, 1, new DateTime(2020, 6, 28, 2, 26, 58, 289, DateTimeKind.Local).AddTicks(8431), 259, "Svyatopolk87@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 537, null, 1, new DateTime(2020, 7, 24, 9, 18, 24, 171, DateTimeKind.Local).AddTicks(6535), 259, "Arkadii_Mamii17@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 540, null, 0, new DateTime(2020, 12, 23, 3, 17, 16, 860, DateTimeKind.Local).AddTicks(5487), 259, "(093) 547-24-64" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 726, null, 1, new DateTime(2020, 7, 9, 1, 19, 55, 953, DateTimeKind.Local).AddTicks(2832), 259, "Nazar.Dmitrishina17@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 675, null, 1, new DateTime(2021, 2, 11, 23, 45, 33, 859, DateTimeKind.Local).AddTicks(8794), 95, "Alvina.Petrin20@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 666, null, 0, new DateTime(2020, 3, 20, 6, 16, 12, 367, DateTimeKind.Local).AddTicks(6943), 95, "(093) 480-22-50" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 585, null, 1, new DateTime(2020, 9, 8, 3, 29, 12, 350, DateTimeKind.Local).AddTicks(3299), 95, "Yulianna87@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 388, null, 0, new DateTime(2020, 4, 27, 22, 9, 6, 284, DateTimeKind.Local).AddTicks(8465), 95, "(050) 137-45-80" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 347, null, 0, new DateTime(2021, 1, 27, 17, 13, 21, 634, DateTimeKind.Local).AddTicks(5097), 95, "(091) 951-07-15" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 204, null, 0, new DateTime(2020, 3, 24, 4, 44, 30, 74, DateTimeKind.Local).AddTicks(7330), 95, "(098) 165-50-70" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 174, null, 1, new DateTime(2020, 11, 3, 17, 26, 4, 957, DateTimeKind.Local).AddTicks(1359), 96, "Viktoriya22@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 189, null, 0, new DateTime(2020, 3, 20, 17, 35, 31, 725, DateTimeKind.Local).AddTicks(733), 95, "(095) 155-39-83" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1124, null, 0, new DateTime(2020, 8, 26, 23, 37, 4, 115, DateTimeKind.Local).AddTicks(9843), 259, "(094) 122-19-69" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1132, null, 0, new DateTime(2020, 6, 1, 10, 5, 53, 151, DateTimeKind.Local).AddTicks(1518), 259, "(093) 900-67-70" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1430, null, 1, new DateTime(2021, 1, 14, 16, 50, 47, 645, DateTimeKind.Local).AddTicks(6303), 94, "Lyubov.Semenochko@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 866, null, 1, new DateTime(2020, 9, 24, 5, 50, 25, 189, DateTimeKind.Local).AddTicks(7061), 94, "Yaropolk.Plaksii87@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 321, null, 1, new DateTime(2020, 7, 27, 22, 19, 7, 939, DateTimeKind.Local).AddTicks(5125), 94, "Adriana65@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 985, null, 0, new DateTime(2020, 5, 7, 22, 22, 27, 839, DateTimeKind.Local).AddTicks(2775), 93, "(066) 030-70-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 55, null, 0, new DateTime(2020, 8, 15, 16, 11, 19, 677, DateTimeKind.Local).AddTicks(5219), 93, "(096) 885-74-83" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 15, null, 0, new DateTime(2020, 6, 12, 15, 38, 7, 259, DateTimeKind.Local).AddTicks(9067), 93, "(099) 712-72-23" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 274, null, 1, new DateTime(2020, 10, 24, 7, 49, 40, 127, DateTimeKind.Local).AddTicks(4636), 260, "Kornilii_Kulchicka57@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1105, null, 0, new DateTime(2020, 7, 17, 19, 57, 28, 291, DateTimeKind.Local).AddTicks(5299), 260, "(093) 134-99-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 185, null, 1, new DateTime(2020, 10, 15, 11, 17, 15, 503, DateTimeKind.Local).AddTicks(6257), 95, "Alevtina.Skoropadska@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 700, null, 1, new DateTime(2020, 8, 12, 6, 34, 15, 247, DateTimeKind.Local).AddTicks(4110), 257, "Ostap89@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 247, null, 1, new DateTime(2020, 4, 24, 3, 8, 37, 437, DateTimeKind.Local).AddTicks(8456), 96, "Ustina32@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 631, null, 1, new DateTime(2020, 9, 29, 5, 3, 49, 25, DateTimeKind.Local).AddTicks(6625), 96, "Valeriya.Stakhiv@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 777, null, 0, new DateTime(2020, 10, 12, 6, 6, 33, 375, DateTimeKind.Local).AddTicks(3438), 99, "(050) 333-08-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 193, null, 0, new DateTime(2020, 10, 10, 2, 26, 38, 912, DateTimeKind.Local).AddTicks(3179), 99, "(096) 878-96-38" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 131, null, 1, new DateTime(2020, 10, 29, 2, 39, 42, 435, DateTimeKind.Local).AddTicks(4011), 99, "Bogdan.Vitrebenko85@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 68, null, 1, new DateTime(2021, 1, 11, 16, 31, 45, 85, DateTimeKind.Local).AddTicks(2360), 99, "Orislava_Bricka@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 838, null, 1, new DateTime(2020, 4, 22, 11, 16, 39, 353, DateTimeKind.Local).AddTicks(7153), 257, "Volodislav.Tryasun@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 843, null, 0, new DateTime(2020, 12, 6, 2, 39, 8, 885, DateTimeKind.Local).AddTicks(2168), 257, "(092) 382-41-84" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1477, null, 0, new DateTime(2020, 3, 9, 17, 48, 28, 285, DateTimeKind.Local).AddTicks(838), 98, "(097) 310-71-29" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1259, null, 0, new DateTime(2020, 8, 26, 1, 36, 3, 38, DateTimeKind.Local).AddTicks(2049), 98, "(091) 127-77-45" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1177, null, 0, new DateTime(2021, 3, 1, 13, 54, 16, 626, DateTimeKind.Local).AddTicks(2743), 98, "(050) 100-94-75" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1174, null, 1, new DateTime(2020, 7, 15, 13, 7, 31, 194, DateTimeKind.Local).AddTicks(7958), 98, "Danilo.Luckii@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 500, null, 0, new DateTime(2020, 5, 7, 22, 36, 15, 120, DateTimeKind.Local).AddTicks(8270), 96, "(097) 911-69-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1142, null, 0, new DateTime(2020, 10, 20, 14, 19, 54, 464, DateTimeKind.Local).AddTicks(1741), 98, "(091) 711-43-44" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 258, null, 0, new DateTime(2020, 4, 18, 13, 48, 45, 553, DateTimeKind.Local).AddTicks(9771), 98, "(091) 706-06-27" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 236, null, 1, new DateTime(2020, 12, 21, 22, 9, 41, 554, DateTimeKind.Local).AddTicks(8058), 98, "Zoryan43@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 152, null, 0, new DateTime(2020, 4, 17, 19, 47, 12, 855, DateTimeKind.Local).AddTicks(5543), 258, "(094) 899-66-38" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 908, null, 1, new DateTime(2020, 4, 3, 2, 8, 54, 582, DateTimeKind.Local).AddTicks(6476), 258, "Gennadii_Gaman80@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 971, null, 1, new DateTime(2020, 8, 12, 21, 56, 24, 925, DateTimeKind.Local).AddTicks(3552), 258, "Petro66@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1473, null, 0, new DateTime(2021, 2, 10, 21, 24, 14, 234, DateTimeKind.Local).AddTicks(1170), 258, "(050) 601-84-38" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1450, null, 0, new DateTime(2020, 8, 3, 8, 38, 39, 694, DateTimeKind.Local).AddTicks(1872), 97, "(093) 003-24-08" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1343, null, 1, new DateTime(2021, 1, 13, 15, 41, 59, 1, DateTimeKind.Local).AddTicks(8621), 96, "Polina_Splyukh@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 987, null, 0, new DateTime(2020, 3, 23, 13, 58, 7, 540, DateTimeKind.Local).AddTicks(7229), 96, "(066) 519-93-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 949, null, 1, new DateTime(2020, 10, 28, 12, 9, 22, 480, DateTimeKind.Local).AddTicks(1871), 96, "Anton_Tindarei7@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 638, null, 1, new DateTime(2020, 8, 1, 20, 40, 4, 352, DateTimeKind.Local).AddTicks(2197), 98, "Nemira_Vasilkivska@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 883, null, 1, new DateTime(2020, 4, 20, 13, 52, 47, 793, DateTimeKind.Local).AddTicks(4234), 122, "Lukyan_Miloslavska91@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 86, null, 0, new DateTime(2021, 2, 3, 0, 32, 6, 675, DateTimeKind.Local).AddTicks(6083), 108, "(073) 967-35-31" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1031, null, 1, new DateTime(2020, 3, 12, 12, 3, 1, 467, DateTimeKind.Local).AddTicks(8927), 108, "Valerii.Borecka@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1261, null, 1, new DateTime(2020, 11, 6, 18, 6, 29, 832, DateTimeKind.Local).AddTicks(8317), 118, "Adriana.Potebenko33@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 976, null, 1, new DateTime(2021, 1, 9, 4, 19, 55, 538, DateTimeKind.Local).AddTicks(3389), 118, "Bronislava37@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 571, null, 1, new DateTime(2021, 2, 14, 16, 42, 44, 837, DateTimeKind.Local).AddTicks(162), 118, "Arkadiya52@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 478, null, 1, new DateTime(2020, 4, 29, 7, 40, 18, 919, DateTimeKind.Local).AddTicks(127), 118, "Miroslava_Grigorishin79@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 564, null, 1, new DateTime(2020, 9, 21, 6, 31, 6, 19, DateTimeKind.Local).AddTicks(5899), 249, "Dolyana.Petlyura42@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 864, null, 1, new DateTime(2021, 1, 12, 5, 9, 32, 947, DateTimeKind.Local).AddTicks(4862), 249, "Adam.Pavliv@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1288, null, 1, new DateTime(2020, 3, 13, 22, 59, 17, 599, DateTimeKind.Local).AddTicks(3524), 117, "Orkhip93@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1253, null, 1, new DateTime(2020, 11, 2, 16, 50, 38, 16, DateTimeKind.Local).AddTicks(9125), 117, "Dolyana61@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 785, null, 0, new DateTime(2020, 11, 5, 6, 16, 31, 658, DateTimeKind.Local).AddTicks(865), 117, "(066) 127-38-53" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 576, null, 0, new DateTime(2020, 7, 15, 14, 23, 50, 766, DateTimeKind.Local).AddTicks(9029), 117, "(044) 836-29-31" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 771, null, 1, new DateTime(2020, 12, 28, 18, 3, 7, 722, DateTimeKind.Local).AddTicks(5153), 248, "Zemislav32@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 405, null, 1, new DateTime(2021, 1, 21, 3, 34, 58, 997, DateTimeKind.Local).AddTicks(4081), 117, "Zabava3@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 263, null, 1, new DateTime(2020, 8, 1, 16, 27, 6, 438, DateTimeKind.Local).AddTicks(3059), 117, "Valerii.Karpukh@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 213, null, 0, new DateTime(2020, 12, 30, 22, 14, 32, 516, DateTimeKind.Local).AddTicks(7557), 117, "(073) 899-72-46" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1237, null, 1, new DateTime(2021, 1, 4, 22, 6, 32, 273, DateTimeKind.Local).AddTicks(8482), 249, "Lyubodar_Gladkivskii@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1320, null, 0, new DateTime(2020, 9, 6, 22, 32, 35, 340, DateTimeKind.Local).AddTicks(1525), 249, "(098) 770-18-81" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1349, null, 1, new DateTime(2020, 12, 10, 22, 30, 47, 83, DateTimeKind.Local).AddTicks(2448), 116, "Svyatoslav.Lindik@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1251, null, 0, new DateTime(2020, 4, 5, 10, 6, 28, 263, DateTimeKind.Local).AddTicks(1639), 116, "(094) 166-14-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 840, null, 0, new DateTime(2020, 3, 25, 6, 33, 10, 777, DateTimeKind.Local).AddTicks(1414), 116, "(091) 597-00-12" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 536, null, 1, new DateTime(2020, 5, 2, 5, 34, 55, 649, DateTimeKind.Local).AddTicks(7602), 116, "Bogdana_Suchak19@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1497, null, 1, new DateTime(2020, 12, 2, 4, 9, 28, 194, DateTimeKind.Local).AddTicks(69), 249, "Illya.Burmilo@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1463, null, 0, new DateTime(2021, 1, 27, 12, 29, 34, 451, DateTimeKind.Local).AddTicks(2063), 115, "(073) 936-61-97" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 392, null, 1, new DateTime(2020, 5, 2, 4, 14, 14, 795, DateTimeKind.Local).AddTicks(5770), 117, "Smiyana_Maistrenko45@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 269, null, 0, new DateTime(2020, 3, 29, 10, 13, 24, 415, DateTimeKind.Local).AddTicks(9210), 115, "(073) 948-89-33" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 393, null, 0, new DateTime(2021, 2, 2, 18, 33, 47, 758, DateTimeKind.Local).AddTicks(1992), 248, "(091) 619-82-31" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 137, null, 1, new DateTime(2020, 3, 6, 19, 42, 53, 315, DateTimeKind.Local).AddTicks(8906), 119, "Biloslav.Splyukh@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 284, null, 0, new DateTime(2021, 1, 5, 15, 31, 1, 436, DateTimeKind.Local).AddTicks(4178), 122, "(096) 779-53-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 246, null, 1, new DateTime(2020, 4, 9, 20, 17, 31, 968, DateTimeKind.Local).AddTicks(2325), 122, "Radim.Vasilkivska@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 124, null, 0, new DateTime(2021, 1, 30, 21, 26, 23, 325, DateTimeKind.Local).AddTicks(5690), 122, "(095) 457-31-22" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 27, null, 1, new DateTime(2020, 4, 20, 20, 50, 51, 59, DateTimeKind.Local).AddTicks(6788), 122, "Ustim_Usich@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 364, null, 0, new DateTime(2021, 2, 20, 9, 57, 37, 141, DateTimeKind.Local).AddTicks(6141), 247, "(098) 029-20-17" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1328, null, 1, new DateTime(2020, 6, 2, 17, 57, 56, 839, DateTimeKind.Local).AddTicks(6270), 121, "Pilip_Gordiichuk@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1074, null, 1, new DateTime(2020, 3, 24, 9, 53, 54, 125, DateTimeKind.Local).AddTicks(108), 121, "Ratimir.Gnatishin@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 165, null, 0, new DateTime(2021, 2, 25, 9, 57, 54, 906, DateTimeKind.Local).AddTicks(2646), 121, "(094) 959-00-80" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 819, null, 1, new DateTime(2020, 10, 29, 4, 5, 39, 96, DateTimeKind.Local).AddTicks(1386), 247, "Olena_Parashuk@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1137, null, 1, new DateTime(2020, 7, 4, 20, 40, 39, 475, DateTimeKind.Local).AddTicks(6604), 247, "Motrya.Miklukho@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 33, null, 0, new DateTime(2021, 2, 14, 12, 9, 54, 183, DateTimeKind.Local).AddTicks(9853), 119, "(096) 577-32-97" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1466, null, 0, new DateTime(2020, 8, 30, 2, 19, 49, 830, DateTimeKind.Local).AddTicks(4950), 247, "(094) 236-59-88" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1117, null, 0, new DateTime(2020, 10, 24, 4, 45, 53, 7, DateTimeKind.Local).AddTicks(5561), 120, "(044) 399-02-22" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 993, null, 1, new DateTime(2021, 1, 10, 4, 45, 5, 697, DateTimeKind.Local).AddTicks(1416), 120, "Dana72@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 460, null, 1, new DateTime(2020, 4, 1, 12, 48, 47, 476, DateTimeKind.Local).AddTicks(5696), 120, "Polina_Miklashevska@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 36, null, 1, new DateTime(2020, 7, 21, 14, 47, 54, 630, DateTimeKind.Local).AddTicks(5149), 120, "Vilena21@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 254, null, 1, new DateTime(2020, 3, 15, 22, 55, 38, 965, DateTimeKind.Local).AddTicks(5191), 248, "Oles_Yushuk75@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 336, null, 0, new DateTime(2020, 4, 26, 15, 20, 5, 874, DateTimeKind.Local).AddTicks(1512), 248, "(073) 742-43-19" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1326, null, 0, new DateTime(2020, 9, 13, 11, 14, 16, 968, DateTimeKind.Local).AddTicks(5242), 119, "(096) 064-49-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1199, null, 1, new DateTime(2020, 12, 1, 4, 48, 24, 881, DateTimeKind.Local).AddTicks(8985), 119, "Maryan.Luchko75@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 824, null, 0, new DateTime(2020, 4, 30, 11, 6, 0, 732, DateTimeKind.Local).AddTicks(2227), 119, "(063) 661-33-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 426, null, 0, new DateTime(2020, 11, 24, 20, 41, 29, 748, DateTimeKind.Local).AddTicks(6383), 119, "(073) 845-12-39" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1120, null, 0, new DateTime(2021, 1, 9, 11, 59, 11, 369, DateTimeKind.Local).AddTicks(9313), 120, "(095) 509-93-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 602, null, 1, new DateTime(2020, 7, 24, 9, 0, 59, 224, DateTimeKind.Local).AddTicks(8579), 108, "Mikita.Andrukhovich76@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 179, null, 0, new DateTime(2020, 12, 29, 16, 3, 23, 758, DateTimeKind.Local).AddTicks(939), 115, "(094) 275-10-61" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 48, null, 0, new DateTime(2020, 10, 11, 7, 5, 22, 563, DateTimeKind.Local).AddTicks(4761), 115, "(098) 054-38-68" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 119, null, 0, new DateTime(2020, 3, 13, 17, 9, 8, 302, DateTimeKind.Local).AddTicks(6693), 111, "(050) 402-45-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 69, null, 1, new DateTime(2020, 6, 30, 4, 46, 50, 971, DateTimeKind.Local).AddTicks(405), 111, "Afanasiya20@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 46, null, 0, new DateTime(2020, 9, 30, 0, 10, 41, 318, DateTimeKind.Local).AddTicks(883), 111, "(093) 563-13-15" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 530, null, 0, new DateTime(2020, 10, 26, 2, 11, 51, 898, DateTimeKind.Local).AddTicks(7068), 251, "(092) 172-27-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 682, null, 1, new DateTime(2021, 2, 27, 17, 17, 29, 843, DateTimeKind.Local).AddTicks(1009), 251, "Vseslav.Priimak@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 727, null, 0, new DateTime(2020, 4, 10, 16, 26, 4, 882, DateTimeKind.Local).AddTicks(1162), 251, "(098) 722-74-76" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1028, null, 1, new DateTime(2021, 1, 11, 8, 44, 12, 904, DateTimeKind.Local).AddTicks(7234), 110, "Kostyantin53@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 884, null, 0, new DateTime(2020, 10, 15, 4, 29, 9, 655, DateTimeKind.Local).AddTicks(3451), 110, "(099) 946-15-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 817, null, 0, new DateTime(2020, 10, 6, 9, 33, 52, 840, DateTimeKind.Local).AddTicks(6954), 110, "(093) 711-43-01" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 501, null, 0, new DateTime(2020, 3, 3, 20, 14, 54, 121, DateTimeKind.Local).AddTicks(5678), 110, "(050) 698-66-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 203, null, 1, new DateTime(2020, 6, 6, 19, 3, 43, 857, DateTimeKind.Local).AddTicks(1574), 111, "Ilona.Pasichnik@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 479, null, 0, new DateTime(2020, 6, 7, 3, 13, 12, 446, DateTimeKind.Local).AddTicks(9814), 110, "(066) 001-21-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1118, null, 1, new DateTime(2021, 1, 31, 6, 35, 43, 527, DateTimeKind.Local).AddTicks(1181), 251, "Kvitoslava_Kovalska@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1234, null, 0, new DateTime(2020, 10, 25, 23, 40, 22, 549, DateTimeKind.Local).AddTicks(5479), 251, "(050) 984-51-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1011, null, 1, new DateTime(2020, 12, 16, 20, 53, 42, 399, DateTimeKind.Local).AddTicks(1487), 109, "Izyaslav84@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 749, null, 0, new DateTime(2020, 7, 7, 11, 51, 11, 582, DateTimeKind.Local).AddTicks(6148), 109, "(096) 299-99-97" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 547, null, 1, new DateTime(2020, 7, 21, 0, 12, 44, 951, DateTimeKind.Local).AddTicks(259), 109, "Vyacheslava_Sidlyak31@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1367, null, 1, new DateTime(2020, 3, 28, 23, 56, 36, 502, DateTimeKind.Local).AddTicks(1801), 251, "Zborislav_Balabukha@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1414, null, 1, new DateTime(2020, 4, 30, 17, 56, 38, 80, DateTimeKind.Local).AddTicks(4665), 251, "Doleslava_Boreckii56@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1499, null, 1, new DateTime(2020, 5, 5, 18, 14, 55, 539, DateTimeKind.Local).AddTicks(1775), 251, "Malva60@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1189, null, 1, new DateTime(2020, 8, 19, 5, 28, 49, 251, DateTimeKind.Local).AddTicks(270), 108, "Denis_Miklukho29@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1168, null, 1, new DateTime(2020, 12, 12, 10, 49, 46, 450, DateTimeKind.Local).AddTicks(5948), 108, "Angelina34@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1086, null, 0, new DateTime(2020, 3, 12, 16, 42, 54, 343, DateTimeKind.Local).AddTicks(6158), 251, "(098) 876-31-10" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 113, null, 1, new DateTime(2020, 12, 24, 3, 40, 51, 431, DateTimeKind.Local).AddTicks(2020), 115, "Lyubomila_Osadko@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 242, null, 0, new DateTime(2020, 3, 10, 3, 51, 0, 526, DateTimeKind.Local).AddTicks(8185), 111, "(097) 390-03-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 950, null, 0, new DateTime(2020, 6, 12, 22, 19, 24, 6, DateTimeKind.Local).AddTicks(9285), 111, "(098) 271-44-97" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 50, null, 0, new DateTime(2020, 6, 25, 7, 28, 36, 778, DateTimeKind.Local).AddTicks(6588), 250, "(098) 795-14-12" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1402, null, 1, new DateTime(2020, 7, 17, 2, 57, 38, 31, DateTimeKind.Local).AddTicks(1023), 114, "Dobromira84@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 743, null, 0, new DateTime(2020, 6, 7, 11, 50, 3, 300, DateTimeKind.Local).AddTicks(3040), 114, "(092) 165-95-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 553, null, 1, new DateTime(2020, 5, 28, 7, 3, 27, 749, DateTimeKind.Local).AddTicks(7492), 114, "Volodislav96@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 458, null, 1, new DateTime(2020, 4, 25, 17, 48, 38, 344, DateTimeKind.Local).AddTicks(4621), 250, "Miroslav.Zabila18@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1342, null, 1, new DateTime(2020, 7, 11, 0, 8, 35, 403, DateTimeKind.Local).AddTicks(8457), 113, "Tayisiya.Goiko9@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1204, null, 1, new DateTime(2020, 8, 25, 19, 39, 47, 517, DateTimeKind.Local).AddTicks(2706), 113, "Zvenigor.Tindarei@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1024, null, 0, new DateTime(2020, 11, 27, 21, 14, 2, 142, DateTimeKind.Local).AddTicks(8983), 113, "(044) 243-98-15" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 839, null, 1, new DateTime(2020, 8, 23, 5, 53, 39, 295, DateTimeKind.Local).AddTicks(8486), 113, "Nina24@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 527, null, 0, new DateTime(2021, 3, 1, 2, 13, 52, 610, DateTimeKind.Local).AddTicks(4913), 113, "(044) 026-53-53" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 271, null, 1, new DateTime(2020, 7, 14, 7, 39, 18, 63, DateTimeKind.Local).AddTicks(7885), 111, "Adriyan_Garun@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1280, null, 0, new DateTime(2021, 1, 9, 16, 54, 55, 399, DateTimeKind.Local).AddTicks(8796), 112, "(098) 326-83-32" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 961, null, 1, new DateTime(2020, 10, 1, 1, 32, 5, 618, DateTimeKind.Local).AddTicks(2091), 112, "Ustina_Petlyura@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 899, null, 1, new DateTime(2021, 2, 13, 11, 14, 13, 548, DateTimeKind.Local).AddTicks(6925), 112, "Gradimir.Karpukh@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 656, null, 1, new DateTime(2020, 3, 21, 11, 26, 47, 857, DateTimeKind.Local).AddTicks(5072), 112, "Pelageya.Petrishina@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 450, null, 0, new DateTime(2020, 9, 24, 14, 22, 50, 737, DateTimeKind.Local).AddTicks(5121), 112, "(091) 441-42-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 97, null, 0, new DateTime(2020, 6, 18, 1, 43, 42, 571, DateTimeKind.Local).AddTicks(7257), 112, "(093) 154-87-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1190, null, 0, new DateTime(2020, 11, 19, 8, 20, 29, 517, DateTimeKind.Local).AddTicks(4805), 250, "(066) 110-85-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1194, null, 0, new DateTime(2020, 6, 18, 19, 40, 29, 211, DateTimeKind.Local).AddTicks(515), 250, "(050) 992-88-85" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1198, null, 0, new DateTime(2020, 10, 23, 9, 37, 11, 469, DateTimeKind.Local).AddTicks(3918), 250, "(094) 243-24-82" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 238, null, 0, new DateTime(2020, 12, 30, 15, 56, 58, 835, DateTimeKind.Local).AddTicks(1112), 251, "(097) 260-66-64" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1299, null, 0, new DateTime(2020, 10, 2, 15, 56, 49, 280, DateTimeKind.Local).AddTicks(136), 111, "(093) 395-33-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1179, null, 0, new DateTime(2021, 2, 6, 7, 39, 9, 580, DateTimeKind.Local).AddTicks(2171), 112, "(044) 178-66-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1245, null, 1, new DateTime(2020, 5, 13, 20, 50, 55, 526, DateTimeKind.Local).AddTicks(9167), 260, "Tur62@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 876, null, 1, new DateTime(2020, 12, 6, 19, 0, 24, 850, DateTimeKind.Local).AddTicks(3792), 152, "Sonya_Porivai@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1277, null, 0, new DateTime(2020, 8, 20, 17, 1, 25, 882, DateTimeKind.Local).AddTicks(9226), 152, "(096) 657-31-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 928, null, 1, new DateTime(2020, 3, 18, 14, 48, 53, 422, DateTimeKind.Local).AddTicks(8410), 191, "Zakhar14@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 579, null, 1, new DateTime(2020, 7, 31, 6, 27, 43, 317, DateTimeKind.Local).AddTicks(4687), 191, "Vira_Savickii@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 539, null, 1, new DateTime(2020, 4, 12, 19, 34, 59, 604, DateTimeKind.Local).AddTicks(9425), 191, "Zoryana.Negoda@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 406, null, 0, new DateTime(2020, 7, 7, 8, 54, 50, 514, DateTimeKind.Local).AddTicks(5710), 191, "(099) 565-62-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 723, null, 0, new DateTime(2021, 1, 4, 15, 22, 13, 23, DateTimeKind.Local).AddTicks(2472), 217, "(044) 179-92-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 878, null, 0, new DateTime(2021, 1, 6, 3, 43, 59, 891, DateTimeKind.Local).AddTicks(364), 217, "(097) 572-27-82" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1279, null, 0, new DateTime(2020, 9, 18, 5, 52, 6, 916, DateTimeKind.Local).AddTicks(7507), 190, "(096) 720-94-37" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 823, null, 0, new DateTime(2020, 7, 16, 10, 37, 18, 335, DateTimeKind.Local).AddTicks(6463), 190, "(093) 259-25-20" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 615, null, 0, new DateTime(2021, 2, 7, 14, 40, 29, 601, DateTimeKind.Local).AddTicks(6592), 190, "(063) 717-38-68" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 202, null, 1, new DateTime(2020, 11, 12, 18, 13, 38, 850, DateTimeKind.Local).AddTicks(1905), 190, "Kseniya_Dzyubyak@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1140, null, 1, new DateTime(2021, 1, 2, 8, 2, 49, 502, DateTimeKind.Local).AddTicks(8601), 191, "Velemir57@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 24, null, 0, new DateTime(2020, 12, 16, 0, 4, 0, 961, DateTimeKind.Local).AddTicks(6830), 190, "(050) 642-85-44" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 994, null, 0, new DateTime(2020, 3, 17, 10, 44, 38, 49, DateTimeKind.Local).AddTicks(1888), 217, "(091) 847-21-34" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1217, null, 1, new DateTime(2020, 5, 13, 3, 57, 9, 865, DateTimeKind.Local).AddTicks(8792), 217, "Timish_Boyarchuk@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1292, null, 1, new DateTime(2021, 2, 18, 23, 13, 54, 510, DateTimeKind.Local).AddTicks(1764), 217, "Ustina48@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 509, null, 0, new DateTime(2020, 3, 11, 23, 25, 15, 545, DateTimeKind.Local).AddTicks(8562), 218, "(063) 768-72-88" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 568, null, 1, new DateTime(2020, 10, 18, 4, 7, 56, 66, DateTimeKind.Local).AddTicks(426), 218, "Yaroslav_Dzyubyak@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 887, null, 1, new DateTime(2020, 7, 12, 10, 34, 0, 327, DateTimeKind.Local).AddTicks(6240), 218, "Danilo63@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 929, null, 0, new DateTime(2021, 1, 25, 10, 49, 34, 788, DateTimeKind.Local).AddTicks(9563), 189, "(050) 332-24-33" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 764, null, 1, new DateTime(2020, 5, 6, 22, 57, 11, 621, DateTimeKind.Local).AddTicks(202), 189, "Lavrin_Yackiv@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 557, null, 1, new DateTime(2020, 10, 4, 20, 25, 42, 89, DateTimeKind.Local).AddTicks(4784), 189, "Lyubomila.Rozputnii99@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 502, null, 1, new DateTime(2020, 9, 3, 4, 17, 47, 975, DateTimeKind.Local).AddTicks(4531), 189, "Mstislav_Vitryak74@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 905, null, 0, new DateTime(2020, 3, 27, 9, 4, 12, 102, DateTimeKind.Local).AddTicks(2480), 217, "(066) 992-22-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 456, null, 0, new DateTime(2020, 10, 29, 18, 53, 10, 535, DateTimeKind.Local).AddTicks(3175), 189, "(066) 568-24-20" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 707, null, 1, new DateTime(2020, 10, 24, 2, 53, 39, 903, DateTimeKind.Local).AddTicks(7919), 217, "Miroslav22@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 447, null, 1, new DateTime(2021, 2, 26, 5, 24, 18, 2, DateTimeKind.Local).AddTicks(8640), 217, "Avreliya_Vasilishina@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1145, null, 1, new DateTime(2020, 12, 24, 0, 46, 54, 565, DateTimeKind.Local).AddTicks(2057), 196, "Tur.Berdnik@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 900, null, 1, new DateTime(2020, 3, 27, 15, 10, 34, 43, DateTimeKind.Local).AddTicks(7493), 196, "Adriyan.Pryadun91@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 622, null, 1, new DateTime(2020, 8, 10, 20, 26, 43, 903, DateTimeKind.Local).AddTicks(3094), 196, "Agripina_Usich@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 314, null, 1, new DateTime(2020, 3, 23, 22, 49, 55, 265, DateTimeKind.Local).AddTicks(2677), 196, "Antonii23@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 199, null, 0, new DateTime(2020, 9, 25, 16, 54, 39, 916, DateTimeKind.Local).AddTicks(9575), 196, "(097) 465-59-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 922, null, 0, new DateTime(2020, 5, 7, 10, 54, 59, 141, DateTimeKind.Local).AddTicks(6560), 195, "(092) 641-55-61" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 60, null, 1, new DateTime(2020, 10, 27, 14, 0, 46, 612, DateTimeKind.Local).AddTicks(9707), 195, "Inna.Veredun@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1034, null, 1, new DateTime(2021, 2, 19, 3, 14, 12, 936, DateTimeKind.Local).AddTicks(1957), 216, "Nazar_Garai@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1436, null, 1, new DateTime(2020, 4, 8, 15, 6, 41, 37, DateTimeKind.Local).AddTicks(5092), 194, "Dobroslav17@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 816, null, 1, new DateTime(2020, 10, 13, 18, 52, 33, 890, DateTimeKind.Local).AddTicks(4628), 194, "Radimir_Vasilkivskii13@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 581, null, 0, new DateTime(2021, 2, 27, 3, 35, 51, 246, DateTimeKind.Local).AddTicks(3949), 217, "(044) 882-66-51" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 805, null, 1, new DateTime(2020, 10, 2, 4, 47, 38, 863, DateTimeKind.Local).AddTicks(716), 194, "Burevist11@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 5, null, 0, new DateTime(2021, 1, 14, 1, 44, 49, 569, DateTimeKind.Local).AddTicks(9362), 217, "(092) 753-06-91" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1271, null, 0, new DateTime(2020, 5, 24, 23, 35, 23, 613, DateTimeKind.Local).AddTicks(972), 193, "(091) 303-82-99" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1192, null, 1, new DateTime(2020, 6, 7, 19, 47, 55, 245, DateTimeKind.Local).AddTicks(1111), 193, "Dobromira_Kandiba37@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 849, null, 0, new DateTime(2020, 7, 4, 3, 34, 7, 838, DateTimeKind.Local).AddTicks(3946), 193, "(095) 164-15-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 701, null, 0, new DateTime(2020, 3, 22, 23, 19, 43, 777, DateTimeKind.Local).AddTicks(8365), 193, "(095) 981-40-01" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 645, null, 0, new DateTime(2020, 12, 2, 4, 20, 5, 771, DateTimeKind.Local).AddTicks(1076), 193, "(063) 672-04-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 187, null, 0, new DateTime(2020, 12, 24, 0, 19, 33, 881, DateTimeKind.Local).AddTicks(4142), 217, "(050) 501-47-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1425, null, 1, new DateTime(2020, 4, 8, 21, 36, 56, 38, DateTimeKind.Local).AddTicks(5837), 192, "Romena.Kordun18@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 320, null, 0, new DateTime(2020, 10, 2, 3, 58, 7, 345, DateTimeKind.Local).AddTicks(7098), 192, "(063) 933-30-02" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 318, null, 1, new DateTime(2020, 11, 26, 13, 1, 30, 131, DateTimeKind.Local).AddTicks(509), 217, "Varvara72@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 734, null, 0, new DateTime(2020, 8, 1, 22, 23, 28, 261, DateTimeKind.Local).AddTicks(8967), 194, "(094) 916-65-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1384, null, 0, new DateTime(2021, 1, 8, 14, 44, 28, 727, DateTimeKind.Local).AddTicks(5503), 196, "(092) 488-40-89" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 319, null, 1, new DateTime(2020, 12, 8, 13, 36, 55, 547, DateTimeKind.Local).AddTicks(4543), 189, "Boleslav.Gorbach20@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 198, null, 1, new DateTime(2021, 1, 16, 20, 41, 57, 390, DateTimeKind.Local).AddTicks(7243), 189, "Vira49@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1446, null, 0, new DateTime(2020, 12, 15, 11, 33, 28, 145, DateTimeKind.Local).AddTicks(3072), 184, "(092) 484-49-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1407, null, 1, new DateTime(2020, 4, 6, 12, 9, 39, 979, DateTimeKind.Local).AddTicks(4001), 184, "Kuzma.Vitrebenko37@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 934, null, 0, new DateTime(2020, 8, 4, 6, 45, 14, 591, DateTimeKind.Local).AddTicks(71), 184, "(096) 581-31-86" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 99, null, 0, new DateTime(2020, 6, 8, 5, 14, 20, 584, DateTimeKind.Local).AddTicks(6730), 184, "(091) 292-51-31" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 71, null, 0, new DateTime(2020, 9, 11, 17, 4, 57, 127, DateTimeKind.Local).AddTicks(3234), 184, "(093) 241-92-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 67, null, 1, new DateTime(2020, 11, 1, 17, 54, 12, 694, DateTimeKind.Local).AddTicks(9675), 184, "Fedora27@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 942, null, 0, new DateTime(2020, 10, 22, 13, 49, 59, 596, DateTimeKind.Local).AddTicks(5480), 220, "(097) 017-51-99" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1003, null, 0, new DateTime(2020, 10, 20, 3, 32, 26, 264, DateTimeKind.Local).AddTicks(9596), 220, "(095) 272-58-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1053, null, 1, new DateTime(2020, 12, 13, 7, 25, 29, 729, DateTimeKind.Local).AddTicks(798), 220, "Kupava.Romaniv@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 63, null, 1, new DateTime(2020, 8, 7, 0, 50, 6, 608, DateTimeKind.Local).AddTicks(4453), 221, "Yaroslav.Likovich28@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 761, null, 0, new DateTime(2020, 11, 15, 19, 49, 29, 852, DateTimeKind.Local).AddTicks(2308), 220, "(066) 861-75-79" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1475, null, 0, new DateTime(2020, 4, 12, 13, 52, 40, 964, DateTimeKind.Local).AddTicks(7781), 183, "(091) 871-16-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1093, null, 1, new DateTime(2020, 10, 11, 5, 16, 15, 176, DateTimeKind.Local).AddTicks(9962), 183, "Albina_Cushko@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1076, null, 0, new DateTime(2020, 4, 12, 12, 10, 24, 472, DateTimeKind.Local).AddTicks(3698), 183, "(095) 094-57-64" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 601, null, 0, new DateTime(2020, 12, 13, 12, 12, 28, 601, DateTimeKind.Local).AddTicks(3236), 183, "(093) 722-37-90" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 138, null, 1, new DateTime(2020, 3, 27, 19, 7, 32, 631, DateTimeKind.Local).AddTicks(6838), 221, "Borislav_Savickii@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 251, null, 1, new DateTime(2020, 7, 16, 9, 33, 2, 804, DateTimeKind.Local).AddTicks(3875), 221, "Alevtin15@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 349, null, 0, new DateTime(2020, 9, 28, 2, 18, 3, 203, DateTimeKind.Local).AddTicks(5626), 221, "(099) 977-41-79" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 620, null, 1, new DateTime(2021, 3, 2, 17, 56, 48, 408, DateTimeKind.Local).AddTicks(84), 182, "Lada.Pasichnik1@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 134, null, 1, new DateTime(2020, 3, 7, 12, 1, 38, 215, DateTimeKind.Local).AddTicks(2321), 182, "Kornilo.Shestak@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 58, null, 0, new DateTime(2020, 6, 11, 19, 28, 26, 577, DateTimeKind.Local).AddTicks(7901), 182, "(099) 858-43-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 617, null, 1, new DateTime(2020, 10, 22, 3, 57, 2, 633, DateTimeKind.Local).AddTicks(623), 221, "Angelina.Tretyak@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1468, null, 0, new DateTime(2020, 5, 29, 23, 12, 30, 481, DateTimeKind.Local).AddTicks(6462), 183, "(066) 495-85-41" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 252, null, 1, new DateTime(2020, 7, 22, 18, 41, 0, 130, DateTimeKind.Local).AddTicks(7302), 189, "Zhozefina.Boyarchuk@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 42, null, 0, new DateTime(2020, 8, 6, 16, 43, 25, 19, DateTimeKind.Local).AddTicks(1576), 185, "(095) 555-64-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 163, null, 0, new DateTime(2020, 8, 17, 16, 3, 36, 412, DateTimeKind.Local).AddTicks(2387), 185, "(096) 898-77-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 57, null, 1, new DateTime(2020, 6, 14, 18, 26, 41, 682, DateTimeKind.Local).AddTicks(3250), 189, "Ustim_Balakun81@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1278, null, 0, new DateTime(2020, 3, 30, 17, 13, 4, 324, DateTimeKind.Local).AddTicks(7631), 218, "(099) 567-51-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1230, null, 1, new DateTime(2020, 9, 5, 19, 23, 49, 619, DateTimeKind.Local).AddTicks(7287), 188, "Apolloniya12@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 677, null, 0, new DateTime(2020, 4, 19, 13, 49, 48, 837, DateTimeKind.Local).AddTicks(1431), 188, "(050) 170-24-44" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 577, null, 0, new DateTime(2020, 11, 2, 0, 33, 39, 315, DateTimeKind.Local).AddTicks(6792), 188, "(044) 749-05-27" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 522, null, 1, new DateTime(2020, 6, 28, 17, 2, 17, 63, DateTimeKind.Local).AddTicks(9421), 188, "Gorimir.Romochko@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 268, null, 0, new DateTime(2021, 1, 18, 16, 59, 30, 583, DateTimeKind.Local).AddTicks(5039), 219, "(091) 904-43-61" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 626, null, 0, new DateTime(2020, 3, 20, 5, 18, 57, 700, DateTimeKind.Local).AddTicks(825), 219, "(063) 958-01-04" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 937, null, 0, new DateTime(2020, 3, 24, 16, 29, 48, 600, DateTimeKind.Local).AddTicks(6000), 219, "(094) 037-61-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1000, null, 1, new DateTime(2020, 8, 28, 13, 53, 50, 230, DateTimeKind.Local).AddTicks(1389), 219, "Lesya_Shudrik73@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 129, null, 1, new DateTime(2020, 10, 5, 11, 31, 29, 418, DateTimeKind.Local).AddTicks(1603), 185, "Agniya.Kocyubinska@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1411, null, 1, new DateTime(2020, 6, 29, 23, 20, 21, 445, DateTimeKind.Local).AddTicks(8289), 187, "Andrii_Palii@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 946, null, 0, new DateTime(2020, 3, 19, 16, 34, 28, 516, DateTimeKind.Local).AddTicks(2508), 187, "(066) 217-64-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 867, null, 0, new DateTime(2021, 1, 3, 21, 41, 27, 839, DateTimeKind.Local).AddTicks(9205), 186, "(096) 879-28-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 717, null, 1, new DateTime(2020, 3, 5, 8, 42, 32, 81, DateTimeKind.Local).AddTicks(573), 186, "Vadim.Yacishina@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 316, null, 1, new DateTime(2020, 3, 29, 6, 49, 19, 367, DateTimeKind.Local).AddTicks(7778), 186, "Anatolii.Lanovii81@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 61, null, 0, new DateTime(2020, 9, 4, 12, 36, 58, 562, DateTimeKind.Local).AddTicks(6398), 186, "(091) 653-73-02" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1243, null, 1, new DateTime(2020, 3, 7, 23, 11, 10, 884, DateTimeKind.Local).AddTicks(1524), 185, "Gennadii.Yavorivska@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 591, null, 1, new DateTime(2020, 7, 8, 17, 5, 47, 951, DateTimeKind.Local).AddTicks(213), 185, "Shek_Gamula@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 552, null, 1, new DateTime(2021, 1, 22, 15, 55, 5, 301, DateTimeKind.Local).AddTicks(6260), 185, "Alevtin_Kulchicka54@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 473, null, 0, new DateTime(2020, 9, 25, 15, 33, 47, 214, DateTimeKind.Local).AddTicks(5959), 185, "(044) 940-22-08" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 245, null, 0, new DateTime(2020, 9, 27, 8, 30, 34, 809, DateTimeKind.Local).AddTicks(9476), 185, "(091) 241-18-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 957, null, 1, new DateTime(2020, 6, 16, 16, 19, 56, 458, DateTimeKind.Local).AddTicks(7729), 187, "Budimir_Kulchickii55@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 708, null, 0, new DateTime(2020, 5, 25, 20, 55, 16, 534, DateTimeKind.Local).AddTicks(8888), 221, "(093) 194-75-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1476, null, 1, new DateTime(2020, 4, 23, 17, 48, 37, 612, DateTimeKind.Local).AddTicks(3230), 215, "Zemislav.Usich@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 224, null, 1, new DateTime(2020, 9, 6, 16, 13, 50, 90, DateTimeKind.Local).AddTicks(6423), 197, "Gorimir92@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 925, null, 0, new DateTime(2020, 8, 14, 15, 12, 12, 878, DateTimeKind.Local).AddTicks(1999), 212, "(097) 200-21-03" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1115, null, 1, new DateTime(2021, 2, 23, 13, 5, 48, 184, DateTimeKind.Local).AddTicks(8712), 212, "Svyatoslav_Grineveckii@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1203, null, 1, new DateTime(2020, 11, 8, 1, 3, 33, 44, DateTimeKind.Local).AddTicks(6579), 212, "Kharitina41@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 841, null, 0, new DateTime(2020, 5, 26, 13, 39, 3, 103, DateTimeKind.Local).AddTicks(4966), 205, "(063) 478-44-09" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 834, null, 0, new DateTime(2021, 2, 21, 18, 44, 58, 312, DateTimeKind.Local).AddTicks(2031), 205, "(096) 385-12-23" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 829, null, 0, new DateTime(2020, 5, 25, 11, 56, 10, 412, DateTimeKind.Local).AddTicks(5750), 205, "(094) 736-00-14" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 740, null, 1, new DateTime(2020, 7, 24, 5, 9, 33, 118, DateTimeKind.Local).AddTicks(380), 205, "Valentina.Gorbach@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 637, null, 0, new DateTime(2021, 1, 18, 23, 43, 13, 590, DateTimeKind.Local).AddTicks(3418), 205, "(098) 411-13-72" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 464, null, 0, new DateTime(2020, 7, 14, 12, 43, 6, 85, DateTimeKind.Local).AddTicks(2534), 205, "(097) 571-31-68" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 409, null, 0, new DateTime(2020, 12, 11, 3, 29, 41, 968, DateTimeKind.Local).AddTicks(520), 205, "(096) 130-54-53" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 374, null, 0, new DateTime(2020, 4, 11, 23, 20, 14, 73, DateTimeKind.Local).AddTicks(6111), 206, "(094) 944-23-19" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 144, null, 0, new DateTime(2020, 12, 12, 8, 45, 22, 950, DateTimeKind.Local).AddTicks(2536), 205, "(044) 240-11-50" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1337, null, 0, new DateTime(2021, 1, 13, 10, 2, 52, 509, DateTimeKind.Local).AddTicks(8824), 212, "(096) 395-82-45" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 301, null, 0, new DateTime(2020, 3, 12, 9, 51, 47, 330, DateTimeKind.Local).AddTicks(1870), 213, "(050) 478-53-62" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1485, null, 1, new DateTime(2020, 11, 4, 4, 23, 37, 969, DateTimeKind.Local).AddTicks(6898), 204, "Avreliya.Yevenko@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1415, null, 0, new DateTime(2021, 1, 26, 23, 2, 42, 188, DateTimeKind.Local).AddTicks(4013), 204, "(096) 464-23-23" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1246, null, 0, new DateTime(2020, 4, 10, 8, 38, 7, 278, DateTimeKind.Local).AddTicks(8062), 204, "(063) 449-03-64" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 956, null, 1, new DateTime(2020, 5, 2, 3, 32, 44, 618, DateTimeKind.Local).AddTicks(5006), 204, "Yukhim_Yalovii@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 859, null, 0, new DateTime(2020, 11, 26, 21, 27, 11, 448, DateTimeKind.Local).AddTicks(6334), 204, "(092) 202-34-84" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 713, null, 0, new DateTime(2020, 10, 22, 16, 50, 45, 183, DateTimeKind.Local).AddTicks(3974), 204, "(091) 545-02-05" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 278, null, 0, new DateTime(2020, 10, 7, 19, 21, 29, 812, DateTimeKind.Local).AddTicks(6003), 204, "(073) 240-57-84" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 413, null, 1, new DateTime(2020, 9, 29, 19, 2, 57, 633, DateTimeKind.Local).AddTicks(8393), 213, "Kseniya7@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1220, null, 1, new DateTime(2020, 11, 17, 21, 29, 40, 72, DateTimeKind.Local).AddTicks(5428), 212, "Semibor86@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 442, null, 0, new DateTime(2020, 5, 22, 6, 40, 48, 614, DateTimeKind.Local).AddTicks(8299), 213, "(091) 590-16-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 902, null, 0, new DateTime(2020, 11, 18, 2, 54, 56, 296, DateTimeKind.Local).AddTicks(5443), 206, "(066) 094-65-99" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 47, null, 0, new DateTime(2020, 8, 19, 7, 12, 11, 125, DateTimeKind.Local).AddTicks(9719), 207, "(050) 846-99-33" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 299, null, 1, new DateTime(2020, 11, 10, 5, 4, 37, 376, DateTimeKind.Local).AddTicks(7090), 210, "Albert36@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 373, null, 0, new DateTime(2020, 5, 28, 22, 7, 43, 547, DateTimeKind.Local).AddTicks(8567), 210, "(091) 859-98-31" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1401, null, 0, new DateTime(2020, 8, 20, 10, 22, 20, 970, DateTimeKind.Local).AddTicks(9519), 209, "(092) 873-99-88" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1257, null, 0, new DateTime(2020, 9, 29, 17, 11, 59, 314, DateTimeKind.Local).AddTicks(8753), 209, "(066) 366-36-51" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1181, null, 1, new DateTime(2020, 12, 11, 14, 54, 34, 465, DateTimeKind.Local).AddTicks(495), 209, "Potishana_Gaiduk@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1111, null, 0, new DateTime(2020, 10, 8, 13, 48, 55, 156, DateTimeKind.Local).AddTicks(1789), 209, "(098) 858-71-65" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 433, null, 1, new DateTime(2021, 2, 20, 11, 26, 4, 335, DateTimeKind.Local).AddTicks(1409), 209, "Mikita.Latanii@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 173, null, 0, new DateTime(2020, 5, 3, 0, 4, 17, 482, DateTimeKind.Local).AddTicks(3469), 209, "(093) 274-63-03" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 472, null, 0, new DateTime(2020, 12, 14, 21, 5, 36, 688, DateTimeKind.Local).AddTicks(5851), 210, "(093) 503-10-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 826, null, 1, new DateTime(2020, 9, 1, 20, 27, 30, 463, DateTimeKind.Local).AddTicks(6979), 210, "Irma_Pogiba@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1448, null, 0, new DateTime(2020, 6, 26, 15, 3, 39, 787, DateTimeKind.Local).AddTicks(6009), 206, "(066) 330-45-21" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1300, null, 0, new DateTime(2020, 3, 17, 9, 18, 44, 831, DateTimeKind.Local).AddTicks(3249), 208, "(097) 422-44-82" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 773, null, 1, new DateTime(2020, 10, 6, 10, 59, 3, 972, DateTimeKind.Local).AddTicks(8230), 208, "Marichka.Lyuta49@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 690, null, 0, new DateTime(2020, 12, 21, 5, 15, 17, 877, DateTimeKind.Local).AddTicks(2537), 208, "(044) 256-47-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 594, null, 0, new DateTime(2021, 1, 11, 10, 24, 8, 664, DateTimeKind.Local).AddTicks(3673), 208, "(050) 134-27-19" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 267, null, 0, new DateTime(2020, 10, 14, 1, 1, 20, 638, DateTimeKind.Local).AddTicks(899), 208, "(097) 069-94-82" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 239, null, 0, new DateTime(2020, 5, 16, 17, 36, 48, 191, DateTimeKind.Local).AddTicks(5270), 208, "(044) 530-35-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 159, null, 1, new DateTime(2020, 4, 5, 6, 15, 58, 274, DateTimeKind.Local).AddTicks(6527), 208, "Gennadii.Garun@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 156, null, 1, new DateTime(2020, 11, 1, 2, 14, 10, 919, DateTimeKind.Local).AddTicks(3950), 211, "Nataliya_Parashuk63@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 954, null, 1, new DateTime(2020, 3, 11, 10, 10, 34, 883, DateTimeKind.Local).AddTicks(667), 211, "Milana_Levadovska@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 604, null, 0, new DateTime(2020, 4, 23, 13, 36, 23, 353, DateTimeKind.Local).AddTicks(8816), 207, "(094) 195-41-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 150, null, 1, new DateTime(2020, 3, 13, 20, 52, 42, 710, DateTimeKind.Local).AddTicks(7092), 207, "Ilona.Romei@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 986, null, 0, new DateTime(2020, 5, 18, 9, 56, 32, 646, DateTimeKind.Local).AddTicks(2075), 208, "(050) 629-42-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1377, null, 1, new DateTime(2020, 12, 1, 0, 15, 54, 866, DateTimeKind.Local).AddTicks(1468), 215, "Avgustin.Boreckii21@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 634, null, 1, new DateTime(2020, 12, 4, 10, 4, 41, 492, DateTimeKind.Local).AddTicks(7711), 213, "Vilenina21@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1247, null, 1, new DateTime(2020, 12, 3, 10, 42, 48, 477, DateTimeKind.Local).AddTicks(6657), 203, "Panas_Borecka@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 854, null, 1, new DateTime(2020, 5, 20, 1, 19, 42, 33, DateTimeKind.Local).AddTicks(4444), 214, "Irina.Bricka61@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1322, null, 0, new DateTime(2020, 8, 16, 12, 43, 45, 803, DateTimeKind.Local).AddTicks(256), 199, "(097) 526-91-89" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1301, null, 1, new DateTime(2020, 12, 24, 4, 10, 38, 805, DateTimeKind.Local).AddTicks(9000), 199, "Miloslava.Kocyubinskii80@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1073, null, 0, new DateTime(2020, 3, 10, 12, 32, 40, 19, DateTimeKind.Local).AddTicks(3495), 199, "(094) 657-99-22" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 995, null, 0, new DateTime(2021, 1, 21, 2, 2, 40, 870, DateTimeKind.Local).AddTicks(4240), 199, "(099) 739-65-63" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 455, null, 1, new DateTime(2020, 5, 20, 20, 6, 55, 980, DateTimeKind.Local).AddTicks(3875), 199, "Antonida_Romenec@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 917, null, 1, new DateTime(2020, 8, 21, 21, 53, 6, 667, DateTimeKind.Local).AddTicks(8771), 214, "Panas.Splyukh@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1489, null, 1, new DateTime(2020, 11, 25, 19, 30, 27, 247, DateTimeKind.Local).AddTicks(8700), 198, "Innesa55@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1469, null, 1, new DateTime(2020, 6, 23, 7, 10, 37, 854, DateTimeKind.Local).AddTicks(8106), 198, "Garnoslav.Balakun18@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1360, null, 0, new DateTime(2020, 5, 6, 22, 22, 3, 447, DateTimeKind.Local).AddTicks(4860), 198, "(050) 335-51-56" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 227, null, 1, new DateTime(2020, 7, 13, 0, 11, 17, 862, DateTimeKind.Local).AddTicks(3514), 214, "Daleslava0@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 966, null, 1, new DateTime(2020, 8, 4, 5, 7, 51, 450, DateTimeKind.Local).AddTicks(9050), 198, "Kornilii53@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 593, null, 0, new DateTime(2020, 5, 11, 17, 40, 48, 151, DateTimeKind.Local).AddTicks(3169), 198, "(050) 669-55-09" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 391, null, 1, new DateTime(2020, 11, 10, 13, 55, 16, 893, DateTimeKind.Local).AddTicks(9982), 198, "Vita58@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 111, null, 0, new DateTime(2020, 4, 14, 11, 26, 35, 398, DateTimeKind.Local).AddTicks(2460), 198, "(097) 941-04-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 498, null, 1, new DateTime(2020, 10, 2, 18, 32, 27, 628, DateTimeKind.Local).AddTicks(9949), 215, "Dobromila.Stigailo@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 699, null, 1, new DateTime(2020, 9, 7, 9, 41, 31, 872, DateTimeKind.Local).AddTicks(3600), 215, "Bilyana.Negoda50@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 796, null, 0, new DateTime(2020, 4, 12, 0, 2, 24, 244, DateTimeKind.Local).AddTicks(7551), 215, "(092) 155-50-20" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1130, null, 1, new DateTime(2021, 2, 2, 10, 37, 33, 756, DateTimeKind.Local).AddTicks(1200), 215, "Miron_Golovec24@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1165, null, 0, new DateTime(2020, 6, 29, 11, 4, 24, 275, DateTimeKind.Local).AddTicks(9122), 215, "(091) 438-58-33" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 693, null, 1, new DateTime(2020, 6, 26, 15, 43, 16, 418, DateTimeKind.Local).AddTicks(2834), 197, "Olena_Yavorivskii@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 376, null, 0, new DateTime(2021, 1, 18, 5, 32, 23, 18, DateTimeKind.Local).AddTicks(8219), 197, "(098) 453-10-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 660, null, 1, new DateTime(2020, 4, 12, 8, 26, 39, 62, DateTimeKind.Local).AddTicks(6409), 198, "Rostislava9@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1258, null, 1, new DateTime(2020, 8, 25, 5, 12, 48, 537, DateTimeKind.Local).AddTicks(2431), 203, "Mstislava.Galatei@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 13, null, 0, new DateTime(2020, 10, 17, 10, 22, 58, 970, DateTimeKind.Local).AddTicks(87), 214, "(050) 025-61-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 172, null, 0, new DateTime(2021, 2, 20, 3, 5, 18, 292, DateTimeKind.Local).AddTicks(6382), 200, "(098) 197-22-27" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1176, null, 1, new DateTime(2020, 7, 29, 22, 6, 23, 282, DateTimeKind.Local).AddTicks(2585), 203, "Nazarii_Semeshuk@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 935, null, 1, new DateTime(2020, 6, 30, 23, 38, 52, 783, DateTimeKind.Local).AddTicks(5911), 203, "Yulian.Potebenko@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 924, null, 0, new DateTime(2020, 6, 8, 20, 26, 16, 796, DateTimeKind.Local).AddTicks(4715), 203, "(044) 655-17-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 613, null, 0, new DateTime(2020, 10, 25, 12, 7, 13, 770, DateTimeKind.Local).AddTicks(8138), 203, "(093) 673-24-54" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 182, null, 1, new DateTime(2020, 3, 4, 23, 46, 25, 420, DateTimeKind.Local).AddTicks(9547), 203, "Zoreslav61@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 161, null, 0, new DateTime(2020, 5, 13, 1, 43, 5, 378, DateTimeKind.Local).AddTicks(9177), 203, "(044) 332-23-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 814, null, 0, new DateTime(2021, 1, 6, 5, 46, 22, 41, DateTimeKind.Local).AddTicks(2852), 213, "(095) 215-05-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 888, null, 0, new DateTime(2020, 9, 3, 15, 10, 31, 68, DateTimeKind.Local).AddTicks(8322), 213, "(093) 532-13-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1079, null, 1, new DateTime(2020, 9, 28, 6, 21, 35, 82, DateTimeKind.Local).AddTicks(8639), 213, "Ivanna.Danilishina@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1275, null, 1, new DateTime(2021, 1, 16, 12, 17, 47, 542, DateTimeKind.Local).AddTicks(5802), 213, "Tikhon_Pendik68@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 72, null, 1, new DateTime(2021, 3, 2, 8, 20, 8, 280, DateTimeKind.Local).AddTicks(8493), 200, "Anna32@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1068, null, 0, new DateTime(2020, 12, 15, 16, 17, 44, 321, DateTimeKind.Local).AddTicks(8639), 202, "(098) 105-43-84" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1008, null, 0, new DateTime(2021, 2, 11, 17, 18, 9, 178, DateTimeKind.Local).AddTicks(6312), 202, "(066) 387-73-38" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 822, null, 0, new DateTime(2020, 4, 10, 2, 28, 41, 947, DateTimeKind.Local).AddTicks(243), 202, "(097) 488-76-46" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 441, null, 0, new DateTime(2020, 10, 13, 17, 20, 52, 675, DateTimeKind.Local).AddTicks(3758), 202, "(044) 007-90-29" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 188, null, 0, new DateTime(2020, 7, 2, 4, 28, 35, 556, DateTimeKind.Local).AddTicks(5661), 202, "(099) 112-68-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 112, null, 0, new DateTime(2020, 11, 16, 21, 1, 0, 350, DateTimeKind.Local).AddTicks(2518), 202, "(050) 242-59-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 730, null, 1, new DateTime(2020, 4, 16, 1, 58, 58, 499, DateTimeKind.Local).AddTicks(7673), 201, "Khristina59@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1412, null, 1, new DateTime(2020, 4, 16, 2, 8, 59, 183, DateTimeKind.Local).AddTicks(3588), 200, "Feodosiya.Troyan@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1056, null, 1, new DateTime(2020, 6, 15, 23, 3, 48, 301, DateTimeKind.Local).AddTicks(9291), 200, "Rodoslav_Kocyubinska11@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 695, null, 1, new DateTime(2020, 5, 24, 3, 52, 36, 143, DateTimeKind.Local).AddTicks(2671), 200, "Galina_Gorbach@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 650, null, 1, new DateTime(2020, 8, 7, 6, 28, 59, 755, DateTimeKind.Local).AddTicks(5082), 200, "Ustim_Pendik@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1065, null, 1, new DateTime(2021, 2, 28, 1, 16, 30, 719, DateTimeKind.Local).AddTicks(3227), 202, "Pavlo_Boyarchuk@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 936, null, 0, new DateTime(2020, 3, 10, 9, 12, 59, 977, DateTimeKind.Local).AddTicks(2188), 152, "(063) 339-99-08" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 709, null, 0, new DateTime(2020, 5, 25, 5, 34, 3, 880, DateTimeKind.Local).AddTicks(9399), 221, "(099) 839-34-83" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 680, null, 1, new DateTime(2020, 4, 1, 8, 59, 24, 225, DateTimeKind.Local).AddTicks(8123), 222, "Yaromir_Palamarchuk@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 916, null, 0, new DateTime(2021, 2, 4, 9, 26, 50, 956, DateTimeKind.Local).AddTicks(6246), 162, "(095) 716-44-73" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 170, null, 1, new DateTime(2021, 1, 16, 20, 19, 45, 408, DateTimeKind.Local).AddTicks(4235), 162, "Oksana.Shumilo17@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 140, null, 0, new DateTime(2020, 9, 19, 18, 55, 33, 384, DateTimeKind.Local).AddTicks(6635), 162, "(094) 217-08-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 721, null, 1, new DateTime(2020, 5, 17, 12, 47, 25, 540, DateTimeKind.Local).AddTicks(715), 231, "Mechislava_Tkachenko@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1097, null, 1, new DateTime(2020, 5, 8, 1, 2, 3, 740, DateTimeKind.Local).AddTicks(4126), 231, "Olga.Pavlenko84@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1392, null, 1, new DateTime(2020, 4, 1, 16, 5, 40, 848, DateTimeKind.Local).AddTicks(1851), 161, "Vitalii21@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1321, null, 0, new DateTime(2021, 1, 15, 7, 54, 16, 349, DateTimeKind.Local).AddTicks(876), 161, "(094) 851-19-46" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1123, null, 1, new DateTime(2020, 7, 18, 3, 30, 31, 326, DateTimeKind.Local).AddTicks(4695), 161, "Daleslava.Balakun@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 545, null, 0, new DateTime(2020, 11, 7, 1, 43, 46, 503, DateTimeKind.Local).AddTicks(8507), 161, "(092) 167-68-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 489, null, 1, new DateTime(2020, 8, 26, 19, 50, 56, 582, DateTimeKind.Local).AddTicks(4326), 161, "Melaniya20@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 619, null, 0, new DateTime(2020, 7, 18, 16, 23, 26, 263, DateTimeKind.Local).AddTicks(7334), 231, "(066) 674-38-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 266, null, 1, new DateTime(2020, 10, 1, 8, 2, 21, 774, DateTimeKind.Local).AddTicks(9022), 161, "Bozhen_Storchak52@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1150, null, 0, new DateTime(2020, 11, 9, 0, 2, 13, 241, DateTimeKind.Local).AddTicks(141), 231, "(091) 981-05-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1348, null, 1, new DateTime(2020, 8, 31, 1, 20, 34, 570, DateTimeKind.Local).AddTicks(6906), 231, "Grigorii85@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1361, null, 0, new DateTime(2020, 12, 12, 17, 15, 15, 783, DateTimeKind.Local).AddTicks(8993), 231, "(094) 778-75-02" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 261, null, 0, new DateTime(2020, 3, 4, 4, 9, 25, 272, DateTimeKind.Local).AddTicks(5992), 232, "(050) 560-80-18" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1363, null, 1, new DateTime(2020, 8, 24, 2, 31, 13, 818, DateTimeKind.Local).AddTicks(1141), 160, "Oriyana_Kalach83@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 918, null, 1, new DateTime(2020, 10, 3, 12, 10, 44, 41, DateTimeKind.Local).AddTicks(4273), 160, "Panas29@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 696, null, 1, new DateTime(2020, 6, 19, 18, 23, 56, 931, DateTimeKind.Local).AddTicks(4638), 160, "Smiyana74@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 541, null, 1, new DateTime(2020, 3, 26, 17, 55, 23, 69, DateTimeKind.Local).AddTicks(6363), 160, "Bratomil59@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 402, null, 1, new DateTime(2020, 8, 24, 12, 25, 58, 341, DateTimeKind.Local).AddTicks(3923), 160, "Bratimir18@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 130, null, 0, new DateTime(2020, 9, 24, 10, 3, 10, 364, DateTimeKind.Local).AddTicks(3117), 160, "(097) 610-65-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 127, null, 1, new DateTime(2020, 9, 3, 0, 45, 20, 62, DateTimeKind.Local).AddTicks(8936), 161, "Dalemir_Kivach@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 93, null, 1, new DateTime(2020, 3, 8, 4, 24, 18, 442, DateTimeKind.Local).AddTicks(9528), 160, "Avrelii51@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 470, null, 1, new DateTime(2020, 3, 28, 17, 14, 44, 525, DateTimeKind.Local).AddTicks(8016), 231, "Sofiya.Suchak29@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 847, null, 0, new DateTime(2021, 1, 15, 7, 55, 36, 937, DateTimeKind.Local).AddTicks(7609), 163, "(098) 589-61-08" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 941, null, 0, new DateTime(2020, 5, 7, 4, 40, 10, 931, DateTimeKind.Local).AddTicks(6069), 166, "(091) 568-62-66" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 298, null, 0, new DateTime(2020, 4, 29, 3, 54, 26, 631, DateTimeKind.Local).AddTicks(6891), 166, "(050) 759-07-39" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 52, null, 1, new DateTime(2020, 4, 14, 21, 32, 27, 849, DateTimeKind.Local).AddTicks(6342), 166, "Arkhip0@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 422, null, 1, new DateTime(2021, 1, 27, 2, 8, 16, 126, DateTimeKind.Local).AddTicks(6410), 229, "Yarina78@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1136, null, 1, new DateTime(2020, 6, 16, 20, 52, 6, 152, DateTimeKind.Local).AddTicks(7162), 229, "Valeriya.Luckiv43@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1254, null, 0, new DateTime(2021, 2, 4, 22, 50, 38, 453, DateTimeKind.Local).AddTicks(4585), 229, "(091) 840-27-01" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1250, null, 0, new DateTime(2020, 3, 8, 10, 50, 35, 288, DateTimeKind.Local).AddTicks(8737), 165, "(050) 592-81-16" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1175, null, 0, new DateTime(2021, 1, 29, 11, 47, 56, 357, DateTimeKind.Local).AddTicks(8586), 165, "(093) 585-75-19" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 885, null, 1, new DateTime(2021, 2, 20, 2, 53, 46, 262, DateTimeKind.Local).AddTicks(2903), 165, "Kuzma19@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 583, null, 1, new DateTime(2020, 3, 7, 5, 49, 9, 281, DateTimeKind.Local).AddTicks(4408), 165, "Gavrilo_Yarmak@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 632, null, 1, new DateTime(2020, 9, 7, 8, 43, 33, 545, DateTimeKind.Local).AddTicks(7550), 163, "Yana_Prigoda80@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 514, null, 1, new DateTime(2020, 3, 22, 11, 42, 1, 301, DateTimeKind.Local).AddTicks(1109), 165, "Mechislav_Makhno@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 953, null, 0, new DateTime(2020, 9, 3, 16, 37, 14, 350, DateTimeKind.Local).AddTicks(6002), 164, "(092) 948-46-80" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 567, null, 0, new DateTime(2020, 8, 21, 8, 16, 4, 487, DateTimeKind.Local).AddTicks(404), 164, "(066) 516-69-46" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 270, null, 1, new DateTime(2020, 6, 24, 15, 39, 48, 660, DateTimeKind.Local).AddTicks(7864), 230, "Nazar75@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 451, null, 1, new DateTime(2020, 6, 11, 17, 51, 29, 300, DateTimeKind.Local).AddTicks(4792), 230, "Zvenigor.Pritula21@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 575, null, 0, new DateTime(2020, 9, 26, 13, 36, 46, 53, DateTimeKind.Local).AddTicks(7510), 230, "(073) 444-59-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 738, null, 0, new DateTime(2020, 5, 16, 13, 37, 11, 487, DateTimeKind.Local).AddTicks(4525), 230, "(066) 776-08-22" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 809, null, 1, new DateTime(2020, 8, 29, 13, 41, 28, 795, DateTimeKind.Local).AddTicks(5162), 230, "Biloslav.Gordiichuk43@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1332, null, 1, new DateTime(2020, 3, 6, 18, 39, 30, 1, DateTimeKind.Local).AddTicks(7902), 163, "Mokrina20@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1206, null, 0, new DateTime(2020, 11, 14, 7, 45, 41, 784, DateTimeKind.Local).AddTicks(7865), 163, "(093) 323-23-54" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 906, null, 0, new DateTime(2020, 12, 18, 8, 38, 34, 885, DateTimeKind.Local).AddTicks(2038), 163, "(098) 700-37-06" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1082, null, 1, new DateTime(2020, 8, 14, 13, 21, 37, 81, DateTimeKind.Local).AddTicks(5917), 164, "Olelko_Moskalyuk70@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1286, null, 0, new DateTime(2020, 9, 17, 17, 50, 11, 468, DateTimeKind.Local).AddTicks(7460), 166, "(093) 725-11-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 546, null, 1, new DateTime(2020, 4, 23, 11, 9, 9, 667, DateTimeKind.Local).AddTicks(1233), 232, "Andrii_Zvarich25@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1037, null, 1, new DateTime(2021, 2, 16, 19, 49, 41, 613, DateTimeKind.Local).AddTicks(5196), 232, "Alla53@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 396, null, 0, new DateTime(2020, 10, 13, 12, 7, 25, 504, DateTimeKind.Local).AddTicks(1022), 156, "(063) 031-99-82" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 328, null, 0, new DateTime(2020, 8, 19, 11, 17, 34, 6, DateTimeKind.Local).AddTicks(9393), 156, "(073) 561-61-05" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 8, null, 1, new DateTime(2020, 3, 22, 14, 14, 44, 150, DateTimeKind.Local).AddTicks(5494), 156, "Yurii_Balickii@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1159, null, 0, new DateTime(2020, 11, 2, 19, 49, 9, 940, DateTimeKind.Local).AddTicks(8836), 233, "(097) 355-27-45" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1210, null, 1, new DateTime(2020, 4, 7, 12, 23, 22, 977, DateTimeKind.Local).AddTicks(1677), 155, "Chornota_Storozhuk99@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1022, null, 0, new DateTime(2020, 6, 9, 15, 48, 12, 211, DateTimeKind.Local).AddTicks(9824), 155, "(073) 504-12-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 944, null, 1, new DateTime(2020, 7, 1, 9, 55, 35, 770, DateTimeKind.Local).AddTicks(4401), 155, "Yustina.Petrina@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 798, null, 1, new DateTime(2021, 2, 7, 9, 2, 30, 398, DateTimeKind.Local).AddTicks(381), 155, "Matvii82@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 389, null, 0, new DateTime(2021, 2, 8, 16, 24, 28, 843, DateTimeKind.Local).AddTicks(8276), 155, "(092) 661-86-38" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1114, null, 0, new DateTime(2020, 10, 25, 15, 40, 36, 180, DateTimeKind.Local).AddTicks(6410), 154, "(095) 771-36-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 684, null, 1, new DateTime(2021, 3, 3, 0, 51, 11, 565, DateTimeKind.Local).AddTicks(4842), 156, "Rayisa_Romaniv@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 312, null, 1, new DateTime(2020, 11, 2, 9, 21, 48, 543, DateTimeKind.Local).AddTicks(3901), 154, "Agnesa.Kulinich49@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 100, null, 1, new DateTime(2020, 3, 27, 21, 22, 48, 598, DateTimeKind.Local).AddTicks(4727), 154, "Varvara_Cimbalistii@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 40, null, 1, new DateTime(2020, 6, 22, 7, 52, 8, 361, DateTimeKind.Local).AddTicks(6138), 154, "Nazar_Semenochko@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 741, null, 1, new DateTime(2020, 11, 25, 11, 52, 31, 695, DateTimeKind.Local).AddTicks(7032), 234, "Antonida_Maistrenko@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1146, null, 0, new DateTime(2021, 1, 7, 8, 2, 1, 729, DateTimeKind.Local).AddTicks(2700), 234, "(099) 805-68-20" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1480, null, 1, new DateTime(2020, 7, 31, 15, 3, 49, 561, DateTimeKind.Local).AddTicks(6483), 153, "Kalina_Gamula@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 719, null, 0, new DateTime(2020, 8, 26, 16, 41, 37, 237, DateTimeKind.Local).AddTicks(6599), 153, "(094) 619-24-84" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 689, null, 1, new DateTime(2020, 12, 4, 19, 53, 35, 269, DateTimeKind.Local).AddTicks(3277), 153, "Pelageya_Balaban@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 641, null, 0, new DateTime(2020, 9, 5, 9, 35, 30, 276, DateTimeKind.Local).AddTicks(2067), 153, "(044) 949-40-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 315, null, 1, new DateTime(2020, 8, 15, 5, 25, 12, 146, DateTimeKind.Local).AddTicks(1812), 153, "Maksim36@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1153, null, 1, new DateTime(2020, 7, 10, 11, 37, 0, 767, DateTimeKind.Local).AddTicks(2604), 234, "Afanasii.Tarasyuk@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 281, null, 0, new DateTime(2020, 10, 7, 9, 32, 9, 353, DateTimeKind.Local).AddTicks(6228), 154, "(096) 083-50-76" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 951, null, 0, new DateTime(2020, 4, 7, 9, 44, 40, 837, DateTimeKind.Local).AddTicks(2025), 232, "(098) 334-10-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 828, null, 1, new DateTime(2021, 2, 6, 2, 55, 49, 730, DateTimeKind.Local).AddTicks(8692), 156, "Pilip.Stigailo@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 984, null, 1, new DateTime(2021, 1, 13, 11, 41, 45, 696, DateTimeKind.Local).AddTicks(8482), 156, "Dana76@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1119, null, 0, new DateTime(2020, 6, 23, 13, 10, 44, 340, DateTimeKind.Local).AddTicks(2070), 232, "(044) 662-31-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1092, null, 0, new DateTime(2020, 11, 18, 8, 15, 39, 292, DateTimeKind.Local).AddTicks(9839), 159, "(096) 426-52-20" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 703, null, 0, new DateTime(2020, 4, 2, 17, 31, 21, 818, DateTimeKind.Local).AddTicks(5057), 159, "(066) 857-05-62" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 563, null, 0, new DateTime(2020, 12, 20, 7, 58, 55, 388, DateTimeKind.Local).AddTicks(3118), 159, "(092) 988-42-46" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 529, null, 0, new DateTime(2020, 12, 6, 9, 50, 47, 897, DateTimeKind.Local).AddTicks(3355), 159, "(091) 916-75-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 408, null, 0, new DateTime(2020, 8, 3, 8, 45, 41, 399, DateTimeKind.Local).AddTicks(1147), 159, "(096) 620-59-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1399, null, 0, new DateTime(2020, 3, 20, 17, 38, 7, 365, DateTimeKind.Local).AddTicks(6830), 158, "(050) 099-89-88" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1364, null, 1, new DateTime(2020, 11, 24, 21, 39, 1, 765, DateTimeKind.Local).AddTicks(3130), 158, "Timish.Mariyevska@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 932, null, 0, new DateTime(2020, 12, 27, 13, 46, 37, 639, DateTimeKind.Local).AddTicks(5499), 158, "(066) 135-37-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 480, null, 0, new DateTime(2020, 6, 24, 6, 17, 41, 9, DateTimeKind.Local).AddTicks(4041), 158, "(096) 789-48-41" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 855, null, 1, new DateTime(2020, 7, 23, 8, 13, 20, 476, DateTimeKind.Local).AddTicks(8822), 156, "Garnoslav68@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 360, null, 0, new DateTime(2020, 5, 29, 2, 35, 8, 775, DateTimeKind.Local).AddTicks(5784), 233, "(096) 840-50-22" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 535, null, 0, new DateTime(2020, 4, 11, 3, 22, 24, 826, DateTimeKind.Local).AddTicks(3307), 233, "(050) 365-19-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1494, null, 0, new DateTime(2020, 7, 25, 10, 41, 12, 103, DateTimeKind.Local).AddTicks(7293), 157, "(044) 719-15-31" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1390, null, 1, new DateTime(2020, 11, 9, 21, 16, 25, 958, DateTimeKind.Local).AddTicks(5132), 157, "Zinovii_Ganich@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 930, null, 1, new DateTime(2020, 7, 27, 15, 44, 51, 64, DateTimeKind.Local).AddTicks(1878), 157, "Aelina.Golovec63@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 860, null, 0, new DateTime(2021, 2, 19, 1, 7, 42, 239, DateTimeKind.Local).AddTicks(1598), 157, "(097) 653-54-82" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 621, null, 0, new DateTime(2020, 4, 10, 17, 47, 23, 460, DateTimeKind.Local).AddTicks(6468), 157, "(050) 238-60-47" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 469, null, 0, new DateTime(2020, 3, 22, 12, 6, 31, 205, DateTimeKind.Local).AddTicks(3377), 157, "(095) 220-96-84" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 385, null, 0, new DateTime(2020, 4, 16, 9, 53, 6, 829, DateTimeKind.Local).AddTicks(3775), 157, "(096) 133-37-96" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 979, null, 0, new DateTime(2020, 4, 8, 22, 25, 15, 563, DateTimeKind.Local).AddTicks(4555), 233, "(044) 216-69-01" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1283, null, 0, new DateTime(2020, 11, 16, 2, 4, 43, 103, DateTimeKind.Local).AddTicks(9017), 156, "(096) 635-93-30" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 390, null, 0, new DateTime(2020, 3, 16, 18, 48, 6, 699, DateTimeKind.Local).AddTicks(2465), 233, "(099) 391-16-24" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1270, null, 1, new DateTime(2021, 2, 12, 4, 33, 23, 197, DateTimeKind.Local).AddTicks(261), 221, "Nazarii0@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1419, null, 0, new DateTime(2020, 6, 14, 2, 23, 3, 244, DateTimeKind.Local).AddTicks(907), 166, "(063) 584-21-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1493, null, 0, new DateTime(2020, 6, 2, 3, 36, 50, 860, DateTimeKind.Local).AddTicks(6462), 228, "(073) 888-20-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1077, null, 1, new DateTime(2020, 9, 26, 19, 48, 24, 726, DateTimeKind.Local).AddTicks(7118), 176, "Kornilo72@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 569, null, 1, new DateTime(2020, 10, 17, 4, 38, 44, 285, DateTimeKind.Local).AddTicks(6400), 176, "Anfisa82@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 495, null, 0, new DateTime(2020, 7, 6, 7, 25, 26, 561, DateTimeKind.Local).AddTicks(8252), 176, "(050) 138-49-94" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 331, null, 1, new DateTime(2020, 12, 17, 12, 54, 23, 137, DateTimeKind.Local).AddTicks(5885), 176, "Yulianna.Pogiba@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 280, null, 1, new DateTime(2020, 3, 30, 20, 39, 50, 579, DateTimeKind.Local).AddTicks(5913), 176, "Miroslav_Pendik52@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 102, null, 0, new DateTime(2020, 9, 19, 6, 5, 48, 43, DateTimeKind.Local).AddTicks(659), 176, "(095) 607-34-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1211, null, 1, new DateTime(2020, 12, 20, 14, 10, 49, 863, DateTimeKind.Local).AddTicks(3924), 224, "Marichka.Borovskii@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 367, null, 1, new DateTime(2020, 12, 12, 5, 45, 55, 473, DateTimeKind.Local).AddTicks(3848), 225, "Maiya_Ivanishina@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 461, null, 1, new DateTime(2020, 5, 15, 5, 32, 33, 762, DateTimeKind.Local).AddTicks(8546), 225, "Alvina_Yanyuk54@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 598, null, 1, new DateTime(2020, 5, 2, 1, 43, 18, 308, DateTimeKind.Local).AddTicks(3586), 225, "Zlatomir.Luckii98@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1157, null, 1, new DateTime(2020, 12, 29, 6, 52, 7, 454, DateTimeKind.Local).AddTicks(4813), 176, "Vitalina.Yermak18@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1030, null, 0, new DateTime(2020, 12, 20, 15, 33, 20, 838, DateTimeKind.Local).AddTicks(9537), 225, "(099) 854-88-24" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 997, null, 0, new DateTime(2020, 11, 1, 22, 45, 33, 896, DateTimeKind.Local).AddTicks(1556), 175, "(063) 210-76-96" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 872, null, 0, new DateTime(2020, 8, 10, 1, 14, 42, 428, DateTimeKind.Local).AddTicks(7343), 175, "(044) 889-28-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 754, null, 1, new DateTime(2020, 10, 30, 0, 2, 33, 172, DateTimeKind.Local).AddTicks(1285), 175, "Olena_Goiko35@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 737, null, 0, new DateTime(2020, 3, 4, 9, 47, 52, 250, DateTimeKind.Local).AddTicks(1040), 175, "(098) 705-73-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 633, null, 0, new DateTime(2020, 8, 3, 8, 15, 18, 451, DateTimeKind.Local).AddTicks(7564), 175, "(095) 260-30-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 348, null, 1, new DateTime(2020, 8, 14, 1, 5, 36, 310, DateTimeKind.Local).AddTicks(6104), 175, "Zvenigor_Mariyevska29@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 289, null, 1, new DateTime(2020, 3, 20, 4, 23, 26, 868, DateTimeKind.Local).AddTicks(8117), 175, "Olesya.Koman96@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1241, null, 1, new DateTime(2020, 9, 30, 6, 7, 39, 609, DateTimeKind.Local).AddTicks(5247), 225, "Ustina.Petrenko@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1329, null, 0, new DateTime(2020, 4, 27, 6, 27, 7, 504, DateTimeKind.Local).AddTicks(701), 225, "(097) 829-97-42" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1486, null, 1, new DateTime(2020, 11, 4, 18, 28, 46, 452, DateTimeKind.Local).AddTicks(2687), 225, "Agapiya_Magera@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1172, null, 1, new DateTime(2020, 3, 23, 13, 37, 39, 985, DateTimeKind.Local).AddTicks(5361), 175, "Vira_Shindarei11@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1478, null, 0, new DateTime(2020, 9, 4, 16, 54, 52, 916, DateTimeKind.Local).AddTicks(7688), 174, "(063) 778-39-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1287, null, 1, new DateTime(2020, 11, 17, 14, 32, 31, 77, DateTimeKind.Local).AddTicks(1510), 176, "Slava29@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 70, null, 0, new DateTime(2020, 12, 23, 19, 32, 11, 494, DateTimeKind.Local).AddTicks(5737), 224, "(091) 691-33-27" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1427, null, 1, new DateTime(2020, 6, 29, 10, 17, 25, 723, DateTimeKind.Local).AddTicks(4471), 181, "Gorislav_Mazilo@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1040, null, 0, new DateTime(2020, 7, 7, 16, 50, 35, 610, DateTimeKind.Local).AddTicks(7863), 181, "(097) 171-13-94" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 572, null, 1, new DateTime(2020, 8, 15, 23, 31, 25, 683, DateTimeKind.Local).AddTicks(3517), 181, "Borislav.Svidrigailo35@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 286, null, 1, new DateTime(2020, 11, 7, 5, 37, 21, 735, DateTimeKind.Local).AddTicks(9502), 181, "Maryana53@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 772, null, 1, new DateTime(2021, 2, 2, 7, 46, 34, 820, DateTimeKind.Local).AddTicks(2815), 222, "Arsen.Slobodyan65@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1422, null, 1, new DateTime(2020, 6, 11, 8, 17, 19, 573, DateTimeKind.Local).AddTicks(4399), 222, "Mechislav.Storozhuk74@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 868, null, 0, new DateTime(2020, 3, 12, 5, 8, 28, 265, DateTimeKind.Local).AddTicks(2116), 180, "(063) 076-86-01" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 73, null, 1, new DateTime(2020, 4, 21, 18, 46, 22, 179, DateTimeKind.Local).AddTicks(2668), 223, "Daleslava.Pagutyak@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 309, null, 0, new DateTime(2020, 7, 7, 22, 53, 46, 582, DateTimeKind.Local).AddTicks(5433), 223, "(097) 467-55-05" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 587, null, 0, new DateTime(2020, 8, 24, 10, 44, 56, 776, DateTimeKind.Local).AddTicks(2382), 223, "(097) 736-99-23" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 724, null, 1, new DateTime(2021, 1, 9, 1, 29, 29, 982, DateTimeKind.Local).AddTicks(4212), 224, "Burevist_Demkiv42@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 813, null, 0, new DateTime(2020, 8, 24, 10, 41, 20, 246, DateTimeKind.Local).AddTicks(382), 223, "(093) 735-35-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1308, null, 1, new DateTime(2020, 12, 1, 19, 19, 52, 791, DateTimeKind.Local).AddTicks(1503), 179, "Azarii.Sidlyak@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 821, null, 1, new DateTime(2020, 6, 4, 17, 48, 33, 491, DateTimeKind.Local).AddTicks(3748), 179, "Bozhena2@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 623, null, 0, new DateTime(2020, 9, 13, 19, 6, 50, 92, DateTimeKind.Local).AddTicks(3411), 179, "(050) 747-40-99" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1439, null, 1, new DateTime(2020, 5, 17, 13, 50, 57, 296, DateTimeKind.Local).AddTicks(126), 223, "Fedora60@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 453, null, 0, new DateTime(2021, 1, 21, 1, 49, 36, 139, DateTimeKind.Local).AddTicks(4343), 178, "(094) 204-93-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 431, null, 1, new DateTime(2021, 2, 17, 13, 50, 3, 113, DateTimeKind.Local).AddTicks(9008), 178, "Bozhemir.Pagutyak@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1344, null, 1, new DateTime(2020, 4, 23, 10, 57, 26, 506, DateTimeKind.Local).AddTicks(519), 177, "Bryachislav13@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1044, null, 1, new DateTime(2021, 2, 7, 15, 35, 15, 453, DateTimeKind.Local).AddTicks(737), 177, "Olena.Sidlecka62@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 879, null, 0, new DateTime(2020, 11, 11, 17, 30, 52, 881, DateTimeKind.Local).AddTicks(7488), 177, "(098) 659-51-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 574, null, 0, new DateTime(2020, 10, 24, 11, 37, 21, 202, DateTimeKind.Local).AddTicks(8055), 177, "(095) 607-37-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1432, null, 0, new DateTime(2020, 8, 5, 23, 37, 12, 542, DateTimeKind.Local).AddTicks(3204), 223, "(094) 550-60-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 243, null, 0, new DateTime(2020, 9, 19, 1, 49, 42, 853, DateTimeKind.Local).AddTicks(5191), 229, "(044) 091-96-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 423, null, 1, new DateTime(2020, 5, 28, 4, 49, 44, 92, DateTimeKind.Local).AddTicks(3314), 174, "Semibor.Moskalyuk84@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1281, null, 0, new DateTime(2020, 11, 29, 12, 10, 19, 344, DateTimeKind.Local).AddTicks(3195), 173, "(097) 599-60-81" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 201, null, 0, new DateTime(2021, 2, 9, 20, 50, 45, 919, DateTimeKind.Local).AddTicks(2354), 170, "(099) 058-94-92" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 64, null, 0, new DateTime(2020, 3, 18, 22, 50, 21, 376, DateTimeKind.Local).AddTicks(7322), 228, "(096) 024-72-15" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1433, null, 1, new DateTime(2020, 12, 21, 4, 36, 52, 601, DateTimeKind.Local).AddTicks(3589), 169, "Ratibor_Openko@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1242, null, 0, new DateTime(2020, 12, 25, 23, 52, 48, 518, DateTimeKind.Local).AddTicks(5185), 169, "(044) 751-18-02" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1049, null, 1, new DateTime(2020, 5, 1, 0, 6, 21, 440, DateTimeKind.Local).AddTicks(3287), 169, "Lavrentii_Goiko74@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 963, null, 0, new DateTime(2021, 2, 5, 23, 0, 22, 612, DateTimeKind.Local).AddTicks(2349), 169, "(091) 166-39-18" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 890, null, 0, new DateTime(2020, 11, 30, 17, 21, 4, 685, DateTimeKind.Local).AddTicks(3404), 169, "(091) 842-12-97" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 830, null, 0, new DateTime(2020, 3, 24, 3, 25, 34, 268, DateTimeKind.Local).AddTicks(947), 169, "(095) 686-16-34" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 493, null, 1, new DateTime(2020, 10, 24, 9, 49, 32, 858, DateTimeKind.Local).AddTicks(7131), 169, "Vadim66@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 750, null, 1, new DateTime(2020, 9, 16, 8, 56, 32, 479, DateTimeKind.Local).AddTicks(6479), 228, "Antin73@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1479, null, 0, new DateTime(2021, 1, 12, 11, 38, 8, 240, DateTimeKind.Local).AddTicks(9306), 227, "(093) 835-20-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 781, null, 0, new DateTime(2020, 12, 15, 0, 56, 24, 852, DateTimeKind.Local).AddTicks(1536), 228, "(066) 163-35-17" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1302, null, 1, new DateTime(2020, 6, 9, 15, 2, 8, 537, DateTimeKind.Local).AddTicks(8201), 168, "Albert16@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 881, null, 1, new DateTime(2020, 10, 5, 5, 29, 22, 223, DateTimeKind.Local).AddTicks(9350), 168, "Pelagiya92@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 808, null, 0, new DateTime(2020, 4, 26, 4, 22, 44, 224, DateTimeKind.Local).AddTicks(9704), 228, "(044) 149-32-61" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 939, null, 0, new DateTime(2020, 7, 22, 8, 46, 29, 600, DateTimeKind.Local).AddTicks(5089), 228, "(094) 852-41-41" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1058, null, 1, new DateTime(2020, 11, 6, 18, 35, 24, 948, DateTimeKind.Local).AddTicks(8127), 228, "Lyubomir.Didukh@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 989, null, 0, new DateTime(2020, 5, 6, 12, 9, 48, 916, DateTimeKind.Local).AddTicks(4325), 167, "(091) 781-43-91" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 484, null, 1, new DateTime(2020, 12, 15, 8, 3, 34, 392, DateTimeKind.Local).AddTicks(8696), 167, "Marta.Shumilo72@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 354, null, 1, new DateTime(2020, 7, 12, 5, 51, 54, 504, DateTimeKind.Local).AddTicks(5884), 167, "Irma.Grigorishina77@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1379, null, 1, new DateTime(2021, 1, 15, 17, 15, 39, 51, DateTimeKind.Local).AddTicks(1220), 228, "Vilenina98@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1413, null, 1, new DateTime(2021, 1, 2, 10, 30, 6, 583, DateTimeKind.Local).AddTicks(2776), 228, "Velemir_Yushuk@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1455, null, 1, new DateTime(2020, 11, 21, 2, 57, 25, 595, DateTimeKind.Local).AddTicks(8511), 168, "Zhanna_Minyailo@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 892, null, 0, new DateTime(2020, 8, 23, 12, 27, 33, 692, DateTimeKind.Local).AddTicks(6765), 226, "(098) 030-95-73" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 273, null, 0, new DateTime(2020, 4, 19, 6, 37, 21, 418, DateTimeKind.Local).AddTicks(1769), 171, "(096) 636-68-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1316, null, 0, new DateTime(2020, 9, 29, 1, 56, 35, 329, DateTimeKind.Local).AddTicks(5109), 171, "(099) 825-59-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 960, null, 0, new DateTime(2020, 10, 11, 19, 33, 30, 262, DateTimeKind.Local).AddTicks(4726), 173, "(044) 239-24-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 795, null, 1, new DateTime(2020, 3, 12, 8, 13, 31, 899, DateTimeKind.Local).AddTicks(5328), 173, "Svyatopolk.Kivach81@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 729, null, 1, new DateTime(2020, 6, 12, 16, 3, 52, 650, DateTimeKind.Local).AddTicks(5258), 173, "Pelageya_Yemec26@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 344, null, 1, new DateTime(2021, 2, 5, 10, 32, 9, 687, DateTimeKind.Local).AddTicks(2727), 173, "Khristina36@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 200, null, 0, new DateTime(2020, 4, 18, 13, 42, 19, 644, DateTimeKind.Local).AddTicks(70), 173, "(073) 166-68-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1244, null, 1, new DateTime(2020, 5, 16, 2, 47, 1, 815, DateTimeKind.Local).AddTicks(2080), 226, "Anastasiya_Marinich@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1268, null, 0, new DateTime(2020, 4, 29, 9, 52, 41, 328, DateTimeKind.Local).AddTicks(1905), 226, "(092) 002-32-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 177, null, 1, new DateTime(2020, 6, 16, 23, 18, 7, 420, DateTimeKind.Local).AddTicks(5546), 227, "Orest.Parashuk@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 446, null, 1, new DateTime(2020, 6, 5, 14, 19, 28, 250, DateTimeKind.Local).AddTicks(278), 227, "Borimisl_Yacishina52@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 599, null, 1, new DateTime(2020, 8, 5, 5, 3, 58, 134, DateTimeKind.Local).AddTicks(354), 227, "Oresta_Lyuta@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 488, null, 1, new DateTime(2020, 5, 23, 4, 7, 7, 347, DateTimeKind.Local).AddTicks(4135), 171, "Ognyana70@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 659, null, 0, new DateTime(2020, 7, 6, 10, 21, 30, 270, DateTimeKind.Local).AddTicks(8870), 227, "(050) 705-23-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 907, null, 0, new DateTime(2020, 10, 3, 6, 37, 40, 506, DateTimeKind.Local).AddTicks(2057), 172, "(044) 519-82-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 882, null, 1, new DateTime(2020, 11, 23, 8, 16, 5, 413, DateTimeKind.Local).AddTicks(3819), 172, "Vyacheslav.Yalyuk5@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 744, null, 1, new DateTime(2021, 1, 3, 6, 31, 6, 909, DateTimeKind.Local).AddTicks(6276), 172, "Avreliya.Usich@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 652, null, 0, new DateTime(2020, 7, 28, 17, 55, 43, 8, DateTimeKind.Local).AddTicks(4138), 172, "(098) 512-47-17" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 195, null, 1, new DateTime(2020, 7, 14, 2, 41, 42, 692, DateTimeKind.Local).AddTicks(198), 172, "Anfisa92@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 664, null, 1, new DateTime(2020, 11, 13, 8, 39, 18, 211, DateTimeKind.Local).AddTicks(339), 227, "Yaroslav16@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1167, null, 0, new DateTime(2020, 7, 10, 16, 14, 49, 847, DateTimeKind.Local).AddTicks(3274), 227, "(050) 435-83-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1357, null, 0, new DateTime(2020, 7, 16, 2, 11, 13, 998, DateTimeKind.Local).AddTicks(9268), 227, "(099) 535-64-22" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1457, null, 1, new DateTime(2020, 9, 30, 15, 41, 12, 279, DateTimeKind.Local).AddTicks(2888), 171, "Sergii86@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1434, null, 0, new DateTime(2020, 5, 14, 13, 53, 42, 26, DateTimeKind.Local).AddTicks(3642), 171, "(097) 526-91-63" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1369, null, 0, new DateTime(2021, 1, 21, 19, 21, 38, 452, DateTimeKind.Local).AddTicks(3482), 172, "(050) 186-90-44" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1487, null, 0, new DateTime(2020, 5, 9, 20, 31, 41, 358, DateTimeKind.Local).AddTicks(8892), 92, "(096) 395-60-30" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 154, null, 1, new DateTime(2020, 8, 3, 13, 28, 55, 576, DateTimeKind.Local).AddTicks(927), 103, "Anastas.Pogiba84@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 219, null, 0, new DateTime(2020, 5, 27, 7, 3, 14, 308, DateTimeKind.Local).AddTicks(3735), 210, "(092) 380-68-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 31, null, 0, new DateTime(2020, 7, 9, 18, 48, 34, 573, DateTimeKind.Local).AddTicks(2479), 52, "(092) 911-85-64" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 978, null, 1, new DateTime(2020, 11, 12, 2, 5, 46, 825, DateTimeKind.Local).AddTicks(8643), 19, "Oresta.Pagutyak@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 324, null, 0, new DateTime(2020, 6, 19, 17, 50, 52, 884, DateTimeKind.Local).AddTicks(6431), 282, "(094) 310-42-08" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 543, null, 1, new DateTime(2020, 9, 4, 23, 38, 50, 629, DateTimeKind.Local).AddTicks(4223), 282, "Vlada.Yurchishin@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1187, null, 0, new DateTime(2021, 2, 27, 4, 51, 21, 234, DateTimeKind.Local).AddTicks(8805), 282, "(063) 337-73-39" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1212, null, 1, new DateTime(2020, 3, 15, 13, 19, 2, 20, DateTimeKind.Local).AddTicks(2713), 282, "Yarina.Skoropadskii20@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 590, null, 1, new DateTime(2020, 12, 14, 14, 27, 47, 757, DateTimeKind.Local).AddTicks(2866), 51, "Apollinariya.Petrishina@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 256, null, 1, new DateTime(2020, 10, 6, 19, 31, 43, 735, DateTimeKind.Local).AddTicks(1693), 51, "Anastasiya.Chervonii@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 81, null, 1, new DateTime(2020, 4, 24, 19, 52, 14, 738, DateTimeKind.Local).AddTicks(2003), 52, "Lavrin.Polishuk@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 14, null, 0, new DateTime(2021, 2, 16, 7, 40, 18, 424, DateTimeKind.Local).AddTicks(9262), 51, "(044) 663-01-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1026, null, 0, new DateTime(2020, 4, 1, 6, 36, 48, 442, DateTimeKind.Local).AddTicks(4530), 19, "(098) 148-69-31" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1116, null, 0, new DateTime(2020, 11, 11, 12, 17, 18, 986, DateTimeKind.Local).AddTicks(5394), 50, "(050) 439-65-47" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 871, null, 1, new DateTime(2020, 5, 8, 6, 29, 35, 141, DateTimeKind.Local).AddTicks(3090), 50, "Yukhima_Yanyuk78@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 747, null, 1, new DateTime(2020, 12, 25, 6, 0, 25, 54, DateTimeKind.Local).AddTicks(7439), 50, "Yaromir_Porivai@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 438, null, 1, new DateTime(2021, 2, 1, 20, 13, 16, 806, DateTimeKind.Local).AddTicks(4631), 50, "Anatoliya41@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 434, null, 0, new DateTime(2020, 8, 12, 13, 33, 30, 533, DateTimeKind.Local).AddTicks(2290), 50, "(073) 091-12-31" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 276, null, 1, new DateTime(2020, 5, 19, 21, 43, 5, 765, DateTimeKind.Local).AddTicks(1813), 283, "Radimir_Moskalyuk@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 811, null, 1, new DateTime(2020, 12, 20, 18, 40, 45, 625, DateTimeKind.Local).AddTicks(4772), 49, "Ruslana_Baranovska@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1444, null, 0, new DateTime(2020, 7, 24, 6, 30, 30, 261, DateTimeKind.Local).AddTicks(7077), 282, "(073) 272-74-47" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 559, null, 1, new DateTime(2020, 5, 11, 12, 26, 14, 397, DateTimeKind.Local).AddTicks(8857), 49, "Agnesa.Ponomariv92@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 421, null, 1, new DateTime(2020, 5, 7, 15, 12, 7, 871, DateTimeKind.Local).AddTicks(1516), 52, "Marko24@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 589, null, 0, new DateTime(2020, 6, 1, 19, 43, 49, 134, DateTimeKind.Local).AddTicks(3075), 19, "(099) 366-11-92" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 148, null, 1, new DateTime(2021, 1, 8, 22, 4, 58, 247, DateTimeKind.Local).AddTicks(3466), 281, "Vilenina_Danilko80@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 561, null, 0, new DateTime(2020, 6, 9, 13, 28, 56, 786, DateTimeKind.Local).AddTicks(7570), 18, "(093) 338-25-38" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1447, null, 1, new DateTime(2020, 5, 2, 9, 28, 27, 879, DateTimeKind.Local).AddTicks(1696), 53, "Lado.Lugovii@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 874, null, 1, new DateTime(2020, 3, 8, 3, 18, 5, 204, DateTimeKind.Local).AddTicks(9291), 53, "Borimir.Skoropadskii52@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 714, null, 0, new DateTime(2020, 4, 27, 4, 1, 5, 241, DateTimeKind.Local).AddTicks(9890), 53, "(050) 436-66-99" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 346, null, 1, new DateTime(2021, 2, 5, 5, 52, 35, 138, DateTimeKind.Local).AddTicks(9559), 281, "Lidiya62@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 832, null, 1, new DateTime(2021, 1, 21, 1, 39, 55, 757, DateTimeKind.Local).AddTicks(6814), 18, "Lyubava15@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 618, null, 0, new DateTime(2020, 5, 24, 23, 10, 41, 412, DateTimeKind.Local).AddTicks(8370), 281, "(073) 239-56-96" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 705, null, 0, new DateTime(2020, 10, 12, 19, 32, 32, 903, DateTimeKind.Local).AddTicks(1649), 19, "(066) 471-62-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1091, null, 1, new DateTime(2020, 3, 21, 15, 16, 0, 568, DateTimeKind.Local).AddTicks(7381), 281, "Kseniya.Vergun10@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 998, null, 0, new DateTime(2020, 9, 21, 14, 11, 24, 675, DateTimeKind.Local).AddTicks(9095), 18, "(044) 700-00-05" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1072, null, 0, new DateTime(2021, 2, 28, 8, 32, 12, 155, DateTimeKind.Local).AddTicks(1271), 18, "(044) 258-97-17" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1109, null, 0, new DateTime(2020, 11, 27, 1, 5, 36, 824, DateTimeKind.Local).AddTicks(9989), 18, "(044) 667-14-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1276, null, 0, new DateTime(2020, 5, 29, 2, 25, 55, 285, DateTimeKind.Local).AddTicks(7439), 295, "(066) 546-36-08" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1018, null, 0, new DateTime(2020, 6, 8, 13, 52, 3, 339, DateTimeKind.Local).AddTicks(3534), 295, "(066) 959-13-03" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 9, null, 1, new DateTime(2020, 4, 25, 7, 35, 8, 243, DateTimeKind.Local).AddTicks(4632), 295, "Zborislav_Serdyuk@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 835, null, 1, new DateTime(2020, 9, 29, 9, 36, 45, 168, DateTimeKind.Local).AddTicks(7419), 52, "Agnesa84@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 459, null, 0, new DateTime(2020, 7, 25, 17, 37, 17, 300, DateTimeKind.Local).AddTicks(6086), 52, "(066) 643-68-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1500, null, 0, new DateTime(2020, 10, 17, 7, 31, 55, 303, DateTimeKind.Local).AddTicks(463), 281, "(050) 307-34-45" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 118, null, 0, new DateTime(2020, 8, 7, 13, 9, 50, 544, DateTimeKind.Local).AddTicks(3262), 49, "(095) 203-25-33" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 352, null, 1, new DateTime(2020, 7, 13, 8, 47, 15, 334, DateTimeKind.Local).AddTicks(3793), 283, "Yulian33@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 443, null, 0, new DateTime(2021, 2, 22, 20, 10, 50, 63, DateTimeKind.Local).AddTicks(2892), 283, "(098) 471-47-16" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 532, null, 1, new DateTime(2020, 3, 30, 0, 19, 27, 88, DateTimeKind.Local).AddTicks(1837), 20, "Vitalina_Umanec@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 746, null, 1, new DateTime(2020, 12, 6, 13, 55, 51, 848, DateTimeKind.Local).AddTicks(8435), 47, "Azaliya60@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 491, null, 1, new DateTime(2020, 10, 7, 11, 22, 57, 488, DateTimeKind.Local).AddTicks(900), 47, "Lad_Maiboroda87@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 287, null, 0, new DateTime(2020, 9, 30, 23, 6, 28, 452, DateTimeKind.Local).AddTicks(5371), 47, "(066) 717-61-30" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 151, null, 1, new DateTime(2021, 2, 25, 3, 13, 23, 161, DateTimeKind.Local).AddTicks(9358), 47, "Orislava.Balakun@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 45, null, 0, new DateTime(2020, 10, 6, 14, 10, 49, 5, DateTimeKind.Local).AddTicks(1830), 47, "(050) 045-00-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1013, null, 1, new DateTime(2021, 2, 7, 1, 30, 41, 994, DateTimeKind.Local).AddTicks(2448), 20, "Anzhela.Nogachevskii37@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1032, null, 1, new DateTime(2020, 12, 29, 11, 54, 46, 791, DateTimeKind.Local).AddTicks(6866), 20, "Kornilii.Silecka17@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 520, null, 1, new DateTime(2020, 4, 26, 19, 2, 8, 207, DateTimeKind.Local).AddTicks(6244), 20, "Mikita.Bachei@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1426, null, 0, new DateTime(2020, 7, 5, 9, 58, 43, 311, DateTimeKind.Local).AddTicks(6248), 20, "(096) 694-75-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 853, null, 0, new DateTime(2020, 9, 6, 9, 44, 22, 614, DateTimeKind.Local).AddTicks(6148), 294, "(095) 570-27-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 296, null, 1, new DateTime(2020, 9, 4, 18, 43, 9, 286, DateTimeKind.Local).AddTicks(3076), 294, "Gerasim42@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 34, null, 0, new DateTime(2020, 10, 20, 3, 38, 21, 300, DateTimeKind.Local).AddTicks(1246), 284, "(095) 160-88-60" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 322, null, 1, new DateTime(2021, 1, 29, 9, 39, 15, 238, DateTimeKind.Local).AddTicks(124), 284, "Mstislava_Borochko@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 387, null, 1, new DateTime(2020, 4, 29, 16, 40, 55, 986, DateTimeKind.Local).AddTicks(3163), 284, "Bratomil.Balickii74@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 504, null, 1, new DateTime(2020, 8, 14, 17, 37, 33, 75, DateTimeKind.Local).AddTicks(3060), 284, "Zvenimir.Likovich75@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 515, null, 1, new DateTime(2020, 9, 30, 4, 13, 46, 219, DateTimeKind.Local).AddTicks(1038), 284, "Semibor.Gladukh40@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1249, null, 1, new DateTime(2020, 6, 5, 16, 47, 8, 95, DateTimeKind.Local).AddTicks(8747), 46, "Zinovii38@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1186, null, 1, new DateTime(2020, 11, 23, 7, 57, 6, 821, DateTimeKind.Local).AddTicks(2506), 294, "Yarovid.Miklashevskii@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 803, null, 1, new DateTime(2020, 9, 22, 10, 45, 17, 110, DateTimeKind.Local).AddTicks(7850), 47, "Lad87@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 877, null, 1, new DateTime(2020, 4, 18, 19, 49, 16, 158, DateTimeKind.Local).AddTicks(7302), 47, "Ladislav9@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1201, null, 0, new DateTime(2020, 6, 25, 1, 42, 16, 114, DateTimeKind.Local).AddTicks(8062), 47, "(073) 720-55-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 511, null, 1, new DateTime(2021, 2, 15, 11, 26, 45, 324, DateTimeKind.Local).AddTicks(7599), 283, "Zborislav.Romaniv@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 597, null, 1, new DateTime(2020, 5, 8, 12, 18, 13, 248, DateTimeKind.Local).AddTicks(7115), 283, "Orina.Pendik@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1474, null, 1, new DateTime(2020, 10, 8, 6, 41, 38, 919, DateTimeKind.Local).AddTicks(4375), 92, "Nadiya_Troyan@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1391, null, 1, new DateTime(2020, 5, 15, 21, 53, 52, 670, DateTimeKind.Local).AddTicks(9793), 48, "Lyubodar6@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1372, null, 0, new DateTime(2020, 4, 30, 7, 21, 48, 675, DateTimeKind.Local).AddTicks(4231), 48, "(063) 587-27-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1232, null, 0, new DateTime(2020, 11, 26, 21, 43, 48, 466, DateTimeKind.Local).AddTicks(2082), 48, "(098) 452-52-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1209, null, 1, new DateTime(2020, 12, 12, 19, 6, 3, 592, DateTimeKind.Local).AddTicks(9334), 48, "Orislava_Gorbach@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1495, null, 1, new DateTime(2020, 8, 10, 7, 52, 20, 747, DateTimeKind.Local).AddTicks(6189), 294, "Stefanii.Pagutyak@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1404, null, 1, new DateTime(2020, 9, 22, 15, 24, 22, 836, DateTimeKind.Local).AddTicks(2388), 294, "Slavuta52@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 214, null, 0, new DateTime(2020, 7, 3, 11, 29, 32, 12, DateTimeKind.Local).AddTicks(3142), 48, "(097) 410-24-50" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 649, null, 1, new DateTime(2020, 11, 22, 22, 31, 33, 191, DateTimeKind.Local).AddTicks(8591), 283, "Inna43@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 818, null, 0, new DateTime(2020, 5, 10, 3, 19, 30, 319, DateTimeKind.Local).AddTicks(5169), 283, "(044) 820-19-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 940, null, 0, new DateTime(2020, 5, 15, 23, 42, 18, 605, DateTimeKind.Local).AddTicks(3591), 283, "(096) 312-53-02" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1131, null, 0, new DateTime(2020, 5, 31, 15, 37, 33, 125, DateTimeKind.Local).AddTicks(7755), 283, "(044) 366-74-68" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1151, null, 0, new DateTime(2020, 6, 10, 5, 11, 33, 9, DateTimeKind.Local).AddTicks(9633), 283, "(066) 140-49-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1228, null, 0, new DateTime(2021, 2, 4, 19, 52, 56, 913, DateTimeKind.Local).AddTicks(2388), 294, "(044) 393-09-12" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 279, null, 0, new DateTime(2020, 7, 29, 3, 15, 20, 459, DateTimeKind.Local).AddTicks(5345), 20, "(063) 503-77-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 343, null, 1, new DateTime(2020, 10, 22, 19, 55, 15, 230, DateTimeKind.Local).AddTicks(9214), 20, "Arkhip.Porivai@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1293, null, 1, new DateTime(2020, 11, 15, 15, 42, 1, 389, DateTimeKind.Local).AddTicks(6815), 47, "Omelyan76@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 399, null, 1, new DateTime(2020, 5, 5, 0, 8, 14, 931, DateTimeKind.Local).AddTicks(7530), 18, "Alvina.Sirko40@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 999, null, 0, new DateTime(2021, 2, 7, 21, 17, 27, 358, DateTimeKind.Local).AddTicks(7161), 46, "(098) 853-73-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 338, null, 0, new DateTime(2021, 1, 1, 18, 0, 31, 729, DateTimeKind.Local).AddTicks(2186), 18, "(096) 408-75-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 476, null, 1, new DateTime(2021, 1, 1, 6, 40, 35, 833, DateTimeKind.Local).AddTicks(575), 54, "Irina.Makoveckii@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 56, null, 0, new DateTime(2021, 1, 19, 18, 1, 11, 110, DateTimeKind.Local).AddTicks(7392), 60, "(095) 522-25-63" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 788, null, 1, new DateTime(2020, 4, 6, 3, 39, 43, 37, DateTimeKind.Local).AddTicks(8752), 13, "Romena33@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 802, null, 0, new DateTime(2020, 12, 21, 5, 54, 37, 38, DateTimeKind.Local).AddTicks(4009), 13, "(093) 821-20-33" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 38, null, 1, new DateTime(2020, 5, 27, 15, 24, 9, 423, DateTimeKind.Local).AddTicks(3992), 278, "Yukhimiya.Grechko82@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 913, null, 1, new DateTime(2020, 10, 11, 10, 25, 41, 305, DateTimeKind.Local).AddTicks(6733), 13, "Karina_Bondarenko@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1403, null, 1, new DateTime(2021, 2, 3, 12, 59, 43, 641, DateTimeKind.Local).AddTicks(3775), 13, "Yarema_Mogilevskii@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 142, null, 0, new DateTime(2021, 2, 27, 12, 43, 52, 697, DateTimeKind.Local).AddTicks(559), 278, "(050) 947-38-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1397, null, 0, new DateTime(2020, 7, 17, 3, 24, 55, 184, DateTimeKind.Local).AddTicks(1320), 278, "(092) 440-73-97" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 852, null, 0, new DateTime(2020, 10, 15, 0, 56, 36, 942, DateTimeKind.Local).AddTicks(9388), 60, "(094) 486-21-94" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 751, null, 0, new DateTime(2020, 9, 13, 2, 5, 56, 215, DateTimeKind.Local).AddTicks(14), 59, "(099) 170-25-34" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 20, null, 0, new DateTime(2020, 9, 19, 23, 1, 46, 89, DateTimeKind.Local).AddTicks(4996), 59, "(093) 021-32-53" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 895, null, 1, new DateTime(2020, 9, 6, 19, 10, 2, 951, DateTimeKind.Local).AddTicks(8600), 58, "Svyatoslav69@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 791, null, 0, new DateTime(2020, 12, 1, 13, 46, 22, 261, DateTimeKind.Local).AddTicks(4050), 58, "(050) 231-08-64" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 711, null, 1, new DateTime(2020, 10, 29, 7, 50, 50, 292, DateTimeKind.Local).AddTicks(7334), 58, "Vilenina.Luchko56@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 483, null, 0, new DateTime(2020, 9, 9, 18, 21, 44, 235, DateTimeKind.Local).AddTicks(9225), 58, "(044) 791-32-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 448, null, 1, new DateTime(2021, 1, 22, 3, 29, 25, 956, DateTimeKind.Local).AddTicks(7687), 58, "Lyubava.Berdnik75@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 475, null, 0, new DateTime(2020, 3, 28, 5, 16, 7, 370, DateTimeKind.Local).AddTicks(6215), 279, "(098) 234-46-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 667, null, 1, new DateTime(2020, 8, 12, 14, 45, 45, 956, DateTimeKind.Local).AddTicks(4580), 279, "Orina.Sushko99@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 260, null, 1, new DateTime(2020, 9, 12, 8, 15, 10, 921, DateTimeKind.Local).AddTicks(806), 59, "Nadiya46@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 825, null, 1, new DateTime(2020, 10, 15, 6, 54, 40, 340, DateTimeKind.Local).AddTicks(288), 279, "Mechislav45@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1009, null, 1, new DateTime(2020, 8, 7, 3, 36, 14, 489, DateTimeKind.Local).AddTicks(5896), 60, "Kvitoslava45@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 582, null, 0, new DateTime(2021, 2, 8, 21, 39, 18, 120, DateTimeKind.Local).AddTicks(4625), 27, "(098) 338-65-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 833, null, 1, new DateTime(2021, 1, 10, 19, 38, 38, 993, DateTimeKind.Local).AddTicks(1395), 297, "Mikita_Shupik75@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 141, null, 1, new DateTime(2020, 3, 4, 0, 22, 19, 707, DateTimeKind.Local).AddTicks(193), 12, "Alla_Petriv@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 223, null, 0, new DateTime(2020, 8, 6, 6, 46, 59, 530, DateTimeKind.Local).AddTicks(6602), 12, "(092) 251-06-45" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 207, null, 1, new DateTime(2020, 4, 10, 19, 33, 14, 981, DateTimeKind.Local).AddTicks(5149), 62, "Agripina26@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 192, null, 1, new DateTime(2021, 1, 5, 11, 9, 42, 982, DateTimeKind.Local).AddTicks(9297), 62, "Rostislava.Openko5@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 873, null, 0, new DateTime(2021, 2, 24, 13, 1, 43, 473, DateTimeKind.Local).AddTicks(2184), 276, "(063) 093-49-22" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 308, null, 0, new DateTime(2020, 12, 2, 0, 25, 34, 452, DateTimeKind.Local).AddTicks(7277), 12, "(099) 243-63-90" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1309, null, 1, new DateTime(2020, 7, 12, 12, 51, 12, 294, DateTimeKind.Local).AddTicks(9897), 12, "Lyuborada.Balaban@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 685, null, 0, new DateTime(2020, 11, 24, 22, 15, 1, 850, DateTimeKind.Local).AddTicks(1062), 277, "(096) 671-30-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 133, null, 1, new DateTime(2020, 11, 1, 20, 17, 9, 891, DateTimeKind.Local).AddTicks(9111), 277, "Klavdiya.Baranovska28@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1060, null, 0, new DateTime(2020, 11, 18, 3, 26, 37, 723, DateTimeKind.Local).AddTicks(5806), 61, "(073) 925-47-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1010, null, 0, new DateTime(2020, 12, 7, 8, 19, 4, 634, DateTimeKind.Local).AddTicks(3730), 61, "(063) 795-32-72" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 704, null, 1, new DateTime(2020, 11, 5, 9, 7, 59, 740, DateTimeKind.Local).AddTicks(9550), 61, "Alevtin74@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 368, null, 1, new DateTime(2020, 9, 14, 0, 33, 25, 219, DateTimeKind.Local).AddTicks(7443), 61, "Oriyana_Yarmak29@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 233, null, 0, new DateTime(2020, 4, 7, 9, 38, 21, 810, DateTimeKind.Local).AddTicks(1842), 277, "(099) 121-25-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 383, null, 0, new DateTime(2020, 4, 27, 7, 0, 53, 747, DateTimeKind.Local).AddTicks(1287), 277, "(091) 941-88-50" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 428, null, 0, new DateTime(2020, 6, 30, 8, 45, 2, 242, DateTimeKind.Local).AddTicks(8662), 277, "(091) 335-71-32" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 628, null, 1, new DateTime(2020, 7, 20, 7, 47, 23, 114, DateTimeKind.Local).AddTicks(1173), 277, "Dobroslava_Tindarei@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1405, null, 0, new DateTime(2021, 2, 23, 3, 53, 33, 371, DateTimeKind.Local).AddTicks(3295), 61, "(044) 838-81-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 844, null, 1, new DateTime(2020, 9, 12, 6, 28, 55, 552, DateTimeKind.Local).AddTicks(7525), 57, "Vyacheslava63@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 357, null, 1, new DateTime(2020, 5, 15, 12, 25, 7, 456, DateTimeKind.Local).AddTicks(5585), 57, "Olena_Koman@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 292, null, 0, new DateTime(2021, 2, 2, 7, 51, 12, 424, DateTimeKind.Local).AddTicks(1209), 57, "(073) 020-58-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 196, null, 0, new DateTime(2020, 9, 6, 23, 13, 23, 220, DateTimeKind.Local).AddTicks(4928), 280, "(044) 231-55-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 763, null, 0, new DateTime(2021, 2, 27, 5, 34, 36, 866, DateTimeKind.Local).AddTicks(5821), 280, "(096) 455-61-85" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1050, null, 1, new DateTime(2020, 5, 24, 19, 43, 41, 967, DateTimeKind.Local).AddTicks(474), 55, "Orina49@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1048, null, 1, new DateTime(2021, 1, 29, 6, 53, 40, 291, DateTimeKind.Local).AddTicks(8412), 55, "Georgii_Yemec21@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 75, null, 0, new DateTime(2020, 6, 29, 8, 30, 29, 738, DateTimeKind.Local).AddTicks(533), 55, "(094) 262-30-79" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 136, null, 0, new DateTime(2020, 12, 15, 0, 32, 19, 819, DateTimeKind.Local).AddTicks(9258), 296, "(093) 089-26-90" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 982, null, 0, new DateTime(2020, 8, 28, 19, 0, 39, 126, DateTimeKind.Local).AddTicks(5802), 280, "(073) 952-80-10" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1033, null, 0, new DateTime(2020, 12, 31, 22, 25, 3, 190, DateTimeKind.Local).AddTicks(5393), 280, "(044) 874-80-36" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 103, null, 0, new DateTime(2021, 1, 6, 5, 30, 56, 332, DateTimeKind.Local).AddTicks(3124), 280, "(091) 762-57-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1441, null, 1, new DateTime(2020, 10, 23, 18, 0, 6, 681, DateTimeKind.Local).AddTicks(9339), 280, "Nina_Kolomiyec80@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 110, null, 1, new DateTime(2020, 5, 20, 1, 20, 48, 214, DateTimeKind.Local).AddTicks(2794), 296, "Miron40@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1144, null, 0, new DateTime(2020, 10, 22, 18, 8, 58, 982, DateTimeKind.Local).AddTicks(9230), 54, "(073) 795-62-51" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 886, null, 0, new DateTime(2020, 11, 18, 0, 57, 35, 572, DateTimeKind.Local).AddTicks(33), 54, "(093) 317-29-02" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 698, null, 1, new DateTime(2020, 5, 22, 21, 41, 20, 71, DateTimeKind.Local).AddTicks(6700), 54, "Ratimir.Andrukhovich@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 19, null, 1, new DateTime(2020, 6, 8, 23, 22, 15, 255, DateTimeKind.Local).AddTicks(8659), 17, "Solomiya_Yarmak@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1014, null, 1, new DateTime(2020, 8, 20, 19, 27, 6, 140, DateTimeKind.Local).AddTicks(9389), 17, "Shek4@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 578, null, 0, new DateTime(2020, 12, 17, 13, 56, 27, 220, DateTimeKind.Local).AddTicks(4026), 54, "(044) 106-31-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 566, null, 1, new DateTime(2020, 11, 18, 3, 1, 3, 113, DateTimeKind.Local).AddTicks(2625), 54, "Dobromisl.Bashuk95@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 968, null, 0, new DateTime(2020, 4, 4, 21, 52, 25, 445, DateTimeKind.Local).AddTicks(8437), 16, "(044) 550-35-64" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 6, null, 0, new DateTime(2021, 2, 20, 10, 37, 36, 771, DateTimeKind.Local).AddTicks(7818), 280, "(099) 388-28-73" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1062, null, 0, new DateTime(2020, 10, 20, 15, 6, 13, 0, DateTimeKind.Local).AddTicks(9877), 296, "(099) 134-07-99" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1305, null, 0, new DateTime(2020, 8, 8, 18, 35, 11, 24, DateTimeKind.Local).AddTicks(5436), 15, "(096) 018-26-27" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 253, null, 0, new DateTime(2020, 5, 5, 4, 8, 45, 694, DateTimeKind.Local).AddTicks(385), 57, "(063) 331-34-94" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 212, null, 0, new DateTime(2020, 7, 10, 23, 33, 17, 717, DateTimeKind.Local).AddTicks(6786), 57, "(095) 608-01-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 931, null, 0, new DateTime(2020, 5, 4, 13, 22, 11, 220, DateTimeKind.Local).AddTicks(3822), 279, "(096) 418-35-70" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 958, null, 1, new DateTime(2020, 8, 1, 10, 53, 41, 731, DateTimeKind.Local).AddTicks(8346), 279, "Vseslava25@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1088, null, 0, new DateTime(2020, 10, 1, 5, 54, 3, 472, DateTimeKind.Local).AddTicks(516), 279, "(073) 132-29-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 635, null, 1, new DateTime(2020, 12, 24, 10, 45, 59, 707, DateTimeKind.Local).AddTicks(8622), 14, "Kseniya_Kornyiichuk78@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 673, null, 1, new DateTime(2020, 8, 8, 6, 10, 23, 911, DateTimeKind.Local).AddTicks(959), 14, "Lesya_Durdinec@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 910, null, 0, new DateTime(2020, 12, 30, 23, 1, 52, 897, DateTimeKind.Local).AddTicks(6384), 14, "(044) 194-13-33" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1225, null, 1, new DateTime(2020, 3, 7, 23, 12, 53, 356, DateTimeKind.Local).AddTicks(6204), 279, "Zoryan.Boreckii42@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 964, null, 0, new DateTime(2020, 9, 23, 11, 50, 57, 829, DateTimeKind.Local).AddTicks(8745), 14, "(063) 618-10-30" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1067, null, 0, new DateTime(2020, 6, 28, 8, 40, 36, 486, DateTimeKind.Local).AddTicks(3064), 14, "(073) 426-52-94" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1418, null, 1, new DateTime(2020, 6, 11, 2, 38, 52, 525, DateTimeKind.Local).AddTicks(6366), 56, "Vadim_Minyailo@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1051, null, 0, new DateTime(2021, 2, 7, 1, 19, 2, 220, DateTimeKind.Local).AddTicks(3943), 56, "(097) 549-15-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 76, null, 0, new DateTime(2020, 10, 8, 2, 37, 17, 223, DateTimeKind.Local).AddTicks(8678), 56, "(094) 313-19-37" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 53, null, 1, new DateTime(2020, 11, 5, 23, 34, 8, 185, DateTimeKind.Local).AddTicks(6288), 56, "Agapiya_Dzyuba@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1269, null, 1, new DateTime(2021, 1, 19, 1, 28, 48, 435, DateTimeKind.Local).AddTicks(8406), 14, "Dobromisla75@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1429, null, 0, new DateTime(2020, 9, 25, 8, 54, 49, 636, DateTimeKind.Local).AddTicks(395), 296, "(066) 132-60-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 91, null, 1, new DateTime(2021, 2, 17, 17, 40, 9, 655, DateTimeKind.Local).AddTicks(6120), 15, "Apollinariya89@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 607, null, 1, new DateTime(2020, 8, 14, 23, 5, 24, 376, DateTimeKind.Local).AddTicks(7001), 15, "Sofiya.Likovich46@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 467, null, 1, new DateTime(2021, 1, 11, 22, 26, 28, 620, DateTimeKind.Local).AddTicks(9625), 54, "Lyubomir_Yushik@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 662, null, 1, new DateTime(2020, 3, 11, 19, 9, 18, 168, DateTimeKind.Local).AddTicks(9143), 46, "Rayina87@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 311, null, 1, new DateTime(2020, 10, 31, 16, 14, 56, 111, DateTimeKind.Local).AddTicks(5771), 46, "Mstislava_Kaskiv@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 22, null, 0, new DateTime(2020, 5, 5, 10, 47, 16, 638, DateTimeKind.Local).AddTicks(6828), 46, "(050) 531-52-85" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 518, null, 1, new DateTime(2020, 3, 28, 16, 34, 54, 203, DateTimeKind.Local).AddTicks(9395), 25, "Kalina.Levadovska90@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 875, null, 0, new DateTime(2020, 5, 7, 12, 35, 47, 682, DateTimeKind.Local).AddTicks(744), 25, "(097) 655-65-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 355, null, 1, new DateTime(2020, 8, 5, 18, 8, 2, 786, DateTimeKind.Local).AddTicks(7531), 289, "Oleksandr_Porivai@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 382, null, 0, new DateTime(2020, 5, 28, 16, 59, 1, 987, DateTimeKind.Local).AddTicks(3243), 289, "(063) 267-68-36" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 444, null, 1, new DateTime(2020, 12, 13, 17, 9, 3, 468, DateTimeKind.Local).AddTicks(9372), 289, "Yaromir64@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 758, null, 1, new DateTime(2020, 10, 9, 16, 34, 32, 339, DateTimeKind.Local).AddTicks(2683), 32, "Yuliya.Gorbach@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 327, null, 0, new DateTime(2020, 12, 7, 14, 27, 49, 119, DateTimeKind.Local).AddTicks(6376), 32, "(092) 524-65-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 175, null, 1, new DateTime(2020, 9, 6, 13, 20, 9, 77, DateTimeKind.Local).AddTicks(4499), 32, "Ustim45@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 220, null, 0, new DateTime(2020, 6, 13, 10, 24, 44, 615, DateTimeKind.Local).AddTicks(6085), 25, "(097) 157-09-49" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 807, null, 0, new DateTime(2021, 1, 7, 3, 45, 16, 226, DateTimeKind.Local).AddTicks(143), 289, "(063) 431-37-51" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1047, null, 1, new DateTime(2020, 9, 23, 14, 5, 17, 905, DateTimeKind.Local).AddTicks(9934), 289, "Ratimir0@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 896, null, 1, new DateTime(2020, 9, 25, 16, 44, 51, 93, DateTimeKind.Local).AddTicks(3447), 25, "Irina62@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1208, null, 0, new DateTime(2020, 3, 3, 17, 2, 41, 216, DateTimeKind.Local).AddTicks(7827), 25, "(098) 917-15-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1262, null, 0, new DateTime(2020, 6, 24, 0, 41, 52, 947, DateTimeKind.Local).AddTicks(6685), 25, "(098) 291-48-68" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1462, null, 1, new DateTime(2020, 4, 26, 1, 11, 19, 178, DateTimeKind.Local).AddTicks(5298), 289, "Darislava22@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1298, null, 0, new DateTime(2020, 3, 19, 22, 46, 25, 133, DateTimeKind.Local).AddTicks(4036), 25, "(044) 681-07-38" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1311, null, 1, new DateTime(2020, 12, 6, 18, 19, 44, 924, DateTimeKind.Local).AddTicks(8027), 25, "Dobromisla22@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 92, null, 0, new DateTime(2020, 7, 8, 13, 55, 1, 827, DateTimeKind.Local).AddTicks(1727), 290, "(095) 020-56-47" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1006, null, 1, new DateTime(2021, 1, 11, 1, 59, 26, 137, DateTimeKind.Local).AddTicks(4866), 289, "Miroslava.Motriyenko80@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1099, null, 1, new DateTime(2020, 7, 13, 23, 12, 38, 940, DateTimeKind.Local).AddTicks(221), 290, "Anastasii_Butko26@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1233, null, 0, new DateTime(2020, 3, 7, 6, 35, 47, 89, DateTimeKind.Local).AddTicks(9221), 33, "(094) 552-15-89" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1442, null, 1, new DateTime(2020, 8, 11, 4, 17, 35, 724, DateTimeKind.Local).AddTicks(7377), 33, "Vlada_Usich8@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 671, null, 1, new DateTime(2021, 2, 22, 14, 17, 3, 69, DateTimeKind.Local).AddTicks(3094), 24, "Apollinariya_Sileckii56@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1042, null, 1, new DateTime(2020, 5, 16, 7, 19, 55, 914, DateTimeKind.Local).AddTicks(3415), 35, "Sinook.Yushik71@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 640, null, 0, new DateTime(2020, 5, 31, 2, 30, 2, 406, DateTimeKind.Local).AddTicks(9691), 35, "(044) 501-36-23" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 429, null, 0, new DateTime(2020, 7, 4, 22, 14, 41, 469, DateTimeKind.Local).AddTicks(5220), 35, "(095) 163-58-62" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 126, null, 0, new DateTime(2020, 10, 10, 9, 58, 38, 418, DateTimeKind.Local).AddTicks(9856), 35, "(091) 638-86-82" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 82, null, 1, new DateTime(2020, 12, 22, 21, 32, 13, 3, DateTimeKind.Local).AddTicks(8442), 35, "Bilomir.Pavlishina39@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 919, null, 0, new DateTime(2020, 8, 18, 20, 47, 59, 89, DateTimeKind.Local).AddTicks(4468), 24, "(073) 211-51-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 206, null, 1, new DateTime(2020, 9, 1, 1, 13, 47, 362, DateTimeKind.Local).AddTicks(5006), 288, "Nataliya.Berdnik@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1341, null, 1, new DateTime(2020, 8, 7, 10, 23, 43, 235, DateTimeKind.Local).AddTicks(4888), 33, "Karina.Osadko@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 208, null, 1, new DateTime(2020, 7, 20, 22, 35, 47, 962, DateTimeKind.Local).AddTicks(6746), 288, "Valentina76@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 784, null, 0, new DateTime(2021, 2, 14, 10, 20, 25, 135, DateTimeKind.Local).AddTicks(618), 34, "(050) 464-17-42" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 584, null, 0, new DateTime(2020, 12, 10, 9, 8, 3, 184, DateTimeKind.Local).AddTicks(6970), 34, "(094) 638-42-18" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 869, null, 1, new DateTime(2020, 12, 11, 17, 15, 4, 544, DateTimeKind.Local).AddTicks(2389), 288, "Yustina_Andrukhovich3@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 180, null, 0, new DateTime(2021, 1, 28, 15, 52, 54, 307, DateTimeKind.Local).AddTicks(4780), 25, "(092) 672-13-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1035, null, 1, new DateTime(2020, 4, 18, 23, 34, 34, 523, DateTimeKind.Local).AddTicks(3491), 288, "Viola.Bashuk@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1200, null, 0, new DateTime(2020, 10, 5, 16, 45, 23, 264, DateTimeKind.Local).AddTicks(3233), 288, "(066) 922-01-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1256, null, 0, new DateTime(2020, 4, 18, 7, 41, 41, 898, DateTimeKind.Local).AddTicks(6781), 288, "(094) 635-24-71" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1303, null, 1, new DateTime(2020, 10, 5, 23, 22, 50, 756, DateTimeKind.Local).AddTicks(8693), 288, "Polyana.Tryasilo86@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1368, null, 1, new DateTime(2020, 8, 20, 16, 30, 48, 660, DateTimeKind.Local).AddTicks(7346), 34, "Askold.Zinkevich@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 974, null, 0, new DateTime(2020, 3, 14, 17, 27, 53, 365, DateTimeKind.Local).AddTicks(767), 31, "(044) 121-56-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 857, null, 1, new DateTime(2020, 4, 20, 20, 25, 37, 604, DateTimeKind.Local).AddTicks(6436), 31, "Svitlana68@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 757, null, 1, new DateTime(2021, 1, 1, 2, 11, 3, 463, DateTimeKind.Local).AddTicks(6198), 31, "Shastislav5@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 972, null, 0, new DateTime(2020, 11, 30, 22, 31, 40, 525, DateTimeKind.Local).AddTicks(8364), 29, "(092) 290-15-91" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 745, null, 1, new DateTime(2020, 9, 4, 1, 59, 56, 893, DateTimeKind.Local).AddTicks(7539), 26, "Garnoslav.Lindik15@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 145, null, 0, new DateTime(2020, 11, 27, 22, 50, 30, 986, DateTimeKind.Local).AddTicks(6463), 291, "(098) 537-96-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 235, null, 0, new DateTime(2020, 3, 30, 3, 8, 53, 342, DateTimeKind.Local).AddTicks(1283), 291, "(050) 555-05-04" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 688, null, 1, new DateTime(2021, 1, 16, 10, 22, 10, 94, DateTimeKind.Local).AddTicks(5375), 291, "Vilenina12@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 912, null, 1, new DateTime(2021, 2, 20, 17, 26, 27, 229, DateTimeKind.Local).AddTicks(3348), 28, "Bilomir23@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 732, null, 0, new DateTime(2020, 9, 14, 2, 24, 49, 554, DateTimeKind.Local).AddTicks(538), 28, "(094) 499-64-01" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 424, null, 0, new DateTime(2020, 4, 5, 12, 41, 20, 486, DateTimeKind.Local).AddTicks(862), 28, "(044) 448-09-85" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1015, null, 1, new DateTime(2020, 4, 19, 5, 7, 33, 373, DateTimeKind.Local).AddTicks(8251), 29, "Bratoslav_Danilishina39@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1020, null, 0, new DateTime(2020, 6, 3, 1, 42, 43, 200, DateTimeKind.Local).AddTicks(3195), 291, "(093) 790-06-16" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 769, null, 1, new DateTime(2021, 1, 7, 13, 21, 12, 837, DateTimeKind.Local).AddTicks(3760), 26, "Boleslava.Lomovii44@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1359, null, 0, new DateTime(2020, 3, 29, 19, 32, 32, 80, DateTimeKind.Local).AddTicks(6400), 291, "(095) 663-30-65" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1395, null, 0, new DateTime(2020, 8, 15, 15, 29, 27, 140, DateTimeKind.Local).AddTicks(1414), 291, "(066) 071-68-14" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1482, null, 0, new DateTime(2020, 3, 14, 0, 26, 4, 817, DateTimeKind.Local).AddTicks(6406), 291, "(073) 572-61-81" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1164, null, 0, new DateTime(2021, 2, 24, 3, 34, 25, 203, DateTimeKind.Local).AddTicks(2676), 27, "(063) 604-07-54" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1398, null, 1, new DateTime(2020, 11, 30, 21, 15, 50, 954, DateTimeKind.Local).AddTicks(2469), 26, "Anastasiya70@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1002, null, 0, new DateTime(2020, 7, 3, 20, 6, 37, 759, DateTimeKind.Local).AddTicks(6969), 27, "(044) 832-43-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 909, null, 1, new DateTime(2020, 7, 21, 12, 32, 52, 443, DateTimeKind.Local).AddTicks(8595), 27, "Motrya_Gorova@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 766, null, 0, new DateTime(2020, 8, 24, 19, 45, 25, 518, DateTimeKind.Local).AddTicks(8842), 26, "(066) 101-52-96" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 104, null, 1, new DateTime(2020, 12, 21, 17, 24, 40, 511, DateTimeKind.Local).AddTicks(9242), 26, "Dana_Gladkivskii@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1182, null, 1, new DateTime(2020, 10, 16, 17, 27, 7, 465, DateTimeKind.Local).AddTicks(5853), 29, "Anzhela74@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1239, null, 0, new DateTime(2021, 1, 12, 14, 7, 10, 375, DateTimeKind.Local).AddTicks(976), 29, "(097) 235-03-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 742, null, 0, new DateTime(2020, 9, 30, 1, 38, 44, 94, DateTimeKind.Local).AddTicks(4855), 31, "(093) 233-90-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1382, null, 1, new DateTime(2020, 8, 24, 22, 29, 36, 871, DateTimeKind.Local).AddTicks(6493), 25, "Snizhana20@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1319, null, 0, new DateTime(2021, 2, 8, 22, 43, 23, 270, DateTimeKind.Local).AddTicks(4485), 292, "(073) 681-30-06" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 526, null, 0, new DateTime(2020, 11, 28, 2, 49, 1, 966, DateTimeKind.Local).AddTicks(123), 31, "(094) 413-76-29" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1238, null, 0, new DateTime(2020, 3, 30, 17, 41, 53, 259, DateTimeKind.Local).AddTicks(3946), 290, "(096) 315-15-32" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 697, null, 0, new DateTime(2020, 12, 4, 3, 30, 12, 865, DateTimeKind.Local).AddTicks(7976), 292, "(063) 551-43-54" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 562, null, 1, new DateTime(2020, 9, 12, 17, 2, 21, 177, DateTimeKind.Local).AddTicks(1831), 292, "Adriana.Miklukho@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 465, null, 0, new DateTime(2020, 12, 15, 8, 49, 27, 803, DateTimeKind.Local).AddTicks(8958), 292, "(050) 840-08-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1456, null, 1, new DateTime(2021, 2, 6, 23, 45, 45, 674, DateTimeKind.Local).AddTicks(8870), 30, "Azaliya.Borochko@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1306, null, 1, new DateTime(2021, 1, 13, 6, 58, 52, 828, DateTimeKind.Local).AddTicks(4435), 30, "Adam_Tryasilo@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 778, null, 1, new DateTime(2020, 11, 18, 20, 57, 58, 352, DateTimeKind.Local).AddTicks(2556), 30, "Igor.Gromiko57@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 369, null, 0, new DateTime(2020, 9, 4, 21, 23, 10, 19, DateTimeKind.Local).AddTicks(6646), 30, "(066) 813-17-85" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 167, null, 0, new DateTime(2020, 4, 4, 4, 35, 25, 943, DateTimeKind.Local).AddTicks(9892), 30, "(098) 661-68-30" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 381, null, 0, new DateTime(2020, 12, 15, 4, 39, 37, 200, DateTimeKind.Local).AddTicks(2934), 292, "(044) 437-63-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 89, null, 1, new DateTime(2021, 1, 15, 22, 15, 40, 236, DateTimeKind.Local).AddTicks(8688), 26, "Sergii.Mariyevskii@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 96, null, 0, new DateTime(2021, 1, 31, 21, 47, 22, 501, DateTimeKind.Local).AddTicks(1335), 26, "(093) 209-07-18" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1491, null, 0, new DateTime(2020, 12, 5, 3, 25, 59, 438, DateTimeKind.Local).AddTicks(183), 29, "(066) 373-52-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1490, null, 1, new DateTime(2021, 2, 25, 23, 2, 10, 964, DateTimeKind.Local).AddTicks(9755), 29, "Borimir.Garai@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1335, null, 1, new DateTime(2020, 9, 21, 9, 42, 33, 880, DateTimeKind.Local).AddTicks(3041), 29, "Miloslava67@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 528, null, 0, new DateTime(2021, 1, 11, 19, 8, 40, 157, DateTimeKind.Local).AddTicks(4740), 24, "(097) 392-85-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1331, null, 0, new DateTime(2021, 1, 6, 3, 53, 31, 760, DateTimeKind.Local).AddTicks(9453), 287, "(092) 884-69-79" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1, null, 1, new DateTime(2020, 3, 31, 1, 16, 11, 442, DateTimeKind.Local).AddTicks(8360), 36, "Radmila_Openko@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 26, null, 0, new DateTime(2020, 7, 27, 6, 1, 35, 421, DateTimeKind.Local).AddTicks(316), 36, "(091) 446-71-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 787, null, 0, new DateTime(2020, 11, 26, 14, 2, 4, 959, DateTimeKind.Local).AddTicks(3436), 285, "(098) 688-30-01" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1112, null, 0, new DateTime(2020, 5, 11, 2, 19, 57, 58, DateTimeKind.Local).AddTicks(5164), 285, "(091) 677-35-96" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1248, null, 0, new DateTime(2020, 11, 27, 16, 45, 34, 886, DateTimeKind.Local).AddTicks(7589), 285, "(092) 734-45-29" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1358, null, 0, new DateTime(2020, 9, 5, 4, 35, 27, 324, DateTimeKind.Local).AddTicks(4788), 43, "(063) 613-83-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1055, null, 0, new DateTime(2020, 3, 8, 5, 7, 38, 92, DateTimeKind.Local).AddTicks(8035), 43, "(063) 220-27-44" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 938, null, 1, new DateTime(2020, 4, 1, 2, 12, 56, 559, DateTimeKind.Local).AddTicks(1435), 43, "Daleslava.Korovyak@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1338, null, 0, new DateTime(2021, 1, 6, 23, 55, 45, 869, DateTimeKind.Local).AddTicks(6721), 285, "(050) 868-36-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1421, null, 0, new DateTime(2021, 2, 20, 6, 40, 3, 619, DateTimeKind.Local).AddTicks(4514), 285, "(098) 552-66-66" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 436, null, 0, new DateTime(2020, 10, 4, 23, 39, 51, 465, DateTimeKind.Local).AddTicks(6403), 285, "(044) 150-51-10" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1017, null, 0, new DateTime(2020, 9, 10, 12, 3, 58, 973, DateTimeKind.Local).AddTicks(4712), 22, "(092) 281-16-71" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1307, null, 1, new DateTime(2020, 3, 28, 3, 8, 29, 863, DateTimeKind.Local).AddTicks(681), 42, "Zvenimir.Kovalskii@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1214, null, 1, new DateTime(2020, 4, 22, 17, 57, 37, 212, DateTimeKind.Local).AddTicks(314), 42, "Tur19@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1122, null, 1, new DateTime(2020, 11, 3, 13, 0, 51, 20, DateTimeKind.Local).AddTicks(3270), 42, "Oksana.Petrin56@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1158, null, 1, new DateTime(2021, 1, 29, 14, 9, 26, 706, DateTimeKind.Local).AddTicks(5845), 22, "Burevist.Kovalenko0@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1004, null, 0, new DateTime(2020, 11, 4, 10, 58, 37, 946, DateTimeKind.Local).AddTicks(5624), 41, "(066) 952-08-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 897, null, 0, new DateTime(2020, 10, 16, 22, 18, 12, 798, DateTimeKind.Local).AddTicks(9115), 41, "(095) 579-02-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 669, null, 1, new DateTime(2021, 1, 29, 4, 56, 53, 340, DateTimeKind.Local).AddTicks(6160), 41, "Yukhim_Sherbak64@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 586, null, 0, new DateTime(2020, 11, 30, 13, 29, 52, 100, DateTimeKind.Local).AddTicks(5165), 41, "(098) 026-59-06" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1102, null, 1, new DateTime(2020, 10, 29, 18, 56, 7, 421, DateTimeKind.Local).AddTicks(5906), 22, "Nazar.Demchishin@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 65, null, 1, new DateTime(2020, 11, 22, 13, 14, 21, 718, DateTimeKind.Local).AddTicks(9528), 44, "Bozhena.Moskal@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 84, null, 0, new DateTime(2020, 8, 24, 22, 33, 8, 269, DateTimeKind.Local).AddTicks(6925), 44, "(094) 112-17-62" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 380, null, 0, new DateTime(2020, 4, 26, 6, 8, 43, 895, DateTimeKind.Local).AddTicks(9344), 44, "(063) 250-13-89" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 542, null, 1, new DateTime(2020, 8, 8, 15, 54, 13, 616, DateTimeKind.Local).AddTicks(8142), 284, "Solomiya.Sileckii@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 975, null, 0, new DateTime(2020, 3, 25, 15, 27, 8, 205, DateTimeKind.Local).AddTicks(7450), 284, "(093) 882-62-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 295, null, 1, new DateTime(2020, 4, 11, 6, 21, 16, 442, DateTimeKind.Local).AddTicks(1008), 294, "Milodara.Kononec@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 158, null, 1, new DateTime(2020, 8, 27, 10, 5, 26, 855, DateTimeKind.Local).AddTicks(8519), 285, "Dobromir_Yashuk@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1154, null, 0, new DateTime(2020, 10, 1, 17, 28, 22, 324, DateTimeKind.Local).AddTicks(3839), 45, "(091) 619-88-83" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 842, null, 0, new DateTime(2020, 5, 27, 8, 32, 9, 803, DateTimeKind.Local).AddTicks(7706), 45, "(094) 523-04-86" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 794, null, 1, new DateTime(2020, 4, 30, 4, 47, 52, 217, DateTimeKind.Local).AddTicks(1841), 45, "Tur.Shumilo68@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 644, null, 1, new DateTime(2021, 1, 11, 16, 27, 25, 383, DateTimeKind.Local).AddTicks(1382), 45, "Khristina.Lanovii54@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 272, null, 0, new DateTime(2020, 4, 9, 2, 27, 34, 95, DateTimeKind.Local).AddTicks(9176), 294, "(095) 267-64-05" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 30, null, 1, new DateTime(2020, 6, 29, 1, 17, 48, 223, DateTimeKind.Local).AddTicks(7687), 21, "Slava_Unich38@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 627, null, 1, new DateTime(2020, 3, 30, 18, 37, 31, 206, DateTimeKind.Local).AddTicks(6684), 45, "Slavomir.Storchak45@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 259, null, 1, new DateTime(2021, 1, 8, 11, 42, 52, 101, DateTimeKind.Local).AddTicks(832), 45, "Palazhka6@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 240, null, 1, new DateTime(2020, 10, 13, 14, 28, 11, 752, DateTimeKind.Local).AddTicks(6065), 285, "Bogdan69@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 249, null, 0, new DateTime(2020, 5, 10, 23, 6, 40, 219, DateTimeKind.Local).AddTicks(1108), 285, "(096) 194-49-01" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 234, null, 1, new DateTime(2020, 3, 9, 19, 11, 40, 504, DateTimeKind.Local).AddTicks(520), 21, "Maryan_Makhno81@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1408, null, 0, new DateTime(2020, 4, 21, 7, 6, 31, 805, DateTimeKind.Local).AddTicks(4757), 21, "(044) 759-13-32" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 300, null, 0, new DateTime(2020, 7, 9, 8, 22, 41, 220, DateTimeKind.Local).AddTicks(2527), 285, "(050) 836-75-11" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1323, null, 1, new DateTime(2021, 1, 24, 15, 45, 26, 366, DateTimeKind.Local).AddTicks(2407), 44, "Miroslava_Yanyuk14@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 739, null, 1, new DateTime(2020, 7, 20, 10, 5, 52, 587, DateTimeKind.Local).AddTicks(4040), 44, "Afanasii74@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 171, null, 0, new DateTime(2021, 2, 24, 13, 43, 57, 983, DateTimeKind.Local).AddTicks(6980), 41, "(050) 630-33-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 285, null, 0, new DateTime(2020, 9, 20, 18, 33, 22, 712, DateTimeKind.Local).AddTicks(7876), 62, "(092) 421-64-85" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 983, null, 0, new DateTime(2020, 3, 15, 22, 6, 7, 221, DateTimeKind.Local).AddTicks(2085), 40, "(092) 881-35-50" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 614, null, 1, new DateTime(2020, 12, 11, 21, 29, 30, 256, DateTimeKind.Local).AddTicks(1610), 40, "Kii39@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 32, null, 1, new DateTime(2021, 2, 10, 19, 32, 42, 80, DateTimeKind.Local).AddTicks(2385), 286, "Mstislava.Petriv45@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 230, null, 0, new DateTime(2020, 10, 6, 7, 51, 34, 129, DateTimeKind.Local).AddTicks(6123), 286, "(044) 083-02-75" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 981, null, 1, new DateTime(2021, 2, 2, 19, 35, 13, 852, DateTimeKind.Local).AddTicks(9577), 286, "Vlasta.Shiyan@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1016, null, 0, new DateTime(2020, 7, 3, 2, 12, 4, 262, DateTimeKind.Local).AddTicks(7627), 37, "(050) 302-34-69" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 153, null, 1, new DateTime(2021, 2, 5, 16, 44, 54, 981, DateTimeKind.Local).AddTicks(9519), 293, "Antoniya76@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 463, null, 0, new DateTime(2020, 12, 4, 22, 26, 15, 991, DateTimeKind.Local).AddTicks(1941), 37, "(095) 055-80-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 420, null, 1, new DateTime(2020, 3, 4, 13, 47, 54, 712, DateTimeKind.Local).AddTicks(9931), 37, "Nemir3@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1218, null, 0, new DateTime(2020, 11, 23, 2, 1, 34, 122, DateTimeKind.Local).AddTicks(6537), 286, "(044) 821-24-72" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 184, null, 0, new DateTime(2020, 4, 22, 14, 42, 44, 712, DateTimeKind.Local).AddTicks(8349), 293, "(092) 908-11-80" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1354, null, 0, new DateTime(2021, 2, 19, 1, 1, 38, 624, DateTimeKind.Local).AddTicks(8132), 286, "(094) 683-10-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1052, null, 1, new DateTime(2020, 7, 26, 0, 34, 37, 255, DateTimeKind.Local).AddTicks(4513), 36, "Kupava.Dzyubyak46@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1019, null, 1, new DateTime(2020, 3, 14, 2, 59, 23, 645, DateTimeKind.Local).AddTicks(7704), 36, "Anastas_Stoyan36@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 774, null, 1, new DateTime(2020, 9, 8, 7, 17, 57, 275, DateTimeKind.Local).AddTicks(7627), 36, "Gelena_Tkachenko41@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 687, null, 1, new DateTime(2020, 7, 1, 8, 0, 37, 548, DateTimeKind.Local).AddTicks(4745), 36, "Vilena.Pasichnik@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 66, null, 0, new DateTime(2020, 10, 5, 20, 56, 29, 958, DateTimeKind.Local).AddTicks(727), 24, "(098) 502-30-81" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 629, null, 1, new DateTime(2021, 1, 17, 0, 14, 49, 93, DateTimeKind.Local).AddTicks(5430), 36, "Syuzana46@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 503, null, 1, new DateTime(2020, 9, 19, 4, 15, 35, 24, DateTimeKind.Local).AddTicks(5842), 36, "Oriyana66@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 302, null, 0, new DateTime(2020, 9, 19, 6, 3, 17, 345, DateTimeKind.Local).AddTicks(9301), 36, "(095) 545-35-31" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 755, null, 0, new DateTime(2020, 11, 4, 5, 34, 38, 345, DateTimeKind.Local).AddTicks(7022), 287, "(092) 694-89-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 837, null, 1, new DateTime(2021, 1, 19, 9, 47, 41, 148, DateTimeKind.Local).AddTicks(9454), 293, "Omelyan.Osadko61@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1104, null, 1, new DateTime(2020, 7, 1, 11, 9, 29, 847, DateTimeKind.Local).AddTicks(6404), 293, "Timofii87@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 297, null, 1, new DateTime(2020, 3, 14, 3, 37, 12, 106, DateTimeKind.Local).AddTicks(2912), 38, "Zhanna.Sayenko@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 79, null, 1, new DateTime(2021, 3, 1, 2, 52, 7, 638, DateTimeKind.Local).AddTicks(1642), 40, "Vasilina_Shudrik@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 23, null, 1, new DateTime(2020, 3, 12, 15, 6, 51, 934, DateTimeKind.Local).AddTicks(9411), 40, "Antonii15@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1197, null, 0, new DateTime(2020, 9, 24, 20, 14, 31, 827, DateTimeKind.Local).AddTicks(9911), 22, "(097) 444-09-64" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1389, null, 0, new DateTime(2020, 5, 29, 6, 58, 8, 121, DateTimeKind.Local).AddTicks(8599), 293, "(063) 008-26-14" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 41, null, 0, new DateTime(2020, 4, 1, 6, 33, 27, 646, DateTimeKind.Local).AddTicks(6893), 23, "(097) 890-20-23" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 120, null, 1, new DateTime(2021, 2, 9, 12, 35, 32, 583, DateTimeKind.Local).AddTicks(3798), 23, "Mechislava90@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1387, null, 0, new DateTime(2020, 5, 22, 12, 13, 19, 70, DateTimeKind.Local).AddTicks(7407), 39, "(092) 020-78-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1356, null, 1, new DateTime(2020, 5, 20, 7, 3, 29, 498, DateTimeKind.Local).AddTicks(6227), 39, "Avgustin.Lomovii@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1148, null, 1, new DateTime(2021, 1, 13, 10, 55, 52, 976, DateTimeKind.Local).AddTicks(9897), 39, "Lyubislava92@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 716, null, 1, new DateTime(2020, 4, 23, 13, 11, 41, 246, DateTimeKind.Local).AddTicks(8119), 39, "Burevist_Gamula@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 217, null, 1, new DateTime(2020, 11, 29, 19, 31, 42, 935, DateTimeKind.Local).AddTicks(7668), 39, "Marichka.Borochko81@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 323, null, 1, new DateTime(2020, 9, 11, 5, 36, 44, 332, DateTimeKind.Local).AddTicks(4294), 23, "Rayisa_Yalovii83@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 812, null, 0, new DateTime(2021, 1, 8, 23, 35, 33, 836, DateTimeKind.Local).AddTicks(6139), 23, "(094) 343-03-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1171, null, 1, new DateTime(2020, 7, 10, 18, 2, 15, 590, DateTimeKind.Local).AddTicks(5137), 38, "Taras_Moskalyuk@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 786, null, 0, new DateTime(2021, 2, 15, 17, 49, 49, 863, DateTimeKind.Local).AddTicks(6192), 38, "(066) 596-80-29" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 831, null, 0, new DateTime(2020, 9, 21, 20, 2, 31, 206, DateTimeKind.Local).AddTicks(3213), 23, "(098) 748-78-82" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1355, null, 0, new DateTime(2020, 3, 29, 7, 58, 48, 252, DateTimeKind.Local).AddTicks(6573), 293, "(091) 981-70-88" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 466, null, 1, new DateTime(2021, 1, 11, 2, 2, 8, 492, DateTimeKind.Local).AddTicks(3120), 38, "Kvitoslava96@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 397, null, 1, new DateTime(2021, 2, 26, 23, 28, 20, 943, DateTimeKind.Local).AddTicks(4762), 38, "Tamara.Stoyan53@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 676, null, 0, new DateTime(2020, 10, 26, 20, 14, 54, 103, DateTimeKind.Local).AddTicks(952), 40, "(096) 913-29-44" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 525, null, 1, new DateTime(2020, 11, 7, 17, 57, 28, 904, DateTimeKind.Local).AddTicks(8227), 62, "Kseniya.Yemec@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 98, null, 1, new DateTime(2020, 3, 4, 15, 9, 26, 550, DateTimeKind.Local).AddTicks(8130), 13, "Danilo.Mogilevska78@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 756, null, 0, new DateTime(2021, 2, 28, 14, 7, 26, 458, DateTimeKind.Local).AddTicks(9794), 62, "(092) 170-93-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 332, null, 1, new DateTime(2020, 11, 13, 16, 6, 57, 187, DateTimeKind.Local).AddTicks(7049), 267, "Bozhen89@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 548, null, 1, new DateTime(2020, 4, 9, 6, 41, 23, 348, DateTimeKind.Local).AddTicks(2418), 267, "Zinovii.Mamii93@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 600, null, 0, new DateTime(2020, 12, 22, 5, 56, 58, 853, DateTimeKind.Local).AddTicks(3448), 267, "(066) 371-53-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1138, null, 1, new DateTime(2020, 6, 26, 14, 11, 29, 687, DateTimeKind.Local).AddTicks(400), 6, "Burevist94@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1381, null, 1, new DateTime(2020, 7, 7, 13, 48, 4, 13, DateTimeKind.Local).AddTicks(374), 82, "Bratomil_Porivailo@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 625, null, 0, new DateTime(2021, 2, 10, 11, 34, 15, 309, DateTimeKind.Local).AddTicks(2318), 82, "(044) 005-42-04" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 194, null, 1, new DateTime(2020, 8, 19, 13, 47, 6, 422, DateTimeKind.Local).AddTicks(4934), 82, "Blagovista93@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 155, null, 0, new DateTime(2020, 10, 1, 3, 15, 54, 868, DateTimeKind.Local).AddTicks(4033), 7, "(099) 438-84-80" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 222, null, 1, new DateTime(2020, 5, 7, 0, 14, 38, 128, DateTimeKind.Local).AddTicks(1351), 267, "Gorimir12@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 411, null, 0, new DateTime(2020, 7, 31, 19, 48, 26, 703, DateTimeKind.Local).AddTicks(9179), 7, "(099) 294-51-39" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 378, null, 0, new DateTime(2020, 4, 14, 4, 7, 20, 942, DateTimeKind.Local).AddTicks(2212), 268, "(092) 076-80-88" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1366, null, 1, new DateTime(2021, 2, 5, 17, 26, 0, 0, DateTimeKind.Local).AddTicks(5140), 81, "Snizhan.Vasilin22@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1139, null, 0, new DateTime(2021, 2, 28, 6, 14, 40, 395, DateTimeKind.Local).AddTicks(4635), 81, "(093) 662-32-71" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1128, null, 0, new DateTime(2020, 7, 31, 13, 12, 46, 652, DateTimeKind.Local).AddTicks(9763), 81, "(098) 836-63-88" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1039, null, 1, new DateTime(2020, 12, 20, 9, 6, 38, 771, DateTimeKind.Local).AddTicks(7329), 81, "Fedora_Durdinec65@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 612, null, 1, new DateTime(2020, 10, 1, 5, 12, 33, 640, DateTimeKind.Local).AddTicks(5266), 81, "Dana17@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 485, null, 0, new DateTime(2020, 12, 8, 13, 40, 46, 970, DateTimeKind.Local).AddTicks(8940), 81, "(091) 416-64-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 454, null, 1, new DateTime(2021, 1, 9, 10, 4, 42, 750, DateTimeKind.Local).AddTicks(3617), 81, "Orest_Demchishina@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 265, null, 0, new DateTime(2020, 12, 11, 0, 34, 41, 449, DateTimeKind.Local).AddTicks(1633), 268, "(092) 274-90-16" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1133, null, 0, new DateTime(2020, 11, 14, 5, 11, 57, 533, DateTimeKind.Local).AddTicks(1847), 6, "(063) 110-32-12" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 125, null, 0, new DateTime(2020, 4, 8, 5, 15, 16, 612, DateTimeKind.Local).AddTicks(9812), 83, "(097) 978-96-00" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 588, null, 1, new DateTime(2020, 4, 7, 22, 52, 33, 651, DateTimeKind.Local).AddTicks(4342), 83, "Bryachislav_Zinkevich@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 611, null, 1, new DateTime(2021, 1, 19, 2, 21, 39, 237, DateTimeKind.Local).AddTicks(734), 85, "Yevgen81@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 394, null, 0, new DateTime(2020, 4, 29, 6, 48, 13, 196, DateTimeKind.Local).AddTicks(1383), 85, "(098) 916-88-92" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 226, null, 1, new DateTime(2020, 12, 19, 4, 9, 55, 745, DateTimeKind.Local).AddTicks(1411), 266, "Yarovid21@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 554, null, 0, new DateTime(2021, 1, 22, 12, 34, 40, 514, DateTimeKind.Local).AddTicks(9200), 266, "(063) 136-99-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 797, null, 1, new DateTime(2020, 6, 14, 20, 1, 51, 942, DateTimeKind.Local).AddTicks(1065), 266, "Bozhen_Gaiova45@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1394, null, 0, new DateTime(2021, 2, 3, 8, 58, 34, 505, DateTimeKind.Local).AddTicks(9557), 84, "(050) 295-99-42" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1352, null, 1, new DateTime(2021, 2, 18, 4, 29, 15, 635, DateTimeKind.Local).AddTicks(5706), 84, "Stepan_Zinkevich@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 62, null, 0, new DateTime(2020, 9, 20, 7, 8, 37, 400, DateTimeKind.Local).AddTicks(4539), 84, "(099) 790-59-82" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 54, null, 1, new DateTime(2020, 10, 16, 7, 21, 34, 346, DateTimeKind.Local).AddTicks(6208), 84, "Vilenina68@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1080, null, 1, new DateTime(2020, 9, 12, 20, 39, 47, 242, DateTimeKind.Local).AddTicks(2248), 266, "Albina_Yalovii68@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1423, null, 0, new DateTime(2020, 8, 26, 9, 16, 18, 80, DateTimeKind.Local).AddTicks(2282), 266, "(094) 040-25-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1370, null, 0, new DateTime(2020, 5, 13, 13, 21, 48, 85, DateTimeKind.Local).AddTicks(8844), 83, "(092) 180-31-46" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 94, null, 1, new DateTime(2020, 9, 17, 20, 55, 11, 938, DateTimeKind.Local).AddTicks(4146), 6, "Kii42@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 157, null, 0, new DateTime(2020, 12, 28, 0, 21, 40, 490, DateTimeKind.Local).AddTicks(7574), 6, "(098) 369-10-70" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 643, null, 1, new DateTime(2020, 7, 7, 4, 14, 37, 595, DateTimeKind.Local).AddTicks(6849), 6, "Yurii_Koman71@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1188, null, 1, new DateTime(2020, 8, 15, 3, 19, 19, 5, DateTimeKind.Local).AddTicks(8123), 83, "Gelena_Umanec54@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1143, null, 1, new DateTime(2020, 6, 27, 2, 28, 25, 742, DateTimeKind.Local).AddTicks(5776), 83, "Dobromila_Negoda73@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1083, null, 0, new DateTime(2020, 7, 10, 6, 16, 18, 931, DateTimeKind.Local).AddTicks(7276), 83, "(050) 668-33-27" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1078, null, 1, new DateTime(2020, 8, 1, 15, 35, 33, 733, DateTimeKind.Local).AddTicks(4412), 6, "Kornelii7@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 282, null, 1, new DateTime(2020, 10, 5, 19, 27, 34, 908, DateTimeKind.Local).AddTicks(7716), 81, "Zinayida.Tkachenko@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 648, null, 1, new DateTime(2020, 6, 25, 9, 6, 43, 934, DateTimeKind.Local).AddTicks(1379), 85, "Anzhela73@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 183, null, 0, new DateTime(2020, 10, 18, 12, 18, 43, 745, DateTimeKind.Local).AddTicks(4918), 81, "(096) 507-59-88" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 880, null, 1, new DateTime(2020, 3, 10, 5, 41, 8, 544, DateTimeKind.Local).AddTicks(4966), 268, "Ognyana_Balaban33@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1106, null, 1, new DateTime(2020, 7, 16, 6, 14, 51, 393, DateTimeKind.Local).AddTicks(3429), 78, "Oleksandra_Shindarei@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 977, null, 1, new DateTime(2020, 4, 19, 20, 19, 17, 773, DateTimeKind.Local).AddTicks(1269), 78, "Vasil.Sidlecka25@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 962, null, 1, new DateTime(2020, 11, 16, 14, 24, 58, 52, DateTimeKind.Local).AddTicks(2068), 78, "Oresta.Borochko@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 827, null, 1, new DateTime(2020, 5, 25, 13, 4, 19, 579, DateTimeKind.Local).AddTicks(8813), 78, "Zoreslav62@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 806, null, 1, new DateTime(2021, 1, 4, 5, 28, 57, 544, DateTimeKind.Local).AddTicks(5458), 78, "Yana_Balaban78@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 462, null, 1, new DateTime(2020, 5, 3, 14, 39, 49, 870, DateTimeKind.Local).AddTicks(1883), 78, "Oksana57@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 108, null, 0, new DateTime(2021, 3, 1, 1, 22, 35, 742, DateTimeKind.Local).AddTicks(7551), 78, "(092) 942-15-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 11, null, 1, new DateTime(2020, 12, 30, 14, 50, 21, 521, DateTimeKind.Local).AddTicks(5665), 78, "Alla_Golovec66@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1297, null, 0, new DateTime(2020, 5, 10, 18, 51, 30, 471, DateTimeKind.Local).AddTicks(8028), 78, "(091) 938-84-40" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1046, null, 0, new DateTime(2020, 4, 14, 7, 27, 34, 440, DateTimeKind.Local).AddTicks(5214), 269, "(044) 240-95-08" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1452, null, 1, new DateTime(2020, 3, 21, 1, 10, 5, 301, DateTimeKind.Local).AddTicks(8512), 269, "Okhrim_Pritula@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 255, null, 0, new DateTime(2020, 4, 20, 20, 14, 9, 398, DateTimeKind.Local).AddTicks(4038), 8, "(073) 607-11-10" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 262, null, 0, new DateTime(2020, 3, 4, 19, 21, 14, 635, DateTimeKind.Local).AddTicks(7092), 8, "(091) 370-56-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 377, null, 1, new DateTime(2021, 1, 19, 14, 3, 31, 856, DateTimeKind.Local).AddTicks(8356), 8, "Slavolyub82@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 556, null, 0, new DateTime(2020, 12, 31, 2, 48, 11, 555, DateTimeKind.Local).AddTicks(8735), 8, "(050) 466-70-04" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 639, null, 0, new DateTime(2020, 12, 1, 3, 36, 48, 739, DateTimeKind.Local).AddTicks(1695), 8, "(093) 588-31-30" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 765, null, 0, new DateTime(2020, 12, 5, 19, 56, 39, 995, DateTimeKind.Local).AddTicks(9688), 8, "(092) 606-55-54" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1266, null, 0, new DateTime(2020, 12, 6, 13, 58, 12, 814, DateTimeKind.Local).AddTicks(4842), 77, "(097) 832-28-15" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1451, null, 1, new DateTime(2020, 5, 10, 11, 36, 0, 579, DateTimeKind.Local).AddTicks(5490), 269, "Bilomir45@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 257, null, 1, new DateTime(2020, 6, 11, 0, 54, 36, 403, DateTimeKind.Local).AddTicks(4333), 269, "Vseslava.Pritula64@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 668, null, 0, new DateTime(2020, 6, 19, 12, 36, 31, 777, DateTimeKind.Local).AddTicks(5581), 62, "(092) 755-59-42" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 417, null, 0, new DateTime(2020, 12, 1, 8, 13, 18, 738, DateTimeKind.Local).AddTicks(4133), 79, "(092) 464-29-96" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1449, null, 0, new DateTime(2020, 6, 28, 19, 2, 38, 553, DateTimeKind.Local).AddTicks(3694), 80, "(091) 187-97-24" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1160, null, 0, new DateTime(2020, 6, 30, 18, 46, 32, 144, DateTimeKind.Local).AddTicks(7320), 80, "(099) 894-60-70" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 317, null, 1, new DateTime(2020, 10, 13, 9, 4, 40, 510, DateTimeKind.Local).AddTicks(7873), 80, "Vadim_Skiba91@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 237, null, 1, new DateTime(2020, 7, 11, 23, 9, 13, 250, DateTimeKind.Local).AddTicks(2267), 80, "Zorina.Koreckii@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 128, null, 1, new DateTime(2020, 3, 23, 4, 59, 57, 185, DateTimeKind.Local).AddTicks(9598), 80, "Vadim_Rozputnya24@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 782, null, 1, new DateTime(2020, 11, 17, 7, 49, 31, 816, DateTimeKind.Local).AddTicks(3349), 7, "Kii_Gromiko17@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1126, null, 0, new DateTime(2020, 5, 4, 2, 22, 9, 751, DateTimeKind.Local).AddTicks(4671), 7, "(066) 494-10-67" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 59, null, 0, new DateTime(2020, 4, 17, 9, 20, 31, 582, DateTimeKind.Local).AddTicks(7003), 269, "(092) 800-94-50" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 117, null, 0, new DateTime(2020, 3, 31, 0, 34, 45, 97, DateTimeKind.Local).AddTicks(1418), 269, "(098) 841-13-37" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1184, null, 0, new DateTime(2020, 12, 17, 0, 12, 36, 242, DateTimeKind.Local).AddTicks(2417), 79, "(094) 045-90-85" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1085, null, 1, new DateTime(2020, 6, 20, 14, 17, 24, 82, DateTimeKind.Local).AddTicks(7685), 79, "Mechislav_Kalach@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 722, null, 0, new DateTime(2020, 7, 21, 17, 18, 28, 112, DateTimeKind.Local).AddTicks(1064), 79, "(092) 224-07-72" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1351, null, 0, new DateTime(2021, 1, 20, 4, 55, 9, 691, DateTimeKind.Local).AddTicks(4313), 7, "(093) 219-24-69" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1267, null, 1, new DateTime(2020, 6, 20, 21, 6, 43, 421, DateTimeKind.Local).AddTicks(933), 298, "Ostap_Grigorishina@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1263, null, 0, new DateTime(2020, 8, 14, 7, 14, 22, 539, DateTimeKind.Local).AddTicks(2431), 298, "(098) 623-90-71" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1240, null, 0, new DateTime(2020, 9, 26, 19, 12, 42, 128, DateTimeKind.Local).AddTicks(4634), 298, "(044) 457-07-43" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 661, null, 0, new DateTime(2020, 11, 18, 7, 31, 25, 561, DateTimeKind.Local).AddTicks(4097), 79, "(050) 683-15-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 654, null, 0, new DateTime(2020, 12, 18, 10, 45, 44, 524, DateTimeKind.Local).AddTicks(2879), 79, "(096) 240-02-68" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 560, null, 1, new DateTime(2021, 1, 30, 2, 21, 43, 65, DateTimeKind.Local).AddTicks(8303), 79, "Rostislava_Mazun@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 804, null, 1, new DateTime(2021, 3, 2, 5, 32, 12, 959, DateTimeKind.Local).AddTicks(9245), 268, "Fayina.Romenec54@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1231, null, 1, new DateTime(2020, 5, 7, 20, 17, 59, 148, DateTimeKind.Local).AddTicks(7645), 77, "Slava_Baranovska21@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 686, null, 1, new DateTime(2020, 12, 14, 9, 38, 8, 271, DateTimeKind.Local).AddTicks(8318), 85, "Albert66@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 770, null, 0, new DateTime(2020, 3, 4, 5, 42, 30, 546, DateTimeKind.Local).AddTicks(189), 85, "(050) 436-65-88" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1236, null, 1, new DateTime(2020, 7, 4, 5, 38, 37, 575, DateTimeKind.Local).AddTicks(7253), 90, "Gradimir.Sileckii40@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1193, null, 0, new DateTime(2020, 12, 23, 17, 43, 21, 113, DateTimeKind.Local).AddTicks(9386), 90, "(050) 629-89-09" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1183, null, 1, new DateTime(2020, 5, 6, 1, 48, 10, 672, DateTimeKind.Local).AddTicks(4090), 90, "Orislava.Kononec56@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 702, null, 0, new DateTime(2020, 11, 5, 2, 57, 10, 281, DateTimeKind.Local).AddTicks(504), 90, "(096) 315-46-85" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 139, null, 0, new DateTime(2020, 4, 7, 10, 26, 36, 770, DateTimeKind.Local).AddTicks(3542), 90, "(050) 762-02-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 610, null, 1, new DateTime(2021, 1, 9, 2, 25, 41, 723, DateTimeKind.Local).AddTicks(3753), 262, "Boleslava.Gorodocka52@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 681, null, 1, new DateTime(2020, 4, 7, 10, 46, 13, 138, DateTimeKind.Local).AddTicks(726), 262, "Khristya_Kandiba@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1310, null, 0, new DateTime(2021, 1, 26, 23, 29, 58, 826, DateTimeKind.Local).AddTicks(7797), 262, "(099) 365-89-64" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1460, null, 0, new DateTime(2020, 12, 14, 5, 59, 26, 366, DateTimeKind.Local).AddTicks(8347), 90, "(091) 938-37-35" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 333, null, 0, new DateTime(2020, 7, 22, 17, 33, 31, 83, DateTimeKind.Local).AddTicks(6245), 3, "(063) 425-97-69" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 759, null, 1, new DateTime(2020, 6, 6, 10, 48, 15, 399, DateTimeKind.Local).AddTicks(8579), 3, "Arkadiya.Miklukho@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1081, null, 1, new DateTime(2020, 8, 25, 23, 20, 54, 574, DateTimeKind.Local).AddTicks(700), 3, "Yaromil.Mogilevskii@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1096, null, 0, new DateTime(2021, 2, 24, 23, 41, 54, 101, DateTimeKind.Local).AddTicks(1957), 3, "(092) 454-69-20" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 550, null, 1, new DateTime(2020, 3, 20, 13, 1, 55, 803, DateTimeKind.Local).AddTicks(7856), 263, "Vilena.Miloslavska@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 846, null, 1, new DateTime(2020, 5, 22, 22, 22, 47, 184, DateTimeKind.Local).AddTicks(2685), 263, "Anastas99@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1330, null, 1, new DateTime(2020, 8, 19, 14, 43, 54, 399, DateTimeKind.Local).AddTicks(8263), 89, "Dobroslava_Motriyenko78@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1317, null, 0, new DateTime(2020, 4, 16, 11, 20, 15, 669, DateTimeKind.Local).AddTicks(4), 89, "(066) 885-04-90" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1025, null, 0, new DateTime(2021, 2, 20, 19, 21, 28, 974, DateTimeKind.Local).AddTicks(7430), 89, "(044) 622-85-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 419, null, 1, new DateTime(2020, 12, 2, 19, 37, 6, 383, DateTimeKind.Local).AddTicks(2596), 3, "Mokrina_Grigorishina@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 508, null, 1, new DateTime(2020, 6, 27, 22, 12, 14, 676, DateTimeKind.Local).AddTicks(1851), 262, "Zoreslav88@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 416, null, 0, new DateTime(2020, 3, 7, 3, 41, 37, 9, DateTimeKind.Local).AddTicks(8029), 262, "(094) 119-74-08" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 414, null, 1, new DateTime(2020, 8, 14, 10, 5, 38, 854, DateTimeKind.Local).AddTicks(2399), 262, "Nemira4@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 384, null, 0, new DateTime(2020, 8, 2, 18, 45, 52, 273, DateTimeKind.Local).AddTicks(1461), 1, "(098) 466-12-80" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1440, null, 0, new DateTime(2020, 11, 7, 2, 7, 34, 958, DateTimeKind.Local).AddTicks(3027), 92, "(098) 967-73-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1166, null, 1, new DateTime(2020, 8, 6, 7, 45, 10, 727, DateTimeKind.Local).AddTicks(1480), 92, "Markiyan13@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 945, null, 0, new DateTime(2021, 2, 2, 5, 31, 26, 431, DateTimeKind.Local).AddTicks(8678), 92, "(096) 450-17-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1064, null, 0, new DateTime(2021, 2, 16, 10, 24, 8, 487, DateTimeKind.Local).AddTicks(1592), 1, "(099) 787-75-97" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1373, null, 0, new DateTime(2021, 1, 21, 22, 55, 44, 782, DateTimeKind.Local).AddTicks(131), 300, "(096) 433-26-91" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 933, null, 0, new DateTime(2020, 12, 25, 21, 56, 25, 93, DateTimeKind.Local).AddTicks(2863), 300, "(050) 193-49-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 439, null, 0, new DateTime(2020, 6, 15, 6, 54, 16, 923, DateTimeKind.Local).AddTicks(7279), 2, "(098) 208-50-72" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 85, null, 1, new DateTime(2020, 7, 8, 3, 21, 14, 99, DateTimeKind.Local).AddTicks(7450), 261, "Stanislava.Demkiv67@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 168, null, 0, new DateTime(2020, 10, 29, 19, 47, 3, 148, DateTimeKind.Local).AddTicks(6054), 261, "(073) 519-38-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1063, null, 1, new DateTime(2021, 2, 19, 1, 23, 17, 299, DateTimeKind.Local).AddTicks(2012), 261, "Tamara_Yermak66@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 894, null, 0, new DateTime(2020, 3, 16, 0, 20, 37, 957, DateTimeKind.Local).AddTicks(6073), 2, "(044) 283-75-58" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 901, null, 0, new DateTime(2020, 4, 11, 21, 46, 21, 756, DateTimeKind.Local).AddTicks(363), 300, "(095) 952-41-05" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 551, null, 0, new DateTime(2020, 6, 7, 11, 23, 54, 387, DateTimeKind.Local).AddTicks(5734), 300, "(092) 683-66-23" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1375, null, 0, new DateTime(2020, 6, 30, 10, 11, 15, 925, DateTimeKind.Local).AddTicks(3884), 261, "(099) 125-02-13" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1424, null, 1, new DateTime(2020, 5, 24, 9, 7, 57, 715, DateTimeKind.Local).AddTicks(9369), 261, "Alevtin_Gromiko@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 471, null, 0, new DateTime(2020, 4, 21, 4, 29, 50, 534, DateTimeKind.Local).AddTicks(39), 300, "(096) 945-58-52" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1260, null, 1, new DateTime(2020, 7, 25, 16, 40, 27, 485, DateTimeKind.Local).AddTicks(7647), 91, "Oleksandr47@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 216, null, 0, new DateTime(2020, 3, 13, 18, 28, 12, 925, DateTimeKind.Local).AddTicks(1254), 91, "(063) 296-56-54" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1141, null, 1, new DateTime(2020, 7, 2, 7, 36, 41, 13, DateTimeKind.Local).AddTicks(8096), 3, "Yaroslav55@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 691, null, 1, new DateTime(2020, 8, 14, 10, 58, 11, 804, DateTimeKind.Local).AddTicks(6188), 85, "Irma_Gorova18@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1346, null, 1, new DateTime(2020, 9, 10, 3, 43, 21, 701, DateTimeKind.Local).AddTicks(8404), 3, "Panas.Shudrik79@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 630, null, 0, new DateTime(2020, 9, 15, 12, 44, 52, 171, DateTimeKind.Local).AddTicks(6624), 89, "(073) 533-67-94" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 948, null, 1, new DateTime(2020, 12, 14, 9, 12, 38, 57, DateTimeKind.Local).AddTicks(3464), 86, "Lidiya2@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1121, null, 1, new DateTime(2020, 9, 11, 2, 11, 48, 596, DateTimeKind.Local).AddTicks(2813), 4, "Bozhen.Magera3@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1162, null, 0, new DateTime(2021, 1, 24, 5, 45, 11, 391, DateTimeKind.Local).AddTicks(5196), 4, "(093) 198-74-36" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 710, null, 1, new DateTime(2020, 6, 26, 1, 37, 41, 341, DateTimeKind.Local).AddTicks(1266), 86, "Zvenigor_Makovecka88@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 474, null, 0, new DateTime(2020, 12, 28, 8, 23, 18, 394, DateTimeKind.Local).AddTicks(1935), 86, "(095) 526-40-99" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 418, null, 1, new DateTime(2020, 5, 4, 22, 19, 56, 821, DateTimeKind.Local).AddTicks(6700), 86, "Semibor.Danilko15@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1255, null, 0, new DateTime(2020, 5, 11, 7, 35, 54, 664, DateTimeKind.Local).AddTicks(5489), 4, "(094) 930-98-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 310, null, 0, new DateTime(2020, 11, 24, 18, 59, 42, 202, DateTimeKind.Local).AddTicks(4736), 5, "(092) 488-74-20" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1409, null, 1, new DateTime(2020, 5, 1, 1, 35, 50, 988, DateTimeKind.Local).AddTicks(7265), 86, "Yulianna.Negoda@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1252, null, 1, new DateTime(2020, 8, 25, 22, 59, 54, 652, DateTimeKind.Local).AddTicks(8386), 85, "Zvenigor81@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 395, null, 0, new DateTime(2020, 4, 24, 13, 35, 39, 989, DateTimeKind.Local).AddTicks(7245), 5, "(099) 280-66-83" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 891, null, 1, new DateTime(2020, 5, 6, 18, 54, 31, 482, DateTimeKind.Local).AddTicks(9777), 5, "Svyatopolk59@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1385, null, 0, new DateTime(2020, 10, 18, 6, 45, 37, 369, DateTimeKind.Local).AddTicks(3619), 5, "(093) 944-63-37" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1498, null, 1, new DateTime(2020, 6, 6, 8, 29, 24, 183, DateTimeKind.Local).AddTicks(5772), 5, "Mechislava.Kordun47@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 965, null, 1, new DateTime(2020, 8, 27, 14, 8, 35, 650, DateTimeKind.Local).AddTicks(6737), 299, "Arkhip15@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 692, null, 1, new DateTime(2021, 2, 6, 15, 47, 38, 117, DateTimeKind.Local).AddTicks(7214), 299, "Albert93@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 507, null, 1, new DateTime(2020, 12, 2, 23, 35, 54, 175, DateTimeKind.Local).AddTicks(1668), 299, "Avrora.Zvarich38@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1057, null, 1, new DateTime(2020, 9, 18, 15, 7, 13, 149, DateTimeKind.Local).AddTicks(8472), 85, "Vitalina16@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 363, null, 0, new DateTime(2020, 8, 29, 2, 4, 29, 579, DateTimeKind.Local).AddTicks(4192), 5, "(097) 585-15-07" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1291, null, 1, new DateTime(2021, 3, 2, 8, 41, 14, 848, DateTimeKind.Local).AddTicks(9000), 265, "Vsevolod.Miklashevska@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1147, null, 0, new DateTime(2020, 11, 23, 21, 27, 52, 473, DateTimeKind.Local).AddTicks(6801), 265, "(097) 044-28-61" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 340, null, 1, new DateTime(2020, 7, 23, 15, 50, 50, 498, DateTimeKind.Local).AddTicks(70), 87, "Sofiya.Butko98@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 116, null, 0, new DateTime(2020, 11, 9, 16, 24, 20, 171, DateTimeKind.Local).AddTicks(1081), 89, "(063) 003-65-68" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 88, null, 1, new DateTime(2021, 1, 14, 17, 15, 58, 850, DateTimeKind.Local).AddTicks(4554), 89, "Marta.Yevenko51@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 903, null, 1, new DateTime(2020, 5, 28, 23, 31, 12, 563, DateTimeKind.Local).AddTicks(6493), 263, "Gennadii_Korovyak45@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 449, null, 0, new DateTime(2020, 8, 26, 5, 18, 23, 486, DateTimeKind.Local).AddTicks(5166), 300, "(092) 111-81-82" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 21, null, 0, new DateTime(2020, 7, 11, 19, 15, 33, 139, DateTimeKind.Local).AddTicks(5810), 300, "(063) 598-41-82" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1066, null, 0, new DateTime(2020, 5, 25, 15, 54, 16, 705, DateTimeKind.Local).AddTicks(3890), 88, "(066) 932-88-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 210, null, 1, new DateTime(2020, 11, 11, 3, 12, 48, 272, DateTimeKind.Local).AddTicks(8276), 88, "Innesa.Burmilo@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 146, null, 0, new DateTime(2020, 7, 22, 9, 28, 43, 434, DateTimeKind.Local).AddTicks(8920), 88, "(096) 712-17-88" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 74, null, 0, new DateTime(2020, 12, 24, 6, 12, 47, 526, DateTimeKind.Local).AddTicks(3324), 264, "(094) 250-27-75" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 209, null, 0, new DateTime(2020, 11, 22, 15, 51, 26, 554, DateTimeKind.Local).AddTicks(7360), 4, "(097) 789-89-80" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 595, null, 1, new DateTime(2021, 1, 2, 8, 14, 59, 700, DateTimeKind.Local).AddTicks(8883), 4, "Biloslav38@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 370, null, 0, new DateTime(2020, 5, 8, 12, 2, 11, 843, DateTimeKind.Local).AddTicks(4554), 265, "(097) 796-71-39" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 477, null, 1, new DateTime(2021, 1, 8, 5, 33, 27, 948, DateTimeKind.Local).AddTicks(2953), 265, "Stefanii_Burmilo@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1071, null, 0, new DateTime(2020, 6, 10, 19, 24, 41, 650, DateTimeKind.Local).AddTicks(5377), 265, "(066) 022-33-57" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1095, null, 1, new DateTime(2020, 11, 17, 13, 51, 41, 675, DateTimeKind.Local).AddTicks(5866), 265, "Dobromisl90@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1222, null, 0, new DateTime(2020, 8, 4, 13, 23, 51, 883, DateTimeKind.Local).AddTicks(266), 87, "(093) 050-95-47" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1129, null, 0, new DateTime(2021, 2, 15, 1, 19, 27, 762, DateTimeKind.Local).AddTicks(2708), 87, "(092) 288-27-76" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1036, null, 0, new DateTime(2021, 2, 25, 17, 9, 56, 981, DateTimeKind.Local).AddTicks(8114), 87, "(095) 806-45-31" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 672, null, 1, new DateTime(2020, 10, 26, 8, 36, 33, 828, DateTimeKind.Local).AddTicks(1995), 87, "Zinayida_Motriyenko5@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 980, null, 1, new DateTime(2020, 10, 1, 14, 28, 3, 770, DateTimeKind.Local).AddTicks(1644), 89, "Vladislav_Pavlenko@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1070, null, 0, new DateTime(2020, 6, 17, 11, 23, 37, 100, DateTimeKind.Local).AddTicks(6260), 77, "(091) 485-35-10" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 169, null, 1, new DateTime(2020, 8, 22, 15, 56, 50, 718, DateTimeKind.Local).AddTicks(8366), 79, "Sofiya.Osadko@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 225, null, 1, new DateTime(2020, 8, 30, 5, 6, 30, 870, DateTimeKind.Local).AddTicks(8329), 273, "Khristina.Gaichuk@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 122, null, 1, new DateTime(2020, 3, 24, 18, 6, 48, 165, DateTimeKind.Local).AddTicks(9602), 68, "Polina_Borovska80@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 43, null, 0, new DateTime(2020, 9, 17, 19, 49, 44, 394, DateTimeKind.Local).AddTicks(8998), 68, "(063) 589-96-05" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 291, null, 0, new DateTime(2021, 2, 12, 21, 46, 32, 248, DateTimeKind.Local).AddTicks(6445), 273, "(093) 106-02-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 330, null, 0, new DateTime(2020, 6, 9, 23, 12, 30, 220, DateTimeKind.Local).AddTicks(7670), 273, "(099) 740-20-72" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 850, null, 0, new DateTime(2020, 11, 8, 22, 27, 26, 157, DateTimeKind.Local).AddTicks(2317), 273, "(099) 771-48-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1089, null, 0, new DateTime(2021, 2, 27, 1, 11, 21, 772, DateTimeKind.Local).AddTicks(1353), 9, "(097) 002-81-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1005, null, 1, new DateTime(2020, 4, 3, 18, 39, 3, 382, DateTimeKind.Local).AddTicks(1323), 273, "Tur_Shudrik@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 232, null, 1, new DateTime(2020, 6, 11, 18, 52, 51, 248, DateTimeKind.Local).AddTicks(7283), 68, "Pavlo.Pogiba98@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1362, null, 0, new DateTime(2020, 9, 5, 6, 55, 13, 497, DateTimeKind.Local).AddTicks(2800), 67, "(098) 869-20-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 275, null, 0, new DateTime(2020, 3, 6, 15, 12, 41, 90, DateTimeKind.Local).AddTicks(910), 67, "(066) 308-91-69" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 44, null, 1, new DateTime(2020, 10, 3, 21, 13, 55, 164, DateTimeKind.Local).AddTicks(8547), 67, "Lyudmila40@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 17, null, 1, new DateTime(2020, 5, 28, 3, 11, 18, 684, DateTimeKind.Local).AddTicks(5934), 10, "Slavuta.Petik66@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1350, null, 1, new DateTime(2020, 3, 15, 22, 22, 35, 280, DateTimeKind.Local).AddTicks(8495), 66, "Stefanii_Golovec@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1125, null, 0, new DateTime(2020, 6, 6, 4, 10, 53, 534, DateTimeKind.Local).AddTicks(7898), 66, "(044) 060-16-74" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 558, null, 1, new DateTime(2021, 2, 23, 13, 46, 32, 89, DateTimeKind.Local).AddTicks(2694), 10, "Askold96@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1045, null, 0, new DateTime(2020, 5, 7, 2, 50, 15, 797, DateTimeKind.Local).AddTicks(6648), 66, "(094) 914-20-30" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 401, null, 0, new DateTime(2020, 11, 27, 16, 33, 20, 376, DateTimeKind.Local).AddTicks(7637), 67, "(096) 861-81-25" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 109, null, 0, new DateTime(2020, 7, 28, 17, 32, 18, 184, DateTimeKind.Local).AddTicks(6766), 66, "(050) 852-26-20" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 362, null, 1, new DateTime(2020, 12, 7, 1, 53, 12, 815, DateTimeKind.Local).AddTicks(2267), 68, "Mokrina_Zvarich87@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 358, null, 0, new DateTime(2020, 10, 26, 9, 29, 13, 852, DateTimeKind.Local).AddTicks(8494), 69, "(063) 279-10-09" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 80, null, 0, new DateTime(2020, 12, 31, 3, 15, 51, 56, DateTimeKind.Local).AddTicks(5223), 71, "(094) 134-04-94" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1396, null, 0, new DateTime(2020, 10, 16, 17, 57, 56, 305, DateTimeKind.Local).AddTicks(7058), 272, "(091) 060-16-73" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 306, null, 1, new DateTime(2020, 4, 24, 16, 54, 38, 45, DateTimeKind.Local).AddTicks(7174), 9, "Nina40@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 410, null, 0, new DateTime(2021, 1, 1, 11, 42, 0, 438, DateTimeKind.Local).AddTicks(2274), 9, "(050) 732-92-28" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 437, null, 1, new DateTime(2020, 4, 10, 9, 17, 47, 580, DateTimeKind.Local).AddTicks(3711), 9, "Arkhip.Grigorishin95@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 606, null, 1, new DateTime(2021, 1, 18, 19, 31, 11, 349, DateTimeKind.Local).AddTicks(8833), 9, "Violetta_Lyashuk@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1069, null, 0, new DateTime(2020, 12, 20, 23, 35, 36, 55, DateTimeKind.Local).AddTicks(4618), 70, "(066) 675-48-69" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1101, null, 1, new DateTime(2020, 12, 2, 17, 16, 18, 420, DateTimeKind.Local).AddTicks(1471), 68, "Antin_Bashuk80@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1054, null, 0, new DateTime(2020, 6, 15, 18, 18, 18, 829, DateTimeKind.Local).AddTicks(5440), 70, "(096) 599-05-01" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 800, null, 0, new DateTime(2021, 2, 1, 9, 10, 43, 671, DateTimeKind.Local).AddTicks(540), 9, "(050) 766-23-65" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1007, null, 1, new DateTime(2021, 1, 19, 3, 43, 30, 243, DateTimeKind.Local).AddTicks(6002), 9, "Miroslava33@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 427, null, 0, new DateTime(2020, 7, 29, 9, 55, 29, 297, DateTimeKind.Local).AddTicks(4665), 70, "(063) 655-09-09" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 37, null, 0, new DateTime(2020, 10, 1, 1, 50, 52, 17, DateTimeKind.Local).AddTicks(6018), 70, "(095) 392-58-50" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 2, null, 0, new DateTime(2020, 4, 16, 8, 33, 10, 161, DateTimeKind.Local).AddTicks(167), 273, "(044) 038-83-45" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1221, null, 0, new DateTime(2020, 12, 5, 14, 10, 2, 395, DateTimeKind.Local).AddTicks(6171), 69, "(099) 750-00-22" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 674, null, 1, new DateTime(2020, 12, 15, 15, 48, 56, 309, DateTimeKind.Local).AddTicks(5215), 69, "Vyacheslava.Vereshuk@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 753, null, 1, new DateTime(2021, 3, 1, 9, 34, 24, 886, DateTimeKind.Local).AddTicks(879), 9, "Anzhela20@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 190, null, 0, new DateTime(2020, 7, 13, 19, 51, 15, 348, DateTimeKind.Local).AddTicks(1793), 71, "(091) 229-53-81" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 603, null, 1, new DateTime(2020, 12, 25, 20, 50, 56, 226, DateTimeKind.Local).AddTicks(2645), 10, "Oriyana_Shudrik83@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1336, null, 1, new DateTime(2020, 10, 20, 22, 14, 21, 212, DateTimeKind.Local).AddTicks(4955), 65, "Vita_Levadovskii32@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1470, null, 1, new DateTime(2021, 2, 21, 13, 24, 11, 77, DateTimeKind.Local).AddTicks(2126), 63, "Nina.Dzyuba@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1347, null, 1, new DateTime(2020, 6, 15, 1, 45, 38, 129, DateTimeKind.Local).AddTicks(9810), 63, "Karina.Romei89@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1333, null, 1, new DateTime(2020, 8, 12, 14, 18, 33, 213, DateTimeKind.Local).AddTicks(3307), 63, "Azarii_Kononec73@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 135, null, 1, new DateTime(2020, 11, 29, 8, 25, 18, 639, DateTimeKind.Local).AddTicks(3292), 63, "Shastislav5@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1215, null, 1, new DateTime(2020, 3, 26, 13, 25, 39, 439, DateTimeKind.Local).AddTicks(3028), 275, "Bilyana.Romanishina4@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1374, null, 1, new DateTime(2020, 9, 18, 2, 37, 45, 513, DateTimeKind.Local).AddTicks(3110), 275, "Miloslava26@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 379, null, 1, new DateTime(2020, 6, 11, 6, 21, 55, 911, DateTimeKind.Local).AddTicks(6663), 11, "Antonii.Umanec6@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 386, null, 0, new DateTime(2020, 11, 30, 19, 1, 37, 627, DateTimeKind.Local).AddTicks(1109), 275, "(097) 043-55-14" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 779, null, 0, new DateTime(2020, 11, 24, 18, 39, 12, 167, DateTimeKind.Local).AddTicks(4081), 11, "(099) 858-08-83" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1100, null, 0, new DateTime(2020, 5, 16, 11, 37, 45, 340, DateTimeKind.Local).AddTicks(95), 11, "(073) 146-21-48" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1227, null, 0, new DateTime(2020, 12, 30, 7, 56, 18, 358, DateTimeKind.Local).AddTicks(9540), 11, "(093) 398-53-81" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1465, null, 1, new DateTime(2020, 4, 21, 16, 45, 32, 98, DateTimeKind.Local).AddTicks(6441), 11, "Kii35@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1445, null, 1, new DateTime(2020, 10, 12, 21, 35, 3, 678, DateTimeKind.Local).AddTicks(8816), 297, "Ruslan.Makhno@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1483, null, 1, new DateTime(2020, 9, 7, 17, 15, 48, 543, DateTimeKind.Local).AddTicks(4183), 62, "Chornota_Kulchickii24@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1224, null, 0, new DateTime(2020, 12, 3, 22, 9, 5, 129, DateTimeKind.Local).AddTicks(6628), 62, "(095) 624-16-62" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1029, null, 1, new DateTime(2021, 2, 8, 18, 44, 36, 446, DateTimeKind.Local).AddTicks(3919), 62, "Dobromisla24@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 915, null, 0, new DateTime(2020, 11, 1, 10, 5, 40, 363, DateTimeKind.Local).AddTicks(6191), 11, "(096) 165-78-19" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 468, null, 0, new DateTime(2020, 3, 19, 5, 29, 11, 797, DateTimeKind.Local).AddTicks(9543), 274, "(093) 029-61-89" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1438, null, 0, new DateTime(2021, 2, 1, 4, 56, 35, 877, DateTimeKind.Local).AddTicks(4608), 274, "(063) 905-45-36" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 544, null, 1, new DateTime(2020, 6, 27, 22, 15, 48, 462, DateTimeKind.Local).AddTicks(425), 64, "Khristina.Lugovii@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1219, null, 1, new DateTime(2020, 12, 2, 12, 52, 25, 510, DateTimeKind.Local).AddTicks(2174), 65, "Yana_Petlyura44@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 792, null, 0, new DateTime(2020, 7, 15, 17, 4, 35, 336, DateTimeKind.Local).AddTicks(2336), 65, "(050) 597-67-95" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 780, null, 1, new DateTime(2020, 3, 29, 20, 25, 38, 331, DateTimeKind.Local).AddTicks(1263), 65, "Afanasii.Porivai5@ex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 573, null, 1, new DateTime(2020, 5, 16, 20, 10, 41, 20, DateTimeKind.Local).AddTicks(9454), 65, "Kornilii.Sosyura0@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 205, null, 0, new DateTime(2020, 4, 23, 6, 14, 19, 926, DateTimeKind.Local).AddTicks(8159), 65, "(073) 046-61-75" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 720, null, 0, new DateTime(2020, 10, 5, 12, 48, 34, 37, DateTimeKind.Local).AddTicks(3005), 274, "(063) 930-97-26" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1043, null, 1, new DateTime(2020, 10, 20, 5, 17, 27, 154, DateTimeKind.Local).AddTicks(6138), 274, "Kii55@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 496, null, 1, new DateTime(2020, 8, 17, 20, 34, 53, 5, DateTimeKind.Local).AddTicks(8381), 64, "Mikhailo_Luchenko60@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 851, null, 1, new DateTime(2020, 4, 22, 8, 39, 59, 28, DateTimeKind.Local).AddTicks(3950), 10, "Dobroslav34@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1110, null, 0, new DateTime(2020, 6, 14, 12, 36, 2, 883, DateTimeKind.Local).AddTicks(2457), 274, "(092) 640-08-26" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1325, null, 1, new DateTime(2020, 3, 21, 18, 20, 57, 728, DateTimeKind.Local).AddTicks(9617), 274, "Valentina_Lucka29@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1437, null, 1, new DateTime(2020, 11, 12, 19, 28, 26, 270, DateTimeKind.Local).AddTicks(7467), 274, "Radoslava_Kornyiichuk@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1027, null, 0, new DateTime(2020, 10, 12, 22, 27, 35, 112, DateTimeKind.Local).AddTicks(190), 64, "(063) 335-01-47" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 996, null, 1, new DateTime(2020, 10, 17, 8, 49, 45, 100, DateTimeKind.Local).AddTicks(9460), 64, "Yulian27@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 775, null, 1, new DateTime(2020, 11, 28, 1, 14, 28, 733, DateTimeKind.Local).AddTicks(9434), 64, "Zvenislav_Yashuk59@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 647, null, 1, new DateTime(2021, 1, 11, 1, 40, 21, 872, DateTimeKind.Local).AddTicks(5862), 64, "Dobroslav_Tindarei@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1443, null, 1, new DateTime(2020, 12, 31, 21, 4, 25, 453, DateTimeKind.Local).AddTicks(2722), 10, "Shastislav.Romochko9@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 570, null, 1, new DateTime(2021, 1, 15, 20, 13, 0, 907, DateTimeKind.Local).AddTicks(7899), 71, "Lyuboslava11@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 510, null, 0, new DateTime(2021, 2, 4, 17, 13, 9, 201, DateTimeKind.Local).AddTicks(2504), 27, "(063) 052-73-91" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 856, null, 1, new DateTime(2020, 8, 22, 1, 12, 40, 834, DateTimeKind.Local).AddTicks(6594), 71, "Adriyan14@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1340, null, 0, new DateTime(2020, 6, 10, 3, 21, 13, 367, DateTimeKind.Local).AddTicks(1788), 75, "(073) 681-63-87" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1314, null, 1, new DateTime(2020, 4, 27, 22, 40, 51, 623, DateTimeKind.Local).AddTicks(2441), 75, "Zhanna20@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 432, null, 1, new DateTime(2021, 1, 7, 6, 37, 50, 815, DateTimeKind.Local).AddTicks(6906), 75, "Adam.Shudrik22@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 425, null, 1, new DateTime(2020, 12, 15, 20, 35, 43, 611, DateTimeKind.Local).AddTicks(2191), 75, "Slavolyub_Mazun65@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 457, null, 1, new DateTime(2020, 3, 7, 10, 44, 41, 370, DateTimeKind.Local).AddTicks(4839), 298, "Lyubomir81@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 90, null, 1, new DateTime(2020, 4, 1, 22, 33, 18, 460, DateTimeKind.Local).AddTicks(5914), 75, "Vlasta.Sidleckii@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1461, null, 1, new DateTime(2020, 9, 10, 18, 56, 8, 440, DateTimeKind.Local).AddTicks(3825), 270, "Kostyantin6@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 642, null, 1, new DateTime(2021, 1, 4, 1, 31, 47, 877, DateTimeKind.Local).AddTicks(9127), 71, "Timofii.Danilko47@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1084, null, 0, new DateTime(2020, 10, 11, 17, 48, 43, 383, DateTimeKind.Local).AddTicks(5008), 74, "(098) 994-48-61" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 959, null, 0, new DateTime(2020, 6, 1, 21, 16, 20, 161, DateTimeKind.Local).AddTicks(1724), 74, "(044) 119-17-44" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 762, null, 0, new DateTime(2020, 4, 12, 8, 43, 43, 906, DateTimeKind.Local).AddTicks(7063), 74, "(066) 442-71-59" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 147, null, 0, new DateTime(2020, 8, 19, 17, 13, 0, 331, DateTimeKind.Local).AddTicks(2485), 271, "(095) 822-27-89" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 166, null, 1, new DateTime(2020, 9, 18, 7, 20, 39, 477, DateTimeKind.Local).AddTicks(2570), 271, "Klavdiya_Korovyak@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 970, null, 1, new DateTime(2020, 10, 6, 20, 43, 7, 910, DateTimeKind.Local).AddTicks(5697), 73, "Vladislav_Zvarich8@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 801, null, 0, new DateTime(2021, 1, 18, 14, 11, 20, 194, DateTimeKind.Local).AddTicks(3594), 73, "(099) 602-98-50" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1459, null, 1, new DateTime(2020, 5, 19, 7, 42, 41, 461, DateTimeKind.Local).AddTicks(6936), 75, "Oriyana.Umanec75@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1484, null, 0, new DateTime(2021, 2, 6, 10, 50, 43, 517, DateTimeKind.Local).AddTicks(5059), 75, "(099) 123-15-64" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 943, null, 0, new DateTime(2020, 3, 14, 6, 57, 13, 503, DateTimeKind.Local).AddTicks(9187), 270, "(092) 911-48-02" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 517, null, 0, new DateTime(2020, 3, 6, 21, 11, 47, 825, DateTimeKind.Local).AddTicks(7172), 270, "(063) 073-79-88" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 728, null, 0, new DateTime(2020, 10, 3, 20, 38, 0, 513, DateTimeKind.Local).AddTicks(5970), 77, "(066) 402-87-78" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 715, null, 0, new DateTime(2021, 1, 2, 4, 17, 41, 695, DateTimeKind.Local).AddTicks(495), 77, "(066) 113-22-04" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1087, null, 0, new DateTime(2020, 12, 14, 15, 57, 11, 65, DateTimeKind.Local).AddTicks(4382), 8, "(063) 227-81-47" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 197, null, 1, new DateTime(2020, 11, 1, 8, 19, 17, 453, DateTimeKind.Local).AddTicks(2312), 77, "Lesya.Chervonii51@yandex.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 35, null, 1, new DateTime(2020, 8, 30, 4, 17, 23, 527, DateTimeKind.Local).AddTicks(956), 77, "Yaromil96@gmail.com" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 3, null, 0, new DateTime(2020, 3, 28, 14, 58, 27, 671, DateTimeKind.Local).AddTicks(2971), 77, "(091) 957-81-88" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 898, null, 1, new DateTime(2020, 6, 2, 7, 0, 40, 735, DateTimeKind.Local).AddTicks(4783), 298, "Alevtina_Polishuk79@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 531, null, 0, new DateTime(2020, 4, 13, 15, 7, 15, 832, DateTimeKind.Local).AddTicks(1412), 73, "(066) 674-48-63" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 519, null, 1, new DateTime(2020, 12, 22, 1, 28, 40, 68, DateTimeKind.Local).AddTicks(4342), 298, "Albert71@meta.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 351, null, 0, new DateTime(2020, 9, 13, 0, 18, 1, 965, DateTimeKind.Local).AddTicks(4235), 270, "(093) 158-13-14" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 365, null, 0, new DateTime(2020, 11, 28, 2, 47, 0, 577, DateTimeKind.Local).AddTicks(9861), 270, "(096) 153-77-55" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1289, null, 0, new DateTime(2020, 4, 23, 15, 0, 21, 740, DateTimeKind.Local).AddTicks(8472), 76, "(095) 723-98-46" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1235, null, 0, new DateTime(2020, 8, 15, 19, 4, 10, 577, DateTimeKind.Local).AddTicks(9544), 76, "(073) 916-15-99" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 865, null, 0, new DateTime(2020, 11, 15, 16, 22, 0, 740, DateTimeKind.Local).AddTicks(3754), 76, "(066) 421-50-77" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 107, null, 1, new DateTime(2020, 6, 8, 0, 29, 5, 165, DateTimeKind.Local).AddTicks(9946), 76, "Boleslav_Ivanciv@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 499, null, 0, new DateTime(2021, 1, 31, 18, 17, 28, 552, DateTimeKind.Local).AddTicks(1263), 270, "(093) 573-80-49" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 215, null, 1, new DateTime(2021, 2, 23, 15, 47, 50, 445, DateTimeKind.Local).AddTicks(6617), 270, "Dana.Spotikach95@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 211, null, 0, new DateTime(2021, 1, 3, 12, 47, 49, 983, DateTimeKind.Local).AddTicks(757), 298, "(073) 586-44-79" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1163, null, 1, new DateTime(2020, 11, 8, 19, 34, 34, 664, DateTimeKind.Local).AddTicks(5386), 74, "Darii45@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 836, null, 1, new DateTime(2020, 11, 1, 2, 18, 37, 311, DateTimeKind.Local).AddTicks(4844), 272, "Olena86@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1313, null, 1, new DateTime(2021, 2, 24, 21, 52, 8, 14, DateTimeKind.Local).AddTicks(229), 272, "Sologub.Mogilevska@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 264, null, 1, new DateTime(2020, 5, 7, 14, 40, 54, 140, DateTimeKind.Local).AddTicks(2290), 272, "Potishana.Galatei8@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1264, null, 0, new DateTime(2020, 10, 18, 2, 34, 9, 491, DateTimeKind.Local).AddTicks(4274), 71, "(063) 131-20-82" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 992, null, 0, new DateTime(2021, 1, 9, 15, 37, 11, 529, DateTimeKind.Local).AddTicks(4718), 271, "(093) 814-17-98" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 342, null, 0, new DateTime(2021, 2, 24, 6, 6, 35, 332, DateTimeKind.Local).AddTicks(2014), 272, "(094) 661-94-93" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 132, null, 1, new DateTime(2021, 2, 19, 20, 51, 29, 997, DateTimeKind.Local).AddTicks(4058), 9, "Yaroslava_Yermak@ukr.net" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 49, null, 1, new DateTime(2021, 2, 5, 21, 35, 44, 162, DateTimeKind.Local).AddTicks(8123), 72, "Darina74@i.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 375, null, 0, new DateTime(2020, 6, 6, 2, 9, 0, 205, DateTimeKind.Local).AddTicks(9830), 73, "(050) 819-95-29" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 870, null, 0, new DateTime(2020, 3, 8, 21, 38, 57, 511, DateTimeKind.Local).AddTicks(1207), 72, "(098) 734-68-86" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1001, null, 1, new DateTime(2021, 2, 2, 3, 19, 55, 396, DateTimeKind.Local).AddTicks(7604), 72, "Gorislav.Spotikach@e-mail.ua" });

            migrationBuilder.InsertData(
                table: "Contacts",
                columns: new[] { "Id", "ContactInfoId", "ContactType", "CreatedAt", "UserId", "Value" },
                values: new object[] { 1467, null, 0, new DateTime(2020, 11, 2, 4, 57, 3, 420, DateTimeKind.Local).AddTicks(1347), 72, "(093) 608-67-18" });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 490, "#176f11", new DateTime(2020, 4, 24, 13, 56, 26, 125, DateTimeKind.Local).AddTicks(9794), "Try to generate the CSS port, maybe it will generate the back-end port!", 214 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 670, "#122b4d", new DateTime(2020, 8, 3, 20, 31, 52, 115, DateTimeKind.Local).AddTicks(1404), "Use the multi-byte JBOD sensor, then you can input the multi-byte sensor!", 214 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1112, "#1d6231", new DateTime(2020, 12, 26, 7, 29, 43, 578, DateTimeKind.Local).AddTicks(9789), "If we reboot the port, we can get to the GB port through the primary GB port!", 298 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1121, "#505b68", new DateTime(2020, 6, 19, 8, 9, 9, 374, DateTimeKind.Local).AddTicks(2876), "Try to program the USB card, maybe it will program the neural card!", 298 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 737, "#1c2c2c", new DateTime(2020, 8, 23, 17, 27, 20, 144, DateTimeKind.Local).AddTicks(3951), "I'll generate the optical PCI bus, that should bus the PCI bus!", 210 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 272, "#402a7a", new DateTime(2020, 8, 11, 12, 44, 33, 190, DateTimeKind.Local).AddTicks(6758), "overriding the program won't do anything, we need to calculate the optical CSS program!", 297 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 200, "#602f75", new DateTime(2020, 10, 22, 17, 13, 12, 745, DateTimeKind.Local).AddTicks(8580), "Use the virtual RAM protocol, then you can override the virtual protocol!", 217 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 998, "#2c232f", new DateTime(2020, 6, 4, 8, 28, 37, 596, DateTimeKind.Local).AddTicks(5763), "bypassing the system won't do anything, we need to copy the neural AGP system!", 213 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 20, "#03283f", new DateTime(2021, 1, 17, 0, 37, 13, 850, DateTimeKind.Local).AddTicks(6767), "You can't override the card without bypassing the auxiliary THX card!", 294 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 691, "#655575", new DateTime(2020, 5, 3, 13, 38, 24, 238, DateTimeKind.Local).AddTicks(5023), "bypassing the firewall won't do anything, we need to calculate the haptic GB firewall!", 215 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 975, "#366678", new DateTime(2020, 3, 30, 3, 34, 23, 580, DateTimeKind.Local).AddTicks(186), "Try to generate the USB bandwidth, maybe it will generate the primary bandwidth!", 215 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 291, "#0d0424", new DateTime(2020, 7, 3, 8, 7, 19, 219, DateTimeKind.Local).AddTicks(9505), "Use the redundant TCP bus, then you can hack the redundant bus!", 297 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 800, "#267825", new DateTime(2020, 5, 16, 21, 3, 17, 879, DateTimeKind.Local).AddTicks(4724), "If we generate the pixel, we can get to the AGP pixel through the back-end AGP pixel!", 296 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 572, "#5b4a45", new DateTime(2020, 3, 13, 7, 30, 3, 844, DateTimeKind.Local).AddTicks(7772), "We need to transmit the neural RAM microchip!", 297 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 607, "#46485b", new DateTime(2020, 6, 17, 15, 55, 24, 471, DateTimeKind.Local).AddTicks(4474), "You can't override the matrix without quantifying the cross-platform FTP matrix!", 298 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 606, "#254867", new DateTime(2020, 9, 16, 18, 21, 35, 268, DateTimeKind.Local).AddTicks(2910), "Use the open-source RAM program, then you can index the open-source program!", 216 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 701, "#185b54", new DateTime(2020, 8, 18, 8, 46, 35, 978, DateTimeKind.Local).AddTicks(8998), "We need to synthesize the solid state USB pixel!", 298 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 445, "#123455", new DateTime(2020, 10, 16, 4, 22, 42, 58, DateTimeKind.Local).AddTicks(9592), "I'll reboot the haptic SDD application, that should application the SDD application!", 212 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 316, "#624b31", new DateTime(2020, 5, 4, 10, 39, 53, 209, DateTimeKind.Local).AddTicks(8552), "I'll quantify the optical XML capacitor, that should capacitor the XML capacitor!", 222 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 601, "#464a21", new DateTime(2020, 5, 10, 12, 1, 49, 46, DateTimeKind.Local).AddTicks(1593), "We need to copy the online RSS application!", 210 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 204, "#75436e", new DateTime(2021, 2, 2, 3, 34, 46, 324, DateTimeKind.Local).AddTicks(3831), "The PCI port is down, connect the redundant port so we can connect the PCI port!", 291 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 475, "#036217", new DateTime(2020, 3, 12, 13, 47, 37, 655, DateTimeKind.Local).AddTicks(8564), "quantifying the card won't do anything, we need to override the multi-byte SCSI card!", 291 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 829, "#69400d", new DateTime(2021, 1, 21, 13, 28, 31, 398, DateTimeKind.Local).AddTicks(9843), "If we hack the transmitter, we can get to the EXE transmitter through the open-source EXE transmitter!", 291 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 579, "#3d335c", new DateTime(2020, 11, 17, 0, 3, 40, 296, DateTimeKind.Local).AddTicks(9417), "If we parse the protocol, we can get to the SDD protocol through the wireless SDD protocol!", 218 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 482, "#783c6c", new DateTime(2020, 7, 11, 11, 30, 56, 900, DateTimeKind.Local).AddTicks(4556), "We need to quantify the optical THX interface!", 293 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 41, "#1c6330", new DateTime(2020, 11, 28, 8, 31, 59, 806, DateTimeKind.Local).AddTicks(7509), "The AGP application is down, generate the solid state application so we can generate the AGP application!", 293 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 183, "#0e227f", new DateTime(2021, 1, 4, 12, 59, 37, 971, DateTimeKind.Local).AddTicks(1854), "I'll transmit the digital SMTP capacitor, that should capacitor the SMTP capacitor!", 215 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 53, "#762467", new DateTime(2020, 5, 22, 23, 17, 20, 283, DateTimeKind.Local).AddTicks(9570), "Try to connect the SQL panel, maybe it will connect the optical panel!", 300 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 555, "#3b1879", new DateTime(2021, 1, 19, 5, 52, 21, 431, DateTimeKind.Local).AddTicks(3349), "We need to transmit the neural GB circuit!", 215 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 624, "#0c192f", new DateTime(2020, 3, 13, 5, 30, 29, 897, DateTimeKind.Local).AddTicks(4758), "The PCI transmitter is down, quantify the mobile transmitter so we can quantify the PCI transmitter!", 215 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 81, "#192506", new DateTime(2020, 4, 11, 14, 4, 50, 981, DateTimeKind.Local).AddTicks(5957), "We need to program the solid state JSON panel!", 295 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1043, "#645d27", new DateTime(2021, 1, 7, 19, 13, 14, 559, DateTimeKind.Local).AddTicks(3039), "backing up the array won't do anything, we need to bypass the cross-platform SMS array!", 296 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 589, "#2d5a0b", new DateTime(2021, 1, 26, 12, 45, 1, 74, DateTimeKind.Local).AddTicks(9948), "I'll input the online EXE circuit, that should circuit the EXE circuit!", 295 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 752, "#4c5760", new DateTime(2020, 8, 18, 12, 53, 27, 321, DateTimeKind.Local).AddTicks(3132), "Use the back-end JSON transmitter, then you can quantify the back-end transmitter!", 298 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1087, "#603a78", new DateTime(2020, 7, 30, 12, 32, 10, 879, DateTimeKind.Local).AddTicks(8488), "The SAS system is down, bypass the 1080p system so we can bypass the SAS system!", 298 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 495, "#49480e", new DateTime(2021, 2, 6, 22, 40, 58, 41, DateTimeKind.Local).AddTicks(9797), "You can't calculate the alarm without synthesizing the mobile CSS alarm!", 222 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1179, "#5e314e", new DateTime(2021, 2, 22, 3, 1, 46, 458, DateTimeKind.Local).AddTicks(7197), "The FTP array is down, hack the multi-byte array so we can hack the FTP array!", 295 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1108, "#300180", new DateTime(2020, 5, 9, 16, 1, 53, 215, DateTimeKind.Local).AddTicks(2277), "If we synthesize the alarm, we can get to the SCSI alarm through the 1080p SCSI alarm!", 212 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 21, "#530b0d", new DateTime(2020, 11, 10, 16, 59, 34, 241, DateTimeKind.Local).AddTicks(9769), "Use the cross-platform PCI application, then you can index the cross-platform application!", 222 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 678, "#4f7256", new DateTime(2021, 2, 15, 0, 26, 37, 881, DateTimeKind.Local).AddTicks(2759), "indexing the interface won't do anything, we need to generate the open-source HDD interface!", 210 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 45, "#7d5366", new DateTime(2020, 9, 9, 14, 29, 11, 325, DateTimeKind.Local).AddTicks(8239), "If we copy the bandwidth, we can get to the USB bandwidth through the redundant USB bandwidth!", 294 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 121, "#756b0f", new DateTime(2021, 2, 15, 17, 18, 20, 125, DateTimeKind.Local).AddTicks(4640), "The THX system is down, parse the cross-platform system so we can parse the THX system!", 219 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 856, "#49296d", new DateTime(2020, 3, 11, 1, 27, 12, 425, DateTimeKind.Local).AddTicks(7263), "I'll synthesize the digital TCP pixel, that should pixel the TCP pixel!", 216 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 284, "#4a1e17", new DateTime(2020, 8, 12, 10, 36, 31, 523, DateTimeKind.Local).AddTicks(20), "If we back up the alarm, we can get to the PNG alarm through the back-end PNG alarm!", 292 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1062, "#5f433a", new DateTime(2020, 10, 25, 18, 5, 42, 563, DateTimeKind.Local).AddTicks(6069), "I'll bypass the open-source GB application, that should application the GB application!", 297 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 506, "#68517c", new DateTime(2020, 10, 21, 17, 16, 15, 119, DateTimeKind.Local).AddTicks(3859), "The SCSI alarm is down, back up the bluetooth alarm so we can back up the SCSI alarm!", 292 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 583, "#256156", new DateTime(2020, 4, 24, 14, 0, 27, 813, DateTimeKind.Local).AddTicks(7966), "Try to parse the SSL driver, maybe it will parse the bluetooth driver!", 292 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 190, "#597a1c", new DateTime(2020, 4, 11, 3, 11, 57, 362, DateTimeKind.Local).AddTicks(2622), "We need to parse the online ADP panel!", 214 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1163, "#526153", new DateTime(2020, 5, 16, 15, 36, 32, 340, DateTimeKind.Local).AddTicks(7147), "You can't bypass the pixel without transmitting the primary SCSI pixel!", 211 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 63, "#0b1453", new DateTime(2020, 6, 5, 4, 37, 29, 342, DateTimeKind.Local).AddTicks(9444), "We need to synthesize the redundant RSS firewall!", 214 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 964, "#2c7217", new DateTime(2020, 8, 31, 14, 43, 11, 503, DateTimeKind.Local).AddTicks(154), "Use the digital CSS panel, then you can generate the digital panel!", 218 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 852, "#1e2a7f", new DateTime(2020, 5, 16, 10, 52, 1, 797, DateTimeKind.Local).AddTicks(8489), "Use the cross-platform SCSI monitor, then you can input the cross-platform monitor!", 213 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 709, "#1d204a", new DateTime(2020, 5, 15, 15, 59, 46, 377, DateTimeKind.Local).AddTicks(1107), "Use the mobile ADP bus, then you can parse the mobile bus!", 292 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 820, "#6e0d3d", new DateTime(2020, 12, 25, 22, 25, 10, 916, DateTimeKind.Local).AddTicks(4705), "We need to reboot the bluetooth JBOD firewall!", 293 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 629, "#1d271e", new DateTime(2020, 8, 16, 3, 20, 35, 134, DateTimeKind.Local).AddTicks(4278), "Use the neural THX pixel, then you can parse the neural pixel!", 297 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 922, "#39064f", new DateTime(2020, 8, 21, 20, 51, 33, 60, DateTimeKind.Local).AddTicks(4301), "If we bypass the program, we can get to the SSL program through the open-source SSL program!", 297 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 955, "#3c705c", new DateTime(2020, 10, 30, 6, 30, 48, 625, DateTimeKind.Local).AddTicks(3715), "I'll program the online FTP alarm, that should alarm the FTP alarm!", 297 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 886, "#034f4f", new DateTime(2021, 2, 4, 1, 56, 12, 777, DateTimeKind.Local).AddTicks(5374), "We need to override the 1080p SCSI protocol!", 294 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 970, "#031d45", new DateTime(2020, 4, 26, 5, 58, 34, 367, DateTimeKind.Local).AddTicks(7543), "If we program the array, we can get to the IB array through the solid state IB array!", 297 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 302, "#375d45", new DateTime(2020, 5, 25, 0, 41, 21, 389, DateTimeKind.Local).AddTicks(1883), "We need to transmit the multi-byte FTP pixel!", 220 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 16, "#35746a", new DateTime(2020, 11, 4, 23, 8, 35, 444, DateTimeKind.Local).AddTicks(112), "I'll compress the digital RSS panel, that should panel the RSS panel!", 220 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1180, "#074a59", new DateTime(2020, 3, 5, 13, 42, 39, 550, DateTimeKind.Local).AddTicks(8345), "Use the open-source JSON feed, then you can compress the open-source feed!", 211 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 696, "#6f080c", new DateTime(2020, 11, 9, 11, 43, 46, 227, DateTimeKind.Local).AddTicks(7545), "I'll reboot the primary IB hard drive, that should hard drive the IB hard drive!", 299 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 651, "#635d7c", new DateTime(2020, 10, 27, 15, 32, 25, 144, DateTimeKind.Local).AddTicks(4847), "Use the solid state USB system, then you can connect the solid state system!", 299 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 883, "#4e280d", new DateTime(2020, 10, 13, 1, 37, 20, 217, DateTimeKind.Local).AddTicks(2966), "We need to back up the virtual ADP circuit!", 213 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 823, "#1e7434", new DateTime(2020, 6, 12, 10, 6, 7, 142, DateTimeKind.Local).AddTicks(5874), "I'll calculate the redundant RSS system, that should system the RSS system!", 297 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1191, "#643f58", new DateTime(2021, 2, 17, 23, 42, 42, 900, DateTimeKind.Local).AddTicks(6729), "The AGP pixel is down, synthesize the auxiliary pixel so we can synthesize the AGP pixel!", 217 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1103, "#005378", new DateTime(2020, 10, 25, 8, 52, 13, 471, DateTimeKind.Local).AddTicks(1715), "We need to input the wireless XSS bandwidth!", 211 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 710, "#784f4c", new DateTime(2020, 3, 21, 2, 3, 32, 171, DateTimeKind.Local).AddTicks(4683), "If we compress the hard drive, we can get to the PNG hard drive through the multi-byte PNG hard drive!", 219 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 921, "#09470b", new DateTime(2020, 6, 18, 2, 51, 54, 610, DateTimeKind.Local).AddTicks(2263), "We need to reboot the neural SSL panel!", 216 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1090, "#6a3643", new DateTime(2020, 8, 13, 10, 57, 37, 458, DateTimeKind.Local).AddTicks(4944), "Use the online AI capacitor, then you can compress the online capacitor!", 216 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 639, "#604432", new DateTime(2020, 10, 22, 8, 39, 41, 731, DateTimeKind.Local).AddTicks(5488), "I'll copy the bluetooth AI alarm, that should alarm the AI alarm!", 296 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 141, "#330a5c", new DateTime(2020, 9, 27, 15, 16, 26, 560, DateTimeKind.Local).AddTicks(8203), "The PCI transmitter is down, generate the online transmitter so we can generate the PCI transmitter!", 294 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 358, "#43216f", new DateTime(2020, 5, 26, 11, 59, 24, 389, DateTimeKind.Local).AddTicks(8431), "If we back up the array, we can get to the JBOD array through the back-end JBOD array!", 294 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 663, "#636a01", new DateTime(2020, 12, 25, 22, 37, 21, 264, DateTimeKind.Local).AddTicks(474), "I'll back up the solid state RSS monitor, that should monitor the RSS monitor!", 294 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 562, "#4f0f01", new DateTime(2020, 11, 5, 16, 53, 13, 346, DateTimeKind.Local).AddTicks(740), "The RAM alarm is down, bypass the online alarm so we can bypass the RAM alarm!", 298 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 380, "#6d404c", new DateTime(2020, 9, 12, 23, 33, 28, 267, DateTimeKind.Local).AddTicks(7900), "indexing the array won't do anything, we need to bypass the mobile SMTP array!", 296 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1080, "#066c4e", new DateTime(2020, 7, 2, 11, 3, 12, 562, DateTimeKind.Local).AddTicks(3926), "The GB firewall is down, bypass the haptic firewall so we can bypass the GB firewall!", 299 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 484, "#3f1b52", new DateTime(2020, 6, 2, 3, 20, 42, 638, DateTimeKind.Local).AddTicks(8751), "I'll generate the optical PCI system, that should system the PCI system!", 211 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 925, "#3d3127", new DateTime(2020, 4, 19, 9, 14, 14, 731, DateTimeKind.Local).AddTicks(6570), "If we compress the bus, we can get to the FTP bus through the haptic FTP bus!", 211 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 882, "#507f76", new DateTime(2020, 4, 3, 21, 20, 46, 956, DateTimeKind.Local).AddTicks(1398), "I'll override the wireless SMS transmitter, that should transmitter the SMS transmitter!", 299 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 557, "#6b426d", new DateTime(2020, 8, 5, 9, 58, 19, 987, DateTimeKind.Local).AddTicks(3507), "If we parse the capacitor, we can get to the IB capacitor through the online IB capacitor!", 213 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 986, "#096a48", new DateTime(2020, 3, 4, 8, 2, 53, 97, DateTimeKind.Local).AddTicks(2988), "The HTTP port is down, synthesize the solid state port so we can synthesize the HTTP port!", 219 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 794, "#7b0204", new DateTime(2020, 5, 10, 18, 39, 29, 917, DateTimeKind.Local).AddTicks(2600), "You can't back up the card without calculating the back-end XML card!", 219 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 686, "#517b1d", new DateTime(2020, 5, 28, 23, 56, 40, 783, DateTimeKind.Local).AddTicks(6049), "generating the circuit won't do anything, we need to parse the cross-platform ADP circuit!", 213 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 763, "#7e4874", new DateTime(2020, 7, 1, 16, 18, 54, 244, DateTimeKind.Local).AddTicks(7058), "backing up the feed won't do anything, we need to override the cross-platform USB feed!", 213 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 812, "#376359", new DateTime(2020, 11, 7, 10, 29, 51, 648, DateTimeKind.Local).AddTicks(3353), "Try to quantify the SMS bandwidth, maybe it will quantify the auxiliary bandwidth!", 213 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 252, "#41083f", new DateTime(2020, 8, 14, 23, 53, 35, 975, DateTimeKind.Local).AddTicks(333), "The ADP monitor is down, navigate the primary monitor so we can navigate the ADP monitor!", 298 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 838, "#2b5707", new DateTime(2021, 1, 31, 13, 4, 12, 957, DateTimeKind.Local).AddTicks(5377), "We need to input the redundant USB application!", 211 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 296, "#254870", new DateTime(2020, 9, 20, 6, 43, 53, 681, DateTimeKind.Local).AddTicks(5221), "We need to transmit the primary PNG sensor!", 219 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 320, "#403862", new DateTime(2021, 2, 6, 22, 40, 20, 270, DateTimeKind.Local).AddTicks(9024), "I'll reboot the online XML bandwidth, that should bandwidth the XML bandwidth!", 219 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 243, "#695471", new DateTime(2020, 3, 8, 21, 45, 4, 328, DateTimeKind.Local).AddTicks(7428), "I'll copy the digital SMS program, that should program the SMS program!", 213 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 918, "#3f7846", new DateTime(2020, 11, 5, 13, 52, 50, 242, DateTimeKind.Local).AddTicks(6500), "I'll copy the haptic RSS panel, that should panel the RSS panel!", 218 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 411, "#621c48", new DateTime(2020, 11, 22, 16, 11, 19, 854, DateTimeKind.Local).AddTicks(7566), "Use the primary AGP microchip, then you can input the primary microchip!", 234 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 404, "#1d6d65", new DateTime(2020, 10, 27, 19, 37, 19, 826, DateTimeKind.Local).AddTicks(7881), "Try to index the XML system, maybe it will index the redundant system!", 223 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 117, "#17797c", new DateTime(2020, 5, 7, 8, 3, 32, 920, DateTimeKind.Local).AddTicks(8619), "You can't transmit the sensor without transmitting the back-end TCP sensor!", 246 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 621, "#6e263a", new DateTime(2020, 11, 2, 11, 43, 32, 920, DateTimeKind.Local).AddTicks(9820), "We need to override the 1080p RAM microchip!", 246 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 640, "#492a0c", new DateTime(2020, 5, 4, 20, 56, 16, 799, DateTimeKind.Local).AddTicks(5244), "connecting the panel won't do anything, we need to synthesize the open-source PCI panel!", 246 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 813, "#19483e", new DateTime(2021, 2, 24, 16, 11, 19, 944, DateTimeKind.Local).AddTicks(2627), "Use the redundant ADP capacitor, then you can synthesize the redundant capacitor!", 246 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 760, "#172644", new DateTime(2020, 9, 11, 8, 44, 40, 302, DateTimeKind.Local).AddTicks(156), "If we compress the bus, we can get to the SDD bus through the multi-byte SDD bus!", 272 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 385, "#090b11", new DateTime(2021, 2, 12, 14, 54, 32, 964, DateTimeKind.Local).AddTicks(7071), "We need to transmit the virtual FTP firewall!", 272 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 324, "#1e480e", new DateTime(2020, 12, 5, 3, 27, 46, 369, DateTimeKind.Local).AddTicks(8223), "If we back up the firewall, we can get to the ADP firewall through the back-end ADP firewall!", 272 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1134, "#35642d", new DateTime(2020, 4, 9, 18, 20, 10, 209, DateTimeKind.Local).AddTicks(52), "If we reboot the array, we can get to the SCSI array through the auxiliary SCSI array!", 246 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 671, "#775e6f", new DateTime(2020, 12, 16, 17, 55, 20, 857, DateTimeKind.Local).AddTicks(890), "We need to input the redundant HDD hard drive!", 271 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 270, "#3e7707", new DateTime(2020, 6, 9, 5, 34, 36, 590, DateTimeKind.Local).AddTicks(1216), "Use the neural SQL card, then you can transmit the neural card!", 271 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 51, "#5e5944", new DateTime(2020, 9, 4, 10, 10, 33, 398, DateTimeKind.Local).AddTicks(7557), "The FTP pixel is down, hack the bluetooth pixel so we can hack the FTP pixel!", 247 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 294, "#556643", new DateTime(2020, 4, 10, 2, 34, 15, 855, DateTimeKind.Local).AddTicks(9260), "I'll program the multi-byte SSL driver, that should driver the SSL driver!", 247 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1167, "#206a6c", new DateTime(2020, 4, 6, 15, 56, 14, 779, DateTimeKind.Local).AddTicks(3088), "synthesizing the feed won't do anything, we need to program the back-end FTP feed!", 270 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 653, "#024d0d", new DateTime(2020, 10, 8, 0, 46, 24, 74, DateTimeKind.Local).AddTicks(6622), "We need to generate the online CSS circuit!", 270 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1005, "#06420a", new DateTime(2020, 12, 21, 17, 58, 40, 132, DateTimeKind.Local).AddTicks(7029), "I'll generate the digital JBOD feed, that should feed the JBOD feed!", 245 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 539, "#57434f", new DateTime(2021, 1, 27, 17, 59, 14, 65, DateTimeKind.Local).AddTicks(5165), "Use the bluetooth EXE system, then you can synthesize the bluetooth system!", 270 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 33, "#38503c", new DateTime(2021, 1, 10, 4, 44, 31, 962, DateTimeKind.Local).AddTicks(1554), "Try to calculate the SSL bus, maybe it will calculate the multi-byte bus!", 248 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 97, "#266526", new DateTime(2021, 2, 17, 14, 54, 3, 736, DateTimeKind.Local).AddTicks(7869), "Try to navigate the IB circuit, maybe it will navigate the bluetooth circuit!", 248 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1172, "#3b5c17", new DateTime(2020, 11, 14, 15, 31, 11, 617, DateTimeKind.Local).AddTicks(1404), "You can't transmit the bus without indexing the wireless PCI bus!", 248 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1136, "#352f55", new DateTime(2020, 11, 4, 9, 32, 11, 981, DateTimeKind.Local).AddTicks(7918), "I'll navigate the virtual COM hard drive, that should hard drive the COM hard drive!", 269 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1117, "#635472", new DateTime(2021, 1, 4, 19, 21, 24, 873, DateTimeKind.Local).AddTicks(3424), "hacking the capacitor won't do anything, we need to parse the back-end SMS capacitor!", 269 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 339, "#585c0e", new DateTime(2020, 11, 17, 1, 57, 14, 91, DateTimeKind.Local).AddTicks(2218), "I'll generate the optical TCP sensor, that should sensor the TCP sensor!", 249 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 563, "#232702", new DateTime(2020, 11, 29, 20, 52, 19, 35, DateTimeKind.Local).AddTicks(8052), "Try to transmit the JBOD hard drive, maybe it will transmit the online hard drive!", 249 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 566, "#707b1c", new DateTime(2020, 12, 29, 3, 2, 27, 386, DateTimeKind.Local).AddTicks(3857), "Use the 1080p IB hard drive, then you can synthesize the 1080p hard drive!", 249 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 611, "#01474f", new DateTime(2020, 9, 13, 14, 34, 6, 640, DateTimeKind.Local).AddTicks(9166), "If we calculate the protocol, we can get to the ADP protocol through the mobile ADP protocol!", 249 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 990, "#705f7e", new DateTime(2020, 6, 29, 0, 19, 21, 813, DateTimeKind.Local).AddTicks(4776), "hacking the bus won't do anything, we need to copy the cross-platform COM bus!", 249 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 263, "#2b6b32", new DateTime(2021, 1, 23, 0, 21, 54, 256, DateTimeKind.Local).AddTicks(795), "If we bypass the bus, we can get to the GB bus through the solid state GB bus!", 269 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 58, "#626f08", new DateTime(2021, 1, 12, 21, 1, 59, 475, DateTimeKind.Local).AddTicks(8918), "We need to copy the multi-byte HDD bus!", 269 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 531, "#132150", new DateTime(2020, 8, 18, 16, 33, 45, 490, DateTimeKind.Local).AddTicks(9525), "I'll compress the 1080p SDD bandwidth, that should bandwidth the SDD bandwidth!", 250 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 641, "#0b3351", new DateTime(2020, 4, 30, 2, 52, 36, 743, DateTimeKind.Local).AddTicks(3197), "Try to synthesize the RAM protocol, maybe it will synthesize the multi-byte protocol!", 250 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 71, "#154172", new DateTime(2021, 1, 24, 21, 38, 40, 359, DateTimeKind.Local).AddTicks(637), "We need to transmit the open-source EXE card!", 270 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 643, "#484672", new DateTime(2021, 2, 27, 11, 10, 46, 904, DateTimeKind.Local).AddTicks(513), "We need to back up the cross-platform COM bus!", 250 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 230, "#657766", new DateTime(2020, 3, 4, 23, 26, 58, 649, DateTimeKind.Local).AddTicks(2852), "The EXE monitor is down, reboot the redundant monitor so we can reboot the EXE monitor!", 273 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 451, "#723371", new DateTime(2020, 4, 12, 6, 20, 58, 267, DateTimeKind.Local).AddTicks(9019), "I'll copy the haptic SQL protocol, that should protocol the SQL protocol!", 245 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1083, "#50307e", new DateTime(2021, 2, 26, 20, 27, 30, 662, DateTimeKind.Local).AddTicks(5020), "If we transmit the application, we can get to the SSL application through the haptic SSL application!", 276 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 938, "#7b6d46", new DateTime(2021, 1, 17, 5, 9, 33, 152, DateTimeKind.Local).AddTicks(6994), "You can't override the monitor without connecting the back-end AGP monitor!", 276 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 890, "#3c7b2c", new DateTime(2020, 9, 30, 12, 15, 30, 351, DateTimeKind.Local).AddTicks(6913), "The TCP bus is down, connect the wireless bus so we can connect the TCP bus!", 276 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 138, "#766f6b", new DateTime(2020, 12, 7, 16, 15, 20, 283, DateTimeKind.Local).AddTicks(2581), "We need to connect the neural SCSI monitor!", 276 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1156, "#04100a", new DateTime(2020, 4, 13, 0, 40, 59, 356, DateTimeKind.Local).AddTicks(5424), "You can't copy the monitor without programming the wireless SDD monitor!", 275 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 227, "#313f63", new DateTime(2020, 9, 8, 23, 1, 59, 313, DateTimeKind.Local).AddTicks(9686), "Use the solid state SCSI sensor, then you can bypass the solid state sensor!", 242 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 436, "#1d256f", new DateTime(2020, 12, 16, 0, 52, 40, 598, DateTimeKind.Local).AddTicks(7089), "The EXE hard drive is down, compress the wireless hard drive so we can compress the EXE hard drive!", 242 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 783, "#661b7f", new DateTime(2021, 1, 30, 3, 59, 4, 95, DateTimeKind.Local).AddTicks(2758), "If we quantify the card, we can get to the AI card through the 1080p AI card!", 242 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 839, "#032754", new DateTime(2020, 5, 11, 10, 5, 1, 469, DateTimeKind.Local).AddTicks(6880), "Use the back-end AGP circuit, then you can reboot the back-end circuit!", 242 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 999, "#617178", new DateTime(2020, 10, 14, 13, 49, 54, 822, DateTimeKind.Local).AddTicks(3885), "I'll copy the open-source HDD hard drive, that should hard drive the HDD hard drive!", 242 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1145, "#4a6920", new DateTime(2020, 3, 30, 10, 0, 53, 121, DateTimeKind.Local).AddTicks(8952), "You can't synthesize the alarm without compressing the virtual EXE alarm!", 242 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1178, "#683155", new DateTime(2020, 3, 12, 17, 36, 31, 571, DateTimeKind.Local).AddTicks(3197), "quantifying the driver won't do anything, we need to generate the digital IB driver!", 242 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 703, "#291658", new DateTime(2020, 8, 3, 1, 52, 12, 874, DateTimeKind.Local).AddTicks(9730), "generating the bus won't do anything, we need to synthesize the neural SMS bus!", 275 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 674, "#5e0f33", new DateTime(2021, 2, 23, 9, 10, 4, 367, DateTimeKind.Local).AddTicks(8882), "Use the haptic JBOD system, then you can transmit the haptic system!", 275 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 804, "#2b694c", new DateTime(2020, 12, 31, 15, 34, 38, 637, DateTimeKind.Local).AddTicks(7013), "If we bypass the matrix, we can get to the XML matrix through the auxiliary XML matrix!", 245 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 247, "#4e712b", new DateTime(2020, 7, 16, 21, 53, 30, 621, DateTimeKind.Local).AddTicks(7317), "You can't back up the sensor without copying the bluetooth IB sensor!", 275 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1109, "#462d44", new DateTime(2021, 1, 25, 6, 22, 23, 338, DateTimeKind.Local).AddTicks(9537), "If we input the feed, we can get to the PNG feed through the cross-platform PNG feed!", 274 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 476, "#3b6001", new DateTime(2020, 5, 12, 22, 51, 25, 375, DateTimeKind.Local).AddTicks(8251), "Use the cross-platform XML program, then you can override the cross-platform program!", 274 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 173, "#29004f", new DateTime(2020, 8, 21, 18, 15, 21, 87, DateTimeKind.Local).AddTicks(7400), "You can't transmit the monitor without synthesizing the mobile XSS monitor!", 274 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 323, "#21046e", new DateTime(2021, 1, 28, 14, 45, 47, 291, DateTimeKind.Local).AddTicks(842), "Use the redundant PCI application, then you can quantify the redundant application!", 243 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1099, "#6c2013", new DateTime(2020, 3, 31, 19, 5, 54, 582, DateTimeKind.Local).AddTicks(2891), "If we back up the interface, we can get to the XML interface through the 1080p XML interface!", 243 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 168, "#7c031c", new DateTime(2020, 6, 27, 13, 40, 16, 704, DateTimeKind.Local).AddTicks(8834), "You can't reboot the transmitter without overriding the digital TCP transmitter!", 244 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 884, "#042706", new DateTime(2021, 1, 11, 4, 20, 31, 288, DateTimeKind.Local).AddTicks(1193), "If we navigate the pixel, we can get to the SMS pixel through the wireless SMS pixel!", 244 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 718, "#3e436c", new DateTime(2020, 5, 12, 10, 28, 24, 411, DateTimeKind.Local).AddTicks(8115), "overriding the microchip won't do anything, we need to parse the wireless THX microchip!", 273 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 136, "#73004b", new DateTime(2020, 4, 13, 23, 2, 29, 542, DateTimeKind.Local).AddTicks(4641), "I'll compress the cross-platform COM protocol, that should protocol the COM protocol!", 245 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 627, "#797329", new DateTime(2020, 7, 5, 16, 55, 12, 405, DateTimeKind.Local).AddTicks(1941), "You can't compress the circuit without generating the 1080p SMS circuit!", 273 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 450, "#281302", new DateTime(2020, 12, 17, 2, 18, 33, 336, DateTimeKind.Local).AddTicks(4029), "I'll synthesize the primary SAS driver, that should driver the SAS driver!", 273 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 398, "#57231c", new DateTime(2021, 2, 13, 2, 53, 59, 784, DateTimeKind.Local).AddTicks(9988), "You can't connect the system without programming the bluetooth TCP system!", 273 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 210, "#7c1765", new DateTime(2020, 7, 21, 18, 51, 8, 607, DateTimeKind.Local).AddTicks(8651), "Try to override the RAM bus, maybe it will override the mobile bus!", 245 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 393, "#783c3b", new DateTime(2020, 11, 29, 7, 43, 44, 350, DateTimeKind.Local).AddTicks(9949), "Use the primary HDD circuit, then you can bypass the primary circuit!", 245 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 147, "#641f7f", new DateTime(2020, 8, 1, 2, 24, 4, 484, DateTimeKind.Local).AddTicks(6557), "Use the 1080p IB hard drive, then you can override the 1080p hard drive!", 275 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1125, "#2d2627", new DateTime(2021, 2, 12, 17, 37, 34, 592, DateTimeKind.Local).AddTicks(8385), "overriding the driver won't do anything, we need to connect the redundant XSS driver!", 241 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 708, "#286e1c", new DateTime(2021, 1, 15, 1, 12, 9, 104, DateTimeKind.Local).AddTicks(4929), "Use the multi-byte AI card, then you can copy the multi-byte card!", 250 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 74, "#591b3b", new DateTime(2021, 2, 16, 17, 53, 52, 902, DateTimeKind.Local).AddTicks(5195), "Use the haptic XML port, then you can override the haptic port!", 268 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 447, "#215266", new DateTime(2020, 3, 19, 17, 8, 50, 493, DateTimeKind.Local).AddTicks(7042), "Try to transmit the ADP program, maybe it will transmit the primary program!", 256 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 565, "#305e27", new DateTime(2021, 2, 12, 20, 51, 44, 69, DateTimeKind.Local).AddTicks(3996), "We need to override the optical AI protocol!", 256 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 587, "#656736", new DateTime(2020, 11, 20, 14, 40, 3, 45, DateTimeKind.Local).AddTicks(1543), "I'll hack the solid state HDD card, that should card the HDD card!", 256 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1140, "#45135f", new DateTime(2021, 2, 18, 2, 44, 51, 430, DateTimeKind.Local).AddTicks(1225), "The AI circuit is down, bypass the open-source circuit so we can bypass the AI circuit!", 264 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 633, "#473e22", new DateTime(2020, 6, 6, 11, 3, 21, 647, DateTimeKind.Local).AddTicks(9896), "I'll copy the multi-byte RSS array, that should array the RSS array!", 264 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 774, "#686a4d", new DateTime(2020, 10, 4, 11, 40, 36, 221, DateTimeKind.Local).AddTicks(8780), "Use the auxiliary SCSI circuit, then you can program the auxiliary circuit!", 263 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 366, "#5e5f7e", new DateTime(2020, 12, 3, 22, 30, 52, 481, DateTimeKind.Local).AddTicks(8437), "The ADP bandwidth is down, quantify the open-source bandwidth so we can quantify the ADP bandwidth!", 257 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 738, "#57385a", new DateTime(2020, 10, 18, 20, 6, 43, 986, DateTimeKind.Local).AddTicks(8365), "I'll compress the haptic EXE interface, that should interface the EXE interface!", 263 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 677, "#157b54", new DateTime(2021, 1, 1, 5, 29, 54, 223, DateTimeKind.Local).AddTicks(5393), "The FTP capacitor is down, parse the haptic capacitor so we can parse the FTP capacitor!", 263 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 77, "#4b2a71", new DateTime(2020, 8, 4, 9, 38, 50, 417, DateTimeKind.Local).AddTicks(3616), "The JBOD firewall is down, navigate the multi-byte firewall so we can navigate the JBOD firewall!", 263 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1027, "#0f5f73", new DateTime(2020, 4, 2, 5, 9, 33, 357, DateTimeKind.Local).AddTicks(5991), "bypassing the monitor won't do anything, we need to synthesize the cross-platform SAS monitor!", 257 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1181, "#314e41", new DateTime(2020, 10, 5, 19, 37, 29, 589, DateTimeKind.Local).AddTicks(5482), "We need to bypass the open-source SAS matrix!", 257 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 457, "#461c1e", new DateTime(2021, 1, 31, 11, 2, 54, 596, DateTimeKind.Local).AddTicks(7073), "overriding the circuit won't do anything, we need to calculate the mobile EXE circuit!", 258 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 962, "#556a57", new DateTime(2021, 2, 26, 18, 11, 38, 730, DateTimeKind.Local).AddTicks(9656), "Try to compress the FTP system, maybe it will compress the open-source system!", 258 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 898, "#131177", new DateTime(2020, 8, 26, 12, 17, 30, 746, DateTimeKind.Local).AddTicks(5786), "If we synthesize the sensor, we can get to the HTTP sensor through the multi-byte HTTP sensor!", 255 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 982, "#760e1a", new DateTime(2020, 8, 31, 18, 38, 50, 561, DateTimeKind.Local).AddTicks(6191), "Try to program the SQL transmitter, maybe it will program the cross-platform transmitter!", 258 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 231, "#0b730a", new DateTime(2021, 2, 2, 16, 31, 10, 689, DateTimeKind.Local).AddTicks(2454), "I'll reboot the cross-platform SMTP card, that should card the SMTP card!", 262 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1029, "#37197d", new DateTime(2020, 5, 28, 22, 53, 50, 666, DateTimeKind.Local).AddTicks(5957), "Try to navigate the SAS feed, maybe it will navigate the auxiliary feed!", 258 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 966, "#312122", new DateTime(2020, 6, 23, 0, 56, 32, 318, DateTimeKind.Local).AddTicks(3207), "generating the bus won't do anything, we need to connect the bluetooth PNG bus!", 261 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 655, "#5b4206", new DateTime(2021, 2, 8, 17, 49, 1, 167, DateTimeKind.Local).AddTicks(7272), "We need to connect the mobile XML sensor!", 261 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 264, "#1e2c2f", new DateTime(2021, 2, 15, 3, 46, 4, 879, DateTimeKind.Local).AddTicks(8048), "You can't connect the port without backing up the primary RAM port!", 261 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 228, "#5b6b4c", new DateTime(2020, 8, 27, 2, 33, 12, 241, DateTimeKind.Local).AddTicks(565), "I'll navigate the open-source TCP capacitor, that should capacitor the TCP capacitor!", 259 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 392, "#446a75", new DateTime(2020, 9, 2, 18, 58, 32, 272, DateTimeKind.Local).AddTicks(4565), "compressing the application won't do anything, we need to bypass the wireless SCSI application!", 259 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 560, "#3d2d36", new DateTime(2020, 4, 9, 20, 46, 36, 165, DateTimeKind.Local).AddTicks(5093), "Use the mobile TCP hard drive, then you can transmit the mobile hard drive!", 259 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 894, "#462c01", new DateTime(2020, 6, 22, 22, 3, 0, 879, DateTimeKind.Local).AddTicks(7009), "transmitting the interface won't do anything, we need to index the wireless TCP interface!", 259 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1123, "#485431", new DateTime(2020, 3, 22, 14, 56, 5, 970, DateTimeKind.Local).AddTicks(2185), "I'll override the virtual SCSI panel, that should panel the SCSI panel!", 259 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1102, "#177b55", new DateTime(2020, 7, 31, 8, 5, 12, 910, DateTimeKind.Local).AddTicks(9), "compressing the hard drive won't do anything, we need to transmit the cross-platform SQL hard drive!", 260 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 756, "#7a7926", new DateTime(2020, 3, 29, 11, 18, 59, 175, DateTimeKind.Local).AddTicks(107), "I'll synthesize the redundant TCP alarm, that should alarm the TCP alarm!", 260 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 235, "#27726c", new DateTime(2021, 1, 17, 14, 55, 9, 850, DateTimeKind.Local).AddTicks(9486), "If we index the hard drive, we can get to the AGP hard drive through the digital AGP hard drive!", 260 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 37, "#37496b", new DateTime(2020, 8, 19, 3, 42, 19, 365, DateTimeKind.Local).AddTicks(3651), "The IB panel is down, program the mobile panel so we can program the IB panel!", 260 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 814, "#731a2b", new DateTime(2020, 10, 26, 22, 10, 37, 615, DateTimeKind.Local).AddTicks(3981), "The EXE alarm is down, quantify the back-end alarm so we can quantify the EXE alarm!", 262 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1038, "#210e79", new DateTime(2020, 6, 8, 14, 24, 54, 404, DateTimeKind.Local).AddTicks(3027), "compressing the program won't do anything, we need to index the redundant EXE program!", 268 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 676, "#196a1d", new DateTime(2020, 3, 27, 7, 24, 18, 822, DateTimeKind.Local).AddTicks(3915), "We need to index the mobile GB array!", 255 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 94, "#702c0c", new DateTime(2020, 5, 18, 3, 16, 23, 674, DateTimeKind.Local).AddTicks(1222), "You can't input the sensor without bypassing the online SDD sensor!", 265 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 809, "#526865", new DateTime(2020, 8, 30, 14, 8, 49, 991, DateTimeKind.Local).AddTicks(5863), "The COM system is down, transmit the virtual system so we can transmit the COM system!", 267 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 517, "#512c40", new DateTime(2020, 12, 7, 23, 32, 4, 808, DateTimeKind.Local).AddTicks(2935), "You can't calculate the capacitor without quantifying the 1080p FTP capacitor!", 251 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 656, "#1f5b2f", new DateTime(2020, 12, 1, 22, 3, 36, 456, DateTimeKind.Local).AddTicks(5604), "We need to quantify the 1080p HDD interface!", 267 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 437, "#540845", new DateTime(2020, 11, 23, 5, 21, 50, 330, DateTimeKind.Local).AddTicks(7178), "The HTTP matrix is down, input the open-source matrix so we can input the HTTP matrix!", 267 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 119, "#555344", new DateTime(2020, 3, 24, 5, 37, 54, 526, DateTimeKind.Local).AddTicks(2244), "Try to bypass the SSL hard drive, maybe it will bypass the 1080p hard drive!", 267 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 648, "#0d0e78", new DateTime(2020, 7, 4, 7, 34, 14, 210, DateTimeKind.Local).AddTicks(7586), "We need to copy the back-end RAM interface!", 251 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1034, "#640454", new DateTime(2020, 12, 15, 12, 41, 44, 8, DateTimeKind.Local).AddTicks(3627), "The SQL monitor is down, generate the multi-byte monitor so we can generate the SQL monitor!", 251 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1032, "#61275a", new DateTime(2020, 4, 25, 9, 41, 41, 943, DateTimeKind.Local).AddTicks(9439), "If we back up the driver, we can get to the COM driver through the haptic COM driver!", 266 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 726, "#092118", new DateTime(2020, 12, 4, 0, 6, 9, 97, DateTimeKind.Local).AddTicks(4696), "Try to connect the EXE program, maybe it will connect the wireless program!", 252 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 196, "#2b4242", new DateTime(2020, 5, 7, 0, 25, 9, 854, DateTimeKind.Local).AddTicks(2330), "Use the optical AI application, then you can copy the optical application!", 253 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 301, "#7e2045", new DateTime(2020, 5, 31, 0, 30, 36, 316, DateTimeKind.Local).AddTicks(3595), "The SCSI hard drive is down, reboot the redundant hard drive so we can reboot the SCSI hard drive!", 253 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 736, "#121a61", new DateTime(2020, 3, 12, 0, 36, 40, 763, DateTimeKind.Local).AddTicks(721), "Try to connect the SQL transmitter, maybe it will connect the mobile transmitter!", 253 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 605, "#210b3c", new DateTime(2020, 7, 2, 2, 24, 14, 476, DateTimeKind.Local).AddTicks(4994), "I'll back up the cross-platform RSS matrix, that should matrix the RSS matrix!", 266 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 133, "#401b3a", new DateTime(2020, 5, 30, 5, 17, 49, 168, DateTimeKind.Local).AddTicks(5698), "Use the digital AGP bus, then you can transmit the digital bus!", 266 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 108, "#533b34", new DateTime(2020, 6, 5, 4, 56, 24, 456, DateTimeKind.Local).AddTicks(9455), "Try to input the SMS bandwidth, maybe it will input the open-source bandwidth!", 255 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 742, "#64543d", new DateTime(2020, 7, 9, 3, 45, 7, 94, DateTimeKind.Local).AddTicks(9464), "Use the primary EXE array, then you can calculate the primary array!", 253 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1110, "#057957", new DateTime(2020, 6, 3, 14, 4, 12, 4, DateTimeKind.Local).AddTicks(6939), "We need to input the back-end PNG program!", 253 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1124, "#6d3f46", new DateTime(2020, 12, 8, 22, 41, 23, 531, DateTimeKind.Local).AddTicks(628), "If we transmit the hard drive, we can get to the HDD hard drive through the optical HDD hard drive!", 253 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 195, "#37354a", new DateTime(2020, 12, 19, 23, 40, 46, 507, DateTimeKind.Local).AddTicks(8192), "I'll index the solid state RSS monitor, that should monitor the RSS monitor!", 254 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 391, "#33352b", new DateTime(2020, 8, 20, 5, 35, 25, 204, DateTimeKind.Local).AddTicks(9102), "Use the optical SSL interface, then you can generate the optical interface!", 254 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 415, "#78071d", new DateTime(2020, 5, 23, 23, 40, 23, 22, DateTimeKind.Local).AddTicks(1084), "We need to index the digital HTTP application!", 254 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 561, "#561e43", new DateTime(2021, 1, 1, 17, 56, 55, 98, DateTimeKind.Local).AddTicks(6638), "parsing the matrix won't do anything, we need to compress the wireless GB matrix!", 254 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 658, "#44714b", new DateTime(2021, 1, 22, 21, 51, 37, 639, DateTimeKind.Local).AddTicks(7499), "If we bypass the system, we can get to the JSON system through the mobile JSON system!", 254 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 759, "#672a71", new DateTime(2020, 12, 27, 22, 34, 21, 97, DateTimeKind.Local).AddTicks(8425), "We need to reboot the digital XML matrix!", 254 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1035, "#556f37", new DateTime(2021, 2, 18, 0, 41, 30, 964, DateTimeKind.Local).AddTicks(3223), "Try to bypass the JSON bus, maybe it will bypass the back-end bus!", 254 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1197, "#5d6036", new DateTime(2021, 1, 28, 15, 10, 50, 991, DateTimeKind.Local).AddTicks(348), "connecting the array won't do anything, we need to index the virtual FTP array!", 254 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1174, "#702504", new DateTime(2020, 7, 19, 18, 7, 51, 329, DateTimeKind.Local).AddTicks(4386), "I'll input the open-source RSS program, that should program the RSS program!", 265 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1050, "#152c3d", new DateTime(2020, 4, 30, 9, 45, 6, 607, DateTimeKind.Local).AddTicks(1891), "Use the optical PCI program, then you can input the optical program!", 265 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1046, "#2b7935", new DateTime(2020, 3, 28, 18, 44, 23, 799, DateTimeKind.Local).AddTicks(2468), "If we calculate the bandwidth, we can get to the JBOD bandwidth through the back-end JBOD bandwidth!", 265 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 847, "#047038", new DateTime(2021, 1, 13, 22, 51, 35, 365, DateTimeKind.Local).AddTicks(1573), "The ADP sensor is down, connect the neural sensor so we can connect the ADP sensor!", 265 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 784, "#442229", new DateTime(2020, 12, 13, 0, 10, 1, 290, DateTimeKind.Local).AddTicks(1539), "Try to compress the AI system, maybe it will compress the online system!", 253 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 161, "#677623", new DateTime(2020, 10, 23, 1, 4, 55, 372, DateTimeKind.Local).AddTicks(515), "Use the neural AGP port, then you can synthesize the neural port!", 223 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 92, "#095553", new DateTime(2021, 1, 12, 2, 5, 16, 537, DateTimeKind.Local).AddTicks(8095), "We need to program the wireless AGP matrix!", 277 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 789, "#360228", new DateTime(2021, 1, 3, 13, 22, 29, 677, DateTimeKind.Local).AddTicks(5623), "Use the wireless FTP transmitter, then you can bypass the wireless transmitter!", 241 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 30, "#153522", new DateTime(2020, 11, 6, 12, 39, 7, 941, DateTimeKind.Local).AddTicks(2677), "I'll navigate the auxiliary JBOD sensor, that should sensor the JBOD sensor!", 287 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 875, "#0f3b3a", new DateTime(2020, 8, 27, 22, 33, 35, 862, DateTimeKind.Local).AddTicks(7218), "The SSL card is down, bypass the solid state card so we can bypass the SSL card!", 228 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 113, "#3d0178", new DateTime(2020, 6, 21, 16, 55, 51, 476, DateTimeKind.Local).AddTicks(429), "If we parse the card, we can get to the XSS card through the neural XSS card!", 229 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1150, "#730747", new DateTime(2020, 9, 21, 8, 28, 59, 938, DateTimeKind.Local).AddTicks(1868), "Use the auxiliary AI feed, then you can generate the auxiliary feed!", 285 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 420, "#3a4765", new DateTime(2021, 1, 11, 8, 49, 38, 16, DateTimeKind.Local).AddTicks(6485), "Use the optical JSON sensor, then you can program the optical sensor!", 229 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 592, "#063a5c", new DateTime(2021, 1, 16, 17, 58, 4, 843, DateTimeKind.Local).AddTicks(9914), "transmitting the application won't do anything, we need to override the redundant HDD application!", 229 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 683, "#200d3b", new DateTime(2020, 10, 23, 9, 59, 55, 669, DateTimeKind.Local).AddTicks(6008), "I'll back up the bluetooth TCP driver, that should driver the TCP driver!", 229 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 732, "#3a402d", new DateTime(2020, 4, 28, 9, 38, 46, 946, DateTimeKind.Local).AddTicks(9694), "The RAM card is down, copy the mobile card so we can copy the RAM card!", 229 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 908, "#3b4541", new DateTime(2020, 12, 7, 23, 40, 36, 424, DateTimeKind.Local).AddTicks(5274), "I'll calculate the digital PNG application, that should application the PNG application!", 285 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 904, "#405763", new DateTime(2020, 9, 3, 0, 33, 43, 277, DateTimeKind.Local).AddTicks(1460), "If we bypass the microchip, we can get to the CSS microchip through the primary CSS microchip!", 285 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 867, "#026375", new DateTime(2020, 11, 5, 13, 42, 20, 46, DateTimeKind.Local).AddTicks(2254), "Use the 1080p PNG microchip, then you can bypass the 1080p microchip!", 285 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 124, "#595e59", new DateTime(2020, 8, 14, 20, 31, 4, 132, DateTimeKind.Local).AddTicks(1649), "Try to calculate the HDD pixel, maybe it will calculate the primary pixel!", 230 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 281, "#453a11", new DateTime(2020, 10, 9, 1, 3, 5, 627, DateTimeKind.Local).AddTicks(6758), "You can't compress the interface without compressing the neural HDD interface!", 230 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 753, "#610b47", new DateTime(2020, 7, 7, 1, 59, 38, 313, DateTimeKind.Local).AddTicks(9648), "The XML panel is down, generate the multi-byte panel so we can generate the XML panel!", 285 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 61, "#7d0131", new DateTime(2020, 7, 22, 2, 31, 46, 72, DateTimeKind.Local).AddTicks(761), "The PNG card is down, hack the 1080p card so we can hack the PNG card!", 287 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 620, "#273941", new DateTime(2020, 7, 11, 18, 15, 25, 282, DateTimeKind.Local).AddTicks(6131), "Use the back-end PNG microchip, then you can bypass the back-end microchip!", 285 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 299, "#70407b", new DateTime(2020, 11, 20, 23, 37, 44, 815, DateTimeKind.Local).AddTicks(4250), "You can't navigate the program without quantifying the neural TCP program!", 285 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 798, "#28463b", new DateTime(2020, 6, 13, 22, 1, 42, 146, DateTimeKind.Local).AddTicks(715), "If we hack the microchip, we can get to the IB microchip through the open-source IB microchip!", 231 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 853, "#4f0d6d", new DateTime(2020, 4, 14, 2, 35, 42, 818, DateTimeKind.Local).AddTicks(9085), "If we parse the interface, we can get to the FTP interface through the neural FTP interface!", 231 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1161, "#2f7d0f", new DateTime(2020, 12, 13, 18, 19, 26, 86, DateTimeKind.Local).AddTicks(4474), "You can't calculate the card without backing up the haptic PNG card!", 231 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 275, "#6a365d", new DateTime(2020, 12, 12, 18, 10, 8, 471, DateTimeKind.Local).AddTicks(3417), "If we quantify the panel, we can get to the EXE panel through the multi-byte EXE panel!", 285 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 60, "#5a3517", new DateTime(2021, 2, 8, 13, 52, 36, 376, DateTimeKind.Local).AddTicks(4867), "We need to synthesize the redundant RAM pixel!", 285 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 334, "#5e6a13", new DateTime(2020, 12, 2, 4, 55, 34, 522, DateTimeKind.Local).AddTicks(9992), "We need to back up the redundant SMS microchip!", 232 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 469, "#63750b", new DateTime(2021, 2, 7, 20, 24, 5, 317, DateTimeKind.Local).AddTicks(322), "Use the virtual XSS transmitter, then you can input the virtual transmitter!", 232 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 552, "#35115c", new DateTime(2020, 5, 26, 7, 26, 42, 332, DateTimeKind.Local).AddTicks(2603), "Try to copy the RSS firewall, maybe it will copy the mobile firewall!", 232 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 697, "#342805", new DateTime(2020, 6, 13, 23, 38, 22, 787, DateTimeKind.Local).AddTicks(1294), "Try to bypass the COM microchip, maybe it will bypass the primary microchip!", 232 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 965, "#132d02", new DateTime(2020, 6, 13, 21, 44, 40, 549, DateTimeKind.Local).AddTicks(452), "You can't navigate the capacitor without parsing the bluetooth SMS capacitor!", 232 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1067, "#292233", new DateTime(2020, 7, 23, 12, 30, 42, 62, DateTimeKind.Local).AddTicks(6330), "Try to navigate the EXE sensor, maybe it will navigate the redundant sensor!", 232 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1186, "#480917", new DateTime(2020, 12, 11, 14, 20, 17, 775, DateTimeKind.Local).AddTicks(5160), "We need to reboot the mobile XSS hard drive!", 232 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 617, "#1e234a", new DateTime(2020, 12, 22, 22, 31, 38, 403, DateTimeKind.Local).AddTicks(8836), "You can't transmit the pixel without quantifying the wireless FTP pixel!", 284 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 474, "#2b3310", new DateTime(2020, 4, 7, 18, 18, 17, 184, DateTimeKind.Local).AddTicks(702), "We need to program the digital SAS monitor!", 285 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 520, "#766b63", new DateTime(2021, 2, 13, 17, 37, 51, 655, DateTimeKind.Local).AddTicks(7870), "Try to compress the GB bus, maybe it will compress the bluetooth bus!", 284 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 189, "#6d246a", new DateTime(2020, 10, 23, 1, 57, 46, 163, DateTimeKind.Local).AddTicks(1040), "If we synthesize the matrix, we can get to the PNG matrix through the optical PNG matrix!", 287 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 595, "#395f47", new DateTime(2020, 7, 22, 19, 35, 48, 891, DateTimeKind.Local).AddTicks(7081), "Try to override the IB circuit, maybe it will override the cross-platform circuit!", 287 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 824, "#1f4a7d", new DateTime(2020, 4, 5, 5, 32, 28, 725, DateTimeKind.Local).AddTicks(3421), "Use the optical SMTP card, then you can program the optical card!", 223 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 879, "#143124", new DateTime(2020, 7, 30, 21, 37, 0, 309, DateTimeKind.Local).AddTicks(8847), "If we parse the application, we can get to the SSL application through the 1080p SSL application!", 223 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1063, "#462609", new DateTime(2020, 12, 25, 17, 21, 50, 579, DateTimeKind.Local).AddTicks(128), "You can't transmit the application without quantifying the virtual RAM application!", 223 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1064, "#21061b", new DateTime(2020, 6, 25, 20, 44, 12, 845, DateTimeKind.Local).AddTicks(3315), "The IB feed is down, index the wireless feed so we can index the IB feed!", 223 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 948, "#2d2243", new DateTime(2020, 9, 20, 9, 46, 49, 780, DateTimeKind.Local).AddTicks(93), "You can't calculate the application without compressing the mobile XSS application!", 290 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 864, "#2b6950", new DateTime(2020, 3, 13, 11, 57, 38, 678, DateTimeKind.Local).AddTicks(3059), "You can't program the capacitor without overriding the digital RSS capacitor!", 290 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 176, "#4d087d", new DateTime(2020, 4, 18, 21, 45, 55, 865, DateTimeKind.Local).AddTicks(9412), "Use the 1080p AI panel, then you can connect the 1080p panel!", 224 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 634, "#686004", new DateTime(2020, 9, 22, 8, 20, 50, 586, DateTimeKind.Local).AddTicks(1767), "You can't compress the bus without navigating the 1080p THX bus!", 224 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1158, "#137b12", new DateTime(2021, 2, 7, 3, 9, 52, 852, DateTimeKind.Local).AddTicks(6606), "Try to calculate the CSS feed, maybe it will calculate the solid state feed!", 224 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 600, "#384875", new DateTime(2020, 10, 20, 5, 21, 56, 141, DateTimeKind.Local).AddTicks(379), "You can't reboot the driver without copying the optical AI driver!", 290 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 546, "#78374a", new DateTime(2020, 6, 14, 11, 4, 1, 110, DateTimeKind.Local).AddTicks(3119), "If we synthesize the driver, we can get to the SCSI driver through the online SCSI driver!", 290 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 481, "#5d5e1d", new DateTime(2020, 9, 18, 16, 50, 39, 392, DateTimeKind.Local).AddTicks(5507), "I'll calculate the online IB bandwidth, that should bandwidth the IB bandwidth!", 290 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 102, "#35462b", new DateTime(2020, 6, 9, 9, 23, 55, 142, DateTimeKind.Local).AddTicks(2192), "We need to connect the mobile RAM card!", 290 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 9, "#24112d", new DateTime(2020, 8, 28, 17, 58, 35, 732, DateTimeKind.Local).AddTicks(1714), "We need to compress the redundant RAM capacitor!", 290 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 518, "#5d486e", new DateTime(2020, 9, 13, 17, 3, 19, 275, DateTimeKind.Local).AddTicks(9871), "If we navigate the transmitter, we can get to the FTP transmitter through the haptic FTP transmitter!", 287 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 766, "#585d7e", new DateTime(2020, 9, 8, 10, 56, 16, 793, DateTimeKind.Local).AddTicks(3652), "generating the matrix won't do anything, we need to parse the neural PNG matrix!", 225 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1014, "#182a2a", new DateTime(2020, 6, 12, 21, 29, 31, 407, DateTimeKind.Local).AddTicks(4901), "I'll bypass the primary SMTP card, that should card the SMTP card!", 225 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 114, "#760c0d", new DateTime(2020, 11, 11, 19, 15, 53, 974, DateTimeKind.Local).AddTicks(5939), "We need to program the online HDD pixel!", 289 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 82, "#414673", new DateTime(2020, 11, 2, 23, 30, 40, 35, DateTimeKind.Local).AddTicks(2558), "indexing the matrix won't do anything, we need to index the cross-platform GB matrix!", 289 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 96, "#311e79", new DateTime(2020, 7, 1, 8, 46, 54, 205, DateTimeKind.Local).AddTicks(1647), "You can't calculate the circuit without generating the haptic SCSI circuit!", 226 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1003, "#7b341f", new DateTime(2020, 3, 25, 3, 56, 50, 88, DateTimeKind.Local).AddTicks(8742), "quantifying the bus won't do anything, we need to synthesize the haptic FTP bus!", 226 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1091, "#5f557e", new DateTime(2020, 12, 31, 11, 45, 52, 452, DateTimeKind.Local).AddTicks(2526), "Use the digital PCI transmitter, then you can synthesize the digital transmitter!", 226 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 335, "#3d5200", new DateTime(2020, 9, 5, 7, 23, 54, 233, DateTimeKind.Local).AddTicks(7798), "programming the port won't do anything, we need to copy the cross-platform SDD port!", 288 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 282, "#2c547e", new DateTime(2020, 12, 24, 7, 7, 49, 488, DateTimeKind.Local).AddTicks(5931), "Try to hack the PCI program, maybe it will hack the cross-platform program!", 288 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 152, "#2d405f", new DateTime(2020, 11, 5, 4, 10, 57, 939, DateTimeKind.Local).AddTicks(574), "If we quantify the application, we can get to the EXE application through the wireless EXE application!", 288 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 13, "#625667", new DateTime(2020, 4, 8, 23, 21, 59, 873, DateTimeKind.Local).AddTicks(3449), "I'll quantify the auxiliary FTP hard drive, that should hard drive the FTP hard drive!", 227 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 319, "#2d4e40", new DateTime(2020, 3, 14, 18, 20, 35, 20, DateTimeKind.Local).AddTicks(2014), "backing up the feed won't do anything, we need to copy the auxiliary XML feed!", 227 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 400, "#600b10", new DateTime(2020, 6, 5, 18, 29, 28, 900, DateTimeKind.Local).AddTicks(617), "I'll quantify the primary AI sensor, that should sensor the AI sensor!", 227 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 941, "#6c3232", new DateTime(2020, 4, 25, 17, 15, 26, 566, DateTimeKind.Local).AddTicks(4296), "The FTP transmitter is down, input the 1080p transmitter so we can input the FTP transmitter!", 227 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 662, "#7a0b7f", new DateTime(2020, 3, 24, 17, 7, 55, 907, DateTimeKind.Local).AddTicks(4288), "The JSON alarm is down, back up the bluetooth alarm so we can back up the JSON alarm!", 287 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 972, "#384d23", new DateTime(2020, 6, 5, 11, 13, 22, 576, DateTimeKind.Local).AddTicks(3276), "If we quantify the port, we can get to the SAS port through the 1080p SAS port!", 225 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1011, "#774952", new DateTime(2020, 7, 11, 20, 7, 27, 768, DateTimeKind.Local).AddTicks(5940), "Try to navigate the AI microchip, maybe it will navigate the open-source microchip!", 241 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1031, "#142803", new DateTime(2020, 7, 27, 18, 14, 13, 291, DateTimeKind.Local).AddTicks(9002), "Use the open-source ADP bus, then you can calculate the open-source bus!", 283 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 55, "#355f0c", new DateTime(2021, 2, 1, 21, 42, 33, 914, DateTimeKind.Local).AddTicks(6895), "The FTP panel is down, hack the online panel so we can hack the FTP panel!", 233 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 842, "#7b3e52", new DateTime(2020, 4, 5, 12, 17, 59, 254, DateTimeKind.Local).AddTicks(1161), "You can't transmit the transmitter without compressing the auxiliary COM transmitter!", 280 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 782, "#681d7e", new DateTime(2020, 3, 31, 2, 27, 22, 215, DateTimeKind.Local).AddTicks(307), "You can't back up the application without programming the online XML application!", 280 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 746, "#1c6733", new DateTime(2020, 9, 25, 2, 25, 51, 362, DateTimeKind.Local).AddTicks(3228), "overriding the bus won't do anything, we need to compress the bluetooth GB bus!", 280 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 397, "#136373", new DateTime(2020, 6, 26, 16, 47, 17, 555, DateTimeKind.Local).AddTicks(259), "If we connect the feed, we can get to the JBOD feed through the bluetooth JBOD feed!", 237 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 551, "#211e47", new DateTime(2020, 7, 10, 20, 8, 51, 468, DateTimeKind.Local).AddTicks(6668), "The THX hard drive is down, back up the solid state hard drive so we can back up the THX hard drive!", 237 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 744, "#4e7d29", new DateTime(2020, 11, 19, 11, 0, 18, 854, DateTimeKind.Local).AddTicks(1225), "Use the auxiliary SCSI pixel, then you can back up the auxiliary pixel!", 280 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 687, "#1a2a3e", new DateTime(2020, 6, 18, 16, 24, 6, 404, DateTimeKind.Local).AddTicks(3520), "compressing the port won't do anything, we need to compress the auxiliary SSL port!", 280 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 250, "#3f2e5f", new DateTime(2020, 4, 2, 11, 47, 32, 946, DateTimeKind.Local).AddTicks(6762), "Use the wireless XML interface, then you can input the wireless interface!", 280 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 193, "#3c516d", new DateTime(2020, 5, 30, 6, 13, 34, 154, DateTimeKind.Local).AddTicks(3976), "The JSON hard drive is down, override the mobile hard drive so we can override the JSON hard drive!", 238 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 368, "#4c031e", new DateTime(2020, 9, 9, 3, 57, 12, 431, DateTimeKind.Local).AddTicks(4651), "We need to synthesize the back-end THX circuit!", 238 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 491, "#723462", new DateTime(2021, 1, 8, 3, 37, 21, 400, DateTimeKind.Local).AddTicks(9479), "We need to bypass the cross-platform PNG hard drive!", 238 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 945, "#220813", new DateTime(2021, 1, 9, 21, 1, 57, 887, DateTimeKind.Local).AddTicks(9103), "Try to transmit the ADP port, maybe it will transmit the multi-byte port!", 238 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1169, "#0d5509", new DateTime(2020, 10, 8, 0, 17, 35, 759, DateTimeKind.Local).AddTicks(4845), "I'll transmit the open-source RSS protocol, that should protocol the RSS protocol!", 238 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1177, "#586c73", new DateTime(2020, 3, 20, 14, 10, 59, 620, DateTimeKind.Local).AddTicks(4556), "overriding the firewall won't do anything, we need to quantify the digital RSS firewall!", 238 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 868, "#2b4a62", new DateTime(2020, 7, 23, 22, 6, 0, 756, DateTimeKind.Local).AddTicks(1937), "If we connect the feed, we can get to the TCP feed through the virtual TCP feed!", 280 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 834, "#1a134e", new DateTime(2020, 4, 4, 9, 19, 10, 498, DateTimeKind.Local).AddTicks(164), "The AI circuit is down, reboot the primary circuit so we can reboot the AI circuit!", 279 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 276, "#346019", new DateTime(2020, 3, 3, 20, 26, 12, 207, DateTimeKind.Local).AddTicks(1139), "I'll parse the back-end XSS port, that should port the XSS port!", 279 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 650, "#426b78", new DateTime(2021, 2, 10, 2, 12, 31, 8, DateTimeKind.Local).AddTicks(3993), "I'll bypass the mobile THX application, that should application the THX application!", 239 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 935, "#5f683d", new DateTime(2020, 12, 19, 23, 47, 4, 741, DateTimeKind.Local).AddTicks(2641), "synthesizing the circuit won't do anything, we need to navigate the primary THX circuit!", 239 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 987, "#557315", new DateTime(2020, 10, 29, 12, 49, 9, 150, DateTimeKind.Local).AddTicks(4765), "You can't navigate the sensor without navigating the 1080p EXE sensor!", 239 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 825, "#172a59", new DateTime(2020, 9, 5, 21, 7, 20, 738, DateTimeKind.Local).AddTicks(7311), "We need to program the primary IB capacitor!", 240 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1020, "#7c1731", new DateTime(2020, 3, 30, 10, 44, 55, 204, DateTimeKind.Local).AddTicks(6140), "Use the auxiliary PNG card, then you can quantify the auxiliary card!", 278 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1018, "#66662f", new DateTime(2020, 10, 4, 14, 41, 37, 113, DateTimeKind.Local).AddTicks(4554), "If we generate the card, we can get to the IB card through the neural IB card!", 278 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 971, "#604c0b", new DateTime(2021, 2, 23, 16, 27, 51, 759, DateTimeKind.Local).AddTicks(3977), "You can't override the feed without compressing the solid state SQL feed!", 278 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 659, "#0c2c5c", new DateTime(2020, 5, 16, 16, 47, 16, 300, DateTimeKind.Local).AddTicks(7380), "I'll parse the virtual RAM alarm, that should alarm the RAM alarm!", 278 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 112, "#076f08", new DateTime(2020, 8, 2, 14, 46, 46, 273, DateTimeKind.Local).AddTicks(4663), "The SSL system is down, index the 1080p system so we can index the SSL system!", 278 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 194, "#7d5f6d", new DateTime(2020, 7, 10, 3, 17, 2, 611, DateTimeKind.Local).AddTicks(826), "I'll connect the 1080p RSS hard drive, that should hard drive the RSS hard drive!", 241 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 542, "#581574", new DateTime(2020, 12, 27, 3, 41, 58, 348, DateTimeKind.Local).AddTicks(8067), "I'll navigate the cross-platform USB capacitor, that should capacitor the USB capacitor!", 241 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 564, "#0f163d", new DateTime(2020, 7, 14, 4, 30, 51, 485, DateTimeKind.Local).AddTicks(3887), "Use the 1080p GB circuit, then you can compress the 1080p circuit!", 241 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 730, "#321579", new DateTime(2020, 3, 27, 21, 8, 48, 911, DateTimeKind.Local).AddTicks(2653), "If we bypass the microchip, we can get to the TCP microchip through the virtual TCP microchip!", 241 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 638, "#1f0f1d", new DateTime(2020, 3, 4, 23, 3, 44, 580, DateTimeKind.Local).AddTicks(8869), "If we hack the array, we can get to the PCI array through the 1080p PCI array!", 279 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 52, "#1a1462", new DateTime(2020, 8, 7, 0, 19, 14, 571, DateTimeKind.Local).AddTicks(3109), "If we input the card, we can get to the XML card through the virtual XML card!", 233 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 669, "#3c0611", new DateTime(2020, 6, 8, 18, 25, 49, 14, DateTimeKind.Local).AddTicks(104), "The RAM firewall is down, copy the back-end firewall so we can copy the RAM firewall!", 236 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1170, "#375d21", new DateTime(2020, 3, 13, 19, 5, 43, 526, DateTimeKind.Local).AddTicks(8788), "calculating the system won't do anything, we need to synthesize the primary GB system!", 235 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 287, "#25095f", new DateTime(2021, 1, 27, 13, 12, 15, 291, DateTimeKind.Local).AddTicks(6525), "connecting the bandwidth won't do anything, we need to connect the multi-byte FTP bandwidth!", 233 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 336, "#0d0479", new DateTime(2020, 11, 29, 13, 10, 50, 949, DateTimeKind.Local).AddTicks(8914), "The EXE firewall is down, back up the open-source firewall so we can back up the EXE firewall!", 233 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 544, "#2f085d", new DateTime(2020, 4, 2, 8, 46, 6, 109, DateTimeKind.Local).AddTicks(5560), "I'll hack the wireless SSL alarm, that should alarm the SSL alarm!", 233 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 743, "#5d761b", new DateTime(2021, 1, 18, 20, 53, 53, 960, DateTimeKind.Local).AddTicks(4938), "We need to calculate the primary SAS bus!", 233 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 765, "#021516", new DateTime(2020, 5, 9, 9, 44, 35, 641, DateTimeKind.Local).AddTicks(283), "The AGP system is down, bypass the primary system so we can bypass the AGP system!", 233 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 887, "#217b4e", new DateTime(2020, 12, 18, 10, 51, 27, 703, DateTimeKind.Local).AddTicks(9873), "bypassing the capacitor won't do anything, we need to quantify the mobile SMTP capacitor!", 283 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 843, "#5e102b", new DateTime(2020, 11, 21, 2, 21, 55, 109, DateTimeKind.Local).AddTicks(9300), "transmitting the array won't do anything, we need to navigate the auxiliary XSS array!", 233 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1001, "#558034", new DateTime(2020, 10, 20, 18, 48, 36, 481, DateTimeKind.Local).AddTicks(5067), "parsing the array won't do anything, we need to generate the mobile SAS array!", 233 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1057, "#617f00", new DateTime(2021, 2, 25, 19, 13, 53, 207, DateTimeKind.Local).AddTicks(4135), "If we calculate the alarm, we can get to the SMS alarm through the digital SMS alarm!", 233 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 808, "#2d7573", new DateTime(2020, 4, 6, 23, 18, 32, 196, DateTimeKind.Local).AddTicks(6036), "Use the 1080p RSS capacitor, then you can index the 1080p capacitor!", 283 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 522, "#212272", new DateTime(2020, 11, 21, 14, 8, 26, 114, DateTimeKind.Local).AddTicks(7354), "We need to back up the optical AGP capacitor!", 283 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 65, "#6a1e43", new DateTime(2021, 1, 23, 5, 42, 0, 992, DateTimeKind.Local).AddTicks(6879), "You can't synthesize the hard drive without calculating the auxiliary TCP hard drive!", 234 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 140, "#62234c", new DateTime(2020, 8, 17, 11, 18, 40, 953, DateTimeKind.Local).AddTicks(2918), "Use the solid state SCSI hard drive, then you can calculate the solid state hard drive!", 234 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 403, "#0f4310", new DateTime(2020, 6, 16, 10, 11, 41, 499, DateTimeKind.Local).AddTicks(7242), "The RAM feed is down, back up the virtual feed so we can back up the RAM feed!", 234 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 344, "#6a454a", new DateTime(2021, 1, 5, 8, 8, 28, 688, DateTimeKind.Local).AddTicks(8892), "I'll back up the 1080p SMTP alarm, that should alarm the SMTP alarm!", 236 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1088, "#763c68", new DateTime(2020, 9, 25, 22, 46, 6, 222, DateTimeKind.Local).AddTicks(4615), "I'll compress the online SDD application, that should application the SDD application!", 282 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 675, "#603073", new DateTime(2020, 6, 28, 17, 55, 13, 27, DateTimeKind.Local).AddTicks(4213), "programming the microchip won't do anything, we need to copy the 1080p SQL microchip!", 282 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 646, "#0a6b0a", new DateTime(2020, 7, 27, 12, 44, 41, 645, DateTimeKind.Local).AddTicks(7886), "Try to program the JSON sensor, maybe it will program the auxiliary sensor!", 282 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 139, "#6a1068", new DateTime(2020, 10, 26, 10, 7, 50, 589, DateTimeKind.Local).AddTicks(4957), "Use the mobile GB feed, then you can synthesize the mobile feed!", 282 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 479, "#0f7930", new DateTime(2020, 3, 27, 15, 33, 35, 852, DateTimeKind.Local).AddTicks(1336), "You can't calculate the hard drive without bypassing the wireless AGP hard drive!", 281 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 6, "#6b4f32", new DateTime(2021, 2, 10, 9, 36, 52, 806, DateTimeKind.Local).AddTicks(8253), "The IB sensor is down, back up the back-end sensor so we can back up the IB sensor!", 235 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 69, "#41317d", new DateTime(2020, 10, 31, 23, 9, 51, 195, DateTimeKind.Local).AddTicks(4034), "The USB driver is down, generate the primary driver so we can generate the USB driver!", 235 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 242, "#757119", new DateTime(2020, 10, 31, 14, 48, 31, 321, DateTimeKind.Local).AddTicks(989), "You can't quantify the card without bypassing the neural TCP card!", 235 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 298, "#282a72", new DateTime(2020, 8, 19, 6, 36, 40, 308, DateTimeKind.Local).AddTicks(4657), "I'll copy the wireless SMTP circuit, that should circuit the SMTP circuit!", 235 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 441, "#4a4a2a", new DateTime(2020, 11, 5, 7, 30, 17, 877, DateTimeKind.Local).AddTicks(9945), "We need to program the wireless RAM firewall!", 281 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 365, "#773230", new DateTime(2020, 12, 20, 23, 13, 32, 339, DateTimeKind.Local).AddTicks(479), "If we override the circuit, we can get to the SCSI circuit through the haptic SCSI circuit!", 281 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 357, "#03425e", new DateTime(2021, 1, 7, 22, 28, 27, 474, DateTimeKind.Local).AddTicks(7352), "The IB card is down, generate the back-end card so we can generate the IB card!", 281 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 99, "#1e7b6e", new DateTime(2021, 1, 15, 6, 2, 15, 754, DateTimeKind.Local).AddTicks(5935), "The SMTP circuit is down, program the multi-byte circuit so we can program the SMTP circuit!", 281 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 906, "#187a41", new DateTime(2020, 3, 20, 15, 44, 37, 342, DateTimeKind.Local).AddTicks(9972), "You can't connect the feed without bypassing the virtual XSS feed!", 235 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 934, "#401a44", new DateTime(2020, 9, 28, 10, 41, 27, 541, DateTimeKind.Local).AddTicks(279), "The JSON bandwidth is down, copy the redundant bandwidth so we can copy the JSON bandwidth!", 235 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1016, "#125c0d", new DateTime(2021, 1, 5, 6, 42, 16, 176, DateTimeKind.Local).AddTicks(6538), "We need to override the redundant RSS program!", 282 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 185, "#77175a", new DateTime(2020, 10, 11, 15, 1, 13, 357, DateTimeKind.Local).AddTicks(977), "Use the primary SAS system, then you can calculate the primary system!", 260 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 807, "#1c3540", new DateTime(2020, 11, 28, 4, 50, 39, 316, DateTimeKind.Local).AddTicks(6456), "navigating the port won't do anything, we need to parse the multi-byte PCI port!", 151 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 509, "#025914", new DateTime(2020, 5, 2, 16, 36, 22, 765, DateTimeKind.Local).AddTicks(8113), "We need to program the digital FTP firewall!", 209 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 486, "#47352b", new DateTime(2020, 9, 9, 4, 46, 29, 70, DateTimeKind.Local).AddTicks(3186), "We need to generate the wireless AGP interface!", 72 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 355, "#6d2229", new DateTime(2021, 2, 18, 13, 1, 49, 38, DateTimeKind.Local).AddTicks(7582), "You can't bypass the sensor without quantifying the wireless SAS sensor!", 71 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 308, "#0b1413", new DateTime(2020, 12, 27, 1, 34, 2, 991, DateTimeKind.Local).AddTicks(9856), "Use the digital SQL monitor, then you can generate the digital monitor!", 71 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 286, "#2b506f", new DateTime(2020, 9, 23, 20, 50, 36, 728, DateTimeKind.Local).AddTicks(3687), "If we input the array, we can get to the EXE array through the mobile EXE array!", 71 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 473, "#1b675b", new DateTime(2020, 7, 29, 8, 21, 48, 947, DateTimeKind.Local).AddTicks(6272), "Use the solid state THX program, then you can back up the solid state program!", 70 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 382, "#343b0a", new DateTime(2020, 6, 8, 2, 57, 18, 331, DateTimeKind.Local).AddTicks(3844), "Try to transmit the SMTP port, maybe it will transmit the back-end port!", 70 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 374, "#330506", new DateTime(2020, 5, 21, 17, 30, 19, 95, DateTimeKind.Local).AddTicks(7688), "parsing the card won't do anything, we need to copy the auxiliary COM card!", 70 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 5, "#372820", new DateTime(2020, 12, 29, 15, 53, 37, 604, DateTimeKind.Local).AddTicks(3958), "Try to navigate the ADP panel, maybe it will navigate the open-source panel!", 70 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 859, "#632c74", new DateTime(2020, 3, 11, 7, 28, 5, 83, DateTimeKind.Local).AddTicks(4016), "I'll index the redundant HDD firewall, that should firewall the HDD firewall!", 69 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1037, "#1d4355", new DateTime(2020, 8, 21, 19, 52, 30, 135, DateTimeKind.Local).AddTicks(2290), "connecting the hard drive won't do anything, we need to copy the open-source SCSI hard drive!", 68 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 713, "#08764d", new DateTime(2021, 1, 4, 16, 5, 46, 105, DateTimeKind.Local).AddTicks(9030), "The SQL hard drive is down, input the neural hard drive so we can input the SQL hard drive!", 72 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1073, "#593823", new DateTime(2021, 1, 31, 8, 53, 58, 771, DateTimeKind.Local).AddTicks(5336), "backing up the hard drive won't do anything, we need to synthesize the redundant COM hard drive!", 67 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 556, "#022c28", new DateTime(2020, 4, 18, 6, 34, 20, 294, DateTimeKind.Local).AddTicks(2441), "You can't compress the array without indexing the open-source FTP array!", 67 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 238, "#2d5e63", new DateTime(2020, 9, 22, 11, 41, 54, 697, DateTimeKind.Local).AddTicks(3548), "hacking the monitor won't do anything, we need to bypass the online AGP monitor!", 67 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 177, "#0b751b", new DateTime(2020, 11, 2, 4, 49, 58, 90, DateTimeKind.Local).AddTicks(1003), "If we transmit the interface, we can get to the IB interface through the neural IB interface!", 67 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 976, "#3a6277", new DateTime(2020, 11, 23, 23, 44, 17, 931, DateTimeKind.Local).AddTicks(5862), "You can't program the system without synthesizing the digital SMS system!", 66 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 499, "#152273", new DateTime(2020, 3, 16, 18, 5, 9, 541, DateTimeKind.Local).AddTicks(8933), "Try to synthesize the RSS interface, maybe it will synthesize the bluetooth interface!", 66 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 154, "#537434", new DateTime(2020, 9, 20, 0, 26, 59, 766, DateTimeKind.Local).AddTicks(2066), "You can't navigate the monitor without navigating the cross-platform SMS monitor!", 66 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 292, "#4f226c", new DateTime(2020, 8, 5, 10, 41, 6, 793, DateTimeKind.Local).AddTicks(4853), "You can't bypass the matrix without programming the neural USB matrix!", 65 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 144, "#265d5d", new DateTime(2020, 8, 6, 5, 2, 43, 110, DateTimeKind.Local).AddTicks(1392), "If we program the feed, we can get to the RSS feed through the multi-byte RSS feed!", 65 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 940, "#287b66", new DateTime(2020, 4, 9, 20, 20, 23, 320, DateTimeKind.Local).AddTicks(6442), "If we transmit the port, we can get to the SMS port through the bluetooth SMS port!", 64 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 866, "#402756", new DateTime(2020, 3, 29, 16, 14, 18, 19, DateTimeKind.Local).AddTicks(5800), "Use the cross-platform XSS feed, then you can quantify the cross-platform feed!", 64 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 573, "#795d78", new DateTime(2020, 4, 18, 14, 32, 7, 610, DateTimeKind.Local).AddTicks(3954), "If we index the bandwidth, we can get to the JBOD bandwidth through the bluetooth JBOD bandwidth!", 67 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 831, "#2c3f05", new DateTime(2020, 11, 16, 15, 52, 26, 932, DateTimeKind.Local).AddTicks(2043), "We need to calculate the cross-platform CSS program!", 64 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 788, "#5e7c51", new DateTime(2020, 12, 3, 3, 8, 0, 296, DateTimeKind.Local).AddTicks(8322), "We need to compress the back-end IB alarm!", 72 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 642, "#300d5e", new DateTime(2020, 10, 25, 12, 28, 34, 812, DateTimeKind.Local).AddTicks(9486), "We need to hack the primary SMS program!", 73 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 609, "#3a0966", new DateTime(2020, 7, 20, 17, 51, 9, 790, DateTimeKind.Local).AddTicks(4194), "The PCI program is down, synthesize the open-source program so we can synthesize the PCI program!", 79 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 148, "#1b1e79", new DateTime(2021, 2, 1, 11, 59, 37, 383, DateTimeKind.Local).AddTicks(3470), "If we hack the sensor, we can get to the SMS sensor through the digital SMS sensor!", 79 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 48, "#333760", new DateTime(2020, 3, 18, 23, 48, 41, 131, DateTimeKind.Local).AddTicks(3011), "We need to synthesize the digital COM application!", 78 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 797, "#362756", new DateTime(2020, 8, 28, 9, 40, 38, 589, DateTimeKind.Local).AddTicks(1101), "We need to connect the digital GB firewall!", 77 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 731, "#005723", new DateTime(2020, 6, 6, 23, 11, 45, 678, DateTimeKind.Local).AddTicks(8685), "The XSS array is down, copy the neural array so we can copy the XSS array!", 77 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 427, "#7f6069", new DateTime(2021, 1, 16, 11, 38, 25, 324, DateTimeKind.Local).AddTicks(6706), "Try to index the SDD transmitter, maybe it will index the multi-byte transmitter!", 77 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 116, "#384a09", new DateTime(2020, 4, 22, 17, 19, 24, 233, DateTimeKind.Local).AddTicks(312), "Try to compress the SMS application, maybe it will compress the back-end application!", 77 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 15, "#796857", new DateTime(2020, 4, 25, 5, 16, 40, 301, DateTimeKind.Local).AddTicks(2116), "You can't parse the transmitter without calculating the bluetooth IB transmitter!", 77 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 739, "#586f6d", new DateTime(2020, 10, 13, 15, 23, 57, 874, DateTimeKind.Local).AddTicks(4751), "connecting the capacitor won't do anything, we need to index the virtual PNG capacitor!", 76 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 647, "#0f0725", new DateTime(2020, 8, 24, 20, 1, 21, 20, DateTimeKind.Local).AddTicks(8582), "Use the solid state COM interface, then you can reboot the solid state interface!", 76 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1013, "#6d456e", new DateTime(2021, 1, 4, 22, 41, 41, 39, DateTimeKind.Local).AddTicks(3211), "I'll transmit the 1080p SAS microchip, that should microchip the SAS microchip!", 72 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 558, "#0d6430", new DateTime(2020, 8, 2, 13, 39, 23, 263, DateTimeKind.Local).AddTicks(8848), "We need to navigate the online EXE capacitor!", 76 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 207, "#6e0d18", new DateTime(2020, 3, 19, 8, 52, 52, 866, DateTimeKind.Local).AddTicks(8274), "You can't compress the program without programming the online SAS program!", 76 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1061, "#3f4957", new DateTime(2020, 4, 6, 9, 9, 56, 846, DateTimeKind.Local).AddTicks(5341), "If we override the pixel, we can get to the TCP pixel through the multi-byte TCP pixel!", 75 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 78, "#215534", new DateTime(2021, 2, 8, 12, 36, 27, 241, DateTimeKind.Local).AddTicks(6465), "Try to back up the SAS protocol, maybe it will back up the primary protocol!", 75 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 22, "#440046", new DateTime(2021, 2, 18, 12, 13, 29, 9, DateTimeKind.Local).AddTicks(7944), "The USB interface is down, hack the cross-platform interface so we can hack the USB interface!", 75 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 903, "#4b713b", new DateTime(2020, 12, 27, 5, 47, 49, 103, DateTimeKind.Local).AddTicks(3117), "compressing the array won't do anything, we need to transmit the digital XSS array!", 74 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 901, "#7d4531", new DateTime(2021, 1, 14, 7, 15, 53, 326, DateTimeKind.Local).AddTicks(8636), "The SAS capacitor is down, transmit the open-source capacitor so we can transmit the SAS capacitor!", 74 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 758, "#1d601a", new DateTime(2020, 8, 27, 18, 30, 38, 512, DateTimeKind.Local).AddTicks(2453), "Try to bypass the IB protocol, maybe it will bypass the online protocol!", 74 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 596, "#694213", new DateTime(2021, 1, 20, 19, 3, 54, 468, DateTimeKind.Local).AddTicks(2217), "If we quantify the panel, we can get to the CSS panel through the primary CSS panel!", 74 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1100, "#350e7a", new DateTime(2020, 9, 24, 7, 13, 41, 649, DateTimeKind.Local).AddTicks(7487), "The SAS card is down, override the multi-byte card so we can override the SAS card!", 73 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 984, "#1c0408", new DateTime(2020, 5, 4, 8, 40, 12, 393, DateTimeKind.Local).AddTicks(4504), "copying the system won't do anything, we need to compress the cross-platform HDD system!", 73 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 376, "#450151", new DateTime(2020, 10, 11, 4, 21, 2, 805, DateTimeKind.Local).AddTicks(47), "compressing the feed won't do anything, we need to quantify the auxiliary RSS feed!", 76 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 649, "#162e14", new DateTime(2020, 9, 16, 6, 1, 24, 518, DateTimeKind.Local).AddTicks(578), "Use the multi-byte SCSI bandwidth, then you can transmit the multi-byte bandwidth!", 79 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 236, "#380e04", new DateTime(2020, 4, 2, 10, 17, 32, 400, DateTimeKind.Local).AddTicks(3588), "If we override the capacitor, we can get to the USB capacitor through the auxiliary USB capacitor!", 64 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 608, "#001872", new DateTime(2020, 8, 26, 13, 42, 49, 263, DateTimeKind.Local).AddTicks(9467), "The AGP transmitter is down, copy the bluetooth transmitter so we can copy the AGP transmitter!", 63 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 111, "#38070a", new DateTime(2020, 5, 19, 12, 25, 53, 549, DateTimeKind.Local).AddTicks(362), "If we quantify the program, we can get to the PNG program through the primary PNG program!", 59 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 874, "#6e242c", new DateTime(2020, 10, 26, 12, 14, 10, 290, DateTimeKind.Local).AddTicks(3986), "You can't compress the circuit without indexing the redundant SCSI circuit!", 58 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 695, "#2f5c7a", new DateTime(2020, 12, 6, 20, 46, 51, 942, DateTimeKind.Local).AddTicks(4288), "We need to compress the mobile IB program!", 58 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 612, "#6f0e52", new DateTime(2020, 9, 1, 21, 30, 6, 691, DateTimeKind.Local).AddTicks(5902), "indexing the card won't do anything, we need to parse the auxiliary HDD card!", 58 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 369, "#090d19", new DateTime(2020, 3, 9, 0, 46, 3, 310, DateTimeKind.Local).AddTicks(5332), "Use the virtual USB panel, then you can override the virtual panel!", 58 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1187, "#2f3e41", new DateTime(2021, 2, 17, 2, 52, 19, 925, DateTimeKind.Local).AddTicks(5281), "You can't quantify the array without programming the wireless ADP array!", 57 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1185, "#6b044b", new DateTime(2021, 1, 11, 14, 23, 26, 463, DateTimeKind.Local).AddTicks(2025), "You can't parse the driver without parsing the haptic GB driver!", 57 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 373, "#11292f", new DateTime(2020, 11, 18, 9, 47, 55, 57, DateTimeKind.Local).AddTicks(4583), "overriding the bandwidth won't do anything, we need to generate the multi-byte COM bandwidth!", 57 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1041, "#385d12", new DateTime(2020, 9, 5, 14, 15, 25, 726, DateTimeKind.Local).AddTicks(1314), "We need to parse the optical IB panel!", 56 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 501, "#610c47", new DateTime(2020, 6, 1, 7, 43, 2, 164, DateTimeKind.Local).AddTicks(8318), "You can't hack the panel without generating the haptic HDD panel!", 56 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 309, "#0b576d", new DateTime(2020, 7, 1, 23, 0, 55, 787, DateTimeKind.Local).AddTicks(1812), "The SQL array is down, generate the redundant array so we can generate the SQL array!", 59 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 338, "#3f7311", new DateTime(2020, 11, 4, 7, 54, 17, 102, DateTimeKind.Local).AddTicks(4045), "You can't reboot the microchip without backing up the optical HTTP microchip!", 56 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 280, "#66501d", new DateTime(2020, 11, 16, 3, 8, 20, 622, DateTimeKind.Local).AddTicks(4788), "You can't connect the feed without overriding the optical ADP feed!", 56 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 68, "#342a34", new DateTime(2020, 6, 8, 0, 25, 50, 679, DateTimeKind.Local).AddTicks(2999), "If we hack the transmitter, we can get to the TCP transmitter through the redundant TCP transmitter!", 56 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1182, "#460e41", new DateTime(2021, 1, 8, 9, 59, 21, 914, DateTimeKind.Local).AddTicks(8799), "quantifying the card won't do anything, we need to compress the optical USB card!", 55 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 523, "#405203", new DateTime(2021, 2, 20, 12, 28, 16, 393, DateTimeKind.Local).AddTicks(4817), "If we generate the sensor, we can get to the HTTP sensor through the cross-platform HTTP sensor!", 55 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 480, "#721c4b", new DateTime(2021, 2, 8, 13, 1, 45, 785, DateTimeKind.Local).AddTicks(4361), "If we synthesize the hard drive, we can get to the PNG hard drive through the online PNG hard drive!", 55 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 454, "#052b26", new DateTime(2020, 5, 25, 8, 37, 11, 548, DateTimeKind.Local).AddTicks(4351), "If we copy the protocol, we can get to the HDD protocol through the primary HDD protocol!", 55 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 410, "#5f0d52", new DateTime(2020, 8, 12, 14, 40, 48, 833, DateTimeKind.Local).AddTicks(8754), "If we navigate the bus, we can get to the IB bus through the solid state IB bus!", 55 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1200, "#3d194a", new DateTime(2020, 11, 9, 23, 35, 27, 107, DateTimeKind.Local).AddTicks(4732), "copying the sensor won't do anything, we need to program the redundant EXE sensor!", 54 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1040, "#315274", new DateTime(2020, 4, 6, 4, 22, 21, 478, DateTimeKind.Local).AddTicks(7268), "programming the array won't do anything, we need to connect the open-source SDD array!", 54 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 902, "#412728", new DateTime(2020, 4, 5, 7, 4, 32, 377, DateTimeKind.Local).AddTicks(1539), "Try to reboot the THX system, maybe it will reboot the multi-byte system!", 54 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 333, "#673063", new DateTime(2021, 1, 26, 22, 26, 19, 127, DateTimeKind.Local).AddTicks(1541), "I'll override the solid state SAS bandwidth, that should bandwidth the SAS bandwidth!", 56 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 198, "#051a37", new DateTime(2020, 3, 18, 12, 41, 50, 212, DateTimeKind.Local).AddTicks(1874), "You can't connect the pixel without connecting the haptic JSON pixel!", 64 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 549, "#550f26", new DateTime(2020, 7, 11, 5, 17, 56, 435, DateTimeKind.Local).AddTicks(2179), "Try to hack the GB system, maybe it will hack the optical system!", 59 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 889, "#682437", new DateTime(2020, 7, 23, 0, 54, 34, 378, DateTimeKind.Local).AddTicks(4605), "I'll copy the neural COM application, that should application the COM application!", 59 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 438, "#5c4470", new DateTime(2020, 8, 3, 12, 45, 10, 150, DateTimeKind.Local).AddTicks(68), "You can't calculate the interface without backing up the mobile TCP interface!", 63 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 394, "#070209", new DateTime(2020, 6, 1, 10, 49, 17, 256, DateTimeKind.Local).AddTicks(7024), "I'll navigate the digital TCP alarm, that should alarm the TCP alarm!", 63 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 180, "#7a2252", new DateTime(2020, 4, 16, 20, 25, 59, 92, DateTimeKind.Local).AddTicks(7041), "You can't index the panel without backing up the mobile PCI panel!", 63 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 91, "#0e285d", new DateTime(2020, 7, 29, 12, 29, 1, 581, DateTimeKind.Local).AddTicks(127), "Use the virtual PNG monitor, then you can bypass the virtual monitor!", 63 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 953, "#5a1d16", new DateTime(2020, 12, 31, 18, 49, 37, 195, DateTimeKind.Local).AddTicks(8837), "You can't parse the protocol without overriding the redundant PCI protocol!", 62 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 816, "#732039", new DateTime(2020, 12, 5, 18, 8, 55, 194, DateTimeKind.Local).AddTicks(1655), "If we transmit the system, we can get to the SMTP system through the neural SMTP system!", 62 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 694, "#586960", new DateTime(2020, 12, 22, 15, 10, 37, 406, DateTimeKind.Local).AddTicks(2151), "I'll hack the redundant RAM protocol, that should protocol the RAM protocol!", 62 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 496, "#407630", new DateTime(2021, 2, 16, 4, 26, 7, 262, DateTimeKind.Local).AddTicks(761), "Use the open-source GB bus, then you can synthesize the open-source bus!", 62 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 493, "#3e324b", new DateTime(2020, 7, 10, 21, 54, 11, 257, DateTimeKind.Local).AddTicks(4314), "The RAM array is down, navigate the redundant array so we can navigate the RAM array!", 62 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 342, "#08680d", new DateTime(2021, 1, 10, 14, 46, 5, 796, DateTimeKind.Local).AddTicks(4611), "Use the cross-platform AGP matrix, then you can parse the cross-platform matrix!", 62 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 553, "#721f48", new DateTime(2020, 12, 12, 13, 41, 14, 576, DateTimeKind.Local).AddTicks(5081), "Try to compress the SMTP transmitter, maybe it will compress the bluetooth transmitter!", 59 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 980, "#0c2b7f", new DateTime(2020, 6, 17, 11, 15, 40, 982, DateTimeKind.Local).AddTicks(205), "Use the digital AI matrix, then you can quantify the digital matrix!", 61 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 776, "#593c63", new DateTime(2020, 6, 20, 2, 46, 6, 577, DateTimeKind.Local).AddTicks(3546), "Try to program the USB program, maybe it will program the solid state program!", 61 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 370, "#596f4d", new DateTime(2020, 10, 29, 10, 39, 52, 98, DateTimeKind.Local).AddTicks(2718), "If we connect the panel, we can get to the COM panel through the auxiliary COM panel!", 61 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 285, "#562449", new DateTime(2020, 8, 22, 13, 56, 42, 837, DateTimeKind.Local).AddTicks(4645), "Try to compress the RAM matrix, maybe it will compress the online matrix!", 61 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 73, "#7b1641", new DateTime(2020, 3, 20, 14, 2, 24, 240, DateTimeKind.Local).AddTicks(8044), "Try to reboot the EXE circuit, maybe it will reboot the redundant circuit!", 61 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 62, "#165415", new DateTime(2020, 6, 29, 2, 59, 41, 734, DateTimeKind.Local).AddTicks(5296), "If we program the matrix, we can get to the PCI matrix through the multi-byte PCI matrix!", 61 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 830, "#683314", new DateTime(2020, 12, 19, 21, 22, 58, 230, DateTimeKind.Local).AddTicks(5552), "We need to program the digital THX program!", 60 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 668, "#556432", new DateTime(2020, 6, 4, 9, 31, 52, 972, DateTimeKind.Local).AddTicks(225), "If we override the monitor, we can get to the XSS monitor through the haptic XSS monitor!", 60 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 402, "#1a2e1b", new DateTime(2020, 5, 24, 1, 33, 29, 826, DateTimeKind.Local).AddTicks(5053), "I'll input the solid state USB circuit, that should circuit the USB circuit!", 60 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 179, "#7d6f69", new DateTime(2020, 9, 25, 18, 25, 14, 594, DateTimeKind.Local).AddTicks(1109), "I'll back up the auxiliary XSS transmitter, that should transmitter the XSS transmitter!", 60 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 75, "#410d7a", new DateTime(2020, 4, 7, 16, 4, 29, 16, DateTimeKind.Local).AddTicks(9816), "The FTP circuit is down, synthesize the digital circuit so we can synthesize the FTP circuit!", 60 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 832, "#655c0c", new DateTime(2020, 6, 2, 22, 22, 2, 642, DateTimeKind.Local).AddTicks(8455), "If we quantify the alarm, we can get to the JSON alarm through the wireless JSON alarm!", 61 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 540, "#706b04", new DateTime(2021, 1, 3, 20, 24, 55, 414, DateTimeKind.Local).AddTicks(7346), "We need to override the 1080p PCI capacitor!", 54 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 917, "#503018", new DateTime(2020, 11, 30, 3, 47, 10, 23, DateTimeKind.Local).AddTicks(1212), "If we index the firewall, we can get to the IB firewall through the open-source IB firewall!", 79 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 465, "#4a2768", new DateTime(2021, 1, 24, 19, 50, 8, 153, DateTimeKind.Local).AddTicks(3652), "I'll calculate the 1080p XSS firewall, that should firewall the XSS firewall!", 80 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 769, "#1b6038", new DateTime(2020, 9, 2, 13, 24, 17, 281, DateTimeKind.Local).AddTicks(8136), "I'll reboot the 1080p SQL interface, that should interface the SQL interface!", 95 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 424, "#16482e", new DateTime(2021, 2, 25, 18, 1, 45, 521, DateTimeKind.Local).AddTicks(1746), "quantifying the circuit won't do anything, we need to calculate the virtual GB circuit!", 95 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 354, "#6e4043", new DateTime(2020, 7, 5, 22, 3, 6, 355, DateTimeKind.Local).AddTicks(1046), "We need to calculate the cross-platform SMS card!", 95 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 218, "#26630b", new DateTime(2021, 1, 20, 18, 7, 12, 781, DateTimeKind.Local).AddTicks(4841), "We need to copy the mobile TCP program!", 95 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1101, "#296822", new DateTime(2020, 3, 11, 2, 48, 43, 782, DateTimeKind.Local).AddTicks(4061), "If we override the bus, we can get to the SQL bus through the primary SQL bus!", 94 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 521, "#207d00", new DateTime(2020, 8, 28, 12, 0, 51, 149, DateTimeKind.Local).AddTicks(4066), "Use the optical ADP pixel, then you can synthesize the optical pixel!", 94 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 211, "#711d51", new DateTime(2021, 3, 1, 3, 30, 16, 959, DateTimeKind.Local).AddTicks(9970), "We need to compress the redundant SMS pixel!", 94 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 90, "#02363b", new DateTime(2020, 9, 23, 3, 55, 59, 66, DateTimeKind.Local).AddTicks(5272), "If we transmit the sensor, we can get to the SMTP sensor through the neural SMTP sensor!", 94 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 67, "#2b453e", new DateTime(2020, 3, 16, 8, 52, 46, 147, DateTimeKind.Local).AddTicks(9262), "If we synthesize the program, we can get to the AGP program through the optical AGP program!", 94 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 613, "#7e112c", new DateTime(2020, 11, 30, 12, 10, 21, 664, DateTimeKind.Local).AddTicks(9354), "The JBOD protocol is down, parse the bluetooth protocol so we can parse the JBOD protocol!", 93 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1135, "#116b23", new DateTime(2020, 3, 29, 0, 41, 37, 282, DateTimeKind.Local).AddTicks(3854), "I'll quantify the solid state IB pixel, that should pixel the IB pixel!", 95 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 66, "#26751c", new DateTime(2020, 10, 3, 16, 31, 29, 244, DateTimeKind.Local).AddTicks(5939), "I'll quantify the open-source HDD card, that should card the HDD card!", 93 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 936, "#052d1f", new DateTime(2020, 10, 13, 11, 43, 37, 76, DateTimeKind.Local).AddTicks(324), "calculating the array won't do anything, we need to connect the mobile USB array!", 92 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 353, "#4c0e10", new DateTime(2021, 2, 1, 0, 54, 58, 145, DateTimeKind.Local).AddTicks(6829), "If we connect the matrix, we can get to the AI matrix through the mobile AI matrix!", 92 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 274, "#6b1832", new DateTime(2020, 6, 25, 3, 56, 5, 715, DateTimeKind.Local).AddTicks(4602), "You can't synthesize the pixel without bypassing the 1080p SSL pixel!", 92 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 98, "#1f4d0d", new DateTime(2020, 11, 23, 22, 18, 32, 342, DateTimeKind.Local).AddTicks(9889), "The SAS pixel is down, hack the virtual pixel so we can hack the SAS pixel!", 92 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 993, "#4b4035", new DateTime(2020, 12, 6, 12, 31, 8, 401, DateTimeKind.Local).AddTicks(5546), "I'll hack the wireless JBOD application, that should application the JBOD application!", 91 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 827, "#77444c", new DateTime(2021, 2, 14, 22, 55, 29, 769, DateTimeKind.Local).AddTicks(7723), "We need to navigate the open-source JSON driver!", 91 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 661, "#16163e", new DateTime(2020, 8, 3, 21, 23, 10, 815, DateTimeKind.Local).AddTicks(7525), "If we override the card, we can get to the EXE card through the neural EXE card!", 91 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 597, "#17527f", new DateTime(2020, 3, 11, 14, 47, 1, 227, DateTimeKind.Local).AddTicks(3395), "You can't back up the port without transmitting the virtual XML port!", 91 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 581, "#6b7b20", new DateTime(2020, 10, 29, 9, 36, 15, 898, DateTimeKind.Local).AddTicks(7137), "The SSL feed is down, quantify the 1080p feed so we can quantify the SSL feed!", 91 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 464, "#015e38", new DateTime(2020, 11, 2, 21, 19, 37, 300, DateTimeKind.Local).AddTicks(1006), "You can't compress the feed without transmitting the bluetooth ADP feed!", 91 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 981, "#234019", new DateTime(2020, 4, 25, 14, 31, 59, 464, DateTimeKind.Local).AddTicks(1503), "backing up the port won't do anything, we need to quantify the 1080p TCP port!", 92 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 434, "#72724d", new DateTime(2021, 1, 29, 23, 24, 5, 404, DateTimeKind.Local).AddTicks(4314), "We need to generate the primary PCI matrix!", 91 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 80, "#12424f", new DateTime(2020, 8, 27, 15, 3, 50, 249, DateTimeKind.Local).AddTicks(8227), "We need to override the open-source SMS panel!", 96 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1143, "#004351", new DateTime(2020, 9, 18, 21, 48, 9, 246, DateTimeKind.Local).AddTicks(227), "You can't navigate the array without connecting the mobile IB array!", 96 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 748, "#0d0140", new DateTime(2020, 12, 25, 2, 0, 36, 601, DateTimeKind.Local).AddTicks(6104), "You can't input the interface without compressing the digital SMS interface!", 101 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 577, "#011831", new DateTime(2020, 6, 1, 15, 35, 59, 494, DateTimeKind.Local).AddTicks(7665), "You can't program the card without connecting the redundant PCI card!", 101 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 72, "#66040c", new DateTime(2020, 5, 23, 6, 5, 5, 974, DateTimeKind.Local).AddTicks(3556), "The COM application is down, calculate the primary application so we can calculate the COM application!", 101 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1, "#6a785c", new DateTime(2021, 2, 6, 15, 25, 34, 386, DateTimeKind.Local).AddTicks(1635), "I'll program the back-end AI bandwidth, that should bandwidth the AI bandwidth!", 101 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1142, "#2a3e09", new DateTime(2020, 12, 7, 12, 9, 13, 633, DateTimeKind.Local).AddTicks(5648), "compressing the system won't do anything, we need to parse the online XSS system!", 100 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1002, "#4e703b", new DateTime(2021, 2, 14, 11, 18, 51, 439, DateTimeKind.Local).AddTicks(8163), "Try to transmit the AGP circuit, maybe it will transmit the back-end circuit!", 100 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 631, "#461a1f", new DateTime(2021, 1, 9, 13, 23, 24, 128, DateTimeKind.Local).AddTicks(2964), "I'll index the redundant HTTP monitor, that should monitor the HTTP monitor!", 100 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 599, "#1a7579", new DateTime(2020, 9, 14, 10, 48, 35, 356, DateTimeKind.Local).AddTicks(6799), "I'll synthesize the neural HTTP transmitter, that should transmitter the HTTP transmitter!", 100 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 487, "#357d50", new DateTime(2020, 12, 27, 8, 40, 1, 606, DateTimeKind.Local).AddTicks(7570), "You can't hack the application without overriding the haptic SMTP application!", 100 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 253, "#6c5345", new DateTime(2020, 11, 11, 23, 34, 24, 768, DateTimeKind.Local).AddTicks(5282), "Use the neural JBOD system, then you can override the neural system!", 100 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1137, "#584338", new DateTime(2020, 11, 15, 0, 26, 15, 964, DateTimeKind.Local).AddTicks(6415), "You can't quantify the sensor without calculating the online SMTP sensor!", 96 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 959, "#066e3f", new DateTime(2020, 3, 20, 22, 54, 7, 407, DateTimeKind.Local).AddTicks(7227), "We need to override the back-end CSS application!", 99 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 372, "#2a5a51", new DateTime(2020, 12, 17, 11, 47, 54, 433, DateTimeKind.Local).AddTicks(8970), "Try to bypass the XSS microchip, maybe it will bypass the redundant microchip!", 99 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1116, "#2f6a52", new DateTime(2020, 7, 27, 17, 55, 25, 579, DateTimeKind.Local).AddTicks(9357), "I'll index the haptic SMS card, that should card the SMS card!", 98 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1033, "#296368", new DateTime(2020, 8, 7, 14, 4, 38, 897, DateTimeKind.Local).AddTicks(4876), "navigating the interface won't do anything, we need to copy the cross-platform SCSI interface!", 98 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 129, "#125b29", new DateTime(2020, 9, 12, 2, 49, 44, 461, DateTimeKind.Local).AddTicks(5534), "Use the wireless SAS firewall, then you can navigate the wireless firewall!", 98 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 920, "#4a6a2e", new DateTime(2020, 7, 31, 0, 25, 24, 330, DateTimeKind.Local).AddTicks(5580), "Use the 1080p AI interface, then you can index the 1080p interface!", 97 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 733, "#3c4235", new DateTime(2020, 10, 13, 21, 24, 38, 152, DateTimeKind.Local).AddTicks(5657), "The SAS transmitter is down, program the neural transmitter so we can program the SAS transmitter!", 97 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 337, "#4a4069", new DateTime(2020, 11, 4, 7, 31, 29, 53, DateTimeKind.Local).AddTicks(6941), "I'll connect the redundant CSS capacitor, that should capacitor the CSS capacitor!", 97 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 278, "#250814", new DateTime(2020, 8, 18, 17, 58, 52, 656, DateTimeKind.Local).AddTicks(9568), "Try to program the PCI monitor, maybe it will program the online monitor!", 97 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 155, "#093e27", new DateTime(2020, 6, 30, 20, 23, 0, 300, DateTimeKind.Local).AddTicks(3295), "The GB system is down, input the multi-byte system so we can input the GB system!", 97 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 143, "#270d48", new DateTime(2020, 11, 14, 16, 48, 57, 844, DateTimeKind.Local).AddTicks(1014), "The PCI matrix is down, reboot the solid state matrix so we can reboot the PCI matrix!", 97 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 559, "#326c5c", new DateTime(2020, 9, 3, 0, 26, 20, 299, DateTimeKind.Local).AddTicks(3081), "copying the circuit won't do anything, we need to override the optical TCP circuit!", 99 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 245, "#417d50", new DateTime(2020, 9, 12, 2, 5, 47, 577, DateTimeKind.Local).AddTicks(2835), "We need to compress the haptic SCSI monitor!", 80 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 419, "#415964", new DateTime(2020, 5, 23, 11, 16, 38, 45, DateTimeKind.Local).AddTicks(4903), "You can't reboot the panel without bypassing the back-end CSS panel!", 91 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1162, "#427a65", new DateTime(2020, 7, 24, 19, 37, 56, 248, DateTimeKind.Local).AddTicks(7577), "navigating the panel won't do anything, we need to program the open-source GB panel!", 90 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 877, "#4f1327", new DateTime(2020, 3, 30, 18, 47, 37, 249, DateTimeKind.Local).AddTicks(6859), "Use the mobile IB bus, then you can reboot the mobile bus!", 85 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 762, "#112e10", new DateTime(2020, 10, 29, 1, 53, 42, 202, DateTimeKind.Local).AddTicks(1677), "navigating the panel won't do anything, we need to hack the digital XML panel!", 85 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 680, "#651a78", new DateTime(2020, 5, 3, 19, 14, 19, 794, DateTimeKind.Local).AddTicks(7846), "Use the redundant SMTP sensor, then you can navigate the redundant sensor!", 85 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 199, "#52342b", new DateTime(2020, 5, 14, 12, 24, 9, 229, DateTimeKind.Local).AddTicks(6577), "If we synthesize the panel, we can get to the XSS panel through the cross-platform XSS panel!", 85 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1000, "#6f107a", new DateTime(2020, 3, 14, 6, 18, 46, 434, DateTimeKind.Local).AddTicks(169), "I'll navigate the redundant AGP pixel, that should pixel the AGP pixel!", 84 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 822, "#626416", new DateTime(2021, 2, 18, 20, 23, 1, 626, DateTimeKind.Local).AddTicks(1182), "If we synthesize the driver, we can get to the XML driver through the solid state XML driver!", 84 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 622, "#407f43", new DateTime(2020, 6, 30, 19, 32, 15, 598, DateTimeKind.Local).AddTicks(2758), "You can't bypass the bus without generating the back-end PCI bus!", 84 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 672, "#7a5a63", new DateTime(2020, 5, 28, 3, 3, 2, 746, DateTimeKind.Local).AddTicks(2952), "The IB system is down, index the online system so we can index the IB system!", 83 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 545, "#42136f", new DateTime(2020, 4, 19, 17, 43, 49, 125, DateTimeKind.Local).AddTicks(3256), "I'll compress the auxiliary RSS bus, that should bus the RSS bus!", 83 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 377, "#04264b", new DateTime(2021, 2, 23, 17, 3, 45, 486, DateTimeKind.Local).AddTicks(6064), "Use the optical RAM microchip, then you can input the optical microchip!", 83 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 949, "#2c3446", new DateTime(2020, 7, 17, 9, 1, 3, 985, DateTimeKind.Local).AddTicks(6132), "I'll compress the multi-byte SQL alarm, that should alarm the SQL alarm!", 85 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 123, "#3c5726", new DateTime(2020, 4, 27, 8, 26, 57, 56, DateTimeKind.Local).AddTicks(9160), "Try to reboot the AI system, maybe it will reboot the optical system!", 83 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 927, "#34520f", new DateTime(2021, 1, 2, 19, 5, 42, 113, DateTimeKind.Local).AddTicks(8923), "Try to override the FTP monitor, maybe it will override the redundant monitor!", 82 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 911, "#463f7c", new DateTime(2020, 8, 14, 12, 29, 6, 571, DateTimeKind.Local).AddTicks(8454), "We need to synthesize the haptic TCP matrix!", 82 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 548, "#180316", new DateTime(2020, 10, 2, 6, 45, 34, 480, DateTimeKind.Local).AddTicks(817), "We need to synthesize the back-end COM alarm!", 82 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 132, "#0a3870", new DateTime(2020, 6, 16, 15, 56, 2, 353, DateTimeKind.Local).AddTicks(9968), "You can't bypass the application without compressing the haptic SAS application!", 82 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1192, "#5e6209", new DateTime(2020, 8, 27, 7, 4, 48, 178, DateTimeKind.Local).AddTicks(2600), "Try to navigate the PCI array, maybe it will navigate the bluetooth array!", 81 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1159, "#612730", new DateTime(2020, 9, 22, 21, 43, 30, 268, DateTimeKind.Local).AddTicks(260), "If we quantify the driver, we can get to the EXE driver through the redundant EXE driver!", 81 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 916, "#2f0603", new DateTime(2020, 3, 15, 4, 58, 15, 201, DateTimeKind.Local).AddTicks(3520), "You can't bypass the port without programming the open-source CSS port!", 81 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 865, "#002f1f", new DateTime(2020, 12, 31, 21, 27, 41, 475, DateTimeKind.Local).AddTicks(4689), "You can't calculate the hard drive without overriding the auxiliary THX hard drive!", 81 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 728, "#4a744a", new DateTime(2020, 6, 29, 3, 17, 10, 121, DateTimeKind.Local).AddTicks(8629), "Use the neural JSON microchip, then you can bypass the neural microchip!", 81 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 131, "#574166", new DateTime(2021, 1, 4, 10, 0, 23, 870, DateTimeKind.Local).AddTicks(6885), "The GB pixel is down, bypass the bluetooth pixel so we can bypass the GB pixel!", 81 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 997, "#76512c", new DateTime(2020, 5, 31, 17, 33, 28, 178, DateTimeKind.Local).AddTicks(5934), "The CSS bus is down, navigate the wireless bus so we can navigate the CSS bus!", 82 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 103, "#246505", new DateTime(2020, 10, 31, 12, 16, 34, 593, DateTimeKind.Local).AddTicks(4612), "We need to back up the back-end JSON array!", 91 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 378, "#6d596b", new DateTime(2021, 2, 11, 7, 51, 35, 459, DateTimeKind.Local).AddTicks(8571), "If we transmit the application, we can get to the SMTP application through the virtual SMTP application!", 86 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 122, "#0a2428", new DateTime(2020, 11, 22, 8, 58, 33, 81, DateTimeKind.Local).AddTicks(9103), "You can't compress the feed without bypassing the solid state SMTP feed!", 87 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1114, "#0d3f0c", new DateTime(2020, 11, 28, 5, 32, 46, 388, DateTimeKind.Local).AddTicks(1610), "You can't connect the capacitor without copying the virtual JSON capacitor!", 90 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 706, "#42313d", new DateTime(2020, 9, 21, 10, 53, 22, 320, DateTimeKind.Local).AddTicks(3728), "Use the digital JSON matrix, then you can program the digital matrix!", 90 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 682, "#5e525e", new DateTime(2020, 9, 13, 3, 52, 44, 28, DateTimeKind.Local).AddTicks(4730), "Use the wireless USB interface, then you can back up the wireless interface!", 90 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 192, "#44516f", new DateTime(2020, 12, 1, 17, 31, 15, 747, DateTimeKind.Local).AddTicks(3775), "I'll compress the open-source EXE hard drive, that should hard drive the EXE hard drive!", 90 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1189, "#5c3776", new DateTime(2021, 1, 13, 0, 41, 24, 595, DateTimeKind.Local).AddTicks(9850), "If we calculate the program, we can get to the TCP program through the neural TCP program!", 89 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 828, "#315d09", new DateTime(2020, 3, 9, 19, 55, 1, 299, DateTimeKind.Local).AddTicks(1958), "You can't input the transmitter without indexing the multi-byte SQL transmitter!", 89 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 792, "#392358", new DateTime(2020, 4, 16, 8, 22, 2, 540, DateTimeKind.Local).AddTicks(1458), "If we transmit the port, we can get to the THX port through the 1080p THX port!", 89 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 764, "#143815", new DateTime(2020, 11, 23, 8, 7, 33, 844, DateTimeKind.Local).AddTicks(9540), "You can't reboot the driver without generating the haptic HTTP driver!", 89 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 412, "#05352b", new DateTime(2020, 3, 7, 12, 41, 46, 854, DateTimeKind.Local).AddTicks(1550), "bypassing the circuit won't do anything, we need to transmit the cross-platform USB circuit!", 89 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 203, "#6b3a08", new DateTime(2020, 6, 29, 19, 42, 33, 968, DateTimeKind.Local).AddTicks(2446), "If we navigate the system, we can get to the AI system through the redundant AI system!", 89 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 988, "#723015", new DateTime(2020, 4, 2, 7, 19, 6, 530, DateTimeKind.Local).AddTicks(2641), "Use the open-source USB capacitor, then you can parse the open-source capacitor!", 86 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 70, "#13737e", new DateTime(2020, 5, 15, 4, 25, 24, 672, DateTimeKind.Local).AddTicks(6866), "You can't connect the microchip without programming the neural TCP microchip!", 89 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 666, "#0f3354", new DateTime(2020, 7, 18, 6, 6, 59, 301, DateTimeKind.Local).AddTicks(891), "I'll index the cross-platform THX array, that should array the THX array!", 88 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 654, "#594b36", new DateTime(2020, 7, 3, 15, 59, 38, 869, DateTimeKind.Local).AddTicks(5763), "We need to navigate the optical SQL panel!", 88 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 574, "#321353", new DateTime(2020, 5, 26, 22, 27, 13, 875, DateTimeKind.Local).AddTicks(5887), "The PCI capacitor is down, synthesize the virtual capacitor so we can synthesize the PCI capacitor!", 88 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 541, "#3b720f", new DateTime(2020, 8, 25, 16, 17, 33, 912, DateTimeKind.Local).AddTicks(1312), "Try to copy the XSS firewall, maybe it will copy the mobile firewall!", 88 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 905, "#2b7a26", new DateTime(2020, 4, 5, 11, 48, 10, 815, DateTimeKind.Local).AddTicks(5471), "We need to hack the haptic TCP panel!", 87 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 869, "#622928", new DateTime(2020, 6, 19, 15, 37, 35, 784, DateTimeKind.Local).AddTicks(5469), "You can't hack the port without transmitting the open-source SCSI port!", 87 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 826, "#0a7063", new DateTime(2020, 7, 29, 8, 49, 29, 437, DateTimeKind.Local).AddTicks(3441), "We need to index the bluetooth THX feed!", 87 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 526, "#5d3d2e", new DateTime(2020, 8, 7, 15, 0, 14, 701, DateTimeKind.Local).AddTicks(8822), "Use the neural AI panel, then you can compress the neural panel!", 87 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 497, "#61121a", new DateTime(2020, 7, 16, 2, 27, 9, 393, DateTimeKind.Local).AddTicks(3303), "Try to navigate the SAS card, maybe it will navigate the cross-platform card!", 87 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 128, "#6e5214", new DateTime(2021, 1, 31, 18, 9, 46, 16, DateTimeKind.Local).AddTicks(2303), "We need to navigate the primary FTP sensor!", 87 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 729, "#38015f", new DateTime(2020, 7, 15, 14, 30, 41, 629, DateTimeKind.Local).AddTicks(8319), "Use the haptic USB array, then you can quantify the haptic array!", 88 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 538, "#543515", new DateTime(2021, 1, 29, 4, 22, 30, 894, DateTimeKind.Local).AddTicks(1897), "Try to connect the THX circuit, maybe it will connect the mobile circuit!", 54 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 49, "#30562f", new DateTime(2020, 10, 15, 14, 16, 16, 756, DateTimeKind.Local).AddTicks(4408), "I'll connect the optical XSS bandwidth, that should bandwidth the XSS bandwidth!", 54 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 863, "#7d4b11", new DateTime(2020, 8, 5, 22, 48, 51, 808, DateTimeKind.Local).AddTicks(7705), "Try to back up the ADP bus, maybe it will back up the solid state bus!", 53 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 18, "#695d7f", new DateTime(2020, 9, 25, 23, 54, 38, 938, DateTimeKind.Local).AddTicks(5905), "We need to input the digital SAS bus!", 23 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 604, "#702e2e", new DateTime(2020, 9, 1, 2, 54, 30, 651, DateTimeKind.Local).AddTicks(342), "We need to reboot the cross-platform JSON matrix!", 22 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 547, "#45666c", new DateTime(2021, 2, 16, 18, 8, 9, 339, DateTimeKind.Local).AddTicks(8678), "I'll input the primary USB matrix, that should matrix the USB matrix!", 22 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 513, "#6f0e29", new DateTime(2020, 9, 10, 11, 59, 43, 26, DateTimeKind.Local).AddTicks(1728), "Try to program the IB circuit, maybe it will program the back-end circuit!", 22 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 529, "#135037", new DateTime(2020, 12, 12, 23, 22, 12, 819, DateTimeKind.Local).AddTicks(8219), "I'll calculate the solid state SAS port, that should port the SAS port!", 21 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1028, "#333a38", new DateTime(2020, 9, 27, 23, 35, 19, 825, DateTimeKind.Local).AddTicks(1289), "bypassing the bandwidth won't do anything, we need to override the virtual RAM bandwidth!", 20 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 777, "#3a170e", new DateTime(2020, 8, 24, 14, 44, 48, 715, DateTimeKind.Local).AddTicks(6431), "The AI bus is down, program the mobile bus so we can program the AI bus!", 20 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 449, "#301d59", new DateTime(2020, 6, 27, 20, 8, 26, 796, DateTimeKind.Local).AddTicks(1625), "I'll index the redundant EXE bandwidth, that should bandwidth the EXE bandwidth!", 20 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 150, "#536b68", new DateTime(2021, 1, 9, 2, 27, 10, 538, DateTimeKind.Local).AddTicks(7020), "If we generate the alarm, we can get to the CSS alarm through the back-end CSS alarm!", 20 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 26, "#1b3e34", new DateTime(2021, 2, 9, 1, 20, 10, 741, DateTimeKind.Local).AddTicks(9467), "The FTP sensor is down, calculate the solid state sensor so we can calculate the FTP sensor!", 20 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 313, "#155653", new DateTime(2020, 3, 8, 3, 25, 48, 621, DateTimeKind.Local).AddTicks(4232), "You can't generate the pixel without copying the multi-byte HDD pixel!", 23 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1148, "#2a7968", new DateTime(2020, 4, 9, 18, 30, 3, 986, DateTimeKind.Local).AddTicks(1917), "Use the redundant AI protocol, then you can synthesize the redundant protocol!", 19 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 932, "#141765", new DateTime(2021, 1, 25, 15, 54, 31, 787, DateTimeKind.Local).AddTicks(2376), "Try to generate the GB panel, maybe it will generate the neural panel!", 19 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 928, "#6a712a", new DateTime(2020, 8, 22, 6, 9, 39, 481, DateTimeKind.Local).AddTicks(1411), "You can't back up the driver without transmitting the 1080p SCSI driver!", 19 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 690, "#41227b", new DateTime(2020, 3, 20, 15, 46, 34, 543, DateTimeKind.Local).AddTicks(5174), "You can't synthesize the capacitor without quantifying the redundant FTP capacitor!", 19 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 636, "#1c5261", new DateTime(2020, 9, 10, 19, 30, 36, 686, DateTimeKind.Local).AddTicks(397), "Try to bypass the RAM capacitor, maybe it will bypass the mobile capacitor!", 19 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 233, "#640655", new DateTime(2020, 3, 25, 23, 19, 6, 43, DateTimeKind.Local).AddTicks(8599), "I'll calculate the 1080p FTP monitor, that should monitor the FTP monitor!", 19 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 222, "#6e707c", new DateTime(2020, 7, 15, 18, 2, 16, 391, DateTimeKind.Local).AddTicks(7612), "Use the primary AI transmitter, then you can compress the primary transmitter!", 19 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1048, "#673b66", new DateTime(2020, 6, 18, 4, 48, 9, 854, DateTimeKind.Local).AddTicks(5633), "We need to navigate the 1080p XML array!", 18 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 785, "#202e48", new DateTime(2020, 5, 4, 13, 42, 7, 763, DateTimeKind.Local).AddTicks(2050), "Use the back-end HDD array, then you can bypass the back-end array!", 18 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 533, "#5b0b30", new DateTime(2020, 8, 22, 0, 4, 42, 754, DateTimeKind.Local).AddTicks(9590), "compressing the protocol won't do anything, we need to override the virtual RAM protocol!", 18 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 145, "#6e4f07", new DateTime(2020, 8, 9, 14, 45, 28, 3, DateTimeKind.Local).AddTicks(7537), "The USB transmitter is down, bypass the mobile transmitter so we can bypass the USB transmitter!", 18 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1138, "#0c0864", new DateTime(2020, 7, 24, 3, 4, 50, 376, DateTimeKind.Local).AddTicks(8573), "You can't compress the bandwidth without synthesizing the cross-platform XML bandwidth!", 19 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 705, "#283c0a", new DateTime(2020, 12, 1, 18, 32, 20, 400, DateTimeKind.Local).AddTicks(8662), "Try to back up the SSL array, maybe it will back up the online array!", 17 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 317, "#755e7a", new DateTime(2020, 11, 8, 14, 40, 25, 425, DateTimeKind.Local).AddTicks(480), "We need to calculate the haptic AGP driver!", 23 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1127, "#6b0b22", new DateTime(2020, 12, 26, 15, 32, 3, 186, DateTimeKind.Local).AddTicks(1421), "calculating the driver won't do anything, we need to compress the multi-byte PNG driver!", 23 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 283, "#6a2144", new DateTime(2020, 9, 26, 20, 53, 42, 898, DateTimeKind.Local).AddTicks(2961), "If we override the sensor, we can get to the IB sensor through the auxiliary IB sensor!", 29 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 498, "#696902", new DateTime(2021, 2, 12, 14, 53, 2, 5, DateTimeKind.Local).AddTicks(8979), "Use the open-source SMTP hard drive, then you can input the open-source hard drive!", 28 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 329, "#74107e", new DateTime(2020, 4, 24, 5, 24, 45, 275, DateTimeKind.Local).AddTicks(8586), "I'll parse the neural RSS application, that should application the RSS application!", 28 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 107, "#162f4d", new DateTime(2020, 9, 27, 9, 5, 21, 886, DateTimeKind.Local).AddTicks(9705), "You can't program the sensor without connecting the online SSL sensor!", 28 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 86, "#291a43", new DateTime(2020, 3, 28, 10, 13, 42, 639, DateTimeKind.Local).AddTicks(5426), "Try to back up the SDD interface, maybe it will back up the digital interface!", 28 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 28, "#656672", new DateTime(2020, 11, 26, 11, 12, 39, 200, DateTimeKind.Local).AddTicks(7392), "Use the multi-byte SDD driver, then you can hack the multi-byte driver!", 28 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1198, "#5d2a3a", new DateTime(2020, 7, 23, 2, 19, 10, 62, DateTimeKind.Local).AddTicks(8364), "The SMS program is down, calculate the auxiliary program so we can calculate the SMS program!", 27 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 973, "#69145b", new DateTime(2020, 3, 14, 12, 43, 46, 101, DateTimeKind.Local).AddTicks(9767), "Use the online SMS interface, then you can copy the online interface!", 27 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 770, "#70787c", new DateTime(2021, 2, 6, 11, 6, 48, 604, DateTimeKind.Local).AddTicks(8095), "If we generate the firewall, we can get to the SMS firewall through the primary SMS firewall!", 27 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 580, "#465043", new DateTime(2021, 2, 2, 1, 31, 31, 735, DateTimeKind.Local).AddTicks(3067), "If we synthesize the capacitor, we can get to the PNG capacitor through the optical PNG capacitor!", 27 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1054, "#49336d", new DateTime(2020, 7, 12, 0, 59, 9, 816, DateTimeKind.Local).AddTicks(7453), "We need to generate the open-source THX program!", 23 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 855, "#423e1e", new DateTime(2020, 12, 7, 1, 35, 34, 451, DateTimeKind.Local).AddTicks(2830), "I'll quantify the digital SMTP circuit, that should circuit the SMTP circuit!", 26 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 386, "#29320d", new DateTime(2020, 4, 14, 9, 0, 31, 74, DateTimeKind.Local).AddTicks(43), "Try to connect the PNG card, maybe it will connect the multi-byte card!", 26 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1051, "#7e127a", new DateTime(2020, 11, 10, 11, 26, 57, 57, DateTimeKind.Local).AddTicks(7385), "You can't copy the array without backing up the bluetooth IB array!", 25 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 881, "#091d77", new DateTime(2021, 2, 6, 6, 3, 25, 417, DateTimeKind.Local).AddTicks(6790), "Use the digital HTTP pixel, then you can hack the digital pixel!", 25 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 854, "#39751d", new DateTime(2021, 2, 7, 21, 31, 58, 259, DateTimeKind.Local).AddTicks(5380), "overriding the program won't do anything, we need to parse the online COM program!", 25 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 635, "#2e057a", new DateTime(2020, 4, 12, 11, 43, 10, 769, DateTimeKind.Local).AddTicks(8250), "If we copy the microchip, we can get to the SCSI microchip through the solid state SCSI microchip!", 25 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 8, "#78721f", new DateTime(2020, 4, 21, 6, 11, 10, 618, DateTimeKind.Local).AddTicks(2949), "You can't program the microchip without copying the solid state SMTP microchip!", 25 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 850, "#225d48", new DateTime(2020, 5, 12, 2, 47, 11, 629, DateTimeKind.Local).AddTicks(8426), "The AGP port is down, copy the primary port so we can copy the AGP port!", 24 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 711, "#19084f", new DateTime(2020, 11, 5, 22, 8, 49, 218, DateTimeKind.Local).AddTicks(833), "You can't generate the bus without hacking the neural SQL bus!", 24 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 248, "#4b1274", new DateTime(2020, 5, 6, 12, 51, 15, 879, DateTimeKind.Local).AddTicks(1408), "You can't quantify the firewall without backing up the virtual EXE firewall!", 24 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 125, "#05127e", new DateTime(2021, 2, 11, 21, 12, 38, 861, DateTimeKind.Local).AddTicks(8719), "If we quantify the hard drive, we can get to the PNG hard drive through the online PNG hard drive!", 24 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 645, "#387a7f", new DateTime(2020, 3, 4, 18, 25, 55, 310, DateTimeKind.Local).AddTicks(372), "You can't connect the feed without indexing the multi-byte SSL feed!", 26 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 652, "#287177", new DateTime(2020, 6, 25, 20, 46, 4, 420, DateTimeKind.Local).AddTicks(3332), "We need to transmit the primary HTTP pixel!", 29 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 43, "#573533", new DateTime(2021, 1, 24, 12, 14, 30, 394, DateTimeKind.Local).AddTicks(212), "The SMTP pixel is down, transmit the mobile pixel so we can transmit the SMTP pixel!", 17 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 478, "#016479", new DateTime(2020, 7, 10, 17, 29, 40, 738, DateTimeKind.Local).AddTicks(1119), "The SCSI pixel is down, input the auxiliary pixel so we can input the SCSI pixel!", 16 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 310, "#3e4014", new DateTime(2020, 12, 22, 10, 13, 59, 921, DateTimeKind.Local).AddTicks(3677), "The COM driver is down, reboot the bluetooth driver so we can reboot the COM driver!", 6 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 293, "#3c3421", new DateTime(2020, 10, 23, 16, 57, 28, 423, DateTimeKind.Local).AddTicks(6622), "We need to transmit the multi-byte FTP array!", 6 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 56, "#236320", new DateTime(2020, 6, 14, 21, 12, 40, 866, DateTimeKind.Local).AddTicks(6460), "overriding the monitor won't do anything, we need to parse the cross-platform TCP monitor!", 6 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1077, "#4c094b", new DateTime(2021, 2, 15, 21, 14, 5, 621, DateTimeKind.Local).AddTicks(4383), "Use the auxiliary SSL bus, then you can parse the auxiliary bus!", 5 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 734, "#130108", new DateTime(2020, 5, 3, 17, 42, 37, 348, DateTimeKind.Local).AddTicks(9781), "indexing the application won't do anything, we need to compress the multi-byte SDD application!", 5 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 623, "#155d1b", new DateTime(2020, 9, 23, 6, 37, 30, 56, DateTimeKind.Local).AddTicks(9971), "I'll parse the 1080p THX card, that should card the THX card!", 5 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 570, "#192c26", new DateTime(2020, 12, 11, 19, 16, 39, 996, DateTimeKind.Local).AddTicks(8044), "The AI card is down, hack the virtual card so we can hack the AI card!", 5 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 462, "#365c6b", new DateTime(2020, 10, 4, 15, 3, 45, 788, DateTimeKind.Local).AddTicks(2415), "You can't navigate the array without programming the virtual AGP array!", 5 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 267, "#7a5d47", new DateTime(2020, 7, 3, 19, 47, 7, 311, DateTimeKind.Local).AddTicks(5603), "Try to parse the HDD transmitter, maybe it will parse the solid state transmitter!", 5 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 17, "#401823", new DateTime(2021, 1, 22, 10, 27, 36, 806, DateTimeKind.Local).AddTicks(3956), "We need to reboot the bluetooth COM monitor!", 5 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1097, "#1c6775", new DateTime(2020, 12, 4, 12, 2, 13, 15, DateTimeKind.Local).AddTicks(8286), "parsing the card won't do anything, we need to hack the optical AI card!", 6 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 878, "#6a4279", new DateTime(2021, 1, 15, 6, 32, 25, 667, DateTimeKind.Local).AddTicks(4891), "The SSL hard drive is down, transmit the auxiliary hard drive so we can transmit the SSL hard drive!", 4 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 514, "#4b1c4c", new DateTime(2020, 7, 4, 6, 5, 0, 935, DateTimeKind.Local).AddTicks(473), "You can't bypass the matrix without hacking the virtual IB matrix!", 3 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 408, "#3a401f", new DateTime(2020, 3, 14, 6, 4, 27, 470, DateTimeKind.Local).AddTicks(897), "We need to bypass the optical TCP application!", 3 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 188, "#3a2a67", new DateTime(2020, 6, 15, 11, 32, 23, 612, DateTimeKind.Local).AddTicks(3962), "Use the redundant GB monitor, then you can navigate the redundant monitor!", 3 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 64, "#0e5772", new DateTime(2021, 1, 20, 11, 33, 56, 66, DateTimeKind.Local).AddTicks(933), "If we program the program, we can get to the USB program through the wireless USB program!", 3 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 860, "#801d2d", new DateTime(2020, 8, 26, 7, 9, 56, 281, DateTimeKind.Local).AddTicks(9889), "I'll bypass the digital GB driver, that should driver the GB driver!", 2 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 771, "#766b38", new DateTime(2020, 10, 18, 21, 4, 45, 778, DateTimeKind.Local).AddTicks(8511), "You can't index the protocol without connecting the neural USB protocol!", 2 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 205, "#1d0472", new DateTime(2020, 3, 19, 20, 31, 53, 246, DateTimeKind.Local).AddTicks(6726), "Try to index the COM application, maybe it will index the 1080p application!", 2 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 926, "#16415d", new DateTime(2020, 6, 13, 12, 20, 22, 815, DateTimeKind.Local).AddTicks(5303), "We need to parse the solid state SCSI application!", 1 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 348, "#616b0a", new DateTime(2020, 6, 16, 7, 13, 16, 36, DateTimeKind.Local).AddTicks(2289), "Use the primary AGP sensor, then you can navigate the primary sensor!", 1 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 162, "#454a67", new DateTime(2020, 6, 7, 5, 21, 37, 437, DateTimeKind.Local).AddTicks(8278), "You can't parse the application without backing up the back-end HDD application!", 1 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 2, "#511c43", new DateTime(2020, 11, 18, 4, 52, 31, 247, DateTimeKind.Local).AddTicks(8667), "Try to calculate the RAM array, maybe it will calculate the solid state array!", 4 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 525, "#744940", new DateTime(2020, 6, 7, 8, 33, 39, 144, DateTimeKind.Local).AddTicks(5958), "If we copy the capacitor, we can get to the JBOD capacitor through the redundant JBOD capacitor!", 16 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 254, "#133548", new DateTime(2020, 5, 2, 13, 54, 48, 751, DateTimeKind.Local).AddTicks(7925), "Use the primary PNG matrix, then you can parse the primary matrix!", 7 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 952, "#3c0559", new DateTime(2020, 6, 19, 5, 59, 48, 300, DateTimeKind.Local).AddTicks(9451), "We need to quantify the primary COM transmitter!", 7 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 893, "#5e6776", new DateTime(2020, 10, 15, 16, 40, 51, 613, DateTimeKind.Local).AddTicks(5765), "Try to compress the JSON driver, maybe it will compress the online driver!", 15 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 273, "#72724b", new DateTime(2020, 4, 29, 12, 49, 32, 347, DateTimeKind.Local).AddTicks(6987), "Use the mobile PCI hard drive, then you can back up the mobile hard drive!", 15 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 109, "#3f4415", new DateTime(2020, 6, 8, 12, 25, 48, 999, DateTimeKind.Local).AddTicks(2600), "If we hack the sensor, we can get to the SMTP sensor through the open-source SMTP sensor!", 14 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 786, "#200105", new DateTime(2020, 6, 18, 9, 53, 21, 960, DateTimeKind.Local).AddTicks(1631), "If we bypass the panel, we can get to the USB panel through the multi-byte USB panel!", 13 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 780, "#271665", new DateTime(2020, 4, 22, 16, 16, 9, 725, DateTimeKind.Local).AddTicks(8853), "You can't program the program without bypassing the bluetooth TCP program!", 13 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 7, "#707747", new DateTime(2020, 3, 22, 4, 10, 27, 595, DateTimeKind.Local).AddTicks(4105), "Use the auxiliary SCSI program, then you can override the auxiliary program!", 13 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 305, "#161374", new DateTime(2020, 6, 8, 6, 6, 25, 606, DateTimeKind.Local).AddTicks(1721), "Try to copy the RAM pixel, maybe it will copy the virtual pixel!", 12 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 849, "#453916", new DateTime(2021, 1, 10, 8, 52, 52, 256, DateTimeKind.Local).AddTicks(5261), "Use the haptic ADP monitor, then you can transmit the haptic monitor!", 11 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 217, "#4a1000", new DateTime(2020, 3, 22, 18, 50, 13, 623, DateTimeKind.Local).AddTicks(5672), "If we index the monitor, we can get to the SCSI monitor through the 1080p SCSI monitor!", 11 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 876, "#730839", new DateTime(2020, 10, 26, 17, 59, 28, 227, DateTimeKind.Local).AddTicks(1279), "The SMTP port is down, synthesize the redundant port so we can synthesize the SMTP port!", 10 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 266, "#5f2b3c", new DateTime(2021, 3, 2, 4, 47, 19, 169, DateTimeKind.Local).AddTicks(4822), "If we program the driver, we can get to the IB driver through the online IB driver!", 7 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 781, "#6e6820", new DateTime(2020, 7, 13, 21, 14, 39, 535, DateTimeKind.Local).AddTicks(2544), "We need to index the mobile SAS interface!", 10 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1049, "#70317f", new DateTime(2020, 8, 24, 13, 3, 48, 119, DateTimeKind.Local).AddTicks(9946), "Use the primary TCP program, then you can program the primary program!", 9 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 406, "#6a5708", new DateTime(2020, 6, 26, 13, 2, 36, 961, DateTimeKind.Local).AddTicks(5230), "Use the back-end AI feed, then you can generate the back-end feed!", 9 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 345, "#058057", new DateTime(2021, 2, 1, 23, 57, 1, 804, DateTimeKind.Local).AddTicks(3226), "Try to navigate the COM hard drive, maybe it will navigate the solid state hard drive!", 9 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 212, "#363f14", new DateTime(2020, 8, 12, 3, 11, 20, 114, DateTimeKind.Local).AddTicks(3064), "You can't connect the port without navigating the mobile PCI port!", 9 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 105, "#2a523a", new DateTime(2020, 5, 2, 20, 5, 39, 444, DateTimeKind.Local).AddTicks(4073), "We need to calculate the bluetooth JSON port!", 9 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1113, "#4d7c06", new DateTime(2020, 4, 7, 22, 50, 35, 206, DateTimeKind.Local).AddTicks(9418), "Try to connect the SMS protocol, maybe it will connect the mobile protocol!", 8 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1065, "#4e4832", new DateTime(2020, 4, 16, 7, 33, 26, 214, DateTimeKind.Local).AddTicks(1136), "Use the primary COM driver, then you can override the primary driver!", 8 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 717, "#5a4903", new DateTime(2020, 12, 29, 4, 47, 37, 337, DateTimeKind.Local).AddTicks(3484), "Use the redundant XSS array, then you can program the redundant array!", 8 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 426, "#154c50", new DateTime(2020, 3, 19, 15, 4, 0, 654, DateTimeKind.Local).AddTicks(9079), "We need to navigate the digital GB transmitter!", 8 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 307, "#536002", new DateTime(2020, 7, 17, 13, 52, 51, 698, DateTimeKind.Local).AddTicks(2915), "Use the digital THX interface, then you can synthesize the digital interface!", 8 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 527, "#3e7144", new DateTime(2021, 1, 27, 0, 10, 3, 802, DateTimeKind.Local).AddTicks(260), "I'll compress the multi-byte SMS application, that should application the SMS application!", 10 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 702, "#6b470b", new DateTime(2021, 1, 3, 20, 25, 54, 934, DateTimeKind.Local).AddTicks(3577), "Try to parse the XSS driver, maybe it will parse the optical driver!", 29 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 779, "#7a1011", new DateTime(2020, 11, 28, 6, 56, 34, 621, DateTimeKind.Local).AddTicks(3155), "I'll calculate the open-source EXE application, that should application the EXE application!", 30 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 802, "#276029", new DateTime(2020, 6, 5, 9, 24, 21, 804, DateTimeKind.Local).AddTicks(9764), "If we parse the panel, we can get to the RSS panel through the primary RSS panel!", 30 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 810, "#2d3410", new DateTime(2021, 2, 1, 2, 45, 34, 48, DateTimeKind.Local).AddTicks(7781), "If we hack the feed, we can get to the PCI feed through the virtual PCI feed!", 48 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 401, "#6b664c", new DateTime(2020, 4, 14, 20, 24, 14, 913, DateTimeKind.Local).AddTicks(1720), "We need to override the open-source RAM firewall!", 48 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1199, "#194275", new DateTime(2020, 4, 26, 2, 32, 48, 110, DateTimeKind.Local).AddTicks(9511), "Try to compress the XSS protocol, maybe it will compress the bluetooth protocol!", 47 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1139, "#052f7e", new DateTime(2020, 8, 2, 18, 48, 39, 646, DateTimeKind.Local).AddTicks(1514), "The TCP alarm is down, navigate the redundant alarm so we can navigate the TCP alarm!", 47 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1017, "#267754", new DateTime(2020, 10, 13, 0, 23, 49, 94, DateTimeKind.Local).AddTicks(7427), "We need to transmit the wireless SQL sensor!", 47 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 840, "#465c76", new DateTime(2020, 9, 21, 20, 23, 24, 449, DateTimeKind.Local).AddTicks(2700), "navigating the interface won't do anything, we need to quantify the primary PCI interface!", 47 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 723, "#217e65", new DateTime(2021, 1, 5, 0, 4, 11, 250, DateTimeKind.Local).AddTicks(8188), "Try to index the GB port, maybe it will index the digital port!", 47 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 588, "#057f0b", new DateTime(2020, 10, 14, 2, 55, 6, 524, DateTimeKind.Local).AddTicks(1675), "You can't program the driver without quantifying the auxiliary RSS driver!", 47 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 452, "#6f2249", new DateTime(2020, 8, 29, 7, 18, 48, 577, DateTimeKind.Local).AddTicks(2704), "Use the haptic EXE transmitter, then you can synthesize the haptic transmitter!", 47 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 164, "#4e1d50", new DateTime(2020, 7, 11, 20, 34, 32, 625, DateTimeKind.Local).AddTicks(4525), "We need to override the haptic SQL application!", 47 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 961, "#7c274d", new DateTime(2020, 8, 14, 5, 19, 26, 286, DateTimeKind.Local).AddTicks(8930), "I'll synthesize the wireless XSS alarm, that should alarm the XSS alarm!", 48 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1164, "#0f7833", new DateTime(2021, 2, 21, 0, 27, 5, 946, DateTimeKind.Local).AddTicks(5845), "indexing the driver won't do anything, we need to compress the bluetooth SDD driver!", 46 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 846, "#617029", new DateTime(2020, 8, 7, 10, 25, 44, 548, DateTimeKind.Local).AddTicks(347), "connecting the panel won't do anything, we need to bypass the multi-byte JSON panel!", 46 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 775, "#12517d", new DateTime(2021, 2, 8, 1, 49, 27, 228, DateTimeKind.Local).AddTicks(135), "If we synthesize the interface, we can get to the THX interface through the auxiliary THX interface!", 46 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 223, "#0d5875", new DateTime(2021, 2, 26, 16, 39, 55, 590, DateTimeKind.Local).AddTicks(4804), "You can't navigate the driver without hacking the cross-platform SSL driver!", 46 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 169, "#507222", new DateTime(2020, 3, 17, 18, 28, 44, 480, DateTimeKind.Local).AddTicks(6237), "bypassing the matrix won't do anything, we need to bypass the open-source COM matrix!", 46 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 700, "#222752", new DateTime(2020, 12, 4, 18, 26, 23, 295, DateTimeKind.Local).AddTicks(7130), "You can't back up the driver without navigating the redundant EXE driver!", 45 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 593, "#0e2c25", new DateTime(2020, 10, 7, 6, 32, 0, 159, DateTimeKind.Local).AddTicks(4721), "Try to hack the JBOD capacitor, maybe it will hack the cross-platform capacitor!", 45 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 463, "#062517", new DateTime(2020, 7, 2, 9, 24, 41, 426, DateTimeKind.Local).AddTicks(5678), "Try to program the FTP port, maybe it will program the 1080p port!", 45 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 303, "#332a26", new DateTime(2020, 7, 31, 12, 38, 51, 90, DateTimeKind.Local).AddTicks(5716), "Try to hack the HDD driver, maybe it will hack the virtual driver!", 45 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 47, "#594438", new DateTime(2020, 5, 4, 18, 52, 6, 915, DateTimeKind.Local).AddTicks(6323), "You can't transmit the transmitter without programming the open-source ADP transmitter!", 45 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1094, "#7c5213", new DateTime(2021, 2, 1, 16, 18, 45, 672, DateTimeKind.Local).AddTicks(9047), "If we program the protocol, we can get to the SMS protocol through the bluetooth SMS protocol!", 44 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 978, "#225e75", new DateTime(2020, 7, 27, 12, 32, 3, 705, DateTimeKind.Local).AddTicks(8970), "The ADP program is down, override the 1080p program so we can override the ADP program!", 46 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 996, "#7e2c58", new DateTime(2020, 7, 13, 1, 30, 30, 920, DateTimeKind.Local).AddTicks(5949), "Use the open-source COM sensor, then you can parse the open-source sensor!", 44 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1095, "#4a2b61", new DateTime(2020, 5, 14, 15, 57, 7, 733, DateTimeKind.Local).AddTicks(9018), "I'll connect the mobile COM port, that should port the COM port!", 48 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 244, "#006f6f", new DateTime(2021, 2, 20, 5, 53, 55, 136, DateTimeKind.Local).AddTicks(4366), "We need to copy the 1080p RAM hard drive!", 49 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 364, "#536b78", new DateTime(2020, 4, 1, 21, 57, 17, 83, DateTimeKind.Local).AddTicks(4693), "synthesizing the panel won't do anything, we need to copy the 1080p PCI panel!", 53 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 259, "#791706", new DateTime(2020, 10, 8, 14, 47, 20, 676, DateTimeKind.Local).AddTicks(2631), "quantifying the panel won't do anything, we need to hack the mobile SQL panel!", 53 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 174, "#383c71", new DateTime(2020, 4, 25, 2, 53, 58, 113, DateTimeKind.Local).AddTicks(8290), "navigating the interface won't do anything, we need to hack the redundant XML interface!", 53 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 79, "#647e75", new DateTime(2020, 4, 29, 23, 28, 27, 814, DateTimeKind.Local).AddTicks(8325), "connecting the capacitor won't do anything, we need to bypass the open-source SSL capacitor!", 53 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1152, "#396638", new DateTime(2020, 4, 24, 18, 44, 31, 337, DateTimeKind.Local).AddTicks(5757), "Try to transmit the SSL bus, maybe it will transmit the 1080p bus!", 52 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1092, "#0b6347", new DateTime(2020, 7, 7, 22, 43, 22, 913, DateTimeKind.Local).AddTicks(7742), "quantifying the application won't do anything, we need to compress the haptic XML application!", 52 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1066, "#590231", new DateTime(2020, 4, 2, 6, 27, 10, 720, DateTimeKind.Local).AddTicks(8155), "I'll index the online HDD circuit, that should circuit the HDD circuit!", 52 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 896, "#585843", new DateTime(2020, 7, 16, 23, 51, 5, 623, DateTimeKind.Local).AddTicks(7411), "We need to compress the virtual SAS interface!", 52 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 681, "#561a2b", new DateTime(2021, 2, 9, 8, 31, 11, 226, DateTimeKind.Local).AddTicks(2081), "We need to back up the cross-platform PCI circuit!", 52 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 510, "#151406", new DateTime(2020, 6, 19, 6, 6, 2, 386, DateTimeKind.Local).AddTicks(5112), "quantifying the sensor won't do anything, we need to override the 1080p THX sensor!", 52 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 232, "#057a05", new DateTime(2020, 7, 19, 22, 51, 11, 861, DateTimeKind.Local).AddTicks(3427), "Try to connect the SSL firewall, maybe it will connect the digital firewall!", 49 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 363, "#657a50", new DateTime(2020, 7, 6, 20, 50, 15, 676, DateTimeKind.Local).AddTicks(9106), "Try to quantify the USB bus, maybe it will quantify the auxiliary bus!", 52 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 725, "#091a71", new DateTime(2020, 5, 26, 1, 8, 21, 262, DateTimeKind.Local).AddTicks(6590), "We need to synthesize the mobile PCI array!", 51 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 610, "#074673", new DateTime(2020, 3, 20, 17, 17, 27, 647, DateTimeKind.Local).AddTicks(2605), "Try to back up the JBOD port, maybe it will back up the auxiliary port!", 51 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 516, "#4e5a49", new DateTime(2020, 10, 28, 3, 42, 35, 714, DateTimeKind.Local).AddTicks(3756), "If we generate the feed, we can get to the EXE feed through the back-end EXE feed!", 51 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 446, "#6d0404", new DateTime(2020, 6, 5, 12, 25, 1, 326, DateTimeKind.Local).AddTicks(3122), "I'll index the bluetooth TCP protocol, that should protocol the TCP protocol!", 51 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 312, "#12542b", new DateTime(2020, 10, 11, 22, 19, 26, 402, DateTimeKind.Local).AddTicks(4272), "overriding the capacitor won't do anything, we need to navigate the solid state XSS capacitor!", 51 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 757, "#06153b", new DateTime(2020, 7, 31, 5, 31, 44, 795, DateTimeKind.Local).AddTicks(8398), "If we hack the port, we can get to the USB port through the wireless USB port!", 50 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 619, "#250655", new DateTime(2020, 3, 31, 11, 31, 9, 189, DateTimeKind.Local).AddTicks(6180), "I'll input the primary EXE monitor, that should monitor the EXE monitor!", 50 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 983, "#55514a", new DateTime(2021, 1, 4, 0, 43, 51, 189, DateTimeKind.Local).AddTicks(7759), "I'll override the cross-platform IB circuit, that should circuit the IB circuit!", 49 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 946, "#741e6e", new DateTime(2020, 9, 2, 9, 39, 12, 458, DateTimeKind.Local).AddTicks(8405), "If we reboot the circuit, we can get to the SAS circuit through the haptic SAS circuit!", 49 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 470, "#73140d", new DateTime(2020, 7, 26, 15, 3, 12, 524, DateTimeKind.Local).AddTicks(7369), "The SCSI port is down, override the optical port so we can override the SCSI port!", 49 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 31, "#0c594e", new DateTime(2020, 9, 3, 12, 11, 10, 798, DateTimeKind.Local).AddTicks(2100), "You can't calculate the system without compressing the neural SMS system!", 52 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 44, "#220b3c", new DateTime(2020, 10, 22, 23, 53, 7, 807, DateTimeKind.Local).AddTicks(3211), "Use the redundant EXE interface, then you can parse the redundant interface!", 44 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 754, "#42246a", new DateTime(2020, 8, 15, 13, 26, 17, 26, DateTimeKind.Local).AddTicks(306), "We need to generate the digital RSS system!", 43 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 741, "#714329", new DateTime(2020, 11, 21, 15, 29, 8, 834, DateTimeKind.Local).AddTicks(2568), "I'll bypass the redundant SQL interface, that should interface the SQL interface!", 43 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 443, "#452562", new DateTime(2021, 1, 9, 2, 4, 37, 910, DateTimeKind.Local).AddTicks(9587), "If we input the system, we can get to the HTTP system through the digital HTTP system!", 34 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 209, "#4e041d", new DateTime(2021, 2, 3, 18, 30, 42, 54, DateTimeKind.Local).AddTicks(5047), "You can't index the application without parsing the haptic RSS application!", 34 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1183, "#452a0a", new DateTime(2020, 3, 6, 14, 56, 29, 18, DateTimeKind.Local).AddTicks(1998), "navigating the microchip won't do anything, we need to transmit the open-source FTP microchip!", 33 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 492, "#26037c", new DateTime(2020, 5, 2, 3, 29, 57, 193, DateTimeKind.Local).AddTicks(2249), "If we quantify the bus, we can get to the GB bus through the cross-platform GB bus!", 33 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 414, "#7d2072", new DateTime(2020, 7, 19, 8, 50, 49, 166, DateTimeKind.Local).AddTicks(3794), "You can't generate the card without copying the 1080p ADP card!", 33 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 279, "#6c6452", new DateTime(2020, 6, 6, 1, 28, 4, 67, DateTimeKind.Local).AddTicks(3366), "You can't connect the circuit without programming the 1080p SSL circuit!", 33 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 172, "#1f2c57", new DateTime(2020, 12, 4, 18, 4, 21, 972, DateTimeKind.Local).AddTicks(160), "overriding the bus won't do anything, we need to compress the open-source THX bus!", 33 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 699, "#617a57", new DateTime(2021, 3, 2, 20, 29, 47, 270, DateTimeKind.Local).AddTicks(3985), "Use the multi-byte SSL panel, then you can quantify the multi-byte panel!", 32 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 585, "#624a68", new DateTime(2020, 5, 22, 21, 19, 47, 638, DateTimeKind.Local).AddTicks(2146), "backing up the bandwidth won't do anything, we need to compress the haptic THX bandwidth!", 32 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 460, "#785e43", new DateTime(2020, 5, 19, 16, 29, 37, 291, DateTimeKind.Local).AddTicks(96), "Try to back up the PCI system, maybe it will back up the auxiliary system!", 32 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 767, "#1c1a58", new DateTime(2020, 7, 15, 4, 46, 16, 899, DateTimeKind.Local).AddTicks(4931), "Use the back-end TCP hard drive, then you can hack the back-end hard drive!", 34 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 444, "#640a5d", new DateTime(2020, 10, 13, 19, 14, 23, 933, DateTimeKind.Local).AddTicks(1760), "The EXE port is down, index the redundant port so we can index the EXE port!", 32 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 170, "#024e73", new DateTime(2020, 3, 9, 23, 58, 57, 209, DateTimeKind.Local).AddTicks(4630), "If we calculate the bandwidth, we can get to the AGP bandwidth through the online AGP bandwidth!", 32 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 835, "#1e4e38", new DateTime(2020, 3, 7, 16, 3, 11, 176, DateTimeKind.Local).AddTicks(6914), "You can't override the application without quantifying the virtual EXE application!", 31 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 740, "#433e0c", new DateTime(2020, 5, 2, 6, 55, 25, 904, DateTimeKind.Local).AddTicks(960), "The AI pixel is down, parse the neural pixel so we can parse the AI pixel!", 31 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 630, "#80004f", new DateTime(2020, 12, 12, 18, 9, 9, 718, DateTimeKind.Local).AddTicks(3027), "Try to navigate the SAS driver, maybe it will navigate the auxiliary driver!", 31 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 289, "#677347", new DateTime(2020, 10, 24, 23, 29, 7, 14, DateTimeKind.Local).AddTicks(6838), "Use the multi-byte PNG interface, then you can synthesize the multi-byte interface!", 31 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 256, "#1d426c", new DateTime(2020, 5, 10, 3, 42, 26, 121, DateTimeKind.Local).AddTicks(249), "You can't override the transmitter without transmitting the multi-byte RAM transmitter!", 31 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 219, "#21047d", new DateTime(2020, 7, 25, 11, 27, 10, 590, DateTimeKind.Local).AddTicks(3233), "You can't input the panel without programming the bluetooth SMTP panel!", 31 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 93, "#0a643a", new DateTime(2021, 1, 6, 13, 18, 56, 159, DateTimeKind.Local).AddTicks(3510), "transmitting the system won't do anything, we need to input the neural PNG system!", 31 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 57, "#2a756a", new DateTime(2020, 8, 5, 20, 56, 20, 846, DateTimeKind.Local).AddTicks(563), "We need to synthesize the auxiliary SDD sensor!", 31 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 891, "#78362a", new DateTime(2021, 1, 13, 4, 59, 28, 983, DateTimeKind.Local).AddTicks(6269), "Use the digital RAM circuit, then you can compress the digital circuit!", 30 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 268, "#5a3041", new DateTime(2020, 12, 5, 19, 11, 16, 204, DateTimeKind.Local).AddTicks(1410), "Try to copy the JSON port, maybe it will copy the open-source port!", 32 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1141, "#13234d", new DateTime(2021, 2, 28, 3, 46, 3, 534, DateTimeKind.Local).AddTicks(7335), "Try to compress the RAM transmitter, maybe it will compress the neural transmitter!", 34 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 202, "#2a025c", new DateTime(2020, 12, 2, 0, 4, 55, 590, DateTimeKind.Local).AddTicks(9703), "Use the neural EXE application, then you can generate the neural application!", 35 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 359, "#0b143c", new DateTime(2020, 9, 29, 23, 1, 11, 343, DateTimeKind.Local).AddTicks(3953), "Use the haptic THX panel, then you can override the haptic panel!", 35 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 543, "#3b4529", new DateTime(2020, 12, 22, 21, 24, 25, 597, DateTimeKind.Local).AddTicks(5204), "If we generate the pixel, we can get to the XML pixel through the multi-byte XML pixel!", 43 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 418, "#57690a", new DateTime(2020, 12, 23, 19, 19, 54, 483, DateTimeKind.Local).AddTicks(9558), "copying the panel won't do anything, we need to index the solid state USB panel!", 43 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 944, "#222864", new DateTime(2020, 10, 1, 13, 26, 56, 81, DateTimeKind.Local).AddTicks(6442), "You can't override the transmitter without transmitting the cross-platform AI transmitter!", 42 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 833, "#457656", new DateTime(2021, 2, 26, 20, 49, 7, 413, DateTimeKind.Local).AddTicks(6653), "We need to generate the solid state RAM system!", 42 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 314, "#75300c", new DateTime(2020, 7, 8, 17, 23, 1, 900, DateTimeKind.Local).AddTicks(193), "The AI monitor is down, compress the haptic monitor so we can compress the AI monitor!", 42 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 158, "#784250", new DateTime(2020, 11, 26, 16, 24, 5, 249, DateTimeKind.Local).AddTicks(8294), "Try to bypass the XSS feed, maybe it will bypass the optical feed!", 42 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 340, "#01083f", new DateTime(2020, 6, 14, 16, 49, 26, 520, DateTimeKind.Local).AddTicks(5426), "You can't navigate the matrix without connecting the digital CSS matrix!", 41 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1036, "#707f20", new DateTime(2020, 6, 15, 7, 23, 45, 206, DateTimeKind.Local).AddTicks(361), "I'll compress the cross-platform THX system, that should system the THX system!", 39 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 459, "#41326c", new DateTime(2020, 9, 25, 21, 15, 25, 273, DateTimeKind.Local).AddTicks(9211), "Try to hack the THX card, maybe it will hack the virtual card!", 39 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 187, "#1d3e13", new DateTime(2020, 11, 28, 11, 54, 39, 579, DateTimeKind.Local).AddTicks(7184), "Try to compress the HDD feed, maybe it will compress the auxiliary feed!", 39 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 84, "#796550", new DateTime(2020, 8, 23, 16, 41, 34, 409, DateTimeKind.Local).AddTicks(8742), "I'll reboot the virtual JBOD monitor, that should monitor the JBOD monitor!", 39 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1089, "#573169", new DateTime(2020, 5, 15, 19, 50, 11, 499, DateTimeKind.Local).AddTicks(8273), "Try to calculate the SSL bus, maybe it will calculate the auxiliary bus!", 38 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 707, "#6d3f2a", new DateTime(2020, 12, 4, 2, 19, 20, 549, DateTimeKind.Local).AddTicks(4911), "You can't navigate the application without synthesizing the neural SCSI application!", 38 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1166, "#232a2e", new DateTime(2020, 4, 1, 2, 52, 40, 423, DateTimeKind.Local).AddTicks(3448), "The PCI sensor is down, back up the bluetooth sensor so we can back up the PCI sensor!", 37 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 801, "#444817", new DateTime(2020, 8, 14, 9, 8, 57, 996, DateTimeKind.Local).AddTicks(8660), "The TCP driver is down, compress the haptic driver so we can compress the TCP driver!", 37 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 435, "#7e6114", new DateTime(2021, 1, 18, 17, 8, 23, 949, DateTimeKind.Local).AddTicks(8255), "Try to hack the AI alarm, maybe it will hack the bluetooth alarm!", 37 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 29, "#106f19", new DateTime(2020, 12, 30, 0, 52, 36, 884, DateTimeKind.Local).AddTicks(3888), "You can't synthesize the hard drive without backing up the neural TCP hard drive!", 37 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 750, "#767931", new DateTime(2020, 5, 28, 7, 40, 2, 147, DateTimeKind.Local).AddTicks(514), "We need to navigate the open-source SMTP program!", 36 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 508, "#08243e", new DateTime(2020, 12, 31, 8, 56, 11, 992, DateTimeKind.Local).AddTicks(5627), "If we navigate the hard drive, we can get to the SMTP hard drive through the 1080p SMTP hard drive!", 36 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 503, "#3b4b1b", new DateTime(2020, 5, 3, 12, 32, 12, 286, DateTimeKind.Local).AddTicks(5146), "The JSON panel is down, reboot the virtual panel so we can reboot the JSON panel!", 36 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1118, "#0e6a2a", new DateTime(2020, 7, 26, 9, 1, 40, 397, DateTimeKind.Local).AddTicks(2517), "I'll input the open-source SMS firewall, that should firewall the SMS firewall!", 35 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 943, "#14454b", new DateTime(2020, 7, 31, 14, 27, 5, 782, DateTimeKind.Local).AddTicks(8004), "Use the redundant SSL bus, then you can reboot the redundant bus!", 35 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 689, "#2a4f34", new DateTime(2020, 11, 30, 2, 33, 40, 132, DateTimeKind.Local).AddTicks(537), "synthesizing the panel won't do anything, we need to calculate the multi-byte SCSI panel!", 35 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 848, "#772f4a", new DateTime(2020, 3, 31, 17, 35, 11, 168, DateTimeKind.Local).AddTicks(8285), "copying the matrix won't do anything, we need to compress the auxiliary HTTP matrix!", 101 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 899, "#255528", new DateTime(2021, 1, 23, 22, 47, 1, 85, DateTimeKind.Local).AddTicks(8887), "We need to back up the optical IB sensor!", 101 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1133, "#561950", new DateTime(2020, 9, 28, 11, 48, 52, 918, DateTimeKind.Local).AddTicks(5466), "You can't program the array without calculating the digital XML array!", 101 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 3, "#292947", new DateTime(2020, 12, 11, 11, 56, 42, 346, DateTimeKind.Local).AddTicks(9764), "Use the cross-platform JBOD transmitter, then you can parse the cross-platform transmitter!", 102 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 442, "#593770", new DateTime(2021, 2, 6, 22, 38, 30, 970, DateTimeKind.Local).AddTicks(4633), "The SDD port is down, bypass the multi-byte port so we can bypass the SDD port!", 175 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 440, "#1f0d0c", new DateTime(2020, 11, 9, 3, 12, 53, 970, DateTimeKind.Local).AddTicks(795), "I'll override the multi-byte PNG capacitor, that should capacitor the PNG capacitor!", 175 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 326, "#381068", new DateTime(2020, 12, 26, 10, 45, 27, 259, DateTimeKind.Local).AddTicks(1077), "I'll copy the digital FTP protocol, that should protocol the FTP protocol!", 175 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 23, "#4d5956", new DateTime(2020, 5, 16, 8, 56, 27, 80, DateTimeKind.Local).AddTicks(3944), "If we index the application, we can get to the ADP application through the multi-byte ADP application!", 175 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1105, "#51787f", new DateTime(2021, 1, 16, 9, 55, 15, 164, DateTimeKind.Local).AddTicks(7738), "If we calculate the protocol, we can get to the XSS protocol through the virtual XSS protocol!", 174 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1084, "#173334", new DateTime(2020, 9, 17, 18, 11, 58, 398, DateTimeKind.Local).AddTicks(7896), "You can't reboot the protocol without parsing the cross-platform GB protocol!", 174 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1053, "#09263a", new DateTime(2020, 6, 28, 2, 59, 32, 677, DateTimeKind.Local).AddTicks(1021), "Try to hack the JBOD microchip, maybe it will hack the redundant microchip!", 174 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 229, "#455d52", new DateTime(2020, 11, 24, 12, 21, 19, 423, DateTimeKind.Local).AddTicks(5281), "The SMS hard drive is down, navigate the primary hard drive so we can navigate the SMS hard drive!", 174 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1072, "#663805", new DateTime(2020, 11, 27, 4, 28, 24, 528, DateTimeKind.Local).AddTicks(8410), "Use the online SAS feed, then you can compress the online feed!", 173 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 300, "#004b51", new DateTime(2020, 8, 4, 16, 46, 30, 565, DateTimeKind.Local).AddTicks(641), "If we reboot the panel, we can get to the PCI panel through the bluetooth PCI panel!", 173 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 569, "#352642", new DateTime(2020, 5, 21, 6, 3, 46, 702, DateTimeKind.Local).AddTicks(3311), "You can't synthesize the interface without transmitting the solid state EXE interface!", 175 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 46, "#350c7c", new DateTime(2020, 7, 12, 3, 5, 51, 873, DateTimeKind.Local).AddTicks(1998), "Use the open-source COM sensor, then you can reboot the open-source sensor!", 173 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 947, "#5d310d", new DateTime(2020, 7, 1, 13, 4, 54, 32, DateTimeKind.Local).AddTicks(2636), "generating the panel won't do anything, we need to compress the cross-platform COM panel!", 172 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 862, "#6e0e5e", new DateTime(2020, 9, 2, 7, 28, 52, 366, DateTimeKind.Local).AddTicks(6033), "Use the digital GB system, then you can parse the digital system!", 172 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 851, "#44797a", new DateTime(2020, 6, 25, 12, 11, 1, 608, DateTimeKind.Local).AddTicks(1867), "connecting the transmitter won't do anything, we need to bypass the haptic HTTP transmitter!", 172 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 773, "#2f5567", new DateTime(2021, 2, 9, 14, 19, 25, 531, DateTimeKind.Local).AddTicks(4455), "I'll compress the redundant JSON hard drive, that should hard drive the JSON hard drive!", 172 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 467, "#135a0d", new DateTime(2020, 11, 27, 9, 36, 14, 497, DateTimeKind.Local).AddTicks(2228), "If we synthesize the sensor, we can get to the SCSI sensor through the optical SCSI sensor!", 172 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 375, "#514473", new DateTime(2020, 6, 12, 22, 39, 16, 934, DateTimeKind.Local).AddTicks(7228), "I'll copy the primary SSL monitor, that should monitor the SSL monitor!", 172 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 322, "#4e302c", new DateTime(2020, 6, 5, 10, 29, 10, 547, DateTimeKind.Local).AddTicks(3467), "Try to parse the AI matrix, maybe it will parse the auxiliary matrix!", 172 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 318, "#194426", new DateTime(2020, 4, 28, 0, 42, 49, 862, DateTimeKind.Local).AddTicks(6953), "Use the optical FTP system, then you can input the optical system!", 172 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1021, "#4d7627", new DateTime(2021, 3, 3, 0, 0, 8, 640, DateTimeKind.Local).AddTicks(9120), "The AI hard drive is down, program the multi-byte hard drive so we can program the AI hard drive!", 171 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1010, "#696f37", new DateTime(2020, 7, 2, 22, 29, 52, 284, DateTimeKind.Local).AddTicks(4281), "Use the online SAS program, then you can quantify the online program!", 171 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1120, "#167920", new DateTime(2021, 2, 15, 11, 13, 26, 960, DateTimeKind.Local).AddTicks(9810), "copying the hard drive won't do anything, we need to generate the virtual JSON hard drive!", 172 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 390, "#26635e", new DateTime(2020, 3, 15, 23, 28, 48, 182, DateTimeKind.Local).AddTicks(5441), "If we back up the bus, we can get to the SSL bus through the mobile SSL bus!", 171 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 912, "#066111", new DateTime(2020, 6, 15, 10, 28, 0, 12, DateTimeKind.Local).AddTicks(1883), "The ADP protocol is down, calculate the wireless protocol so we can calculate the ADP protocol!", 175 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1075, "#013858", new DateTime(2021, 2, 12, 9, 21, 26, 878, DateTimeKind.Local).AddTicks(3172), "The SMS card is down, parse the 1080p card so we can parse the SMS card!", 175 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 576, "#607748", new DateTime(2020, 6, 28, 13, 8, 17, 529, DateTimeKind.Local).AddTicks(1864), "Try to reboot the COM monitor, maybe it will reboot the mobile monitor!", 181 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 277, "#654062", new DateTime(2020, 8, 28, 23, 16, 26, 252, DateTimeKind.Local).AddTicks(4666), "If we back up the panel, we can get to the PNG panel through the bluetooth PNG panel!", 181 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 106, "#195a46", new DateTime(2020, 4, 15, 19, 35, 42, 962, DateTimeKind.Local).AddTicks(4636), "bypassing the panel won't do anything, we need to synthesize the neural SDD panel!", 181 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 778, "#544215", new DateTime(2020, 12, 25, 16, 22, 32, 393, DateTimeKind.Local).AddTicks(7231), "I'll program the 1080p SCSI system, that should system the SCSI system!", 180 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 673, "#755206", new DateTime(2020, 3, 17, 21, 56, 35, 168, DateTimeKind.Local).AddTicks(3782), "You can't input the card without overriding the multi-byte AI card!", 180 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 149, "#5f207b", new DateTime(2020, 8, 27, 11, 13, 12, 103, DateTimeKind.Local).AddTicks(9920), "Try to index the HTTP alarm, maybe it will index the solid state alarm!", 180 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1175, "#502245", new DateTime(2020, 8, 27, 6, 57, 46, 745, DateTimeKind.Local).AddTicks(3259), "Use the wireless USB capacitor, then you can transmit the wireless capacitor!", 179 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 532, "#6f5e74", new DateTime(2020, 10, 1, 9, 59, 58, 789, DateTimeKind.Local).AddTicks(3684), "The SMS system is down, parse the 1080p system so we can parse the SMS system!", 179 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 505, "#265d80", new DateTime(2020, 6, 29, 14, 9, 2, 474, DateTimeKind.Local).AddTicks(3261), "We need to index the wireless COM pixel!", 179 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 494, "#716269", new DateTime(2020, 6, 20, 8, 26, 32, 367, DateTimeKind.Local).AddTicks(1724), "Try to generate the JBOD port, maybe it will generate the neural port!", 179 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1015, "#5f3e28", new DateTime(2020, 4, 21, 11, 28, 33, 123, DateTimeKind.Local).AddTicks(6393), "I'll back up the virtual JSON program, that should program the JSON program!", 175 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 379, "#6c4005", new DateTime(2020, 12, 16, 4, 36, 54, 112, DateTimeKind.Local).AddTicks(5970), "You can't calculate the matrix without programming the multi-byte SMS matrix!", 179 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 104, "#175e70", new DateTime(2020, 5, 28, 13, 48, 32, 227, DateTimeKind.Local).AddTicks(709), "I'll compress the cross-platform XML pixel, that should pixel the XML pixel!", 179 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 837, "#724279", new DateTime(2020, 7, 23, 17, 10, 13, 702, DateTimeKind.Local).AddTicks(195), "We need to synthesize the virtual CSS pixel!", 178 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 806, "#006777", new DateTime(2020, 9, 19, 1, 17, 51, 242, DateTimeKind.Local).AddTicks(533), "I'll synthesize the wireless PNG card, that should card the PNG card!", 178 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 598, "#777246", new DateTime(2020, 4, 2, 2, 7, 58, 72, DateTimeKind.Local).AddTicks(4623), "The THX port is down, compress the haptic port so we can compress the THX port!", 178 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 507, "#487a36", new DateTime(2020, 9, 29, 20, 54, 57, 815, DateTimeKind.Local).AddTicks(2272), "I'll hack the solid state XSS microchip, that should microchip the XSS microchip!", 178 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 895, "#568019", new DateTime(2020, 11, 4, 20, 28, 32, 630, DateTimeKind.Local).AddTicks(8259), "connecting the hard drive won't do anything, we need to quantify the auxiliary IB hard drive!", 177 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1039, "#451455", new DateTime(2020, 10, 20, 7, 22, 51, 828, DateTimeKind.Local).AddTicks(3896), "I'll bypass the solid state FTP panel, that should panel the FTP panel!", 176 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 930, "#257c55", new DateTime(2020, 4, 20, 4, 29, 24, 705, DateTimeKind.Local).AddTicks(8085), "connecting the matrix won't do anything, we need to generate the digital JBOD matrix!", 176 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 796, "#56705d", new DateTime(2020, 5, 12, 21, 39, 2, 128, DateTimeKind.Local).AddTicks(8541), "Try to index the SDD circuit, maybe it will index the cross-platform circuit!", 176 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 166, "#2a2d00", new DateTime(2020, 10, 24, 2, 6, 31, 392, DateTimeKind.Local).AddTicks(3873), "The AGP panel is down, parse the wireless panel so we can parse the AGP panel!", 176 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 127, "#384b4a", new DateTime(2021, 3, 3, 7, 30, 38, 842, DateTimeKind.Local).AddTicks(9134), "I'll calculate the virtual PCI program, that should program the PCI program!", 179 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 626, "#72105d", new DateTime(2021, 2, 11, 19, 38, 14, 544, DateTimeKind.Local).AddTicks(7723), "The GB hard drive is down, program the back-end hard drive so we can program the GB hard drive!", 181 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1086, "#024b3a", new DateTime(2021, 1, 4, 1, 30, 28, 612, DateTimeKind.Local).AddTicks(7347), "I'll connect the virtual PCI port, that should port the PCI port!", 170 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 27, "#2e1d3c", new DateTime(2020, 9, 19, 0, 17, 20, 98, DateTimeKind.Local).AddTicks(3921), "If we input the system, we can get to the AGP system through the multi-byte AGP system!", 170 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1104, "#52772b", new DateTime(2020, 6, 28, 4, 35, 46, 4, DateTimeKind.Local).AddTicks(7640), "We need to override the redundant RSS microchip!", 162 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 768, "#72455f", new DateTime(2020, 10, 17, 20, 54, 32, 233, DateTimeKind.Local).AddTicks(2568), "If we input the hard drive, we can get to the TCP hard drive through the primary TCP hard drive!", 162 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 591, "#7c503f", new DateTime(2020, 4, 17, 10, 38, 37, 176, DateTimeKind.Local).AddTicks(4088), "You can't generate the bus without calculating the primary XML bus!", 162 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 11, "#7f5640", new DateTime(2021, 2, 25, 18, 46, 43, 229, DateTimeKind.Local).AddTicks(4178), "generating the panel won't do anything, we need to transmit the online RSS panel!", 162 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 939, "#031516", new DateTime(2020, 7, 16, 3, 28, 10, 140, DateTimeKind.Local).AddTicks(2320), "Try to parse the SDD interface, maybe it will parse the wireless interface!", 161 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 665, "#054f63", new DateTime(2020, 4, 19, 15, 48, 11, 960, DateTimeKind.Local).AddTicks(8732), "Use the digital PCI bus, then you can hack the digital bus!", 161 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1130, "#0c3b1b", new DateTime(2020, 9, 21, 11, 2, 51, 17, DateTimeKind.Local).AddTicks(7587), "Use the bluetooth GB card, then you can index the bluetooth card!", 160 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1078, "#5d366a", new DateTime(2020, 9, 30, 20, 19, 0, 991, DateTimeKind.Local).AddTicks(6520), "compressing the alarm won't do anything, we need to navigate the wireless SCSI alarm!", 160 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 937, "#6d574b", new DateTime(2020, 6, 19, 19, 0, 16, 834, DateTimeKind.Local).AddTicks(6444), "I'll index the optical AI hard drive, that should hard drive the AI hard drive!", 160 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 858, "#054b2f", new DateTime(2020, 5, 14, 3, 44, 17, 6, DateTimeKind.Local).AddTicks(2347), "backing up the program won't do anything, we need to back up the primary PCI program!", 160 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 50, "#137921", new DateTime(2020, 4, 7, 12, 37, 16, 454, DateTimeKind.Local).AddTicks(4066), "Try to connect the FTP program, maybe it will connect the mobile program!", 163 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 749, "#2f6043", new DateTime(2020, 7, 3, 18, 32, 45, 468, DateTimeKind.Local).AddTicks(6584), "If we hack the interface, we can get to the HTTP interface through the optical HTTP interface!", 160 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 24, "#630957", new DateTime(2020, 7, 26, 8, 13, 56, 856, DateTimeKind.Local).AddTicks(3732), "Use the back-end PNG interface, then you can override the back-end interface!", 160 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1006, "#7a0400", new DateTime(2021, 2, 19, 2, 17, 56, 262, DateTimeKind.Local).AddTicks(2113), "navigating the feed won't do anything, we need to synthesize the bluetooth TCP feed!", 159 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 885, "#041c27", new DateTime(2020, 10, 7, 19, 46, 5, 641, DateTimeKind.Local).AddTicks(4046), "parsing the capacitor won't do anything, we need to index the cross-platform SAS capacitor!", 159 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 660, "#074a6f", new DateTime(2020, 12, 30, 12, 19, 9, 106, DateTimeKind.Local).AddTicks(3192), "You can't input the driver without quantifying the primary HTTP driver!", 159 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 39, "#63281f", new DateTime(2020, 4, 20, 10, 1, 55, 444, DateTimeKind.Local).AddTicks(1020), "quantifying the pixel won't do anything, we need to input the wireless SSL pixel!", 159 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1188, "#4a3f06", new DateTime(2020, 8, 27, 2, 46, 29, 955, DateTimeKind.Local).AddTicks(5135), "The JSON microchip is down, transmit the back-end microchip so we can transmit the JSON microchip!", 158 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1107, "#7e285e", new DateTime(2020, 4, 13, 2, 18, 3, 758, DateTimeKind.Local).AddTicks(3816), "We need to quantify the optical GB bus!", 158 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 615, "#0d5765", new DateTime(2021, 1, 16, 13, 54, 23, 321, DateTimeKind.Local).AddTicks(5391), "calculating the bus won't do anything, we need to synthesize the redundant GB bus!", 158 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 367, "#43635e", new DateTime(2020, 3, 3, 22, 55, 8, 792, DateTimeKind.Local).AddTicks(3991), "Try to compress the XML monitor, maybe it will compress the digital monitor!", 158 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 134, "#080368", new DateTime(2020, 3, 12, 11, 23, 49, 206, DateTimeKind.Local).AddTicks(5031), "You can't input the sensor without transmitting the haptic RAM sensor!", 158 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 500, "#1d677d", new DateTime(2020, 4, 23, 2, 50, 2, 870, DateTimeKind.Local).AddTicks(4294), "indexing the transmitter won't do anything, we need to navigate the digital SCSI transmitter!", 160 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 992, "#59311a", new DateTime(2021, 2, 10, 4, 22, 52, 658, DateTimeKind.Local).AddTicks(7279), "The USB protocol is down, calculate the optical protocol so we can calculate the USB protocol!", 170 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 306, "#6b6d1b", new DateTime(2021, 2, 22, 12, 49, 28, 713, DateTimeKind.Local).AddTicks(4807), "If we program the port, we can get to the XML port through the neural XML port!", 163 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 571, "#126f25", new DateTime(2020, 7, 2, 23, 7, 20, 731, DateTimeKind.Local).AddTicks(3988), "We need to back up the mobile HDD matrix!", 163 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 991, "#0c7818", new DateTime(2020, 12, 19, 7, 18, 48, 107, DateTimeKind.Local).AddTicks(4474), "indexing the microchip won't do anything, we need to input the digital RSS microchip!", 169 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 346, "#1b3414", new DateTime(2020, 6, 9, 12, 16, 9, 793, DateTimeKind.Local).AddTicks(3736), "overriding the alarm won't do anything, we need to override the bluetooth RSS alarm!", 169 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 88, "#726671", new DateTime(2020, 5, 30, 18, 35, 23, 529, DateTimeKind.Local).AddTicks(3669), "Try to override the SCSI capacitor, maybe it will override the online capacitor!", 169 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1042, "#107e41", new DateTime(2020, 7, 13, 19, 16, 16, 312, DateTimeKind.Local).AddTicks(5280), "You can't hack the sensor without generating the solid state JSON sensor!", 168 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 698, "#2e3900", new DateTime(2020, 6, 25, 8, 57, 23, 201, DateTimeKind.Local).AddTicks(2014), "If we synthesize the program, we can get to the CSS program through the cross-platform CSS program!", 168 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1144, "#651b5b", new DateTime(2020, 6, 19, 0, 14, 10, 701, DateTimeKind.Local).AddTicks(9911), "The USB port is down, quantify the virtual port so we can quantify the USB port!", 167 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 421, "#10367e", new DateTime(2020, 8, 5, 10, 54, 1, 800, DateTimeKind.Local).AddTicks(723), "If we copy the port, we can get to the IB port through the online IB port!", 167 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 246, "#037952", new DateTime(2020, 6, 12, 17, 7, 37, 867, DateTimeKind.Local).AddTicks(5619), "Use the primary HTTP microchip, then you can override the primary microchip!", 167 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1128, "#0d260b", new DateTime(2021, 1, 23, 10, 54, 49, 988, DateTimeKind.Local).AddTicks(4511), "copying the matrix won't do anything, we need to override the cross-platform SDD matrix!", 166 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1081, "#6c1b6a", new DateTime(2020, 8, 12, 4, 28, 47, 760, DateTimeKind.Local).AddTicks(6711), "I'll compress the haptic RSS driver, that should driver the RSS driver!", 166 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 405, "#027162", new DateTime(2020, 8, 2, 18, 13, 56, 164, DateTimeKind.Local).AddTicks(8135), "If we synthesize the capacitor, we can get to the ADP capacitor through the virtual ADP capacitor!", 163 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 430, "#5b7a0f", new DateTime(2020, 8, 10, 22, 15, 48, 23, DateTimeKind.Local).AddTicks(2506), "I'll quantify the optical GB interface, that should interface the GB interface!", 166 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 157, "#016e6b", new DateTime(2020, 4, 17, 23, 20, 50, 889, DateTimeKind.Local).AddTicks(9435), "Use the auxiliary RAM interface, then you can transmit the auxiliary interface!", 166 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1030, "#57505e", new DateTime(2020, 3, 11, 2, 34, 29, 917, DateTimeKind.Local).AddTicks(1890), "We need to bypass the wireless XSS capacitor!", 165 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 685, "#643c25", new DateTime(2020, 7, 5, 15, 49, 0, 821, DateTimeKind.Local).AddTicks(7553), "We need to parse the bluetooth SDD microchip!", 165 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 389, "#49363e", new DateTime(2020, 11, 6, 2, 1, 5, 400, DateTimeKind.Local).AddTicks(1313), "You can't transmit the feed without parsing the redundant COM feed!", 165 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 388, "#7d621f", new DateTime(2020, 5, 13, 11, 29, 12, 498, DateTimeKind.Local).AddTicks(496), "Use the virtual SMTP matrix, then you can reboot the virtual matrix!", 165 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1022, "#38743d", new DateTime(2020, 9, 16, 3, 48, 49, 266, DateTimeKind.Local).AddTicks(8056), "If we quantify the application, we can get to the EXE application through the back-end EXE application!", 164 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 118, "#5e7a43", new DateTime(2020, 6, 7, 12, 0, 55, 141, DateTimeKind.Local).AddTicks(678), "If we generate the port, we can get to the PNG port through the back-end PNG port!", 164 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1023, "#1a6a17", new DateTime(2020, 5, 27, 19, 51, 23, 528, DateTimeKind.Local).AddTicks(4695), "We need to compress the auxiliary SSL panel!", 163 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 836, "#6c7a0f", new DateTime(2021, 1, 28, 19, 20, 22, 692, DateTimeKind.Local).AddTicks(3296), "We need to override the open-source XSS matrix!", 163 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 712, "#6e2109", new DateTime(2020, 10, 3, 9, 32, 37, 970, DateTimeKind.Local).AddTicks(7410), "The AGP alarm is down, generate the cross-platform alarm so we can generate the AGP alarm!", 163 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 331, "#266b29", new DateTime(2020, 6, 10, 22, 21, 39, 294, DateTimeKind.Local).AddTicks(6232), "generating the capacitor won't do anything, we need to override the primary AI capacitor!", 166 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1195, "#73772b", new DateTime(2020, 7, 10, 0, 56, 55, 341, DateTimeKind.Local).AddTicks(4845), "quantifying the driver won't do anything, we need to compress the wireless AI driver!", 181 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 89, "#783b35", new DateTime(2021, 1, 24, 10, 21, 42, 533, DateTimeKind.Local).AddTicks(5968), "I'll generate the open-source SMTP bus, that should bus the SMTP bus!", 182 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 787, "#46595b", new DateTime(2021, 1, 19, 4, 31, 34, 162, DateTimeKind.Local).AddTicks(508), "We need to calculate the primary CSS monitor!", 182 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 967, "#0f3d64", new DateTime(2020, 10, 19, 18, 41, 21, 521, DateTimeKind.Local).AddTicks(1629), "generating the hard drive won't do anything, we need to hack the primary USB hard drive!", 202 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 657, "#78172b", new DateTime(2020, 5, 20, 2, 51, 38, 225, DateTimeKind.Local).AddTicks(9237), "You can't calculate the monitor without indexing the 1080p IB monitor!", 202 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 409, "#5b030e", new DateTime(2020, 5, 14, 1, 19, 57, 365, DateTimeKind.Local).AddTicks(489), "The JBOD sensor is down, input the auxiliary sensor so we can input the JBOD sensor!", 202 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1151, "#097810", new DateTime(2021, 2, 8, 19, 11, 43, 528, DateTimeKind.Local).AddTicks(2739), "I'll transmit the multi-byte GB matrix, that should matrix the GB matrix!", 201 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1045, "#214176", new DateTime(2020, 6, 12, 23, 29, 43, 51, DateTimeKind.Local).AddTicks(9155), "We need to parse the virtual HDD monitor!", 201 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1008, "#3b2e5d", new DateTime(2020, 8, 15, 11, 53, 28, 498, DateTimeKind.Local).AddTicks(4302), "Use the multi-byte ADP array, then you can back up the multi-byte array!", 201 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 931, "#10576c", new DateTime(2020, 9, 20, 17, 54, 37, 642, DateTimeKind.Local).AddTicks(8986), "The PCI capacitor is down, parse the auxiliary capacitor so we can parse the PCI capacitor!", 201 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 772, "#277f78", new DateTime(2021, 1, 27, 16, 12, 41, 983, DateTimeKind.Local).AddTicks(507), "If we input the transmitter, we can get to the HTTP transmitter through the optical HTTP transmitter!", 201 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 632, "#7b5502", new DateTime(2021, 1, 3, 10, 57, 25, 86, DateTimeKind.Local).AddTicks(9736), "I'll calculate the back-end RAM protocol, that should protocol the RAM protocol!", 201 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1074, "#2e3b47", new DateTime(2021, 2, 18, 19, 25, 22, 303, DateTimeKind.Local).AddTicks(9150), "Use the auxiliary RSS port, then you can override the auxiliary port!", 200 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1157, "#0e5b0c", new DateTime(2020, 10, 25, 16, 42, 43, 39, DateTimeKind.Local).AddTicks(5628), "Try to reboot the AGP panel, maybe it will reboot the 1080p panel!", 202 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1058, "#3f7d31", new DateTime(2020, 7, 25, 15, 40, 37, 377, DateTimeKind.Local).AddTicks(4031), "Use the neural HTTP circuit, then you can navigate the neural circuit!", 199 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 504, "#034166", new DateTime(2020, 9, 27, 6, 19, 54, 295, DateTimeKind.Local).AddTicks(4628), "Use the primary JBOD transmitter, then you can generate the primary transmitter!", 199 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 95, "#162d66", new DateTime(2020, 12, 8, 0, 49, 25, 633, DateTimeKind.Local).AddTicks(5194), "I'll program the multi-byte XML hard drive, that should hard drive the XML hard drive!", 199 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1085, "#74167e", new DateTime(2021, 1, 19, 16, 27, 42, 602, DateTimeKind.Local).AddTicks(9906), "We need to synthesize the virtual HTTP hard drive!", 198 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 795, "#662e4c", new DateTime(2020, 10, 15, 4, 35, 27, 19, DateTimeKind.Local).AddTicks(8958), "Use the virtual ADP microchip, then you can bypass the virtual microchip!", 198 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 761, "#725b46", new DateTime(2020, 5, 28, 21, 56, 45, 14, DateTimeKind.Local).AddTicks(3747), "You can't calculate the driver without parsing the multi-byte SMTP driver!", 198 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1119, "#5b0f22", new DateTime(2020, 5, 14, 18, 0, 24, 234, DateTimeKind.Local).AddTicks(2577), "transmitting the panel won't do anything, we need to hack the multi-byte JBOD panel!", 197 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1098, "#170806", new DateTime(2021, 1, 2, 20, 34, 23, 860, DateTimeKind.Local).AddTicks(9121), "The HDD capacitor is down, bypass the online capacitor so we can bypass the HDD capacitor!", 197 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1071, "#735259", new DateTime(2021, 1, 9, 2, 33, 59, 655, DateTimeKind.Local).AddTicks(9476), "You can't connect the card without transmitting the mobile HTTP card!", 197 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 910, "#4e413e", new DateTime(2021, 1, 15, 21, 17, 48, 276, DateTimeKind.Local).AddTicks(9631), "Use the auxiliary GB system, then you can back up the auxiliary system!", 197 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 258, "#6b4558", new DateTime(2020, 11, 20, 5, 18, 5, 200, DateTimeKind.Local).AddTicks(2280), "We need to index the mobile XSS sensor!", 197 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 805, "#2b5145", new DateTime(2020, 6, 30, 2, 39, 28, 913, DateTimeKind.Local).AddTicks(8161), "Try to index the SSL panel, maybe it will index the bluetooth panel!", 199 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 215, "#3d6125", new DateTime(2020, 11, 12, 14, 53, 44, 787, DateTimeKind.Local).AddTicks(6170), "programming the sensor won't do anything, we need to reboot the bluetooth USB sensor!", 197 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 10, "#1c372a", new DateTime(2020, 10, 10, 11, 43, 17, 444, DateTimeKind.Local).AddTicks(4915), "Try to override the SCSI port, maybe it will override the cross-platform port!", 203 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1132, "#50791b", new DateTime(2020, 7, 15, 23, 7, 2, 966, DateTimeKind.Local).AddTicks(6147), "Try to parse the SMS bus, maybe it will parse the cross-platform bus!", 203 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 36, "#3a207e", new DateTime(2021, 1, 16, 8, 4, 29, 771, DateTimeKind.Local).AddTicks(6968), "Try to input the ADP sensor, maybe it will input the multi-byte sensor!", 209 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 811, "#4d3901", new DateTime(2020, 3, 21, 15, 30, 59, 678, DateTimeKind.Local).AddTicks(7618), "If we input the program, we can get to the CSS program through the open-source CSS program!", 208 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 429, "#653262", new DateTime(2020, 7, 12, 14, 32, 34, 197, DateTimeKind.Local).AddTicks(399), "I'll transmit the back-end JBOD feed, that should feed the JBOD feed!", 208 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 297, "#644d05", new DateTime(2020, 8, 12, 9, 52, 26, 796, DateTimeKind.Local).AddTicks(3121), "Use the multi-byte SAS program, then you can bypass the multi-byte program!", 208 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 191, "#457e13", new DateTime(2021, 1, 18, 5, 58, 57, 895, DateTimeKind.Local).AddTicks(1676), "Try to program the SDD program, maybe it will program the neural program!", 208 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 12, "#4f5235", new DateTime(2020, 4, 21, 12, 1, 33, 784, DateTimeKind.Local).AddTicks(7254), "If we compress the program, we can get to the USB program through the solid state USB program!", 208 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 954, "#151356", new DateTime(2020, 3, 24, 16, 48, 0, 938, DateTimeKind.Local).AddTicks(9023), "If we quantify the firewall, we can get to the SMTP firewall through the back-end SMTP firewall!", 207 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 383, "#626b2a", new DateTime(2020, 9, 17, 0, 20, 53, 147, DateTimeKind.Local).AddTicks(479), "Use the bluetooth SAS card, then you can index the bluetooth card!", 207 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 343, "#117109", new DateTime(2020, 9, 2, 14, 1, 41, 661, DateTimeKind.Local).AddTicks(477), "The COM alarm is down, parse the bluetooth alarm so we can parse the COM alarm!", 207 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 950, "#042c61", new DateTime(2020, 3, 10, 9, 38, 39, 256, DateTimeKind.Local).AddTicks(3499), "Use the auxiliary COM feed, then you can calculate the auxiliary feed!", 206 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 458, "#061d76", new DateTime(2020, 5, 17, 2, 55, 9, 316, DateTimeKind.Local).AddTicks(72), "If we copy the protocol, we can get to the SMTP protocol through the back-end SMTP protocol!", 203 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 679, "#28764a", new DateTime(2021, 1, 31, 13, 27, 19, 214, DateTimeKind.Local).AddTicks(8436), "Use the redundant SAS capacitor, then you can index the redundant capacitor!", 206 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 163, "#482313", new DateTime(2020, 5, 2, 10, 30, 34, 862, DateTimeKind.Local).AddTicks(4209), "I'll connect the virtual RAM feed, that should feed the RAM feed!", 206 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 989, "#417b1d", new DateTime(2020, 5, 3, 8, 55, 46, 319, DateTimeKind.Local).AddTicks(908), "navigating the monitor won't do anything, we need to parse the virtual JSON monitor!", 205 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 315, "#112d40", new DateTime(2020, 5, 13, 9, 30, 0, 401, DateTimeKind.Local).AddTicks(4501), "Try to parse the SMS transmitter, maybe it will parse the wireless transmitter!", 205 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 225, "#6d2825", new DateTime(2020, 9, 16, 0, 29, 32, 394, DateTimeKind.Local).AddTicks(1382), "We need to index the virtual SDD matrix!", 205 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 165, "#1f7770", new DateTime(2020, 8, 8, 11, 46, 50, 335, DateTimeKind.Local).AddTicks(619), "If we quantify the hard drive, we can get to the SDD hard drive through the solid state SDD hard drive!", 205 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1190, "#20550c", new DateTime(2020, 10, 19, 18, 32, 1, 212, DateTimeKind.Local).AddTicks(6743), "Try to quantify the SMS panel, maybe it will quantify the primary panel!", 204 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1129, "#120633", new DateTime(2020, 9, 27, 17, 57, 22, 441, DateTimeKind.Local).AddTicks(8215), "If we override the port, we can get to the CSS port through the auxiliary CSS port!", 204 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 603, "#023a7e", new DateTime(2020, 7, 31, 19, 32, 37, 7, DateTimeKind.Local).AddTicks(9427), "Try to compress the AGP circuit, maybe it will compress the primary circuit!", 204 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 590, "#536601", new DateTime(2021, 1, 7, 5, 30, 55, 77, DateTimeKind.Local).AddTicks(3799), "You can't reboot the monitor without bypassing the solid state SMTP monitor!", 204 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 528, "#1b5e3a", new DateTime(2020, 7, 28, 5, 46, 22, 721, DateTimeKind.Local).AddTicks(1968), "Try to quantify the TCP matrix, maybe it will quantify the cross-platform matrix!", 204 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 461, "#553369", new DateTime(2020, 4, 17, 10, 29, 49, 819, DateTimeKind.Local).AddTicks(2402), "We need to connect the wireless SMTP bus!", 206 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 38, "#3d4d5c", new DateTime(2020, 7, 15, 21, 43, 52, 451, DateTimeKind.Local).AddTicks(3590), "We need to compress the online SMTP program!", 197 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 719, "#5a4a42", new DateTime(2020, 9, 30, 20, 58, 56, 480, DateTimeKind.Local).AddTicks(9438), "Use the mobile THX interface, then you can program the mobile interface!", 196 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 715, "#32612a", new DateTime(2020, 4, 18, 12, 34, 52, 834, DateTimeKind.Local).AddTicks(2478), "The RAM application is down, quantify the cross-platform application so we can quantify the RAM application!", 196 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1070, "#1f1f10", new DateTime(2020, 6, 17, 17, 52, 51, 513, DateTimeKind.Local).AddTicks(1165), "I'll synthesize the multi-byte SQL bandwidth, that should bandwidth the SQL bandwidth!", 188 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 968, "#551778", new DateTime(2020, 9, 28, 18, 59, 9, 19, DateTimeKind.Local).AddTicks(7863), "You can't calculate the port without hacking the cross-platform SMS port!", 188 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 929, "#3a2a1a", new DateTime(2021, 2, 26, 23, 52, 15, 95, DateTimeKind.Local).AddTicks(4904), "We need to compress the neural HDD alarm!", 188 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 135, "#2c4f7c", new DateTime(2020, 10, 24, 7, 50, 33, 304, DateTimeKind.Local).AddTicks(1945), "Try to quantify the AI port, maybe it will quantify the virtual port!", 188 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1047, "#143965", new DateTime(2020, 7, 8, 1, 21, 59, 368, DateTimeKind.Local).AddTicks(6417), "Try to bypass the RSS port, maybe it will bypass the optical port!", 187 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 995, "#1c064c", new DateTime(2021, 1, 20, 12, 11, 31, 995, DateTimeKind.Local).AddTicks(5555), "The JSON transmitter is down, compress the bluetooth transmitter so we can compress the JSON transmitter!", 187 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 745, "#745a38", new DateTime(2020, 6, 22, 20, 43, 11, 731, DateTimeKind.Local).AddTicks(8415), "If we calculate the circuit, we can get to the SCSI circuit through the virtual SCSI circuit!", 187 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 720, "#450660", new DateTime(2020, 10, 8, 8, 23, 11, 410, DateTimeKind.Local).AddTicks(33), "You can't compress the hard drive without programming the redundant EXE hard drive!", 187 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 371, "#07127b", new DateTime(2020, 6, 13, 19, 54, 59, 185, DateTimeKind.Local).AddTicks(6290), "We need to synthesize the multi-byte SQL circuit!", 187 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1147, "#62596e", new DateTime(2020, 4, 2, 10, 57, 33, 829, DateTimeKind.Local).AddTicks(6342), "We need to synthesize the wireless AGP panel!", 186 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 347, "#067e48", new DateTime(2020, 9, 18, 7, 31, 51, 15, DateTimeKind.Local).AddTicks(7733), "You can't copy the program without quantifying the wireless AGP program!", 189 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 422, "#4e7631", new DateTime(2020, 9, 10, 10, 17, 53, 380, DateTimeKind.Local).AddTicks(2583), "You can't copy the sensor without hacking the 1080p JSON sensor!", 186 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 582, "#055b7e", new DateTime(2020, 12, 1, 4, 46, 7, 662, DateTimeKind.Local).AddTicks(7795), "We need to transmit the virtual FTP system!", 185 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 295, "#092f1e", new DateTime(2020, 11, 11, 6, 8, 57, 755, DateTimeKind.Local).AddTicks(2865), "The JSON sensor is down, hack the redundant sensor so we can hack the JSON sensor!", 185 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 213, "#1b206c", new DateTime(2020, 7, 29, 17, 16, 48, 110, DateTimeKind.Local).AddTicks(749), "Use the wireless SAS panel, then you can input the wireless panel!", 184 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1194, "#015336", new DateTime(2020, 9, 18, 0, 16, 43, 316, DateTimeKind.Local).AddTicks(5389), "If we back up the capacitor, we can get to the PCI capacitor through the multi-byte PCI capacitor!", 183 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1168, "#253955", new DateTime(2020, 7, 10, 11, 45, 1, 676, DateTimeKind.Local).AddTicks(7949), "Try to reboot the GB application, maybe it will reboot the primary application!", 183 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 900, "#213b4d", new DateTime(2021, 1, 6, 7, 31, 54, 344, DateTimeKind.Local).AddTicks(8212), "If we quantify the circuit, we can get to the AI circuit through the digital AI circuit!", 183 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 535, "#551b71", new DateTime(2020, 7, 21, 7, 26, 45, 91, DateTimeKind.Local).AddTicks(4702), "You can't bypass the monitor without hacking the auxiliary PCI monitor!", 183 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 456, "#783a06", new DateTime(2020, 6, 8, 0, 47, 28, 726, DateTimeKind.Local).AddTicks(3236), "I'll generate the cross-platform PNG microchip, that should microchip the PNG microchip!", 183 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 330, "#0f201e", new DateTime(2021, 2, 16, 2, 6, 41, 529, DateTimeKind.Local).AddTicks(9757), "Try to connect the SSL capacitor, maybe it will connect the 1080p capacitor!", 183 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1126, "#381314", new DateTime(2021, 2, 3, 10, 52, 29, 536, DateTimeKind.Local).AddTicks(4952), "You can't synthesize the pixel without compressing the solid state IB pixel!", 182 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 42, "#566643", new DateTime(2020, 4, 14, 15, 25, 53, 149, DateTimeKind.Local).AddTicks(6825), "compressing the firewall won't do anything, we need to override the 1080p TCP firewall!", 186 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 349, "#4e2a16", new DateTime(2021, 1, 16, 1, 27, 10, 35, DateTimeKind.Local).AddTicks(2830), "Try to navigate the IB system, maybe it will navigate the open-source system!", 189 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 471, "#417b69", new DateTime(2020, 11, 18, 1, 39, 45, 798, DateTimeKind.Local).AddTicks(8684), "We need to index the auxiliary RAM capacitor!", 189 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 586, "#6e563f", new DateTime(2020, 6, 10, 7, 5, 0, 636, DateTimeKind.Local).AddTicks(6362), "synthesizing the firewall won't do anything, we need to generate the haptic JBOD firewall!", 189 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 395, "#191f74", new DateTime(2021, 1, 18, 2, 44, 49, 488, DateTimeKind.Local).AddTicks(5106), "Use the primary ADP hard drive, then you can compress the primary hard drive!", 196 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 384, "#075f71", new DateTime(2020, 12, 10, 22, 15, 45, 297, DateTimeKind.Local).AddTicks(2067), "Try to bypass the JSON driver, maybe it will bypass the digital driver!", 196 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 220, "#0b1615", new DateTime(2020, 5, 1, 9, 30, 23, 546, DateTimeKind.Local).AddTicks(540), "hacking the capacitor won't do anything, we need to override the 1080p HDD capacitor!", 196 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 614, "#6b081f", new DateTime(2020, 9, 20, 6, 46, 36, 687, DateTimeKind.Local).AddTicks(8972), "Try to calculate the FTP panel, maybe it will calculate the neural panel!", 195 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 101, "#1d7f2b", new DateTime(2020, 4, 28, 22, 36, 23, 940, DateTimeKind.Local).AddTicks(6141), "We need to back up the wireless AGP alarm!", 195 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1019, "#02174e", new DateTime(2021, 1, 11, 17, 41, 57, 894, DateTimeKind.Local).AddTicks(7244), "The EXE microchip is down, program the bluetooth microchip so we can program the EXE microchip!", 194 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 963, "#062b25", new DateTime(2021, 1, 7, 6, 33, 2, 259, DateTimeKind.Local).AddTicks(2534), "We need to quantify the auxiliary SDD program!", 194 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 251, "#362e3f", new DateTime(2020, 5, 12, 16, 15, 1, 718, DateTimeKind.Local).AddTicks(8231), "quantifying the panel won't do anything, we need to calculate the haptic THX panel!", 194 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 142, "#54455c", new DateTime(2020, 4, 6, 0, 30, 8, 711, DateTimeKind.Local).AddTicks(3599), "We need to reboot the open-source JSON firewall!", 194 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 54, "#1f7856", new DateTime(2020, 5, 1, 7, 45, 52, 216, DateTimeKind.Local).AddTicks(8105), "You can't program the driver without transmitting the haptic SQL driver!", 194 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 951, "#20704b", new DateTime(2020, 3, 30, 5, 33, 0, 446, DateTimeKind.Local).AddTicks(5322), "The ADP alarm is down, override the haptic alarm so we can override the ADP alarm!", 193 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 554, "#4f6f08", new DateTime(2020, 12, 16, 5, 7, 16, 386, DateTimeKind.Local).AddTicks(9790), "Use the digital RSS array, then you can quantify the digital array!", 192 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 637, "#5a6d22", new DateTime(2020, 11, 20, 10, 30, 42, 385, DateTimeKind.Local).AddTicks(2943), "Use the online SMTP alarm, then you can transmit the online alarm!", 191 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 416, "#480d67", new DateTime(2020, 3, 10, 11, 29, 39, 692, DateTimeKind.Local).AddTicks(5327), "We need to connect the digital THX alarm!", 191 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 341, "#164505", new DateTime(2020, 3, 26, 17, 48, 54, 106, DateTimeKind.Local).AddTicks(9145), "Try to program the GB sensor, maybe it will program the digital sensor!", 191 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 19, "#185d62", new DateTime(2020, 8, 3, 3, 23, 5, 989, DateTimeKind.Local).AddTicks(9735), "copying the application won't do anything, we need to parse the online SQL application!", 191 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1056, "#6d0854", new DateTime(2020, 6, 27, 8, 34, 52, 810, DateTimeKind.Local).AddTicks(6841), "The EXE firewall is down, bypass the bluetooth firewall so we can bypass the EXE firewall!", 190 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 83, "#0a4372", new DateTime(2020, 4, 13, 19, 27, 49, 348, DateTimeKind.Local).AddTicks(6855), "calculating the bus won't do anything, we need to program the cross-platform SMS bus!", 190 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1165, "#287e0b", new DateTime(2021, 1, 28, 11, 52, 15, 35, DateTimeKind.Local).AddTicks(3584), "The JBOD microchip is down, navigate the redundant microchip so we can navigate the JBOD microchip!", 189 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1122, "#527962", new DateTime(2021, 2, 15, 10, 21, 30, 901, DateTimeKind.Local).AddTicks(4508), "I'll transmit the digital SCSI bandwidth, that should bandwidth the SCSI bandwidth!", 189 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1052, "#234833", new DateTime(2020, 7, 29, 16, 27, 20, 918, DateTimeKind.Local).AddTicks(679), "The JSON panel is down, program the optical panel so we can program the JSON panel!", 189 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 872, "#71014c", new DateTime(2020, 10, 11, 22, 38, 24, 485, DateTimeKind.Local).AddTicks(7643), "parsing the array won't do anything, we need to transmit the optical FTP array!", 189 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 721, "#3f4215", new DateTime(2020, 6, 1, 5, 26, 57, 606, DateTimeKind.Local).AddTicks(826), "Use the optical JSON protocol, then you can transmit the optical protocol!", 189 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1176, "#743673", new DateTime(2020, 12, 20, 15, 44, 38, 838, DateTimeKind.Local).AddTicks(114), "We need to hack the back-end SMTP alarm!", 157 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 821, "#5d0e57", new DateTime(2020, 4, 18, 22, 57, 36, 972, DateTimeKind.Local).AddTicks(1869), "parsing the port won't do anything, we need to program the primary COM port!", 209 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 692, "#46006f", new DateTime(2020, 12, 8, 4, 36, 11, 758, DateTimeKind.Local).AddTicks(6230), "Use the digital RSS sensor, then you can hack the digital sensor!", 157 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 568, "#0b7724", new DateTime(2020, 9, 18, 2, 24, 33, 102, DateTimeKind.Local).AddTicks(7752), "We need to input the auxiliary USB feed!", 157 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 304, "#7d425b", new DateTime(2020, 6, 18, 11, 36, 42, 958, DateTimeKind.Local).AddTicks(7542), "The PCI panel is down, transmit the solid state panel so we can transmit the PCI panel!", 123 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 417, "#41370a", new DateTime(2020, 7, 20, 7, 24, 29, 794, DateTimeKind.Local).AddTicks(6872), "We need to connect the solid state FTP hard drive!", 122 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 201, "#703c28", new DateTime(2020, 10, 18, 0, 17, 58, 451, DateTimeKind.Local).AddTicks(1332), "Use the solid state XSS program, then you can input the solid state program!", 122 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 907, "#386751", new DateTime(2020, 7, 3, 21, 36, 31, 802, DateTimeKind.Local).AddTicks(123), "calculating the bandwidth won't do anything, we need to input the redundant EXE bandwidth!", 121 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1082, "#56512b", new DateTime(2020, 8, 29, 1, 20, 47, 768, DateTimeKind.Local).AddTicks(1844), "If we hack the interface, we can get to the SSL interface through the solid state SSL interface!", 120 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 933, "#294c2e", new DateTime(2020, 4, 6, 19, 10, 59, 120, DateTimeKind.Local).AddTicks(1341), "The TCP sensor is down, bypass the neural sensor so we can bypass the TCP sensor!", 120 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 888, "#192471", new DateTime(2020, 8, 5, 2, 54, 10, 206, DateTimeKind.Local).AddTicks(7269), "hacking the capacitor won't do anything, we need to bypass the online COM capacitor!", 120 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 208, "#331c03", new DateTime(2020, 6, 18, 20, 28, 5, 17, DateTimeKind.Local).AddTicks(7098), "We need to calculate the neural RAM protocol!", 120 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 182, "#0a782b", new DateTime(2020, 3, 12, 15, 15, 36, 607, DateTimeKind.Local).AddTicks(9184), "Use the neural SCSI monitor, then you can back up the neural monitor!", 120 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 269, "#334d03", new DateTime(2020, 7, 31, 12, 23, 50, 233, DateTimeKind.Local).AddTicks(2909), "You can't connect the card without generating the open-source HTTP card!", 119 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 407, "#64102e", new DateTime(2020, 3, 4, 4, 5, 58, 25, DateTimeKind.Local).AddTicks(4390), "Use the cross-platform AI array, then you can compress the cross-platform array!", 123 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 120, "#221d22", new DateTime(2020, 5, 21, 21, 47, 31, 28, DateTimeKind.Local).AddTicks(6079), "Try to compress the AGP alarm, maybe it will compress the back-end alarm!", 119 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1007, "#53531f", new DateTime(2020, 11, 15, 21, 54, 12, 366, DateTimeKind.Local).AddTicks(7489), "We need to compress the virtual SMS circuit!", 118 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1004, "#1c1b78", new DateTime(2021, 1, 24, 2, 43, 42, 424, DateTimeKind.Local).AddTicks(4843), "Use the online SAS hard drive, then you can parse the online hard drive!", 118 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 502, "#0a7d78", new DateTime(2020, 8, 18, 4, 7, 43, 707, DateTimeKind.Local).AddTicks(8057), "Try to reboot the XML matrix, maybe it will reboot the optical matrix!", 118 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 59, "#215473", new DateTime(2021, 2, 8, 17, 24, 25, 165, DateTimeKind.Local).AddTicks(5275), "The ADP transmitter is down, hack the online transmitter so we can hack the ADP transmitter!", 118 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 311, "#266107", new DateTime(2020, 3, 3, 12, 48, 43, 445, DateTimeKind.Local).AddTicks(6759), "I'll override the online JSON port, that should port the JSON port!", 117 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 76, "#1d465b", new DateTime(2020, 5, 27, 18, 6, 0, 283, DateTimeKind.Local).AddTicks(158), "Try to reboot the SQL panel, maybe it will reboot the wireless panel!", 117 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1076, "#1b7820", new DateTime(2020, 8, 6, 13, 21, 42, 586, DateTimeKind.Local).AddTicks(5003), "Try to reboot the SSL port, maybe it will reboot the cross-platform port!", 116 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 325, "#456a31", new DateTime(2020, 7, 18, 8, 35, 23, 224, DateTimeKind.Local).AddTicks(2615), "We need to parse the auxiliary SSL sensor!", 116 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1026, "#305c3d", new DateTime(2020, 9, 18, 2, 37, 19, 902, DateTimeKind.Local).AddTicks(2824), "I'll input the cross-platform SSL capacitor, that should capacitor the SSL capacitor!", 115 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 262, "#357c73", new DateTime(2020, 8, 10, 21, 32, 33, 33, DateTimeKind.Local).AddTicks(9767), "You can't compress the bus without connecting the auxiliary TCP bus!", 115 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1009, "#442174", new DateTime(2020, 11, 17, 13, 9, 2, 623, DateTimeKind.Local).AddTicks(1897), "Use the online JBOD panel, then you can compress the online panel!", 118 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1111, "#6e374e", new DateTime(2020, 7, 30, 10, 22, 23, 447, DateTimeKind.Local).AddTicks(8701), "synthesizing the card won't do anything, we need to index the digital TCP card!", 114 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 791, "#802309", new DateTime(2021, 1, 25, 19, 19, 44, 621, DateTimeKind.Local).AddTicks(3072), "indexing the protocol won't do anything, we need to connect the 1080p EXE protocol!", 123 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1093, "#555231", new DateTime(2020, 11, 10, 21, 43, 29, 735, DateTimeKind.Local).AddTicks(8416), "You can't navigate the hard drive without parsing the primary EXE hard drive!", 123 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 512, "#59775d", new DateTime(2020, 11, 12, 2, 50, 27, 148, DateTimeKind.Local).AddTicks(7415), "If we calculate the protocol, we can get to the USB protocol through the multi-byte USB protocol!", 129 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 257, "#48750a", new DateTime(2020, 12, 14, 14, 47, 37, 265, DateTimeKind.Local).AddTicks(2202), "connecting the firewall won't do anything, we need to index the cross-platform SAS firewall!", 129 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 159, "#230446", new DateTime(2021, 1, 15, 21, 3, 55, 627, DateTimeKind.Local).AddTicks(8930), "Use the neural SCSI bus, then you can connect the neural bus!", 129 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 126, "#032f38", new DateTime(2020, 6, 1, 0, 41, 58, 572, DateTimeKind.Local).AddTicks(5550), "bypassing the card won't do anything, we need to generate the mobile AI card!", 129 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 110, "#3a3c0b", new DateTime(2020, 12, 8, 11, 16, 58, 670, DateTimeKind.Local).AddTicks(7934), "synthesizing the application won't do anything, we need to hack the redundant ADP application!", 129 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 25, "#73643f", new DateTime(2020, 10, 13, 22, 9, 28, 560, DateTimeKind.Local).AddTicks(6260), "Try to transmit the TCP card, maybe it will transmit the virtual card!", 129 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 751, "#3c5932", new DateTime(2020, 4, 1, 7, 40, 5, 802, DateTimeKind.Local).AddTicks(8015), "Use the solid state SMS pixel, then you can program the solid state pixel!", 128 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 537, "#2f6c37", new DateTime(2020, 10, 23, 7, 7, 1, 442, DateTimeKind.Local).AddTicks(5805), "I'll transmit the optical AGP bus, that should bus the AGP bus!", 128 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 453, "#796a1a", new DateTime(2020, 3, 12, 5, 37, 43, 16, DateTimeKind.Local).AddTicks(3278), "Use the virtual GB application, then you can parse the virtual application!", 128 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 328, "#253f04", new DateTime(2020, 12, 24, 21, 34, 7, 204, DateTimeKind.Local).AddTicks(991), "I'll hack the back-end RAM panel, that should panel the RAM panel!", 128 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1079, "#391f4f", new DateTime(2020, 9, 19, 0, 0, 50, 666, DateTimeKind.Local).AddTicks(7648), "I'll reboot the neural RAM transmitter, that should transmitter the RAM transmitter!", 123 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1193, "#7e1e31", new DateTime(2020, 12, 13, 1, 28, 6, 880, DateTimeKind.Local).AddTicks(2262), "Try to calculate the EXE circuit, maybe it will calculate the redundant circuit!", 127 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 175, "#642e47", new DateTime(2020, 7, 19, 10, 51, 35, 686, DateTimeKind.Local).AddTicks(4315), "synthesizing the circuit won't do anything, we need to transmit the neural AI circuit!", 127 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 85, "#5d0108", new DateTime(2020, 8, 21, 2, 39, 41, 322, DateTimeKind.Local).AddTicks(5055), "programming the alarm won't do anything, we need to override the primary JSON alarm!", 127 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1059, "#3c4665", new DateTime(2021, 1, 2, 14, 50, 59, 439, DateTimeKind.Local).AddTicks(7466), "Use the wireless XSS hard drive, then you can back up the wireless hard drive!", 126 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 977, "#3a7941", new DateTime(2020, 7, 7, 3, 41, 4, 156, DateTimeKind.Local).AddTicks(911), "Try to copy the JSON capacitor, maybe it will copy the neural capacitor!", 126 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 381, "#611479", new DateTime(2021, 1, 19, 12, 45, 23, 408, DateTimeKind.Local).AddTicks(1633), "parsing the firewall won't do anything, we need to transmit the cross-platform AI firewall!", 126 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 146, "#3c624f", new DateTime(2020, 5, 21, 10, 47, 20, 864, DateTimeKind.Local).AddTicks(9917), "You can't quantify the system without backing up the back-end SMTP system!", 126 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1160, "#194005", new DateTime(2020, 4, 22, 20, 2, 15, 98, DateTimeKind.Local).AddTicks(6495), "Try to generate the IB hard drive, maybe it will generate the multi-byte hard drive!", 125 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 667, "#241669", new DateTime(2020, 3, 16, 7, 37, 22, 305, DateTimeKind.Local).AddTicks(1979), "You can't reboot the array without navigating the bluetooth COM array!", 125 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 261, "#6b5727", new DateTime(2020, 10, 13, 23, 3, 25, 465, DateTimeKind.Local).AddTicks(1528), "We need to synthesize the multi-byte SCSI feed!", 125 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 237, "#002a33", new DateTime(2020, 8, 11, 22, 28, 46, 26, DateTimeKind.Local).AddTicks(1414), "I'll compress the online SMTP circuit, that should circuit the SMTP circuit!", 124 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 819, "#0c270b", new DateTime(2020, 4, 14, 1, 20, 16, 681, DateTimeKind.Local).AddTicks(7360), "You can't bypass the port without bypassing the redundant EXE port!", 127 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 625, "#1f7942", new DateTime(2020, 5, 6, 21, 41, 13, 222, DateTimeKind.Local).AddTicks(3893), "I'll compress the 1080p SQL pixel, that should pixel the SQL pixel!", 129 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1106, "#496750", new DateTime(2021, 1, 20, 7, 11, 51, 405, DateTimeKind.Local).AddTicks(1176), "The SDD system is down, bypass the back-end system so we can bypass the SDD system!", 114 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 221, "#6b5c4d", new DateTime(2020, 3, 23, 11, 52, 22, 571, DateTimeKind.Local).AddTicks(9939), "You can't program the port without parsing the multi-byte JBOD port!", 114 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 870, "#782d3c", new DateTime(2020, 3, 18, 18, 44, 37, 975, DateTimeKind.Local).AddTicks(3869), "If we index the card, we can get to the SDD card through the open-source SDD card!", 106 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 714, "#580642", new DateTime(2021, 2, 5, 10, 3, 6, 688, DateTimeKind.Local).AddTicks(8585), "Try to hack the XSS feed, maybe it will hack the bluetooth feed!", 106 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 477, "#464b65", new DateTime(2020, 6, 22, 16, 55, 14, 635, DateTimeKind.Local).AddTicks(4895), "If we hack the firewall, we can get to the SDD firewall through the back-end SDD firewall!", 106 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 423, "#692e44", new DateTime(2020, 4, 13, 3, 53, 27, 196, DateTimeKind.Local).AddTicks(5745), "The AGP capacitor is down, parse the auxiliary capacitor so we can parse the AGP capacitor!", 106 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 387, "#28332b", new DateTime(2021, 2, 14, 4, 0, 28, 523, DateTimeKind.Local).AddTicks(2084), "If we input the application, we can get to the FTP application through the open-source FTP application!", 106 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 356, "#2b0619", new DateTime(2020, 7, 10, 17, 52, 22, 163, DateTimeKind.Local).AddTicks(1224), "If we input the sensor, we can get to the SAS sensor through the mobile SAS sensor!", 106 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1068, "#305842", new DateTime(2020, 9, 22, 4, 5, 3, 167, DateTimeKind.Local).AddTicks(1569), "Use the wireless EXE capacitor, then you can transmit the wireless capacitor!", 105 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 861, "#432322", new DateTime(2020, 9, 1, 10, 25, 0, 698, DateTimeKind.Local).AddTicks(154), "We need to index the neural SSL hard drive!", 105 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 790, "#4f676f", new DateTime(2020, 5, 19, 4, 24, 15, 5, DateTimeKind.Local).AddTicks(3249), "You can't navigate the capacitor without generating the solid state RSS capacitor!", 105 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 684, "#28202f", new DateTime(2020, 5, 14, 13, 18, 20, 688, DateTimeKind.Local).AddTicks(4815), "Use the auxiliary SMTP monitor, then you can generate the auxiliary monitor!", 105 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 924, "#35405b", new DateTime(2020, 6, 15, 19, 22, 58, 250, DateTimeKind.Local).AddTicks(9649), "I'll back up the wireless SCSI capacitor, that should capacitor the SCSI capacitor!", 106 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 644, "#05397f", new DateTime(2020, 8, 16, 13, 51, 47, 934, DateTimeKind.Local).AddTicks(1390), "We need to compress the haptic RAM program!", 105 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1173, "#4f0178", new DateTime(2020, 4, 25, 11, 42, 44, 267, DateTimeKind.Local).AddTicks(2697), "Try to connect the PCI protocol, maybe it will connect the solid state protocol!", 104 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 488, "#014939", new DateTime(2021, 2, 28, 20, 47, 53, 374, DateTimeKind.Local).AddTicks(903), "You can't synthesize the sensor without transmitting the bluetooth PCI sensor!", 104 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1196, "#11413a", new DateTime(2020, 5, 26, 22, 6, 46, 954, DateTimeKind.Local).AddTicks(2078), "You can't transmit the application without transmitting the online JSON application!", 102 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1024, "#154a58", new DateTime(2020, 12, 15, 19, 13, 38, 163, DateTimeKind.Local).AddTicks(2126), "The PNG circuit is down, copy the open-source circuit so we can copy the PNG circuit!", 102 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 485, "#28230f", new DateTime(2021, 1, 27, 7, 57, 2, 168, DateTimeKind.Local).AddTicks(8345), "You can't copy the sensor without generating the neural HDD sensor!", 102 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 468, "#325b70", new DateTime(2020, 10, 20, 23, 52, 38, 273, DateTimeKind.Local).AddTicks(3027), "We need to copy the neural PCI transmitter!", 102 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 455, "#4d2460", new DateTime(2020, 10, 10, 3, 15, 12, 498, DateTimeKind.Local).AddTicks(785), "You can't reboot the feed without calculating the haptic CSS feed!", 102 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 399, "#35584b", new DateTime(2021, 1, 25, 12, 12, 27, 205, DateTimeKind.Local).AddTicks(856), "We need to parse the multi-byte USB monitor!", 102 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 206, "#3f516e", new DateTime(2020, 11, 28, 19, 1, 32, 895, DateTimeKind.Local).AddTicks(5480), "I'll copy the haptic IB driver, that should driver the IB driver!", 102 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 87, "#4a4d0e", new DateTime(2020, 6, 20, 22, 36, 25, 297, DateTimeKind.Local).AddTicks(7572), "Try to synthesize the SSL interface, maybe it will synthesize the cross-platform interface!", 102 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 35, "#036016", new DateTime(2021, 1, 7, 22, 56, 42, 984, DateTimeKind.Local).AddTicks(5856), "Use the open-source RAM interface, then you can parse the open-source interface!", 105 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 396, "#2a3d6f", new DateTime(2020, 6, 30, 14, 9, 18, 12, DateTimeKind.Local).AddTicks(8695), "Try to calculate the HDD system, maybe it will calculate the virtual system!", 114 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 957, "#6e7045", new DateTime(2020, 9, 1, 21, 8, 4, 271, DateTimeKind.Local).AddTicks(4320), "Try to back up the XML driver, maybe it will back up the redundant driver!", 106 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 260, "#5a2561", new DateTime(2020, 12, 31, 10, 23, 39, 151, DateTimeKind.Local).AddTicks(6165), "quantifying the card won't do anything, we need to connect the redundant HTTP card!", 107 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 167, "#297c4a", new DateTime(2021, 2, 11, 18, 25, 16, 974, DateTimeKind.Local).AddTicks(3144), "indexing the capacitor won't do anything, we need to compress the neural ADP capacitor!", 114 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 425, "#10796f", new DateTime(2020, 8, 1, 18, 53, 23, 62, DateTimeKind.Local).AddTicks(539), "If we index the port, we can get to the XML port through the solid state XML port!", 113 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 974, "#55612a", new DateTime(2020, 6, 4, 2, 50, 28, 860, DateTimeKind.Local).AddTicks(9703), "I'll parse the primary JSON port, that should port the JSON port!", 111 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 923, "#062e5c", new DateTime(2020, 4, 15, 20, 55, 15, 798, DateTimeKind.Local).AddTicks(9571), "Try to reboot the JSON capacitor, maybe it will reboot the primary capacitor!", 111 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 817, "#70703e", new DateTime(2020, 9, 2, 0, 54, 57, 323, DateTimeKind.Local).AddTicks(7601), "If we reboot the panel, we can get to the JBOD panel through the online JBOD panel!", 111 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 793, "#332c69", new DateTime(2020, 9, 21, 14, 59, 1, 324, DateTimeKind.Local).AddTicks(2262), "You can't copy the protocol without hacking the wireless AI protocol!", 111 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 755, "#2b2c5a", new DateTime(2020, 10, 30, 3, 53, 40, 441, DateTimeKind.Local).AddTicks(2209), "The RAM system is down, generate the cross-platform system so we can generate the RAM system!", 111 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 433, "#704351", new DateTime(2020, 4, 15, 13, 27, 11, 456, DateTimeKind.Local).AddTicks(1571), "Use the cross-platform SQL alarm, then you can compress the cross-platform alarm!", 111 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 413, "#0f6112", new DateTime(2020, 11, 14, 13, 5, 10, 735, DateTimeKind.Local).AddTicks(1393), "Use the mobile SCSI port, then you can override the mobile port!", 111 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 32, "#550c4e", new DateTime(2020, 10, 22, 1, 24, 49, 707, DateTimeKind.Local).AddTicks(6845), "backing up the interface won't do anything, we need to hack the haptic PNG interface!", 111 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1154, "#0a2c40", new DateTime(2020, 3, 20, 23, 45, 46, 683, DateTimeKind.Local).AddTicks(3287), "I'll navigate the haptic TCP capacitor, that should capacitor the TCP capacitor!", 106 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1096, "#31802b", new DateTime(2020, 3, 4, 5, 39, 26, 766, DateTimeKind.Local).AddTicks(2135), "We need to hack the wireless JSON transmitter!", 110 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 100, "#670700", new DateTime(2020, 9, 8, 4, 36, 31, 353, DateTimeKind.Local).AddTicks(1320), "I'll parse the 1080p GB panel, that should panel the GB panel!", 110 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 489, "#7a541c", new DateTime(2020, 10, 3, 21, 47, 3, 120, DateTimeKind.Local).AddTicks(9260), "Use the multi-byte CSS firewall, then you can hack the multi-byte firewall!", 109 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 171, "#36317d", new DateTime(2020, 3, 10, 22, 29, 42, 321, DateTimeKind.Local).AddTicks(5139), "If we override the capacitor, we can get to the IB capacitor through the wireless IB capacitor!", 109 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 115, "#07341b", new DateTime(2021, 2, 17, 14, 33, 17, 339, DateTimeKind.Local).AddTicks(5070), "We need to input the digital SMS sensor!", 109 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1069, "#6a2d19", new DateTime(2020, 7, 5, 8, 4, 16, 443, DateTimeKind.Local).AddTicks(6907), "The XSS panel is down, generate the primary panel so we can generate the XSS panel!", 108 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 844, "#4e1a06", new DateTime(2020, 7, 6, 13, 21, 23, 833, DateTimeKind.Local).AddTicks(4111), "If we reboot the card, we can get to the SSL card through the redundant SSL card!", 108 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 178, "#411c20", new DateTime(2020, 10, 24, 3, 22, 21, 730, DateTimeKind.Local).AddTicks(4823), "parsing the capacitor won't do anything, we need to reboot the multi-byte GB capacitor!", 108 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 4, "#257c7c", new DateTime(2020, 6, 5, 18, 3, 25, 787, DateTimeKind.Local).AddTicks(150), "We need to input the virtual SCSI system!", 108 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 942, "#725336", new DateTime(2020, 5, 20, 10, 19, 13, 843, DateTimeKind.Local).AddTicks(4993), "Try to back up the HTTP matrix, maybe it will back up the neural matrix!", 107 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 602, "#3c380a", new DateTime(2020, 10, 13, 1, 16, 26, 842, DateTimeKind.Local).AddTicks(9022), "I'll override the open-source XML circuit, that should circuit the XML circuit!", 107 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 156, "#6f6e65", new DateTime(2020, 4, 5, 3, 49, 16, 766, DateTimeKind.Local).AddTicks(2141), "programming the bus won't do anything, we need to navigate the 1080p COM bus!", 110 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 524, "#312e75", new DateTime(2020, 11, 24, 6, 23, 4, 250, DateTimeKind.Local).AddTicks(4519), "Use the virtual SQL application, then you can input the virtual application!", 130 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 550, "#644e09", new DateTime(2020, 4, 6, 14, 3, 10, 732, DateTimeKind.Local).AddTicks(975), "I'll copy the virtual XML system, that should system the XML system!", 130 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 255, "#0d6e57", new DateTime(2020, 11, 24, 3, 1, 43, 702, DateTimeKind.Local).AddTicks(9250), "If we back up the transmitter, we can get to the IB transmitter through the open-source IB transmitter!", 131 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 234, "#505260", new DateTime(2020, 10, 22, 5, 57, 54, 30, DateTimeKind.Local).AddTicks(1622), "Use the redundant USB port, then you can back up the redundant port!", 149 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 994, "#606e25", new DateTime(2021, 3, 1, 13, 34, 35, 343, DateTimeKind.Local).AddTicks(4982), "Use the optical GB card, then you can input the optical card!", 148 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 958, "#6f6127", new DateTime(2020, 9, 9, 10, 29, 11, 347, DateTimeKind.Local).AddTicks(7371), "If we copy the system, we can get to the RSS system through the primary RSS system!", 147 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 511, "#3d4957", new DateTime(2020, 5, 25, 3, 6, 29, 63, DateTimeKind.Local).AddTicks(9360), "You can't index the transmitter without connecting the mobile SCSI transmitter!", 147 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 432, "#187b37", new DateTime(2020, 7, 12, 7, 51, 29, 204, DateTimeKind.Local).AddTicks(2610), "The SSL interface is down, input the bluetooth interface so we can input the SSL interface!", 147 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 181, "#574660", new DateTime(2020, 7, 8, 19, 41, 23, 324, DateTimeKind.Local).AddTicks(4430), "We need to generate the multi-byte COM panel!", 147 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1012, "#300f7e", new DateTime(2020, 7, 18, 6, 7, 34, 943, DateTimeKind.Local).AddTicks(7819), "I'll bypass the cross-platform GB hard drive, that should hard drive the GB hard drive!", 146 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 841, "#0d4e39", new DateTime(2020, 9, 1, 13, 2, 25, 445, DateTimeKind.Local).AddTicks(7264), "If we index the matrix, we can get to the SMS matrix through the online SMS matrix!", 146 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 594, "#675e3b", new DateTime(2020, 9, 30, 22, 38, 24, 590, DateTimeKind.Local).AddTicks(6818), "If we program the microchip, we can get to the SDD microchip through the mobile SDD microchip!", 146 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 428, "#371e4b", new DateTime(2020, 8, 6, 7, 50, 8, 744, DateTimeKind.Local).AddTicks(2041), "If we synthesize the sensor, we can get to the SSL sensor through the haptic SSL sensor!", 146 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 130, "#375a33", new DateTime(2020, 7, 18, 2, 31, 49, 969, DateTimeKind.Local).AddTicks(3774), "If we navigate the hard drive, we can get to the IB hard drive through the back-end IB hard drive!", 150 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 361, "#294378", new DateTime(2020, 6, 16, 21, 34, 44, 469, DateTimeKind.Local).AddTicks(9085), "Try to index the PNG bus, maybe it will index the mobile bus!", 146 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 160, "#1e3c3a", new DateTime(2020, 11, 11, 5, 50, 7, 604, DateTimeKind.Local).AddTicks(4011), "backing up the pixel won't do anything, we need to navigate the online EXE pixel!", 146 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1149, "#733538", new DateTime(2020, 4, 8, 23, 13, 32, 186, DateTimeKind.Local).AddTicks(7290), "If we copy the circuit, we can get to the XSS circuit through the bluetooth XSS circuit!", 145 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 803, "#612044", new DateTime(2020, 6, 12, 21, 27, 24, 673, DateTimeKind.Local).AddTicks(9370), "Try to generate the PNG firewall, maybe it will generate the mobile firewall!", 145 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 616, "#01493d", new DateTime(2020, 11, 22, 2, 16, 36, 796, DateTimeKind.Local).AddTicks(8532), "navigating the circuit won't do anything, we need to generate the mobile SMS circuit!", 145 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 472, "#327718", new DateTime(2020, 3, 30, 11, 46, 17, 914, DateTimeKind.Local).AddTicks(7559), "If we program the matrix, we can get to the FTP matrix through the solid state FTP matrix!", 145 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1146, "#662209", new DateTime(2020, 6, 28, 16, 47, 16, 374, DateTimeKind.Local).AddTicks(4893), "navigating the program won't do anything, we need to program the mobile SMTP program!", 144 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1060, "#572776", new DateTime(2021, 1, 16, 2, 33, 42, 475, DateTimeKind.Local).AddTicks(9748), "I'll reboot the open-source XML hard drive, that should hard drive the XML hard drive!", 144 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1055, "#280875", new DateTime(2020, 5, 30, 16, 33, 16, 891, DateTimeKind.Local).AddTicks(6108), "I'll quantify the solid state HDD application, that should application the HDD application!", 144 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 857, "#20710a", new DateTime(2021, 2, 20, 15, 11, 21, 705, DateTimeKind.Local).AddTicks(2355), "Use the neural TCP sensor, then you can generate the neural sensor!", 144 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 724, "#770b00", new DateTime(2020, 5, 15, 10, 47, 44, 585, DateTimeKind.Local).AddTicks(3555), "parsing the application won't do anything, we need to transmit the primary RAM application!", 144 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 351, "#6a5328", new DateTime(2021, 1, 24, 21, 45, 17, 856, DateTimeKind.Local).AddTicks(7199), "We need to input the cross-platform SCSI monitor!", 146 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 575, "#35525c", new DateTime(2020, 6, 27, 8, 47, 12, 980, DateTimeKind.Local).AddTicks(7441), "synthesizing the sensor won't do anything, we need to parse the digital CSS sensor!", 144 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 186, "#73383e", new DateTime(2020, 12, 1, 19, 19, 45, 179, DateTimeKind.Local).AddTicks(7519), "If we quantify the panel, we can get to the THX panel through the mobile THX panel!", 150 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 628, "#763d22", new DateTime(2020, 6, 10, 19, 40, 19, 880, DateTimeKind.Local).AddTicks(7370), "We need to navigate the redundant SMS system!", 150 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 288, "#4c4b1f", new DateTime(2020, 9, 16, 20, 15, 0, 162, DateTimeKind.Local).AddTicks(9802), "Use the solid state EXE alarm, then you can compress the solid state alarm!", 157 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 249, "#686c76", new DateTime(2020, 5, 28, 2, 10, 29, 163, DateTimeKind.Local).AddTicks(9474), "You can't bypass the alarm without synthesizing the wireless EXE alarm!", 156 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1131, "#23056e", new DateTime(2021, 3, 3, 4, 45, 53, 386, DateTimeKind.Local).AddTicks(4186), "Try to input the JBOD port, maybe it will input the neural port!", 155 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 915, "#7f3a5e", new DateTime(2020, 4, 24, 14, 26, 32, 115, DateTimeKind.Local).AddTicks(9954), "indexing the circuit won't do anything, we need to parse the multi-byte XML circuit!", 155 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 845, "#616138", new DateTime(2020, 3, 18, 5, 48, 9, 131, DateTimeKind.Local).AddTicks(5830), "I'll transmit the haptic JBOD bandwidth, that should bandwidth the JBOD bandwidth!", 155 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 747, "#610640", new DateTime(2020, 4, 17, 23, 57, 32, 967, DateTimeKind.Local).AddTicks(2201), "We need to parse the open-source TCP port!", 155 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 693, "#4c685c", new DateTime(2020, 4, 11, 12, 28, 5, 453, DateTimeKind.Local).AddTicks(2673), "Try to reboot the AI feed, maybe it will reboot the digital feed!", 155 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 530, "#530a4f", new DateTime(2020, 9, 20, 8, 40, 9, 132, DateTimeKind.Local).AddTicks(509), "I'll connect the wireless HTTP array, that should array the HTTP array!", 155 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 271, "#35510b", new DateTime(2020, 3, 7, 13, 56, 48, 994, DateTimeKind.Local).AddTicks(9166), "calculating the monitor won't do anything, we need to quantify the haptic EXE monitor!", 154 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 34, "#426240", new DateTime(2020, 12, 14, 2, 1, 27, 661, DateTimeKind.Local).AddTicks(3360), "I'll compress the primary COM card, that should card the COM card!", 154 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 224, "#301920", new DateTime(2020, 3, 20, 15, 58, 39, 0, DateTimeKind.Local).AddTicks(6580), "Use the bluetooth GB microchip, then you can connect the bluetooth microchip!", 150 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1155, "#0b4e61", new DateTime(2020, 5, 23, 17, 47, 23, 933, DateTimeKind.Local).AddTicks(6105), "The RAM interface is down, calculate the neural interface so we can calculate the RAM interface!", 153 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 722, "#6c6f3a", new DateTime(2020, 11, 25, 17, 5, 25, 636, DateTimeKind.Local).AddTicks(5301), "We need to connect the neural ADP hard drive!", 153 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 567, "#31006b", new DateTime(2020, 9, 3, 12, 12, 5, 165, DateTimeKind.Local).AddTicks(4483), "I'll override the cross-platform EXE driver, that should driver the EXE driver!", 153 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 40, "#18294c", new DateTime(2020, 9, 19, 2, 56, 26, 863, DateTimeKind.Local).AddTicks(6356), "I'll transmit the redundant XML system, that should system the XML system!", 153 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1153, "#680660", new DateTime(2020, 10, 2, 5, 17, 24, 383, DateTimeKind.Local).AddTicks(8934), "If we back up the sensor, we can get to the IB sensor through the auxiliary IB sensor!", 152 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 892, "#7b132a", new DateTime(2020, 5, 12, 17, 58, 55, 456, DateTimeKind.Local).AddTicks(8874), "We need to transmit the redundant SMTP circuit!", 152 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 360, "#271e67", new DateTime(2020, 6, 26, 17, 54, 3, 207, DateTimeKind.Local).AddTicks(9813), "Try to input the RAM system, maybe it will input the optical system!", 152 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 799, "#472c14", new DateTime(2021, 1, 5, 17, 31, 25, 509, DateTimeKind.Local).AddTicks(9513), "The GB firewall is down, hack the primary firewall so we can hack the GB firewall!", 300 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 578, "#7c2826", new DateTime(2020, 8, 2, 16, 37, 16, 302, DateTimeKind.Local).AddTicks(4720), "Try to reboot the SSL array, maybe it will reboot the redundant array!", 151 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 466, "#692d44", new DateTime(2020, 4, 23, 0, 43, 41, 602, DateTimeKind.Local).AddTicks(1609), "Use the cross-platform FTP firewall, then you can compress the cross-platform firewall!", 151 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 897, "#444c7e", new DateTime(2020, 5, 30, 15, 18, 53, 18, DateTimeKind.Local).AddTicks(5093), "You can't index the driver without quantifying the redundant IB driver!", 150 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 727, "#05782f", new DateTime(2021, 1, 20, 19, 20, 53, 687, DateTimeKind.Local).AddTicks(9495), "Try to synthesize the THX hard drive, maybe it will synthesize the wireless hard drive!", 153 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 214, "#2e137f", new DateTime(2020, 11, 27, 19, 56, 40, 652, DateTimeKind.Local).AddTicks(186), "You can't program the bandwidth without connecting the neural AGP bandwidth!", 144 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1184, "#50007f", new DateTime(2020, 11, 4, 18, 12, 11, 889, DateTimeKind.Local).AddTicks(4990), "Try to override the CSS alarm, maybe it will override the 1080p alarm!", 143 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 716, "#3c8059", new DateTime(2020, 5, 22, 15, 24, 35, 220, DateTimeKind.Local).AddTicks(2667), "Try to parse the SMTP port, maybe it will parse the online port!", 143 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 880, "#1a6c26", new DateTime(2020, 9, 7, 23, 32, 12, 762, DateTimeKind.Local).AddTicks(9240), "quantifying the application won't do anything, we need to override the primary SMS application!", 136 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 704, "#08627c", new DateTime(2020, 4, 25, 10, 13, 6, 348, DateTimeKind.Local).AddTicks(694), "If we parse the hard drive, we can get to the TCP hard drive through the optical TCP hard drive!", 136 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1025, "#30603d", new DateTime(2020, 10, 23, 7, 44, 33, 815, DateTimeKind.Local).AddTicks(7762), "We need to transmit the haptic USB driver!", 135 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 960, "#36016c", new DateTime(2020, 4, 17, 3, 55, 41, 445, DateTimeKind.Local).AddTicks(4226), "You can't transmit the monitor without overriding the mobile HTTP monitor!", 135 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 515, "#463b0e", new DateTime(2020, 12, 14, 12, 1, 34, 531, DateTimeKind.Local).AddTicks(5143), "Use the mobile COM firewall, then you can hack the mobile firewall!", 135 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 197, "#06550f", new DateTime(2020, 9, 16, 6, 18, 8, 6, DateTimeKind.Local).AddTicks(7702), "Try to synthesize the THX program, maybe it will synthesize the 1080p program!", 135 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 153, "#594b0d", new DateTime(2020, 9, 7, 14, 5, 38, 880, DateTimeKind.Local).AddTicks(455), "I'll connect the mobile SMTP monitor, that should monitor the SMTP monitor!", 135 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 871, "#057c0c", new DateTime(2020, 3, 10, 19, 26, 46, 495, DateTimeKind.Local).AddTicks(119), "I'll reboot the cross-platform IB bus, that should bus the IB bus!", 134 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 735, "#095b39", new DateTime(2020, 6, 29, 0, 55, 29, 52, DateTimeKind.Local).AddTicks(9449), "Try to transmit the SQL pixel, maybe it will transmit the digital pixel!", 134 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 448, "#51132d", new DateTime(2021, 2, 15, 22, 2, 30, 94, DateTimeKind.Local).AddTicks(5485), "The RAM protocol is down, parse the back-end protocol so we can parse the RAM protocol!", 134 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 137, "#2c2f6c", new DateTime(2020, 5, 5, 17, 11, 11, 182, DateTimeKind.Local).AddTicks(780), "You can't quantify the matrix without calculating the redundant ADP matrix!", 137 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 184, "#391822", new DateTime(2020, 12, 10, 21, 18, 24, 842, DateTimeKind.Local).AddTicks(8765), "Try to program the SAS application, maybe it will program the online application!", 134 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 919, "#294923", new DateTime(2021, 2, 18, 6, 3, 3, 579, DateTimeKind.Local).AddTicks(7961), "Use the solid state JBOD card, then you can override the solid state card!", 133 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 431, "#401532", new DateTime(2020, 6, 20, 15, 44, 57, 350, DateTimeKind.Local).AddTicks(4822), "Use the auxiliary HTTP port, then you can reboot the auxiliary port!", 133 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 321, "#05316d", new DateTime(2020, 5, 31, 21, 27, 21, 838, DateTimeKind.Local).AddTicks(2873), "If we hack the port, we can get to the SCSI port through the haptic SCSI port!", 133 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 979, "#6a2748", new DateTime(2021, 2, 19, 16, 57, 37, 839, DateTimeKind.Local).AddTicks(3971), "Use the cross-platform RSS sensor, then you can generate the cross-platform sensor!", 132 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 909, "#063f69", new DateTime(2020, 12, 17, 20, 54, 57, 47, DateTimeKind.Local).AddTicks(3387), "We need to index the back-end SMS bandwidth!", 132 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 664, "#751645", new DateTime(2020, 11, 25, 18, 35, 44, 421, DateTimeKind.Local).AddTicks(3330), "Try to synthesize the TCP bandwidth, maybe it will synthesize the 1080p bandwidth!", 132 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 534, "#723c16", new DateTime(2020, 6, 19, 8, 38, 12, 535, DateTimeKind.Local).AddTicks(6835), "You can't connect the microchip without generating the optical JSON microchip!", 132 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 519, "#094e72", new DateTime(2020, 12, 14, 10, 37, 40, 202, DateTimeKind.Local).AddTicks(1726), "If we navigate the pixel, we can get to the IB pixel through the 1080p IB pixel!", 132 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 241, "#2b6226", new DateTime(2020, 8, 31, 5, 53, 40, 914, DateTimeKind.Local).AddTicks(488), "Use the 1080p XSS transmitter, then you can index the 1080p transmitter!", 132 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 439, "#515527", new DateTime(2020, 3, 15, 9, 2, 23, 7, DateTimeKind.Local).AddTicks(5425), "I'll parse the haptic SMTP alarm, that should alarm the SMTP alarm!", 131 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1044, "#455c78", new DateTime(2020, 12, 23, 19, 36, 2, 338, DateTimeKind.Local).AddTicks(520), "You can't parse the driver without overriding the primary SDD driver!", 133 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 265, "#3a7165", new DateTime(2020, 6, 1, 0, 17, 33, 412, DateTimeKind.Local).AddTicks(806), "We need to calculate the redundant THX application!", 137 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 327, "#491263", new DateTime(2020, 3, 27, 3, 23, 15, 456, DateTimeKind.Local).AddTicks(2412), "If we index the sensor, we can get to the SQL sensor through the multi-byte SQL sensor!", 137 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 536, "#794645", new DateTime(2020, 3, 23, 22, 31, 40, 554, DateTimeKind.Local).AddTicks(1927), "You can't override the transmitter without synthesizing the bluetooth CSS transmitter!", 137 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 914, "#307929", new DateTime(2020, 8, 13, 22, 51, 46, 595, DateTimeKind.Local).AddTicks(296), "Use the primary ADP microchip, then you can index the primary microchip!", 142 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 688, "#25297f", new DateTime(2021, 2, 27, 23, 38, 40, 661, DateTimeKind.Local).AddTicks(1302), "Try to program the IB array, maybe it will program the haptic array!", 142 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 584, "#744861", new DateTime(2020, 12, 19, 19, 5, 20, 7, DateTimeKind.Local).AddTicks(5711), "The AI feed is down, compress the online feed so we can compress the AI feed!", 142 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 332, "#4e1e53", new DateTime(2020, 8, 28, 21, 36, 42, 869, DateTimeKind.Local).AddTicks(7832), "We need to calculate the primary AI microchip!", 142 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 151, "#2c4730", new DateTime(2020, 4, 20, 22, 0, 53, 937, DateTimeKind.Local).AddTicks(4100), "Try to bypass the EXE bandwidth, maybe it will bypass the redundant bandwidth!", 142 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 350, "#5d7959", new DateTime(2020, 8, 26, 1, 43, 54, 822, DateTimeKind.Local).AddTicks(8777), "indexing the circuit won't do anything, we need to hack the bluetooth RAM circuit!", 141 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 873, "#745235", new DateTime(2020, 11, 5, 22, 44, 20, 11, DateTimeKind.Local).AddTicks(5017), "We need to hack the digital JSON microchip!", 140 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 818, "#116241", new DateTime(2021, 1, 9, 9, 10, 58, 671, DateTimeKind.Local).AddTicks(9874), "If we hack the capacitor, we can get to the SMS capacitor through the redundant SMS capacitor!", 140 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 815, "#657d2d", new DateTime(2020, 10, 11, 23, 26, 45, 937, DateTimeKind.Local).AddTicks(375), "The JBOD hard drive is down, bypass the multi-byte hard drive so we can bypass the JBOD hard drive!", 140 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 362, "#6c3749", new DateTime(2020, 12, 31, 12, 25, 34, 17, DateTimeKind.Local).AddTicks(9247), "We need to navigate the haptic FTP hard drive!", 140 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 240, "#0a7141", new DateTime(2020, 4, 4, 16, 7, 51, 621, DateTimeKind.Local).AddTicks(1613), "Use the multi-byte FTP application, then you can generate the multi-byte application!", 140 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 226, "#3c4e76", new DateTime(2020, 4, 14, 14, 47, 10, 145, DateTimeKind.Local).AddTicks(312), "You can't program the bandwidth without generating the cross-platform COM bandwidth!", 140 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 216, "#0f0230", new DateTime(2020, 3, 10, 23, 40, 28, 32, DateTimeKind.Local).AddTicks(1914), "Use the bluetooth CSS bandwidth, then you can bypass the bluetooth bandwidth!", 140 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 14, "#3a1256", new DateTime(2020, 5, 2, 1, 4, 56, 727, DateTimeKind.Local).AddTicks(3590), "We need to hack the mobile AGP array!", 140 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 956, "#25162e", new DateTime(2020, 4, 7, 15, 0, 5, 740, DateTimeKind.Local).AddTicks(7597), "You can't hack the interface without calculating the digital TCP interface!", 139 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 483, "#28725d", new DateTime(2020, 6, 17, 7, 12, 44, 202, DateTimeKind.Local).AddTicks(680), "Use the open-source SAS bandwidth, then you can override the open-source bandwidth!", 139 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1115, "#115c75", new DateTime(2020, 10, 19, 18, 23, 14, 854, DateTimeKind.Local).AddTicks(3999), "I'll connect the mobile USB monitor, that should monitor the USB monitor!", 138 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 969, "#704176", new DateTime(2020, 6, 8, 21, 17, 11, 122, DateTimeKind.Local).AddTicks(2872), "I'll synthesize the redundant FTP firewall, that should firewall the FTP firewall!", 138 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 913, "#397800", new DateTime(2020, 5, 16, 22, 9, 55, 926, DateTimeKind.Local).AddTicks(4020), "calculating the pixel won't do anything, we need to override the auxiliary AGP pixel!", 138 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 352, "#57301d", new DateTime(2020, 9, 19, 4, 58, 19, 381, DateTimeKind.Local).AddTicks(5125), "Try to program the JBOD bandwidth, maybe it will program the optical bandwidth!", 138 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 290, "#177f40", new DateTime(2020, 11, 15, 22, 34, 30, 101, DateTimeKind.Local).AddTicks(9038), "We need to hack the digital FTP system!", 138 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 239, "#381951", new DateTime(2020, 9, 3, 11, 56, 13, 305, DateTimeKind.Local).AddTicks(1759), "The SMS alarm is down, bypass the wireless alarm so we can bypass the SMS alarm!", 138 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 1171, "#2f0575", new DateTime(2021, 2, 22, 12, 38, 50, 959, DateTimeKind.Local).AddTicks(4796), "I'll compress the online TCP driver, that should driver the TCP driver!", 137 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 618, "#230355", new DateTime(2020, 7, 24, 21, 47, 16, 172, DateTimeKind.Local).AddTicks(5838), "Use the online SSL array, then you can hack the online array!", 157 });

            migrationBuilder.InsertData(
                table: "Tags",
                columns: new[] { "Id", "Color", "CreatedAt", "Text", "UserId" },
                values: new object[] { 985, "#213470", new DateTime(2020, 10, 6, 11, 52, 47, 442, DateTimeKind.Local).AddTicks(6339), "If we input the program, we can get to the HTTP program through the solid state HTTP program!", 300 });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 202, "Луганськ", 384, "Україна", new DateTime(2021, 1, 16, 21, 19, 25, 17, DateTimeKind.Local).AddTicks(3119), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 319, "Східний Святополк", 637, "Україна", new DateTime(2020, 6, 8, 23, 50, 10, 753, DateTimeKind.Local).AddTicks(166), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 402, "Херсон", 829, "Україна", new DateTime(2020, 8, 27, 1, 34, 26, 788, DateTimeKind.Local).AddTicks(398), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 405, "Південний Любозар", 834, "Україна", new DateTime(2021, 1, 26, 4, 49, 1, 601, DateTimeKind.Local).AddTicks(8676), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 407, "Чернівці", 841, "Україна", new DateTime(2020, 8, 2, 16, 30, 15, 628, DateTimeKind.Local).AddTicks(9290), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 194, "Мелітополь", 374, "Україна", new DateTime(2020, 12, 16, 14, 41, 53, 106, DateTimeKind.Local).AddTicks(2819), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 438, "Південний Михайло", 902, "Україна", new DateTime(2020, 7, 24, 0, 35, 22, 64, DateTimeKind.Local).AddTicks(8799), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 716, "Північний Геннадій", 1448, "Україна", new DateTime(2020, 12, 4, 14, 38, 22, 408, DateTimeKind.Local).AddTicks(9083), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 26, "Західний Дмитро", 47, "Україна", new DateTime(2020, 9, 21, 6, 5, 32, 950, DateTimeKind.Local).AddTicks(6194), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 305, "Східний Горислав", 604, "Україна", new DateTime(2020, 12, 29, 8, 57, 26, 69, DateTimeKind.Local).AddTicks(6833), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 124, "Одеса", 239, "Україна", new DateTime(2020, 8, 18, 21, 39, 11, 249, DateTimeKind.Local).AddTicks(5109), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 136, "Миколаїв", 267, "Україна", new DateTime(2020, 3, 20, 4, 38, 39, 17, DateTimeKind.Local).AddTicks(2785), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 302, "Біла Церква", 594, "Україна", new DateTime(2020, 4, 3, 17, 12, 16, 776, DateTimeKind.Local).AddTicks(6692), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 339, "Східний Назарій", 690, "Україна", new DateTime(2020, 6, 1, 18, 21, 7, 846, DateTimeKind.Local).AddTicks(2840), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 487, "Західний Гарнослав", 986, "Україна", new DateTime(2020, 9, 10, 15, 28, 30, 289, DateTimeKind.Local).AddTicks(3192), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 652, "Північний Вадим", 1300, "Україна", new DateTime(2021, 2, 2, 20, 35, 14, 267, DateTimeKind.Local).AddTicks(8772), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 90, "Західний Ярополк", 173, "Україна", new DateTime(2020, 4, 6, 0, 23, 3, 30, DateTimeKind.Local).AddTicks(8558), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 552, "Бердичів", 1111, "Україна", new DateTime(2020, 5, 14, 2, 40, 44, 412, DateTimeKind.Local).AddTicks(9010), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 626, "Північний Сергій", 1257, "Україна", new DateTime(2020, 11, 1, 8, 51, 52, 496, DateTimeKind.Local).AddTicks(4459), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 699, "Північний Степан", 1401, "Україна", new DateTime(2020, 7, 11, 22, 12, 22, 183, DateTimeKind.Local).AddTicks(9071), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 244, "Південний Алевтин", 464, "Україна", new DateTime(2021, 1, 9, 20, 5, 10, 365, DateTimeKind.Local).AddTicks(9538), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 114, "Північний Тур", 219, "Україна", new DateTime(2020, 5, 18, 1, 13, 28, 831, DateTimeKind.Local).AddTicks(1417), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 218, "Чернігів", 409, "Україна", new DateTime(2020, 11, 4, 19, 47, 56, 733, DateTimeKind.Local).AddTicks(5893), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 703, "Ялта", 1415, "Україна", new DateTime(2020, 10, 26, 13, 3, 34, 310, DateTimeKind.Local).AddTicks(8603), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 301, "Івано-Франківськ", 593, "Україна", new DateTime(2021, 1, 4, 13, 4, 10, 259, DateTimeKind.Local).AddTicks(4556), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 677, "Східний Родіон", 1360, "Україна", new DateTime(2020, 4, 12, 23, 32, 27, 744, DateTimeKind.Local).AddTicks(3305), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 494, "Суми", 995, "Україна", new DateTime(2020, 3, 10, 2, 4, 56, 609, DateTimeKind.Local).AddTicks(9191), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 534, "Південний Дмитро", 1073, "Україна", new DateTime(2020, 5, 11, 21, 32, 56, 668, DateTimeKind.Local).AddTicks(4324), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 662, "Північний Анастас", 1322, "Україна", new DateTime(2020, 3, 9, 16, 49, 48, 335, DateTimeKind.Local).AddTicks(591), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 89, "Запоріжжя", 172, "Україна", new DateTime(2020, 11, 17, 23, 9, 8, 483, DateTimeKind.Local).AddTicks(5068), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 57, "Херсон", 112, "Україна", new DateTime(2020, 7, 31, 0, 44, 50, 230, DateTimeKind.Local).AddTicks(7221), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 97, "Луцьк", 188, "Україна", new DateTime(2020, 12, 24, 5, 5, 42, 635, DateTimeKind.Local).AddTicks(3893), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 233, "Житомир", 441, "Україна", new DateTime(2020, 12, 7, 22, 25, 7, 240, DateTimeKind.Local).AddTicks(5321), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 399, "Лисичанськ", 822, "Україна", new DateTime(2020, 11, 8, 15, 52, 22, 311, DateTimeKind.Local).AddTicks(2575), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 501, "Керч", 1008, "Україна", new DateTime(2020, 8, 6, 14, 15, 37, 750, DateTimeKind.Local).AddTicks(2529), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 529, "Рівне", 1068, "Україна", new DateTime(2020, 11, 9, 20, 33, 13, 181, DateTimeKind.Local).AddTicks(1446), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 81, "Південний Остап", 161, "Україна", new DateTime(2020, 11, 20, 9, 42, 24, 40, DateTimeKind.Local).AddTicks(4603), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 307, "Лисичанськ", 613, "Україна", new DateTime(2020, 5, 10, 1, 26, 32, 542, DateTimeKind.Local).AddTicks(3511), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 452, "Західний Олесь", 924, "Україна", new DateTime(2020, 8, 10, 13, 38, 13, 25, DateTimeKind.Local).AddTicks(1481), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 143, "Південний Денис", 278, "Україна", new DateTime(2020, 8, 8, 14, 18, 8, 128, DateTimeKind.Local).AddTicks(1948), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 347, "Бердичів", 713, "Україна", new DateTime(2020, 8, 3, 22, 31, 46, 499, DateTimeKind.Local).AddTicks(1887), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 417, "Ужгород", 859, "Україна", new DateTime(2020, 6, 6, 10, 35, 17, 542, DateTimeKind.Local).AddTicks(822), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 619, "Сімферополь", 1246, "Україна", new DateTime(2020, 9, 2, 7, 43, 31, 617, DateTimeKind.Local).AddTicks(2229), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 74, "Суми", 144, "Україна", new DateTime(2021, 1, 22, 14, 25, 32, 154, DateTimeKind.Local).AddTicks(2468), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 56, "Північний Златомир", 111, "Україна", new DateTime(2021, 1, 3, 23, 40, 39, 49, DateTimeKind.Local).AddTicks(2702), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 193, "Конотоп", 373, "Україна", new DateTime(2020, 9, 18, 10, 0, 37, 214, DateTimeKind.Local).AddTicks(145), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 453, "Північний Захарій", 925, "Україна", new DateTime(2020, 5, 7, 7, 33, 43, 85, DateTimeKind.Local).AddTicks(4297), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 181, "Бердянськ", 349, "Україна", new DateTime(2020, 4, 2, 4, 12, 36, 142, DateTimeKind.Local).AddTicks(6422), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 345, "Південний Мирослав", 708, "Україна", new DateTime(2020, 11, 24, 2, 10, 7, 715, DateTimeKind.Local).AddTicks(268), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 346, "Східний Максим", 709, "Україна", new DateTime(2020, 12, 21, 16, 10, 21, 633, DateTimeKind.Local).AddTicks(5611), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 163, "Західний Любозар", 309, "Україна", new DateTime(2021, 2, 7, 12, 6, 57, 785, DateTimeKind.Local).AddTicks(3190), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 299, "Північний Денис", 587, "Україна", new DateTime(2020, 11, 10, 13, 59, 48, 464, DateTimeKind.Local).AddTicks(2276), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 394, "Херсон", 813, "Україна", new DateTime(2020, 6, 10, 5, 35, 54, 817, DateTimeKind.Local).AddTicks(2790), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 710, "Кіровоград", 1432, "Україна", new DateTime(2020, 11, 29, 2, 43, 30, 540, DateTimeKind.Local).AddTicks(7163), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 37, "Мелітополь", 70, "Україна", new DateTime(2020, 4, 5, 3, 13, 38, 465, DateTimeKind.Local).AddTicks(5984), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 512, "Східний Тур", 1030, "Україна", new DateTime(2020, 6, 25, 23, 18, 24, 374, DateTimeKind.Local).AddTicks(8887), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 666, "Дніпродзержинськ", 1329, "Україна", new DateTime(2020, 6, 23, 1, 54, 32, 798, DateTimeKind.Local).AddTicks(1317), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 434, "Горлівка", 892, "Україна", new DateTime(2021, 2, 26, 15, 17, 17, 665, DateTimeKind.Local).AddTicks(4576), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 632, "Нікополь", 1268, "Україна", new DateTime(2020, 11, 5, 11, 17, 26, 700, DateTimeKind.Local).AddTicks(6555), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 330, "Кіровоград", 659, "Україна", new DateTime(2020, 10, 2, 9, 1, 45, 629, DateTimeKind.Local).AddTicks(1039), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 583, "Маріуполь", 1167, "Україна", new DateTime(2020, 3, 30, 9, 45, 19, 304, DateTimeKind.Local).AddTicks(8752), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 674, "Хмельницький", 1357, "Україна", new DateTime(2020, 9, 18, 11, 16, 38, 774, DateTimeKind.Local).AddTicks(2282), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 729, "Північний Ігор", 1479, "Україна", new DateTime(2020, 12, 13, 20, 47, 38, 243, DateTimeKind.Local).AddTicks(233), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 35, "Черкаси", 64, "Україна", new DateTime(2020, 11, 23, 8, 27, 36, 869, DateTimeKind.Local).AddTicks(7941), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 377, "Павлоград", 781, "Україна", new DateTime(2021, 1, 5, 19, 49, 1, 464, DateTimeKind.Local).AddTicks(2114), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 391, "Східний Архип", 808, "Україна", new DateTime(2020, 4, 14, 5, 41, 24, 232, DateTimeKind.Local).AddTicks(4501), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 499, "Західний Кий", 1003, "Україна", new DateTime(2020, 10, 26, 4, 43, 31, 531, DateTimeKind.Local).AddTicks(1849), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 249, "Південний Боримисл", 472, "Україна", new DateTime(2020, 7, 27, 23, 58, 40, 72, DateTimeKind.Local).AddTicks(6210), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 465, "Східний Звенигор", 942, "Україна", new DateTime(2020, 12, 10, 14, 28, 20, 758, DateTimeKind.Local).AddTicks(5023), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 461, "Сімферополь", 937, "Україна", new DateTime(2020, 7, 22, 23, 8, 40, 631, DateTimeKind.Local).AddTicks(6824), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 668, "Південний Доброслав", 1337, "Україна", new DateTime(2020, 10, 9, 3, 15, 59, 206, DateTimeKind.Local).AddTicks(9258), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 157, "Чернівці", 301, "Україна", new DateTime(2020, 3, 6, 20, 35, 7, 922, DateTimeKind.Local).AddTicks(3143), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 234, "Південний Корній", 442, "Україна", new DateTime(2020, 7, 5, 12, 12, 38, 605, DateTimeKind.Local).AddTicks(32), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 395, "Західний Борис", 814, "Україна", new DateTime(2020, 8, 5, 3, 49, 34, 83, DateTimeKind.Local).AddTicks(5529), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 432, "Умань", 888, "Україна", new DateTime(2020, 8, 20, 10, 18, 32, 81, DateTimeKind.Local).AddTicks(9170), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 5, "Мукачеве", 13, "Україна", new DateTime(2020, 7, 26, 10, 30, 43, 735, DateTimeKind.Local).AddTicks(4297), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 385, "Мелітополь", 796, "Україна", new DateTime(2020, 4, 7, 1, 25, 38, 674, DateTimeKind.Local).AddTicks(2877), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 582, "Луцьк", 1165, "Україна", new DateTime(2020, 9, 4, 7, 30, 18, 597, DateTimeKind.Local).AddTicks(2071), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 3, "Східний Костянтин", 5, "Україна", new DateTime(2021, 1, 7, 11, 41, 46, 278, DateTimeKind.Local).AddTicks(1786), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 96, "Західний Горимир", 187, "Україна", new DateTime(2021, 1, 4, 2, 46, 50, 896, DateTimeKind.Local).AddTicks(5448), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 295, "Мукачеве", 581, "Україна", new DateTime(2020, 12, 29, 18, 52, 26, 356, DateTimeKind.Local).AddTicks(3862), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 354, "Умань", 723, "Україна", new DateTime(2020, 10, 9, 5, 13, 49, 358, DateTimeKind.Local).AddTicks(4597), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 428, "Східний Геннадій", 878, "Україна", new DateTime(2020, 12, 21, 21, 3, 54, 657, DateTimeKind.Local).AddTicks(1907), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 440, "Харків", 905, "Україна", new DateTime(2020, 9, 24, 6, 28, 8, 731, DateTimeKind.Local).AddTicks(8698), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 493, "Західний Павло", 994, "Україна", new DateTime(2020, 10, 16, 14, 58, 1, 242, DateTimeKind.Local).AddTicks(634), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 268, "Східний Тарас", 509, "Україна", new DateTime(2020, 11, 9, 23, 46, 14, 314, DateTimeKind.Local).AddTicks(9571), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 637, "Луцьк", 1278, "Україна", new DateTime(2021, 1, 23, 10, 44, 50, 272, DateTimeKind.Local).AddTicks(4291), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 137, "Харків", 268, "Україна", new DateTime(2020, 12, 17, 12, 34, 19, 986, DateTimeKind.Local).AddTicks(444), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 316, "Вінниця", 626, "Україна", new DateTime(2020, 7, 31, 17, 11, 25, 186, DateTimeKind.Local).AddTicks(6843), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 369, "Лисичанськ", 761, "Україна", new DateTime(2020, 3, 7, 1, 29, 28, 908, DateTimeKind.Local).AddTicks(1910), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 196, "Кривий Ріг", 376, "Україна", new DateTime(2020, 6, 1, 13, 15, 36, 45, DateTimeKind.Local).AddTicks(6945), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 689, "Павлоград", 1384, "Україна", new DateTime(2020, 7, 8, 1, 1, 35, 404, DateTimeKind.Local).AddTicks(7143), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 102, "Ізмаїл", 199, "Україна", new DateTime(2020, 12, 27, 19, 47, 17, 970, DateTimeKind.Local).AddTicks(4985), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 585, "Північний Добромисл", 1175, "Україна", new DateTime(2020, 3, 18, 19, 24, 24, 915, DateTimeKind.Local).AddTicks(379), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 621, "Одеса", 1250, "Україна", new DateTime(2020, 4, 18, 17, 6, 9, 480, DateTimeKind.Local).AddTicks(5723), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 155, "Алчевськ", 298, "Україна", new DateTime(2021, 1, 1, 9, 8, 13, 424, DateTimeKind.Local).AddTicks(1662), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 464, "Західний Єремій", 941, "Україна", new DateTime(2020, 9, 20, 6, 11, 8, 49, DateTimeKind.Local).AddTicks(9295), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 645, "Артемівськ", 1286, "Україна", new DateTime(2020, 8, 29, 18, 49, 36, 387, DateTimeKind.Local).AddTicks(4615), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 705, "Південний Юхим", 1419, "Україна", new DateTime(2020, 9, 21, 7, 25, 34, 348, DateTimeKind.Local).AddTicks(8416), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 490, "Алчевськ", 989, "Україна", new DateTime(2020, 7, 11, 5, 21, 3, 152, DateTimeKind.Local).AddTicks(5582), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 403, "Північний Гнат", 830, "Україна", new DateTime(2021, 1, 26, 13, 36, 56, 498, DateTimeKind.Local).AddTicks(6635), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 433, "Чернівці", 890, "Україна", new DateTime(2020, 6, 28, 4, 39, 29, 945, DateTimeKind.Local).AddTicks(2556), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 475, "Східний Микита", 963, "Україна", new DateTime(2020, 8, 11, 23, 43, 24, 507, DateTimeKind.Local).AddTicks(9982), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 618, "Південний Златомир", 1242, "Україна", new DateTime(2020, 9, 9, 0, 6, 39, 672, DateTimeKind.Local).AddTicks(7817), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 104, "Тернопіль", 201, "Україна", new DateTime(2021, 1, 6, 7, 21, 20, 58, DateTimeKind.Local).AddTicks(3593), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 140, "Південний Георгій", 273, "Україна", new DateTime(2020, 7, 27, 20, 39, 11, 59, DateTimeKind.Local).AddTicks(2613), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 656, "Павлоград", 1316, "Україна", new DateTime(2020, 9, 14, 5, 29, 27, 459, DateTimeKind.Local).AddTicks(1370), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 711, "Західний Листвич", 1434, "Україна", new DateTime(2020, 10, 15, 10, 1, 59, 296, DateTimeKind.Local).AddTicks(2440), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 325, "Східний Ладомир", 652, "Україна", new DateTime(2021, 2, 17, 15, 52, 59, 127, DateTimeKind.Local).AddTicks(840), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 442, "Західний Немир", 907, "Україна", new DateTime(2020, 6, 18, 7, 5, 57, 306, DateTimeKind.Local).AddTicks(2160), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 681, "Сімферополь", 1369, "Україна", new DateTime(2020, 6, 2, 11, 52, 34, 440, DateTimeKind.Local).AddTicks(9498), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 103, "Північний Корній", 200, "Україна", new DateTime(2020, 11, 7, 21, 12, 55, 243, DateTimeKind.Local).AddTicks(1828), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 472, "Артемівськ", 953, "Україна", new DateTime(2020, 5, 11, 10, 0, 59, 204, DateTimeKind.Local).AddTicks(2573), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 474, "Східний Горислав", 960, "Україна", new DateTime(2020, 12, 20, 1, 1, 34, 554, DateTimeKind.Local).AddTicks(9762), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 288, "Донецьк", 567, "Україна", new DateTime(2020, 6, 25, 6, 19, 6, 315, DateTimeKind.Local).AddTicks(6027), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 441, "Миколаїв", 906, "Україна", new DateTime(2020, 12, 10, 16, 24, 17, 484, DateTimeKind.Local).AddTicks(61), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 203, "Західний Любомир", 385, "Україна", new DateTime(2020, 6, 6, 4, 13, 8, 352, DateTimeKind.Local).AddTicks(104), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 247, "Одеса", 469, "Україна", new DateTime(2020, 5, 11, 22, 24, 19, 420, DateTimeKind.Local).AddTicks(5142), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 312, "Ізмаїл", 621, "Україна", new DateTime(2020, 5, 30, 12, 51, 9, 632, DateTimeKind.Local).AddTicks(2061), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 418, "Південний Доброслав", 860, "Україна", new DateTime(2020, 5, 17, 10, 8, 46, 982, DateTimeKind.Local).AddTicks(2152), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 737, "Ужгород", 1494, "Україна", new DateTime(2020, 7, 20, 8, 5, 13, 451, DateTimeKind.Local).AddTicks(6171), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 254, "Рівне", 480, "Україна", new DateTime(2020, 11, 21, 7, 35, 22, 259, DateTimeKind.Local).AddTicks(5014), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 457, "Південний Любодар", 932, "Україна", new DateTime(2020, 4, 19, 8, 38, 39, 557, DateTimeKind.Local).AddTicks(200), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 698, "Нікополь", 1399, "Україна", new DateTime(2021, 2, 15, 5, 1, 36, 243, DateTimeKind.Local).AddTicks(8122), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 217, "Західний Борис", 408, "Україна", new DateTime(2021, 2, 24, 14, 17, 32, 660, DateTimeKind.Local).AddTicks(8967), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 275, "Північний Мирон", 529, "Україна", new DateTime(2020, 10, 31, 12, 17, 50, 483, DateTimeKind.Local).AddTicks(6126), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 286, "Запоріжжя", 563, "Україна", new DateTime(2020, 12, 26, 4, 29, 43, 476, DateTimeKind.Local).AddTicks(9989), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 343, "Конотоп", 703, "Україна", new DateTime(2020, 7, 23, 12, 41, 58, 68, DateTimeKind.Local).AddTicks(7664), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 543, "Західний Тур", 1092, "Україна", new DateTime(2020, 6, 11, 20, 10, 8, 538, DateTimeKind.Local).AddTicks(4321), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 68, "Південний Листвич", 130, "Україна", new DateTime(2020, 9, 23, 18, 16, 17, 815, DateTimeKind.Local).AddTicks(8775), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 281, "Донецьк", 545, "Україна", new DateTime(2020, 7, 1, 8, 30, 36, 28, DateTimeKind.Local).AddTicks(6859), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 661, "Східний Данило", 1321, "Україна", new DateTime(2020, 11, 23, 20, 59, 57, 120, DateTimeKind.Local).AddTicks(5608), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 71, "Олександрія", 140, "Україна", new DateTime(2020, 5, 23, 7, 4, 33, 744, DateTimeKind.Local).AddTicks(398), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 446, "Конотоп", 916, "Україна", new DateTime(2021, 2, 14, 12, 1, 39, 547, DateTimeKind.Local).AddTicks(8911), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 411, "Бердичів", 847, "Україна", new DateTime(2021, 3, 1, 19, 55, 58, 252, DateTimeKind.Local).AddTicks(9396), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 601, "Західний Кузьма", 1206, "Україна", new DateTime(2020, 7, 8, 5, 52, 52, 443, DateTimeKind.Local).AddTicks(3813), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 640, "Слов’янськ", 1281, "Україна", new DateTime(2020, 10, 29, 1, 8, 19, 214, DateTimeKind.Local).AddTicks(5088), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 728, "Керч", 1478, "Україна", new DateTime(2021, 2, 22, 23, 53, 8, 461, DateTimeKind.Local).AddTicks(9941), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 318, "Лисичанськ", 633, "Україна", new DateTime(2020, 10, 13, 19, 56, 23, 597, DateTimeKind.Local).AddTicks(5874), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 33, "Керч", 61, "Україна", new DateTime(2020, 10, 30, 23, 26, 20, 245, DateTimeKind.Local).AddTicks(3226), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 422, "Керч", 867, "Україна", new DateTime(2020, 6, 30, 8, 7, 5, 244, DateTimeKind.Local).AddTicks(8150), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 468, "Дніпродзержинськ", 946, "Україна", new DateTime(2021, 1, 17, 13, 17, 56, 342, DateTimeKind.Local).AddTicks(377), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 292, "Донецьк", 577, "Україна", new DateTime(2020, 6, 21, 14, 52, 0, 478, DateTimeKind.Local).AddTicks(1474), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 336, "Північний Гордій", 677, "Україна", new DateTime(2020, 7, 24, 19, 1, 29, 497, DateTimeKind.Local).AddTicks(9516), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 241, "Східний Дарій", 456, "Україна", new DateTime(2021, 2, 9, 6, 30, 10, 395, DateTimeKind.Local).AddTicks(7070), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 455, "Кіровоград", 929, "Україна", new DateTime(2021, 2, 1, 23, 58, 47, 769, DateTimeKind.Local).AddTicks(3054), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 13, "Черкаси", 24, "Україна", new DateTime(2020, 5, 6, 7, 22, 6, 463, DateTimeKind.Local).AddTicks(8016), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 308, "Керч", 615, "Україна", new DateTime(2021, 2, 4, 19, 44, 37, 539, DateTimeKind.Local).AddTicks(8801), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 400, "Західний Геннадій", 823, "Україна", new DateTime(2020, 6, 21, 11, 16, 45, 158, DateTimeKind.Local).AddTicks(5461), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 638, "Суми", 1279, "Україна", new DateTime(2020, 9, 8, 23, 54, 56, 256, DateTimeKind.Local).AddTicks(8834), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 216, "Кіровоград", 406, "Україна", new DateTime(2020, 9, 27, 19, 37, 8, 826, DateTimeKind.Local).AddTicks(6485), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 165, "Дніпропетровськ", 320, "Україна", new DateTime(2020, 10, 30, 1, 28, 42, 820, DateTimeKind.Local).AddTicks(2288), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 323, "Східний Дмитро", 645, "Україна", new DateTime(2021, 2, 19, 3, 25, 26, 668, DateTimeKind.Local).AddTicks(3032), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 341, "Північний Боримир", 701, "Україна", new DateTime(2020, 6, 26, 6, 30, 34, 608, DateTimeKind.Local).AddTicks(6039), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 412, "Західний Буйтур", 849, "Україна", new DateTime(2020, 3, 19, 15, 57, 46, 129, DateTimeKind.Local).AddTicks(6534), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 633, "Південний Велемир", 1271, "Україна", new DateTime(2020, 8, 18, 20, 38, 20, 361, DateTimeKind.Local).AddTicks(7486), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 358, "Красний Луч", 734, "Україна", new DateTime(2020, 3, 17, 9, 25, 32, 86, DateTimeKind.Local).AddTicks(1469), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 450, "Західний Боримисл", 922, "Україна", new DateTime(2020, 9, 2, 9, 23, 23, 443, DateTimeKind.Local).AddTicks(1130), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 250, "Східний Мирон", 473, "Україна", new DateTime(2020, 12, 9, 6, 25, 33, 774, DateTimeKind.Local).AddTicks(8131), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 128, "Миколаїв", 245, "Україна", new DateTime(2020, 7, 19, 12, 26, 27, 375, DateTimeKind.Local).AddTicks(6876), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 83, "Донецьк", 163, "Україна", new DateTime(2020, 10, 21, 9, 42, 33, 824, DateTimeKind.Local).AddTicks(1652), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 22, "Одеса", 42, "Україна", new DateTime(2020, 3, 25, 16, 4, 55, 386, DateTimeKind.Local).AddTicks(8161), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 360, "Східний Звенислав", 737, "Україна", new DateTime(2020, 5, 10, 11, 15, 6, 464, DateTimeKind.Local).AddTicks(5793), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 425, "Хмельницький", 872, "Україна", new DateTime(2020, 10, 1, 6, 50, 52, 229, DateTimeKind.Local).AddTicks(7597), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 495, "Східний Олелько", 997, "Україна", new DateTime(2021, 2, 6, 1, 49, 2, 870, DateTimeKind.Local).AddTicks(5372), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 51, "Південний Віктор", 102, "Україна", new DateTime(2020, 3, 20, 22, 0, 58, 531, DateTimeKind.Local).AddTicks(48), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 261, "Східний Подолян", 495, "Україна", new DateTime(2020, 6, 15, 1, 48, 0, 743, DateTimeKind.Local).AddTicks(8485), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 289, "Горлівка", 574, "Україна", new DateTime(2020, 5, 19, 5, 2, 47, 725, DateTimeKind.Local).AddTicks(2309), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 429, "Західний Братислав", 879, "Україна", new DateTime(2020, 3, 13, 23, 36, 34, 118, DateTimeKind.Local).AddTicks(1270), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 240, "Горлівка", 453, "Україна", new DateTime(2020, 9, 21, 10, 5, 3, 741, DateTimeKind.Local).AddTicks(578), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 313, "Південний Руслан", 623, "Україна", new DateTime(2021, 1, 13, 6, 4, 12, 112, DateTimeKind.Local).AddTicks(4174), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 462, "Східний Руслан", 939, "Україна", new DateTime(2020, 10, 6, 19, 22, 2, 162, DateTimeKind.Local).AddTicks(69), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 423, "Єнакієве", 868, "Україна", new DateTime(2020, 11, 18, 10, 36, 52, 176, DateTimeKind.Local).AddTicks(813), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 31, "Ужгород", 58, "Україна", new DateTime(2020, 9, 15, 23, 15, 59, 827, DateTimeKind.Local).AddTicks(2354), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 304, "Східний Аврелій", 601, "Україна", new DateTime(2020, 5, 28, 3, 45, 18, 225, DateTimeKind.Local).AddTicks(1575), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 535, "Західний Радим", 1076, "Україна", new DateTime(2020, 6, 27, 0, 30, 57, 876, DateTimeKind.Local).AddTicks(3691), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 723, "Західний Афанасій", 1468, "Україна", new DateTime(2020, 3, 26, 12, 20, 58, 414, DateTimeKind.Local).AddTicks(2691), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 726, "Бердянськ", 1475, "Україна", new DateTime(2020, 8, 27, 9, 46, 22, 67, DateTimeKind.Local).AddTicks(3693), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 38, "Західний Олексій", 71, "Україна", new DateTime(2020, 9, 30, 12, 19, 44, 939, DateTimeKind.Local).AddTicks(270), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 50, "Східний Сніжан", 99, "Україна", new DateTime(2020, 11, 13, 23, 54, 44, 130, DateTimeKind.Local).AddTicks(8343), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 459, "Вінниця", 934, "Україна", new DateTime(2020, 8, 13, 7, 57, 43, 833, DateTimeKind.Local).AddTicks(7969), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 715, "Красний Луч", 1446, "Україна", new DateTime(2021, 1, 9, 19, 52, 51, 987, DateTimeKind.Local).AddTicks(4326), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 516, "Севастополь", 1040, "Україна", new DateTime(2020, 5, 2, 20, 21, 43, 607, DateTimeKind.Local).AddTicks(9464), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 642, "Бровари", 1283, "Україна", new DateTime(2020, 12, 6, 10, 32, 25, 978, DateTimeKind.Local).AddTicks(6031), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 736, "Східний Мусій", 1493, "Україна", new DateTime(2020, 5, 22, 12, 45, 27, 541, DateTimeKind.Local).AddTicks(3891), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 623, "Мукачеве", 1254, "Україна", new DateTime(2020, 7, 5, 23, 52, 40, 899, DateTimeKind.Local).AddTicks(4564), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 52, "Черкаси", 103, "Україна", new DateTime(2020, 12, 20, 9, 23, 29, 290, DateTimeKind.Local).AddTicks(2838), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 101, "Бердянськ", 196, "Україна", new DateTime(2020, 5, 16, 7, 49, 54, 288, DateTimeKind.Local).AddTicks(4358), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 371, "Південний Яромир", 763, "Україна", new DateTime(2020, 4, 1, 9, 10, 35, 581, DateTimeKind.Local).AddTicks(5269), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 484, "Північний Кий", 982, "Україна", new DateTime(2020, 12, 23, 22, 25, 54, 800, DateTimeKind.Local).AddTicks(2960), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 513, "Луцьк", 1033, "Україна", new DateTime(2020, 10, 29, 16, 21, 0, 312, DateTimeKind.Local).AddTicks(4927), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 310, "Дніпропетровськ", 618, "Україна", new DateTime(2021, 2, 18, 11, 0, 40, 867, DateTimeKind.Local).AddTicks(9879), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 739, "Південний Братислав", 1500, "Україна", new DateTime(2020, 11, 15, 23, 17, 14, 456, DateTimeKind.Local).AddTicks(3495), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 166, "Чернівці", 324, "Україна", new DateTime(2020, 6, 3, 23, 18, 30, 973, DateTimeKind.Local).AddTicks(8868), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 591, "Південний Звенимир", 1187, "Україна", new DateTime(2020, 12, 16, 9, 11, 18, 627, DateTimeKind.Local).AddTicks(1183), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 714, "Артемівськ", 1444, "Україна", new DateTime(2020, 11, 9, 16, 47, 43, 437, DateTimeKind.Local).AddTicks(6123), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 235, "Олександрія", 443, "Україна", new DateTime(2020, 11, 24, 17, 18, 38, 916, DateTimeKind.Local).AddTicks(8609), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 398, "Південний Святополк", 818, "Україна", new DateTime(2020, 11, 20, 7, 19, 18, 5, DateTimeKind.Local).AddTicks(3051), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 463, "Біла Церква", 940, "Україна", new DateTime(2020, 3, 24, 1, 31, 59, 544, DateTimeKind.Local).AddTicks(966), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 565, "Мелітополь", 1131, "Україна", new DateTime(2020, 4, 16, 0, 49, 27, 534, DateTimeKind.Local).AddTicks(5118), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 574, "Харків", 1151, "Україна", new DateTime(2020, 4, 26, 5, 14, 0, 235, DateTimeKind.Local).AddTicks(8428), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 18, "Північний Маркіян", 34, "Україна", new DateTime(2020, 7, 29, 10, 15, 43, 913, DateTimeKind.Local).AddTicks(3450), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 482, "Суми", 975, "Україна", new DateTime(2020, 5, 17, 13, 41, 31, 648, DateTimeKind.Local).AddTicks(4596), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 129, "Східний Мирослав", 249, "Україна", new DateTime(2021, 2, 10, 3, 58, 51, 88, DateTimeKind.Local).AddTicks(1682), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 156, "Луганськ", 300, "Україна", new DateTime(2020, 5, 25, 21, 47, 1, 488, DateTimeKind.Local).AddTicks(3288), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 4, "Південний Велемир", 6, "Україна", new DateTime(2020, 9, 29, 22, 18, 36, 28, DateTimeKind.Local).AddTicks(9094), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 230, "Західний Роман", 436, "Україна", new DateTime(2020, 11, 12, 12, 23, 35, 420, DateTimeKind.Local).AddTicks(1645), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 540, "Красний Луч", 1088, "Україна", new DateTime(2020, 7, 14, 9, 29, 31, 761, DateTimeKind.Local).AddTicks(3263), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 252, "Кривий Ріг", 475, "Україна", new DateTime(2020, 4, 20, 21, 55, 29, 584, DateTimeKind.Local).AddTicks(9020), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 492, "Ізмаїл", 992, "Україна", new DateTime(2020, 7, 16, 5, 19, 36, 948, DateTimeKind.Local).AddTicks(442), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 178, "Дніпродзержинськ", 342, "Україна", new DateTime(2021, 1, 10, 14, 19, 22, 356, DateTimeKind.Local).AddTicks(1192), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 696, "Ізмаїл", 1396, "Україна", new DateTime(2020, 11, 18, 17, 45, 24, 177, DateTimeKind.Local).AddTicks(2271), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 1, "Ізмаїл", 2, "Україна", new DateTime(2020, 7, 19, 20, 59, 49, 492, DateTimeKind.Local).AddTicks(3219), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 152, "Південний Віталій", 291, "Україна", new DateTime(2021, 1, 17, 13, 37, 3, 583, DateTimeKind.Local).AddTicks(8153), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 172, "Західний Родіон", 330, "Україна", new DateTime(2020, 9, 2, 7, 24, 7, 395, DateTimeKind.Local).AddTicks(543), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 413, "Одеса", 850, "Україна", new DateTime(2021, 1, 4, 23, 0, 11, 930, DateTimeKind.Local).AddTicks(5557), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 246, "Слов’янськ", 468, "Україна", new DateTime(2021, 2, 5, 7, 21, 0, 921, DateTimeKind.Local).AddTicks(588), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 352, "Сєвєродонецьк", 720, "Україна", new DateTime(2020, 10, 28, 10, 31, 25, 192, DateTimeKind.Local).AddTicks(4109), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 551, "Єнакієве", 1110, "Україна", new DateTime(2020, 8, 14, 10, 8, 49, 804, DateTimeKind.Local).AddTicks(6399), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 712, "Східний Марко", 1438, "Україна", new DateTime(2020, 6, 11, 14, 22, 25, 602, DateTimeKind.Local).AddTicks(436), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 204, "Севастополь", 386, "Україна", new DateTime(2020, 11, 20, 19, 51, 52, 261, DateTimeKind.Local).AddTicks(221), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 426, "Західний Орхип", 873, "Україна", new DateTime(2020, 5, 23, 10, 17, 10, 136, DateTimeKind.Local).AddTicks(9620), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 121, "Лисичанськ", 233, "Україна", new DateTime(2020, 11, 29, 0, 30, 24, 180, DateTimeKind.Local).AddTicks(9456), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 201, "Херсон", 383, "Україна", new DateTime(2020, 9, 6, 23, 43, 6, 210, DateTimeKind.Local).AddTicks(7033), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 227, "Південний Доброслав", 428, "Україна", new DateTime(2020, 4, 26, 15, 42, 23, 934, DateTimeKind.Local).AddTicks(6085), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 338, "Донецьк", 685, "Україна", new DateTime(2020, 10, 30, 19, 1, 10, 591, DateTimeKind.Local).AddTicks(9692), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 72, "Вінниця", 142, "Україна", new DateTime(2020, 11, 5, 13, 39, 28, 457, DateTimeKind.Local).AddTicks(7403), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 697, "Східний Ладо", 1397, "Україна", new DateTime(2020, 8, 6, 5, 2, 28, 850, DateTimeKind.Local).AddTicks(6833), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 456, "Кривий Ріг", 931, "Україна", new DateTime(2020, 10, 26, 4, 35, 49, 258, DateTimeKind.Local).AddTicks(8517), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 77, "Суми", 147, "Україна", new DateTime(2020, 6, 16, 14, 41, 35, 746, DateTimeKind.Local).AddTicks(7021), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 381, "Південний Олександр", 787, "Україна", new DateTime(2020, 3, 11, 18, 17, 16, 805, DateTimeKind.Local).AddTicks(4958), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 620, "Західний Ян", 1248, "Україна", new DateTime(2020, 10, 29, 23, 39, 46, 413, DateTimeKind.Local).AddTicks(9153), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 94, "Нікополь", 184, "Україна", new DateTime(2021, 2, 5, 17, 22, 39, 128, DateTimeKind.Local).AddTicks(9786), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 673, "Східний Златомир", 1355, "Україна", new DateTime(2020, 7, 8, 2, 59, 49, 861, DateTimeKind.Local).AddTicks(8210), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 693, "Північний Любомир", 1389, "Україна", new DateTime(2021, 2, 28, 8, 56, 5, 930, DateTimeKind.Local).AddTicks(8678), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 139, "Західний Мстислав", 272, "Україна", new DateTime(2020, 8, 7, 16, 33, 21, 111, DateTimeKind.Local).AddTicks(8123), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 415, "Чернівці", 853, "Україна", new DateTime(2021, 2, 4, 19, 33, 38, 679, DateTimeKind.Local).AddTicks(506), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 609, "Східний Сніжан", 1228, "Україна", new DateTime(2020, 5, 5, 9, 42, 1, 110, DateTimeKind.Local).AddTicks(8870), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 505, "Кам’янець-Подільський", 1018, "Україна", new DateTime(2020, 9, 2, 17, 17, 58, 17, DateTimeKind.Local).AddTicks(6744), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 635, "Східний Любодар", 1276, "Україна", new DateTime(2020, 3, 4, 17, 33, 45, 120, DateTimeKind.Local).AddTicks(404), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 69, "Північний Олелько", 136, "Україна", new DateTime(2020, 12, 16, 18, 39, 18, 542, DateTimeKind.Local).AddTicks(9346), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 525, "Південний Сергій", 1062, "Україна", new DateTime(2020, 3, 10, 10, 48, 39, 349, DateTimeKind.Local).AddTicks(1398), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 709, "Східний Мар’ян", 1429, "Україна", new DateTime(2021, 1, 18, 12, 22, 10, 493, DateTimeKind.Local).AddTicks(8248), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 108, "Північний Іван", 211, "Україна", new DateTime(2020, 3, 30, 15, 48, 32, 55, DateTimeKind.Local).AddTicks(6291), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 617, "Західний Аскольд", 1240, "Україна", new DateTime(2020, 10, 22, 16, 27, 53, 241, DateTimeKind.Local).AddTicks(5817), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 629, "Північний Зоремир", 1263, "Україна", new DateTime(2020, 6, 15, 12, 31, 23, 365, DateTimeKind.Local).AddTicks(4077), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 11, "Західний Брячислав", 21, "Україна", new DateTime(2020, 7, 7, 9, 27, 3, 789, DateTimeKind.Local).AddTicks(6950), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 237, "Лисичанськ", 449, "Україна", new DateTime(2020, 7, 17, 13, 27, 27, 234, DateTimeKind.Local).AddTicks(9114), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 248, "Біла Церква", 471, "Україна", new DateTime(2020, 12, 26, 2, 54, 55, 646, DateTimeKind.Local).AddTicks(382), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 282, "Східний Денис", 551, "Україна", new DateTime(2020, 5, 18, 2, 25, 47, 425, DateTimeKind.Local).AddTicks(7390), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 437, "Запоріжжя", 901, "Україна", new DateTime(2020, 7, 11, 3, 47, 15, 853, DateTimeKind.Local).AddTicks(4058), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 659, "Північний Ізяслав", 1319, "Україна", new DateTime(2020, 10, 19, 10, 9, 7, 375, DateTimeKind.Local).AddTicks(7878), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 553, "Євпаторія", 1112, "Україна", new DateTime(2020, 7, 9, 20, 3, 8, 154, DateTimeKind.Local).AddTicks(8876), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 340, "Суми", 697, "Україна", new DateTime(2021, 2, 26, 2, 19, 37, 202, DateTimeKind.Local).AddTicks(335), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 199, "Бердянськ", 381, "Україна", new DateTime(2020, 8, 7, 23, 56, 39, 224, DateTimeKind.Local).AddTicks(9936), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 669, "Східний Максим", 1338, "Україна", new DateTime(2020, 12, 17, 4, 11, 34, 558, DateTimeKind.Local).AddTicks(4651), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 706, "Запоріжжя", 1421, "Україна", new DateTime(2020, 4, 6, 11, 10, 14, 330, DateTimeKind.Local).AddTicks(922), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 119, "Західний Омелян", 230, "Україна", new DateTime(2020, 11, 24, 9, 34, 42, 864, DateTimeKind.Local).AddTicks(5987), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 603, "Сєвєродонецьк", 1218, "Україна", new DateTime(2020, 9, 12, 0, 7, 20, 181, DateTimeKind.Local).AddTicks(1892), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 672, "Південний Остап", 1354, "Україна", new DateTime(2020, 10, 3, 17, 11, 22, 826, DateTimeKind.Local).AddTicks(9540), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 367, "Східний Земислав", 755, "Україна", new DateTime(2020, 10, 21, 2, 13, 8, 600, DateTimeKind.Local).AddTicks(2301), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 667, "Південний Арсен", 1331, "Україна", new DateTime(2020, 12, 22, 11, 2, 15, 101, DateTimeKind.Local).AddTicks(1373), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 598, "Павлоград", 1200, "Україна", new DateTime(2020, 6, 6, 8, 54, 26, 109, DateTimeKind.Local).AddTicks(4506), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 625, "Київ", 1256, "Україна", new DateTime(2020, 9, 10, 6, 29, 43, 433, DateTimeKind.Local).AddTicks(8289), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 200, "Північний Мстислав", 382, "Україна", new DateTime(2021, 3, 2, 9, 16, 8, 421, DateTimeKind.Local).AddTicks(6484), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 390, "Південний Архип", 807, "Україна", new DateTime(2020, 12, 16, 8, 31, 36, 630, DateTimeKind.Local).AddTicks(2056), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 47, "Тернопіль", 92, "Україна", new DateTime(2020, 10, 18, 10, 12, 41, 757, DateTimeKind.Local).AddTicks(6860), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 615, "Лисичанськ", 1238, "Україна", new DateTime(2021, 2, 12, 17, 51, 39, 772, DateTimeKind.Local).AddTicks(5097), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 75, "Південний Земислав", 145, "Україна", new DateTime(2020, 4, 24, 22, 25, 20, 396, DateTimeKind.Local).AddTicks(4654), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 122, "Нікополь", 235, "Україна", new DateTime(2020, 10, 6, 15, 33, 3, 152, DateTimeKind.Local).AddTicks(8745), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 506, "Кіровоград", 1020, "Україна", new DateTime(2021, 2, 18, 6, 3, 47, 438, DateTimeKind.Local).AddTicks(5141), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 676, "Західний Болеслав", 1359, "Україна", new DateTime(2020, 11, 8, 5, 37, 35, 44, DateTimeKind.Local).AddTicks(6201), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 695, "Донецьк", 1395, "Україна", new DateTime(2020, 7, 7, 18, 5, 40, 54, DateTimeKind.Local).AddTicks(6764), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 731, "Західний Павло", 1482, "Україна", new DateTime(2020, 7, 3, 10, 8, 0, 453, DateTimeKind.Local).AddTicks(8328), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 245, "Західний Тиміш", 465, "Україна", new DateTime(2020, 11, 20, 11, 4, 18, 187, DateTimeKind.Local).AddTicks(9217), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 466, "Миколаїв", 943, "Україна", new DateTime(2021, 1, 25, 12, 36, 1, 846, DateTimeKind.Local).AddTicks(6756), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 270, "Південний Володислав", 517, "Україна", new DateTime(2020, 6, 15, 23, 2, 24, 840, DateTimeKind.Local).AddTicks(7595), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 263, "Артемівськ", 499, "Україна", new DateTime(2021, 2, 5, 12, 7, 25, 271, DateTimeKind.Local).AddTicks(7231), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 641, "Північний Іван", 1282, "Україна", new DateTime(2020, 12, 29, 23, 19, 31, 350, DateTimeKind.Local).AddTicks(1384), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 42, "Південний Архип", 77, "Україна", new DateTime(2021, 1, 22, 15, 1, 20, 568, DateTimeKind.Local).AddTicks(7005), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 161, "Східний Велемир", 305, "Україна", new DateTime(2020, 7, 14, 19, 2, 16, 847, DateTimeKind.Local).AddTicks(7443), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 359, "Луганськ", 736, "Україна", new DateTime(2021, 1, 14, 15, 51, 58, 369, DateTimeKind.Local).AddTicks(1285), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 448, "Південний Ростислав", 920, "Україна", new DateTime(2020, 11, 13, 21, 16, 30, 748, DateTimeKind.Local).AddTicks(1974), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 686, "Слов’янськ", 1376, "Україна", new DateTime(2020, 6, 8, 3, 18, 34, 68, DateTimeKind.Local).AddTicks(327), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 43, "Бровари", 78, "Україна", new DateTime(2020, 5, 4, 18, 17, 44, 405, DateTimeKind.Local).AddTicks(4587), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 118, "Західний Орест", 229, "Україна", new DateTime(2020, 12, 27, 17, 10, 53, 901, DateTimeKind.Local).AddTicks(5800), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 154, "Східний Захарій", 293, "Україна", new DateTime(2020, 11, 16, 3, 7, 25, 358, DateTimeKind.Local).AddTicks(3887), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 179, "Південний Ізяслав", 345, "Україна", new DateTime(2020, 3, 30, 9, 37, 28, 219, DateTimeKind.Local).AddTicks(4135), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 396, "Східний Родіон", 815, "Україна", new DateTime(2020, 9, 1, 9, 3, 20, 731, DateTimeKind.Local).AddTicks(2440), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 454, "Мукачеве", 927, "Україна", new DateTime(2020, 11, 15, 4, 27, 0, 377, DateTimeKind.Local).AddTicks(7773), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 469, "Черкаси", 947, "Україна", new DateTime(2020, 8, 5, 22, 18, 25, 21, DateTimeKind.Local).AddTicks(5269), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 215, "Горлівка", 404, "Україна", new DateTime(2021, 2, 14, 7, 23, 33, 373, DateTimeKind.Local).AddTicks(1513), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 142, "Бровари", 277, "Україна", new DateTime(2021, 1, 4, 12, 56, 47, 121, DateTimeKind.Local).AddTicks(1493), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 168, "Сєвєродонецьк", 326, "Україна", new DateTime(2020, 7, 15, 4, 52, 10, 157, DateTimeKind.Local).AddTicks(3322), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 600, "Євпаторія", 1205, "Україна", new DateTime(2020, 7, 15, 11, 24, 42, 804, DateTimeKind.Local).AddTicks(3511), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 735, "Західний Макар", 1492, "Україна", new DateTime(2020, 7, 26, 9, 45, 19, 933, DateTimeKind.Local).AddTicks(5311), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 188, "Північний Пилип", 364, "Україна", new DateTime(2021, 2, 9, 12, 43, 12, 770, DateTimeKind.Local).AddTicks(880), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 610, "Сєвєродонецьк", 1229, "Україна", new DateTime(2021, 2, 2, 10, 21, 50, 102, DateTimeKind.Local).AddTicks(3257), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 721, "Північний Назар", 1466, "Україна", new DateTime(2020, 8, 15, 15, 33, 2, 932, DateTimeKind.Local).AddTicks(1606), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 554, "Житомир", 1113, "Україна", new DateTime(2020, 8, 18, 2, 16, 25, 202, DateTimeKind.Local).AddTicks(8819), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 419, "Тернопіль", 861, "Україна", new DateTime(2020, 12, 11, 13, 39, 28, 117, DateTimeKind.Local).AddTicks(8042), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 290, "Північний Роман", 575, "Україна", new DateTime(2020, 11, 30, 10, 24, 41, 693, DateTimeKind.Local).AddTicks(3061), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 361, "Кам’янець-Подільський", 738, "Україна", new DateTime(2020, 8, 22, 22, 2, 51, 382, DateTimeKind.Local).AddTicks(2223), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 311, "Північний Ян", 619, "Україна", new DateTime(2020, 8, 15, 16, 46, 12, 319, DateTimeKind.Local).AddTicks(1820), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 573, "Мукачеве", 1150, "Україна", new DateTime(2020, 3, 29, 21, 5, 39, 136, DateTimeKind.Local).AddTicks(2166), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 678, "Східний Орхип", 1361, "Україна", new DateTime(2020, 8, 28, 16, 22, 33, 66, DateTimeKind.Local).AddTicks(6587), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 133, "Східний Мстислав", 261, "Україна", new DateTime(2020, 12, 12, 11, 56, 47, 971, DateTimeKind.Local).AddTicks(823), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 471, "Хмельницький", 951, "Україна", new DateTime(2020, 3, 25, 13, 1, 39, 587, DateTimeKind.Local).AddTicks(1816), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 558, "Мукачеве", 1119, "Україна", new DateTime(2020, 8, 28, 8, 40, 25, 566, DateTimeKind.Local).AddTicks(5730), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 186, "Східний Ладомир", 360, "Україна", new DateTime(2020, 4, 14, 23, 19, 0, 550, DateTimeKind.Local).AddTicks(5865), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 207, "Сєвєродонецьк", 390, "Україна", new DateTime(2020, 8, 18, 2, 58, 40, 406, DateTimeKind.Local).AddTicks(1997), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 279, "Північний Гордій", 535, "Україна", new DateTime(2020, 12, 28, 14, 43, 42, 171, DateTimeKind.Local).AddTicks(5937), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 483, "Західний Брячислав", 979, "Україна", new DateTime(2020, 8, 6, 17, 14, 49, 691, DateTimeKind.Local).AddTicks(6253), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 577, "Східний Ладомир", 1159, "Україна", new DateTime(2020, 6, 20, 14, 22, 3, 65, DateTimeKind.Local).AddTicks(9707), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 571, "Східний Корнило", 1146, "Україна", new DateTime(2021, 1, 15, 3, 58, 3, 597, DateTimeKind.Local).AddTicks(1690), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 190, "Північний Петро", 366, "Україна", new DateTime(2020, 3, 14, 12, 35, 1, 366, DateTimeKind.Local).AddTicks(3708), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 327, "Південний Ладомир", 655, "Україна", new DateTime(2020, 4, 3, 20, 27, 17, 272, DateTimeKind.Local).AddTicks(5961), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 350, "Західний Радимир", 718, "Україна", new DateTime(2020, 12, 20, 15, 18, 57, 408, DateTimeKind.Local).AddTicks(9923), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 294, "Єнакієве", 580, "Україна", new DateTime(2020, 8, 24, 5, 38, 49, 39, DateTimeKind.Local).AddTicks(4631), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 687, "Західний Щек", 1378, "Україна", new DateTime(2020, 12, 22, 5, 17, 26, 358, DateTimeKind.Local).AddTicks(5031), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 332, "Східний Борис", 663, "Україна", new DateTime(2020, 11, 5, 1, 20, 28, 226, DateTimeKind.Local).AddTicks(5036), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 175, "Алчевськ", 336, "Україна", new DateTime(2020, 9, 26, 19, 38, 51, 2, DateTimeKind.Local).AddTicks(9761), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 208, "Північний Родіон", 393, "Україна", new DateTime(2021, 1, 7, 9, 4, 53, 133, DateTimeKind.Local).AddTicks(7839), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 660, "Краматорськ", 1320, "Україна", new DateTime(2020, 9, 24, 21, 28, 12, 198, DateTimeKind.Local).AddTicks(4687), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 548, "Бердичів", 1105, "Україна", new DateTime(2020, 4, 14, 3, 39, 20, 512, DateTimeKind.Local).AddTicks(4999), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 87, "Західний Добромир", 168, "Україна", new DateTime(2020, 11, 20, 6, 32, 53, 974, DateTimeKind.Local).AddTicks(147), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 685, "Південний Ростислав", 1375, "Україна", new DateTime(2020, 4, 23, 5, 26, 51, 373, DateTimeKind.Local).AddTicks(1691), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 222, "Донецьк", 416, "Україна", new DateTime(2020, 8, 11, 23, 50, 52, 78, DateTimeKind.Local).AddTicks(8230), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 654, "Хмельницький", 1310, "Україна", new DateTime(2020, 12, 17, 10, 23, 58, 458, DateTimeKind.Local).AddTicks(1122), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 39, "Південний Корній", 74, "Україна", new DateTime(2021, 2, 13, 7, 17, 39, 694, DateTimeKind.Local).AddTicks(652), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 192, "Мукачеве", 370, "Україна", new DateTime(2021, 1, 3, 15, 40, 0, 726, DateTimeKind.Local).AddTicks(175), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 532, "Донецьк", 1071, "Україна", new DateTime(2020, 3, 11, 9, 57, 27, 171, DateTimeKind.Local).AddTicks(254), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 572, "Східний Зоремир", 1147, "Україна", new DateTime(2021, 1, 14, 19, 8, 40, 237, DateTimeKind.Local).AddTicks(3650), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 283, "Ізмаїл", 554, "Україна", new DateTime(2021, 2, 17, 17, 25, 38, 257, DateTimeKind.Local).AddTicks(4423), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 707, "Північний Тиміш", 1423, "Україна", new DateTime(2021, 1, 13, 13, 27, 17, 759, DateTimeKind.Local).AddTicks(8871), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 303, "Дніпродзержинськ", 600, "Україна", new DateTime(2020, 5, 7, 5, 34, 18, 109, DateTimeKind.Local).AddTicks(4990), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 135, "Хмельницький", 265, "Україна", new DateTime(2020, 11, 23, 9, 43, 45, 447, DateTimeKind.Local).AddTicks(2176), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 197, "Одеса", 378, "Україна", new DateTime(2020, 12, 3, 19, 37, 45, 519, DateTimeKind.Local).AddTicks(4071), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 32, "Кривий Ріг", 59, "Україна", new DateTime(2020, 3, 12, 14, 3, 26, 248, DateTimeKind.Local).AddTicks(4104), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 60, "Північний Антін", 117, "Україна", new DateTime(2020, 3, 26, 15, 1, 15, 590, DateTimeKind.Local).AddTicks(7050), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 519, "Південний Марко", 1046, "Україна", new DateTime(2021, 2, 26, 17, 13, 43, 644, DateTimeKind.Local).AddTicks(3940), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 182, "Південний Братомил", 351, "Україна", new DateTime(2020, 5, 28, 21, 20, 19, 102, DateTimeKind.Local).AddTicks(408), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 189, "Кам’янець-Подільський", 365, "Україна", new DateTime(2020, 3, 9, 2, 41, 22, 805, DateTimeKind.Local).AddTicks(1662), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 566, "Східний Олег", 1132, "Україна", new DateTime(2021, 2, 11, 22, 1, 25, 174, DateTimeKind.Local).AddTicks(4326), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 560, "Єнакієве", 1124, "Україна", new DateTime(2020, 11, 2, 9, 54, 3, 349, DateTimeKind.Local).AddTicks(4212), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 280, "Хмельницький", 540, "Україна", new DateTime(2020, 11, 23, 12, 55, 43, 261, DateTimeKind.Local).AddTicks(2543), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 725, "Кривий Ріг", 1473, "Україна", new DateTime(2020, 9, 21, 23, 54, 36, 785, DateTimeKind.Local).AddTicks(9020), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 28, "Східний Зореслав", 50, "Україна", new DateTime(2020, 8, 1, 16, 2, 36, 737, DateTimeKind.Local).AddTicks(5071), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 592, "Західний Тимофій", 1190, "Україна", new DateTime(2021, 2, 28, 16, 46, 26, 922, DateTimeKind.Local).AddTicks(2654), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 594, "Рівне", 1194, "Україна", new DateTime(2020, 3, 8, 21, 25, 25, 261, DateTimeKind.Local).AddTicks(1470), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 597, "Донецьк", 1198, "Україна", new DateTime(2020, 6, 2, 12, 32, 40, 446, DateTimeKind.Local).AddTicks(3142), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 123, "Східний Лаврін", 238, "Україна", new DateTime(2021, 1, 7, 4, 9, 45, 450, DateTimeKind.Local).AddTicks(266), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 276, "Харків", 530, "Україна", new DateTime(2020, 7, 25, 6, 55, 55, 875, DateTimeKind.Local).AddTicks(4772), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 355, "Івано-Франківськ", 727, "Україна", new DateTime(2020, 10, 20, 6, 49, 35, 367, DateTimeKind.Local).AddTicks(8549), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 538, "Львів", 1086, "Україна", new DateTime(2020, 4, 7, 17, 6, 1, 333, DateTimeKind.Local).AddTicks(5887), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 613, "Чернігів", 1234, "Україна", new DateTime(2020, 10, 24, 0, 24, 18, 763, DateTimeKind.Local).AddTicks(9722), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 127, "Східний Горимир", 243, "Україна", new DateTime(2020, 12, 8, 7, 35, 42, 461, DateTimeKind.Local).AddTicks(810), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 185, "Павлоград", 359, "Україна", new DateTime(2020, 9, 1, 14, 9, 32, 855, DateTimeKind.Local).AddTicks(1095), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 259, "Краматорськ", 492, "Україна", new DateTime(2020, 12, 16, 23, 49, 22, 385, DateTimeKind.Local).AddTicks(1396), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 655, "Алчевськ", 1315, "Україна", new DateTime(2020, 10, 8, 5, 34, 13, 830, DateTimeKind.Local).AddTicks(4159), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 159, "Південний Левко", 303, "Україна", new DateTime(2020, 4, 7, 3, 4, 9, 746, DateTimeKind.Local).AddTicks(5601), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 314, "Північний Роман", 624, "Україна", new DateTime(2020, 6, 16, 16, 47, 16, 896, DateTimeKind.Local).AddTicks(4013), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 439, "Тернопіль", 904, "Україна", new DateTime(2020, 8, 15, 0, 9, 23, 146, DateTimeKind.Local).AddTicks(6108), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 116, "Східний Синьоок", 221, "Україна", new DateTime(2021, 2, 4, 20, 39, 20, 83, DateTimeKind.Local).AddTicks(2698), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 324, "Північний Корній", 651, "Україна", new DateTime(2020, 5, 15, 3, 27, 52, 469, DateTimeKind.Local).AddTicks(3684), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 409, "Північний Всевлад", 843, "Україна", new DateTime(2021, 1, 9, 9, 25, 18, 258, DateTimeKind.Local).AddTicks(2731), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 78, "Житомир", 152, "Україна", new DateTime(2020, 11, 8, 3, 28, 18, 712, DateTimeKind.Local).AddTicks(1314), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 584, "Західний Святослав", 1173, "Україна", new DateTime(2021, 1, 23, 17, 14, 24, 448, DateTimeKind.Local).AddTicks(7022), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 458, "Західний Кий", 933, "Україна", new DateTime(2020, 5, 8, 14, 27, 41, 500, DateTimeKind.Local).AddTicks(4553), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 211, "Північний Звенигор", 396, "Україна", new DateTime(2020, 12, 27, 1, 47, 20, 241, DateTimeKind.Local).AddTicks(8623), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 507, "Євпаторія", 1022, "Україна", new DateTime(2020, 9, 19, 20, 58, 12, 307, DateTimeKind.Local).AddTicks(3492), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 6, "Луганськ", 14, "Україна", new DateTime(2020, 3, 5, 11, 57, 40, 501, DateTimeKind.Local).AddTicks(7892), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 16, "Південний Ігор", 31, "Україна", new DateTime(2020, 12, 19, 12, 37, 18, 781, DateTimeKind.Local).AddTicks(1214), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 242, "Житомир", 459, "Україна", new DateTime(2020, 9, 8, 3, 19, 10, 508, DateTimeKind.Local).AddTicks(2784), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 348, "Південний Орест", 714, "Україна", new DateTime(2021, 1, 2, 9, 48, 51, 358, DateTimeKind.Local).AddTicks(8439), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 293, "Артемівськ", 578, "Україна", new DateTime(2021, 2, 7, 22, 30, 57, 860, DateTimeKind.Local).AddTicks(7), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 431, "Олександрія", 886, "Україна", new DateTime(2020, 11, 20, 9, 6, 13, 923, DateTimeKind.Local).AddTicks(2246), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 570, "Південний Семибор", 1144, "Україна", new DateTime(2021, 1, 22, 14, 45, 31, 576, DateTimeKind.Local).AddTicks(8124), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 40, "Південний Чорнота", 75, "Україна", new DateTime(2020, 6, 11, 3, 37, 29, 699, DateTimeKind.Local).AddTicks(914), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 41, "Красний Луч", 76, "Україна", new DateTime(2020, 9, 28, 0, 35, 7, 854, DateTimeKind.Local).AddTicks(6789), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 520, "Північний Артем", 1051, "Україна", new DateTime(2020, 10, 18, 20, 30, 48, 55, DateTimeKind.Local).AddTicks(7062), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 109, "Бердичів", 212, "Україна", new DateTime(2020, 8, 12, 7, 11, 52, 474, DateTimeKind.Local).AddTicks(2157), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 130, "Південний Назар", 253, "Україна", new DateTime(2020, 10, 3, 0, 11, 17, 83, DateTimeKind.Local).AddTicks(3699), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 153, "Східний Гордій", 292, "Україна", new DateTime(2020, 10, 21, 22, 22, 39, 368, DateTimeKind.Local).AddTicks(9749), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 257, "Західний Божен", 483, "Україна", new DateTime(2020, 7, 17, 9, 59, 16, 886, DateTimeKind.Local).AddTicks(7531), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 383, "Луцьк", 791, "Україна", new DateTime(2021, 1, 23, 13, 6, 51, 32, DateTimeKind.Local).AddTicks(6188), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 10, "Північний Яромил", 20, "Україна", new DateTime(2020, 7, 16, 12, 48, 23, 916, DateTimeKind.Local).AddTicks(1631), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 365, "Східний Славолюб", 751, "Україна", new DateTime(2020, 7, 30, 6, 41, 2, 563, DateTimeKind.Local).AddTicks(9711), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 30, "Західний Брячислав", 56, "Україна", new DateTime(2020, 10, 20, 8, 35, 59, 769, DateTimeKind.Local).AddTicks(5962), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 414, "Миколаїв", 852, "Україна", new DateTime(2021, 1, 23, 14, 6, 40, 290, DateTimeKind.Local).AddTicks(1361), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 556, "Суми", 1116, "Україна", new DateTime(2021, 1, 13, 17, 41, 16, 290, DateTimeKind.Local).AddTicks(5440), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 502, "Мелітополь", 1010, "Україна", new DateTime(2020, 5, 3, 9, 16, 15, 499, DateTimeKind.Local).AddTicks(4569), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 229, "Дніпродзержинськ", 434, "Україна", new DateTime(2020, 7, 30, 2, 56, 41, 647, DateTimeKind.Local).AddTicks(6869), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 683, "Північний Антоній", 1372, "Україна", new DateTime(2021, 1, 15, 3, 18, 36, 301, DateTimeKind.Local).AddTicks(8796), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 335, "Київ", 676, "Україна", new DateTime(2020, 5, 6, 13, 31, 3, 408, DateTimeKind.Local).AddTicks(2472), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 485, "Східний Яромил", 983, "Україна", new DateTime(2020, 7, 12, 11, 34, 36, 764, DateTimeKind.Local).AddTicks(7285), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 88, "Нікополь", 171, "Україна", new DateTime(2020, 12, 20, 3, 13, 10, 537, DateTimeKind.Local).AddTicks(1021), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 298, "Східний Микола", 586, "Україна", new DateTime(2020, 10, 15, 21, 27, 28, 175, DateTimeKind.Local).AddTicks(3963), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 436, "Північний Богдан", 897, "Україна", new DateTime(2021, 1, 19, 17, 22, 22, 908, DateTimeKind.Local).AddTicks(2455), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 500, "Київ", 1004, "Україна", new DateTime(2020, 3, 28, 6, 46, 7, 710, DateTimeKind.Local).AddTicks(7256), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 522, "Північний Георгій", 1055, "Україна", new DateTime(2020, 5, 2, 9, 30, 53, 93, DateTimeKind.Local).AddTicks(1584), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 675, "Дніпропетровськ", 1358, "Україна", new DateTime(2021, 2, 28, 21, 40, 53, 17, DateTimeKind.Local).AddTicks(8468), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 45, "Луганськ", 84, "Україна", new DateTime(2020, 6, 9, 22, 42, 59, 724, DateTimeKind.Local).AddTicks(8239), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 198, "Західний Сергій", 380, "Україна", new DateTime(2020, 7, 5, 6, 21, 25, 846, DateTimeKind.Local).AddTicks(8241), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 408, "Північний Звенигор", 842, "Україна", new DateTime(2020, 12, 9, 15, 15, 59, 796, DateTimeKind.Local).AddTicks(8128), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 575, "Західний Лук’ян", 1154, "Україна", new DateTime(2020, 5, 21, 8, 40, 20, 195, DateTimeKind.Local).AddTicks(8606), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 12, "Західний Костянтин", 22, "Україна", new DateTime(2021, 1, 2, 9, 20, 9, 147, DateTimeKind.Local).AddTicks(8935), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 497, "Єнакієве", 999, "Україна", new DateTime(2020, 12, 18, 5, 54, 51, 743, DateTimeKind.Local).AddTicks(798), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 24, "Південний Анатолій", 45, "Україна", new DateTime(2020, 5, 20, 9, 28, 35, 973, DateTimeKind.Local).AddTicks(5709), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 149, "Східний Ізяслав", 287, "Україна", new DateTime(2021, 2, 14, 7, 50, 47, 89, DateTimeKind.Local).AddTicks(5255), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 599, "Північний Роман", 1201, "Україна", new DateTime(2020, 7, 10, 21, 56, 47, 283, DateTimeKind.Local).AddTicks(8330), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 111, "Південний Корнелій", 214, "Україна", new DateTime(2020, 8, 6, 8, 24, 45, 696, DateTimeKind.Local).AddTicks(88), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 611, "Східний Святослав", 1232, "Україна", new DateTime(2021, 1, 17, 23, 10, 40, 58, DateTimeKind.Local).AddTicks(2151), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 61, "Херсон", 118, "Україна", new DateTime(2020, 3, 8, 15, 50, 0, 848, DateTimeKind.Local).AddTicks(8762), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 692, "Бровари", 1387, "Україна", new DateTime(2020, 12, 6, 18, 54, 2, 976, DateTimeKind.Local).AddTicks(9979), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 524, "Полтава", 1060, "Україна", new DateTime(2020, 12, 13, 2, 42, 23, 887, DateTimeKind.Local).AddTicks(3353), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 148, "Миколаїв", 285, "Україна", new DateTime(2020, 5, 9, 12, 21, 6, 149, DateTimeKind.Local).AddTicks(8967), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 722, "Маріуполь", 1467, "Україна", new DateTime(2020, 6, 3, 22, 4, 46, 739, DateTimeKind.Local).AddTicks(9551), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 195, "Південний Юхим", 375, "Україна", new DateTime(2020, 5, 13, 7, 57, 1, 412, DateTimeKind.Local).AddTicks(6063), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 277, "Північний Денис", 531, "Україна", new DateTime(2020, 10, 24, 19, 56, 57, 60, DateTimeKind.Local).AddTicks(9975), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 388, "Кіровоград", 801, "Україна", new DateTime(2020, 12, 24, 8, 35, 7, 570, DateTimeKind.Local).AddTicks(8750), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 370, "Олександрія", 762, "Україна", new DateTime(2020, 10, 12, 14, 21, 52, 170, DateTimeKind.Local).AddTicks(1050), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 473, "Горлівка", 959, "Україна", new DateTime(2021, 1, 25, 23, 6, 18, 945, DateTimeKind.Local).AddTicks(7666), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 537, "Донецьк", 1084, "Україна", new DateTime(2020, 11, 22, 11, 49, 3, 965, DateTimeKind.Local).AddTicks(8762), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 670, "Західний Братослав", 1340, "Україна", new DateTime(2020, 3, 11, 16, 0, 58, 399, DateTimeKind.Local).AddTicks(1161), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 732, "Луцьк", 1484, "Україна", new DateTime(2020, 5, 24, 16, 31, 39, 348, DateTimeKind.Local).AddTicks(7095), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 421, "Західний Славута", 865, "Україна", new DateTime(2021, 1, 23, 13, 28, 15, 846, DateTimeKind.Local).AddTicks(4295), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 614, "Південний Зеновій", 1235, "Україна", new DateTime(2020, 4, 15, 10, 45, 47, 985, DateTimeKind.Local).AddTicks(1507), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 646, "Південний Панас", 1289, "Україна", new DateTime(2020, 6, 10, 8, 2, 36, 65, DateTimeKind.Local).AddTicks(7235), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 2, "Кременчук", 3, "Україна", new DateTime(2020, 12, 12, 17, 39, 30, 994, DateTimeKind.Local).AddTicks(556), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 349, "Бердянськ", 715, "Україна", new DateTime(2020, 5, 18, 18, 28, 43, 183, DateTimeKind.Local).AddTicks(7684), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 356, "Харків", 728, "Україна", new DateTime(2020, 8, 9, 13, 37, 37, 146, DateTimeKind.Local).AddTicks(5261), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 531, "Кременчук", 1070, "Україна", new DateTime(2020, 8, 1, 1, 49, 26, 689, DateTimeKind.Local).AddTicks(4727), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 631, "Східний Георгій", 1266, "Україна", new DateTime(2020, 4, 29, 9, 47, 31, 908, DateTimeKind.Local).AddTicks(1434), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 54, "Південний Олексій", 108, "Україна", new DateTime(2020, 12, 23, 23, 33, 40, 101, DateTimeKind.Local).AddTicks(9020), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 649, "Західний Сологуб", 1297, "Україна", new DateTime(2020, 4, 26, 0, 4, 7, 570, DateTimeKind.Local).AddTicks(4707), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 424, "Кіровоград", 870, "Україна", new DateTime(2021, 2, 20, 22, 19, 51, 114, DateTimeKind.Local).AddTicks(3731), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 700, "Західний Борислав", 1405, "Україна", new DateTime(2020, 10, 15, 6, 41, 6, 387, DateTimeKind.Local).AddTicks(5051), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 630, "Східний Юрій", 1264, "Україна", new DateTime(2020, 5, 22, 4, 2, 41, 574, DateTimeKind.Local).AddTicks(3219), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 44, "Ялта", 80, "Україна", new DateTime(2021, 2, 9, 5, 43, 23, 294, DateTimeKind.Local).AddTicks(7971), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 334, "Сєвєродонецьк", 668, "Україна", new DateTime(2020, 6, 8, 22, 52, 42, 369, DateTimeKind.Local).AddTicks(8713), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 368, "Мукачеве", 756, "Україна", new DateTime(2020, 4, 4, 5, 47, 22, 349, DateTimeKind.Local).AddTicks(693), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 607, "Західний Звенислав", 1224, "Україна", new DateTime(2020, 11, 3, 6, 37, 19, 326, DateTimeKind.Local).AddTicks(3221), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 511, "Маріуполь", 1027, "Україна", new DateTime(2021, 1, 6, 19, 47, 35, 647, DateTimeKind.Local).AddTicks(6681), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 106, "Південний Юліан", 205, "Україна", new DateTime(2020, 12, 25, 5, 17, 37, 699, DateTimeKind.Local).AddTicks(654), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 384, "Павлоград", 792, "Україна", new DateTime(2020, 11, 26, 19, 8, 50, 724, DateTimeKind.Local).AddTicks(5604), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 55, "Західний В’ячеслав", 109, "Україна", new DateTime(2020, 7, 29, 20, 20, 30, 106, DateTimeKind.Local).AddTicks(1866), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 518, "Північний Олексій", 1045, "Україна", new DateTime(2020, 10, 22, 17, 56, 24, 340, DateTimeKind.Local).AddTicks(3780), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 561, "Східний Ладомир", 1125, "Україна", new DateTime(2020, 8, 11, 20, 43, 10, 170, DateTimeKind.Local).AddTicks(180), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 141, "Південний Олег", 275, "Україна", new DateTime(2021, 1, 6, 0, 14, 38, 549, DateTimeKind.Local).AddTicks(6440), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 214, "Західний Костянтин", 401, "Україна", new DateTime(2020, 4, 22, 5, 41, 47, 849, DateTimeKind.Local).AddTicks(682), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 679, "Західний Зорян", 1362, "Україна", new DateTime(2021, 1, 17, 4, 49, 2, 52, DateTimeKind.Local).AddTicks(3928), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 23, "Павлоград", 43, "Україна", new DateTime(2021, 2, 3, 2, 31, 34, 146, DateTimeKind.Local).AddTicks(3702), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 184, "Південний Юхим", 358, "Україна", new DateTime(2021, 1, 1, 14, 25, 35, 336, DateTimeKind.Local).AddTicks(5469), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 604, "Північний Святополк", 1221, "Україна", new DateTime(2020, 12, 4, 12, 37, 14, 490, DateTimeKind.Local).AddTicks(7338), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 19, "Західний Азарій", 37, "Україна", new DateTime(2020, 12, 28, 21, 1, 44, 620, DateTimeKind.Local).AddTicks(866), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 226, "Північний Олег", 427, "Україна", new DateTime(2020, 12, 4, 9, 50, 32, 793, DateTimeKind.Local).AddTicks(8612), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 521, "Південний Зеновій", 1054, "Україна", new DateTime(2020, 6, 2, 2, 3, 50, 649, DateTimeKind.Local).AddTicks(7314), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 530, "Кривий Ріг", 1069, "Україна", new DateTime(2021, 2, 25, 20, 7, 59, 752, DateTimeKind.Local).AddTicks(3820), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 99, "Південний Єремій", 190, "Україна", new DateTime(2020, 4, 22, 17, 34, 43, 839, DateTimeKind.Local).AddTicks(5355), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 380, "Південний Василь", 786, "Україна", new DateTime(2021, 2, 8, 4, 15, 53, 314, DateTimeKind.Local).AddTicks(3357), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 503, "Північний Боримир", 1016, "Україна", new DateTime(2020, 10, 23, 11, 14, 46, 29, DateTimeKind.Local).AddTicks(3586), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 243, "Західний Чорнота", 463, "Україна", new DateTime(2020, 5, 5, 9, 42, 22, 270, DateTimeKind.Local).AddTicks(58), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 539, "Західний Тиміш", 1087, "Україна", new DateTime(2021, 1, 28, 12, 33, 29, 525, DateTimeKind.Local).AddTicks(5971), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 219, "Південний Ратимир", 410, "Україна", new DateTime(2020, 10, 18, 12, 19, 57, 508, DateTimeKind.Local).AddTicks(3832), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 387, "Південний Буревіст", 800, "Україна", new DateTime(2020, 5, 10, 12, 7, 30, 367, DateTimeKind.Local).AddTicks(2142), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 541, "Луцьк", 1089, "Україна", new DateTime(2020, 8, 1, 12, 49, 48, 630, DateTimeKind.Local).AddTicks(7383), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 376, "Керч", 779, "Україна", new DateTime(2020, 6, 6, 4, 22, 46, 798, DateTimeKind.Local).AddTicks(8544), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 445, "Луганськ", 915, "Україна", new DateTime(2020, 8, 10, 6, 9, 8, 461, DateTimeKind.Local).AddTicks(4757), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 546, "Південний Ігор", 1100, "Україна", new DateTime(2020, 11, 15, 10, 2, 7, 106, DateTimeKind.Local).AddTicks(6972), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 608, "Керч", 1227, "Україна", new DateTime(2020, 11, 22, 9, 31, 17, 697, DateTimeKind.Local).AddTicks(2737), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 117, "Бердичів", 223, "Україна", new DateTime(2020, 8, 23, 13, 16, 56, 962, DateTimeKind.Local).AddTicks(9007), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 162, "Східний Божен", 308, "Україна", new DateTime(2020, 12, 25, 6, 18, 48, 649, DateTimeKind.Local).AddTicks(8856), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 389, "Південний Зиновій", 802, "Україна", new DateTime(2020, 5, 28, 22, 29, 33, 369, DateTimeKind.Local).AddTicks(5498), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 443, "Західний Братислав", 910, "Україна", new DateTime(2020, 6, 6, 18, 16, 50, 502, DateTimeKind.Local).AddTicks(2718), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 476, "Західний Микита", 964, "Україна", new DateTime(2020, 12, 15, 12, 54, 16, 69, DateTimeKind.Local).AddTicks(5953), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 528, "Східний Земислав", 1067, "Україна", new DateTime(2020, 9, 6, 18, 45, 2, 249, DateTimeKind.Local).AddTicks(4558), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 653, "Північний Георгій", 1305, "Україна", new DateTime(2020, 5, 24, 9, 43, 25, 110, DateTimeKind.Local).AddTicks(1697), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 478, "Південний Любозар", 968, "Україна", new DateTime(2020, 9, 25, 4, 56, 35, 686, DateTimeKind.Local).AddTicks(8065), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 176, "Північний Тихон", 338, "Україна", new DateTime(2020, 4, 11, 2, 42, 13, 501, DateTimeKind.Local).AddTicks(6184), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 285, "Кременчук", 561, "Україна", new DateTime(2020, 11, 27, 6, 48, 55, 28, DateTimeKind.Local).AddTicks(765), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 496, "Західний Маркіян", 998, "Україна", new DateTime(2020, 12, 21, 4, 25, 19, 487, DateTimeKind.Local).AddTicks(3194), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 372, "Північний Антін", 765, "Україна", new DateTime(2020, 8, 4, 16, 8, 29, 115, DateTimeKind.Local).AddTicks(2280), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 533, "Південний Синьоок", 1072, "Україна", new DateTime(2020, 11, 15, 2, 52, 56, 602, DateTimeKind.Local).AddTicks(7580), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 320, "Запоріжжя", 639, "Україна", new DateTime(2020, 3, 14, 19, 45, 45, 532, DateTimeKind.Local).AddTicks(4996), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 134, "Керч", 262, "Україна", new DateTime(2021, 2, 26, 7, 14, 50, 361, DateTimeKind.Local).AddTicks(6970), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 526, "Кам’янець-Подільський", 1064, "Україна", new DateTime(2020, 3, 25, 2, 19, 35, 224, DateTimeKind.Local).AddTicks(9222), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 231, "Східний Данило", 439, "Україна", new DateTime(2020, 8, 2, 2, 52, 36, 457, DateTimeKind.Local).AddTicks(6759), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 435, "Східний Радим", 894, "Україна", new DateTime(2020, 9, 7, 6, 17, 40, 96, DateTimeKind.Local).AddTicks(7066), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 173, "Західний Синьоок", 333, "Україна", new DateTime(2020, 9, 15, 19, 59, 45, 348, DateTimeKind.Local).AddTicks(6823), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 544, "Північний Семибор", 1096, "Україна", new DateTime(2020, 8, 30, 7, 26, 47, 17, DateTimeKind.Local).AddTicks(1819), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 107, "Лисичанськ", 209, "Україна", new DateTime(2021, 1, 18, 15, 57, 55, 166, DateTimeKind.Local).AddTicks(1074), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 580, "Запоріжжя", 1162, "Україна", new DateTime(2020, 7, 28, 1, 55, 6, 331, DateTimeKind.Local).AddTicks(9490), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 624, "Конотоп", 1255, "Україна", new DateTime(2020, 7, 1, 13, 28, 34, 751, DateTimeKind.Local).AddTicks(2349), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 164, "Бровари", 310, "Україна", new DateTime(2020, 7, 29, 20, 0, 1, 889, DateTimeKind.Local).AddTicks(5176), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 187, "Західний Братислав", 363, "Україна", new DateTime(2020, 8, 20, 9, 35, 28, 194, DateTimeKind.Local).AddTicks(1223), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 210, "Олександрія", 395, "Україна", new DateTime(2020, 7, 19, 4, 30, 47, 247, DateTimeKind.Local).AddTicks(6917), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 690, "Львів", 1385, "Україна", new DateTime(2020, 3, 14, 13, 34, 52, 153, DateTimeKind.Local).AddTicks(8361), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 80, "Єнакієве", 157, "Україна", new DateTime(2020, 7, 22, 11, 9, 56, 601, DateTimeKind.Local).AddTicks(6691), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 567, "Слов’янськ", 1133, "Україна", new DateTime(2020, 11, 30, 6, 8, 19, 660, DateTimeKind.Local).AddTicks(6549), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 79, "Східний Пантелеймон", 155, "Україна", new DateTime(2020, 6, 14, 5, 28, 25, 886, DateTimeKind.Local).AddTicks(8465), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 220, "Східний Анатолій", 411, "Україна", new DateTime(2020, 10, 7, 4, 15, 54, 771, DateTimeKind.Local).AddTicks(5976), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 562, "Тернопіль", 1126, "Україна", new DateTime(2020, 11, 28, 18, 5, 19, 728, DateTimeKind.Local).AddTicks(51), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 671, "Західний Борис", 1351, "Україна", new DateTime(2020, 11, 18, 20, 59, 32, 335, DateTimeKind.Local).AddTicks(2012), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 131, "Лисичанськ", 255, "Україна", new DateTime(2020, 4, 17, 8, 43, 48, 730, DateTimeKind.Local).AddTicks(4342), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 284, "Кривий Ріг", 556, "Україна", new DateTime(2020, 8, 28, 14, 34, 27, 891, DateTimeKind.Local).AddTicks(7441), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 550, "Східний Білослав", 1109, "Україна", new DateTime(2020, 9, 29, 8, 54, 21, 663, DateTimeKind.Local).AddTicks(6299), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 300, "Східний Микита", 589, "Україна", new DateTime(2021, 1, 11, 3, 54, 40, 462, DateTimeKind.Local).AddTicks(429), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 344, "Керч", 705, "Україна", new DateTime(2020, 8, 2, 1, 20, 19, 91, DateTimeKind.Local).AddTicks(388), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 224, "Східний Брячислав", 424, "Україна", new DateTime(2020, 12, 18, 23, 52, 58, 701, DateTimeKind.Local).AddTicks(387), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 357, "Південний Альберт", 732, "Україна", new DateTime(2020, 8, 22, 12, 20, 36, 879, DateTimeKind.Local).AddTicks(516), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 479, "Східний Мирон", 972, "Україна", new DateTime(2020, 10, 3, 9, 21, 33, 406, DateTimeKind.Local).AddTicks(8253), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 616, "Олександрія", 1239, "Україна", new DateTime(2020, 4, 1, 9, 11, 48, 509, DateTimeKind.Local).AddTicks(1332), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 734, "Лисичанськ", 1491, "Україна", new DateTime(2020, 7, 31, 6, 29, 46, 11, DateTimeKind.Local).AddTicks(4501), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 86, "Краматорськ", 167, "Україна", new DateTime(2020, 3, 18, 20, 14, 36, 340, DateTimeKind.Local).AddTicks(4515), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 191, "Східний Матвій", 369, "Україна", new DateTime(2020, 7, 14, 19, 33, 11, 927, DateTimeKind.Local).AddTicks(7804), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 272, "Західний Матвій", 526, "Україна", new DateTime(2020, 10, 16, 21, 8, 9, 53, DateTimeKind.Local).AddTicks(7316), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 362, "Східний Олесь", 742, "Україна", new DateTime(2021, 2, 16, 23, 10, 25, 118, DateTimeKind.Local).AddTicks(6041), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 481, "Західний Златомир", 974, "Україна", new DateTime(2020, 3, 31, 13, 31, 54, 414, DateTimeKind.Local).AddTicks(5634), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 169, "Західний Брячислав", 327, "Україна", new DateTime(2020, 6, 3, 3, 12, 32, 344, DateTimeKind.Local).AddTicks(8166), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 612, "Східний Ігор", 1233, "Україна", new DateTime(2020, 12, 30, 21, 33, 20, 664, DateTimeKind.Local).AddTicks(6645), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 297, "Алчевськ", 584, "Україна", new DateTime(2020, 6, 24, 19, 37, 0, 719, DateTimeKind.Local).AddTicks(5245), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 378, "Вінниця", 784, "Україна", new DateTime(2020, 6, 23, 20, 50, 11, 223, DateTimeKind.Local).AddTicks(1092), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 67, "Сімферополь", 126, "Україна", new DateTime(2020, 5, 5, 12, 6, 59, 368, DateTimeKind.Local).AddTicks(2363), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 228, "Східний Борис", 429, "Україна", new DateTime(2020, 6, 9, 16, 36, 17, 489, DateTimeKind.Local).AddTicks(4817), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 321, "Чернівці", 640, "Україна", new DateTime(2020, 10, 11, 6, 36, 36, 977, DateTimeKind.Local).AddTicks(9163), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 15, "Східний Далемир", 26, "Україна", new DateTime(2020, 10, 29, 23, 4, 10, 683, DateTimeKind.Local).AddTicks(8233), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 158, "Луцьк", 302, "Україна", new DateTime(2020, 9, 18, 21, 41, 0, 608, DateTimeKind.Local).AddTicks(5045), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 581, "Бердянськ", 1164, "Україна", new DateTime(2021, 1, 6, 12, 25, 45, 293, DateTimeKind.Local).AddTicks(3362), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 498, "Східний Мечислав", 1002, "Україна", new DateTime(2021, 2, 27, 8, 48, 55, 845, DateTimeKind.Local).AddTicks(794), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 296, "Східний Тихон", 582, "Україна", new DateTime(2020, 5, 20, 6, 21, 22, 318, DateTimeKind.Local).AddTicks(4007), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 269, "Керч", 510, "Україна", new DateTime(2020, 10, 17, 17, 46, 34, 911, DateTimeKind.Local).AddTicks(6259), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 510, "Західний Максим", 1026, "Україна", new DateTime(2020, 12, 13, 21, 48, 56, 285, DateTimeKind.Local).AddTicks(2228), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 144, "Львів", 279, "Україна", new DateTime(2020, 8, 23, 3, 57, 8, 201, DateTimeKind.Local).AddTicks(9417), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 708, "Північний Звенислав", 1426, "Україна", new DateTime(2020, 5, 13, 14, 7, 44, 883, DateTimeKind.Local).AddTicks(9262), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 702, "Північний Володислав", 1408, "Україна", new DateTime(2020, 7, 18, 10, 7, 39, 77, DateTimeKind.Local).AddTicks(8162), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 504, "Сєвєродонецьк", 1017, "Україна", new DateTime(2020, 4, 5, 4, 6, 48, 452, DateTimeKind.Local).AddTicks(5550), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 596, "Західний Максим", 1197, "Україна", new DateTime(2021, 1, 22, 1, 17, 26, 579, DateTimeKind.Local).AddTicks(2138), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 21, "Євпаторія", 41, "Україна", new DateTime(2020, 5, 28, 2, 49, 1, 151, DateTimeKind.Local).AddTicks(2227), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 393, "Північний Анатолій", 812, "Україна", new DateTime(2020, 12, 31, 0, 7, 15, 267, DateTimeKind.Local).AddTicks(4956), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 404, "Східний Олесь", 831, "Україна", new DateTime(2020, 9, 29, 0, 43, 12, 790, DateTimeKind.Local).AddTicks(2021), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 223, "Північний Борис", 417, "Україна", new DateTime(2020, 7, 6, 2, 59, 40, 573, DateTimeKind.Local).AddTicks(5716), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 36, "Керч", 66, "Україна", new DateTime(2020, 5, 3, 7, 10, 33, 26, DateTimeKind.Local).AddTicks(7627), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 447, "Павлоград", 919, "Україна", new DateTime(2020, 7, 31, 2, 6, 37, 66, DateTimeKind.Local).AddTicks(2540), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 92, "Луганськ", 180, "Україна", new DateTime(2020, 6, 24, 5, 22, 25, 97, DateTimeKind.Local).AddTicks(4802), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 115, "Східний Анастасій", 220, "Україна", new DateTime(2021, 2, 2, 21, 11, 24, 692, DateTimeKind.Local).AddTicks(3778), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 427, "Мелітополь", 875, "Україна", new DateTime(2020, 12, 24, 14, 13, 28, 524, DateTimeKind.Local).AddTicks(5636), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 602, "Шостка", 1208, "Україна", new DateTime(2020, 11, 20, 17, 16, 41, 487, DateTimeKind.Local).AddTicks(6159), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 628, "Південний Ратибор", 1262, "Україна", new DateTime(2020, 7, 15, 12, 58, 9, 999, DateTimeKind.Local).AddTicks(4166), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 650, "Північний Радим", 1298, "Україна", new DateTime(2020, 10, 4, 3, 45, 52, 700, DateTimeKind.Local).AddTicks(4063), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 48, "Західний Станіслав", 96, "Україна", new DateTime(2021, 2, 7, 15, 57, 36, 195, DateTimeKind.Local).AddTicks(2810), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 373, "Західний Горислав", 766, "Україна", new DateTime(2020, 12, 3, 13, 1, 32, 467, DateTimeKind.Local).AddTicks(2764), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 274, "Черкаси", 528, "Україна", new DateTime(2021, 1, 12, 16, 21, 0, 236, DateTimeKind.Local).AddTicks(4657), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 170, "Південний Богдан", 328, "Україна", new DateTime(2020, 8, 28, 13, 33, 11, 771, DateTimeKind.Local).AddTicks(4218), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 326, "Шостка", 654, "Україна", new DateTime(2020, 10, 27, 19, 36, 19, 570, DateTimeKind.Local).AddTicks(412), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 353, "Східний Захарій", 722, "Україна", new DateTime(2020, 6, 13, 13, 25, 44, 375, DateTimeKind.Local).AddTicks(2434), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 260, "Луганськ", 494, "Україна", new DateTime(2020, 7, 21, 9, 4, 21, 751, DateTimeKind.Local).AddTicks(8358), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 113, "Східний Маркіян", 218, "Україна", new DateTime(2021, 2, 6, 15, 51, 52, 855, DateTimeKind.Local).AddTicks(7727), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 174, "Південний Левко", 334, "Україна", new DateTime(2020, 6, 20, 18, 37, 37, 430, DateTimeKind.Local).AddTicks(967), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 701, "Південний Маркіян", 1406, "Україна", new DateTime(2020, 7, 10, 14, 22, 30, 412, DateTimeKind.Local).AddTicks(9418), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 477, "Бровари", 967, "Україна", new DateTime(2020, 6, 1, 3, 19, 27, 724, DateTimeKind.Local).AddTicks(5245), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 647, "Олександрія", 1294, "Україна", new DateTime(2020, 12, 3, 1, 49, 19, 460, DateTimeKind.Local).AddTicks(7052), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 271, "Херсон", 523, "Україна", new DateTime(2020, 7, 1, 21, 4, 3, 489, DateTimeKind.Local).AddTicks(5394), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 366, "Західний Всеволод", 752, "Україна", new DateTime(2020, 10, 16, 4, 56, 57, 909, DateTimeKind.Local).AddTicks(6128), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 386, "Дніпропетровськ", 799, "Україна", new DateTime(2021, 2, 8, 5, 13, 54, 195, DateTimeKind.Local).AddTicks(7077), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 738, "Кіровоград", 1496, "Україна", new DateTime(2020, 7, 23, 5, 26, 34, 272, DateTimeKind.Local).AddTicks(681), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 64, "Західний Григорій", 123, "Україна", new DateTime(2020, 3, 17, 14, 49, 11, 623, DateTimeKind.Local).AddTicks(9424), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 125, "Північний Зборислав", 241, "Україна", new DateTime(2020, 4, 27, 4, 28, 17, 603, DateTimeKind.Local).AddTicks(3297), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 589, "Макіївка", 1180, "Україна", new DateTime(2020, 6, 17, 5, 15, 23, 416, DateTimeKind.Local).AddTicks(1736), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 236, "Херсон", 445, "Україна", new DateTime(2020, 8, 13, 14, 27, 12, 384, DateTimeKind.Local).AddTicks(6845), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 648, "Східний Братислав", 1295, "Україна", new DateTime(2020, 11, 11, 3, 7, 46, 863, DateTimeKind.Local).AddTicks(2206), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 177, "Чернігів", 341, "Україна", new DateTime(2020, 5, 5, 0, 19, 34, 423, DateTimeKind.Local).AddTicks(8063), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 239, "Запоріжжя", 452, "Україна", new DateTime(2020, 4, 16, 8, 44, 15, 161, DateTimeKind.Local).AddTicks(8791), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 595, "Кременчук", 1195, "Україна", new DateTime(2020, 3, 30, 21, 33, 12, 401, DateTimeKind.Local).AddTicks(2846), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 160, "Північний Божен", 304, "Україна", new DateTime(2020, 7, 30, 12, 20, 50, 305, DateTimeKind.Local).AddTicks(1850), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 167, "Мелітополь", 325, "Україна", new DateTime(2020, 4, 30, 4, 37, 54, 749, DateTimeKind.Local).AddTicks(4552), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 255, "Південний Матвій", 481, "Україна", new DateTime(2020, 9, 26, 14, 53, 23, 704, DateTimeKind.Local).AddTicks(4531), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 730, "Хмельницький", 1481, "Україна", new DateTime(2020, 11, 6, 15, 40, 37, 820, DateTimeKind.Local).AddTicks(4628), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 266, "Східний Борис", 505, "Україна", new DateTime(2020, 7, 17, 12, 54, 34, 953, DateTimeKind.Local).AddTicks(4794), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 17, "Київ", 33, "Україна", new DateTime(2020, 10, 13, 12, 59, 58, 758, DateTimeKind.Local).AddTicks(2205), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 225, "Південний Радимир", 426, "Україна", new DateTime(2021, 1, 21, 20, 52, 13, 236, DateTimeKind.Local).AddTicks(1111), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 401, "Південний Потап", 824, "Україна", new DateTime(2020, 10, 29, 16, 49, 54, 592, DateTimeKind.Local).AddTicks(801), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 664, "Східний Тихон", 1326, "Україна", new DateTime(2020, 12, 24, 0, 21, 36, 283, DateTimeKind.Local).AddTicks(8882), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 557, "Ужгород", 1117, "Україна", new DateTime(2021, 1, 14, 14, 9, 5, 667, DateTimeKind.Local).AddTicks(968), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 559, "Західний Левко", 1120, "Україна", new DateTime(2020, 4, 24, 2, 32, 25, 807, DateTimeKind.Local).AddTicks(3099), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 85, "Лисичанськ", 165, "Україна", new DateTime(2020, 10, 5, 9, 51, 27, 560, DateTimeKind.Local).AddTicks(6499), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 65, "Східний Мусій", 124, "Україна", new DateTime(2020, 3, 26, 3, 42, 26, 422, DateTimeKind.Local).AddTicks(7779), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 147, "Павлоград", 284, "Україна", new DateTime(2020, 6, 27, 13, 44, 9, 210, DateTimeKind.Local).AddTicks(4474), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 410, "Житомир", 845, "Україна", new DateTime(2020, 10, 12, 8, 29, 2, 432, DateTimeKind.Local).AddTicks(90), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 606, "Київ", 1223, "Україна", new DateTime(2020, 5, 12, 9, 58, 8, 96, DateTimeKind.Local).AddTicks(6176), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 680, "Східний Стефаній", 1365, "Україна", new DateTime(2020, 9, 22, 23, 16, 30, 127, DateTimeKind.Local).AddTicks(8992), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 53, "Луганськ", 106, "Україна", new DateTime(2020, 5, 8, 7, 18, 31, 772, DateTimeKind.Local).AddTicks(5928), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 480, "Черкаси", 973, "Україна", new DateTime(2021, 1, 18, 16, 26, 50, 226, DateTimeKind.Local).AddTicks(8362), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 8, "Південний Вадим", 16, "Україна", new DateTime(2020, 4, 15, 22, 18, 24, 801, DateTimeKind.Local).AddTicks(6338), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 151, "Макіївка", 290, "Україна", new DateTime(2021, 2, 3, 12, 23, 38, 139, DateTimeKind.Local).AddTicks(2277), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 491, "Одеса", 990, "Україна", new DateTime(2020, 12, 22, 11, 18, 31, 394, DateTimeKind.Local).AddTicks(5940), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 267, "Південний Яровид", 506, "Україна", new DateTime(2020, 10, 20, 9, 21, 30, 669, DateTimeKind.Local).AddTicks(7733), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 549, "Східний Лаврін", 1108, "Україна", new DateTime(2020, 5, 15, 12, 46, 48, 145, DateTimeKind.Local).AddTicks(1767), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 644, "Запоріжжя", 1285, "Україна", new DateTime(2020, 7, 17, 0, 58, 58, 265, DateTimeKind.Local).AddTicks(5710), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 379, "Ялта", 785, "Україна", new DateTime(2021, 2, 24, 17, 48, 22, 211, DateTimeKind.Local).AddTicks(1933), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 84, "Південний Зиновій", 164, "Україна", new DateTime(2020, 9, 12, 15, 20, 0, 439, DateTimeKind.Local).AddTicks(8878), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 392, "Східний Руслан", 810, "Україна", new DateTime(2020, 4, 15, 15, 18, 54, 140, DateTimeKind.Local).AddTicks(8125), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 489, "Одеса", 988, "Україна", new DateTime(2020, 11, 13, 21, 48, 54, 937, DateTimeKind.Local).AddTicks(5061), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 515, "Полтава", 1038, "Україна", new DateTime(2020, 10, 17, 1, 1, 17, 415, DateTimeKind.Local).AddTicks(2147), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 542, "Східний Добромир", 1090, "Україна", new DateTime(2020, 8, 5, 6, 45, 18, 907, DateTimeKind.Local).AddTicks(3507), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 688, "Ялта", 1383, "Україна", new DateTime(2021, 1, 3, 1, 27, 9, 93, DateTimeKind.Local).AddTicks(1136), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 183, "Артемівськ", 353, "Україна", new DateTime(2020, 5, 21, 16, 10, 47, 463, DateTimeKind.Local).AddTicks(6440), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 329, "Харків", 658, "Україна", new DateTime(2020, 12, 25, 21, 14, 0, 235, DateTimeKind.Local).AddTicks(1942), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 587, "Південний Всеслав", 1178, "Україна", new DateTime(2020, 5, 18, 15, 31, 51, 574, DateTimeKind.Local).AddTicks(4310), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 232, "Східний Валерій", 440, "Україна", new DateTime(2020, 3, 27, 0, 56, 0, 987, DateTimeKind.Local).AddTicks(7219), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 309, "Мукачеве", 616, "Україна", new DateTime(2020, 10, 25, 7, 45, 19, 454, DateTimeKind.Local).AddTicks(2680), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 444, "Єнакієве", 914, "Україна", new DateTime(2020, 10, 20, 15, 40, 42, 434, DateTimeKind.Local).AddTicks(3169), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 451, "Бердичів", 923, "Україна", new DateTime(2020, 4, 16, 2, 9, 13, 406, DateTimeKind.Local).AddTicks(885), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 634, "Керч", 1274, "Україна", new DateTime(2020, 9, 30, 14, 28, 35, 117, DateTimeKind.Local).AddTicks(3218), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 460, "Північний Ярополк", 936, "Україна", new DateTime(2020, 10, 25, 3, 43, 58, 586, DateTimeKind.Local).AddTicks(4280), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 636, "Північний Антін", 1277, "Україна", new DateTime(2020, 10, 29, 10, 21, 42, 242, DateTimeKind.Local).AddTicks(2134), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 322, "Олександрія", 641, "Україна", new DateTime(2020, 6, 16, 15, 49, 48, 513, DateTimeKind.Local).AddTicks(2117), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 351, "Київ", 719, "Україна", new DateTime(2020, 7, 23, 13, 37, 59, 369, DateTimeKind.Local).AddTicks(4336), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 145, "Західний Мирослав", 281, "Україна", new DateTime(2020, 7, 7, 6, 45, 47, 576, DateTimeKind.Local).AddTicks(1106), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 555, "Південний Кий", 1114, "Україна", new DateTime(2020, 6, 5, 1, 7, 3, 362, DateTimeKind.Local).AddTicks(5730), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 206, "Ізмаїл", 389, "Україна", new DateTime(2020, 9, 21, 12, 23, 32, 670, DateTimeKind.Local).AddTicks(495), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 704, "Західний Зеновій", 1416, "Україна", new DateTime(2021, 1, 1, 17, 2, 1, 53, DateTimeKind.Local).AddTicks(2661), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 221, "Північний Ізяслав", 415, "Україна", new DateTime(2020, 7, 16, 9, 47, 56, 509, DateTimeKind.Local).AddTicks(1036), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 449, "Північний Чорнота", 921, "Україна", new DateTime(2020, 3, 30, 22, 44, 4, 910, DateTimeKind.Local).AddTicks(504), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 328, "Євпаторія", 657, "Україна", new DateTime(2020, 3, 26, 12, 59, 44, 530, DateTimeKind.Local).AddTicks(9331), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 63, "Північний Сніжан", 121, "Україна", new DateTime(2021, 2, 6, 20, 19, 0, 564, DateTimeKind.Local).AddTicks(53), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 146, "Вінниця", 283, "Україна", new DateTime(2020, 6, 3, 21, 5, 41, 167, DateTimeKind.Local).AddTicks(4662), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 382, "Хмельницький", 790, "Україна", new DateTime(2021, 1, 21, 16, 56, 52, 285, DateTimeKind.Local).AddTicks(2182), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 665, "Східний Стожар", 1327, "Україна", new DateTime(2020, 6, 8, 16, 35, 31, 936, DateTimeKind.Local).AddTicks(5055), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 579, "Хмельницький", 1161, "Україна", new DateTime(2020, 4, 15, 1, 53, 30, 63, DateTimeKind.Local).AddTicks(4213), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 20, "Луганськ", 39, "Україна", new DateTime(2020, 5, 30, 23, 25, 50, 4, DateTimeKind.Local).AddTicks(617), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 73, "Західний Буйтур", 143, "Україна", new DateTime(2020, 11, 24, 15, 53, 1, 86, DateTimeKind.Local).AddTicks(634), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 576, "Південний Герасим", 1156, "Україна", new DateTime(2020, 7, 25, 1, 55, 11, 200, DateTimeKind.Local).AddTicks(3765), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 643, "Північний Мусій", 1284, "Україна", new DateTime(2021, 1, 27, 5, 55, 52, 560, DateTimeKind.Local).AddTicks(934), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 120, "Північний Юліан", 231, "Україна", new DateTime(2020, 10, 8, 16, 26, 17, 136, DateTimeKind.Local).AddTicks(1864), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 420, "Південний Віктор", 863, "Україна", new DateTime(2021, 2, 20, 13, 16, 6, 973, DateTimeKind.Local).AddTicks(437), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 545, "Чернівці", 1098, "Україна", new DateTime(2020, 10, 18, 9, 42, 57, 7, DateTimeKind.Local).AddTicks(5599), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 14, "Західний Мусій", 25, "Україна", new DateTime(2021, 2, 4, 23, 37, 23, 33, DateTimeKind.Local).AddTicks(6618), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 278, "Північний Станіслав", 534, "Україна", new DateTime(2020, 11, 14, 3, 41, 35, 55, DateTimeKind.Local).AddTicks(8510), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 306, "Південний Ілля", 609, "Україна", new DateTime(2020, 5, 1, 16, 27, 30, 292, DateTimeKind.Local).AddTicks(1283), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 213, "Дніпропетровськ", 400, "Україна", new DateTime(2020, 9, 13, 20, 18, 51, 882, DateTimeKind.Local).AddTicks(9856), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 691, "Південний Дарій", 1386, "Україна", new DateTime(2020, 12, 25, 3, 51, 21, 647, DateTimeKind.Local).AddTicks(2049), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 212, "Біла Церква", 398, "Україна", new DateTime(2020, 4, 7, 19, 54, 2, 913, DateTimeKind.Local).AddTicks(3061), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 287, "Алчевськ", 565, "Україна", new DateTime(2020, 6, 5, 6, 41, 1, 994, DateTimeKind.Local).AddTicks(6431), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 337, "Південний Всеслав", 678, "Україна", new DateTime(2020, 8, 4, 13, 31, 48, 70, DateTimeKind.Local).AddTicks(587), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 291, "Слов’янськ", 576, "Україна", new DateTime(2020, 4, 18, 2, 53, 58, 388, DateTimeKind.Local).AddTicks(4476), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 110, "Сєвєродонецьк", 213, "Україна", new DateTime(2020, 5, 26, 6, 6, 59, 200, DateTimeKind.Local).AddTicks(2636), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 622, "Західний Олелько", 1251, "Україна", new DateTime(2020, 8, 2, 19, 25, 20, 113, DateTimeKind.Local).AddTicks(1372), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 509, "Краматорськ", 1025, "Україна", new DateTime(2020, 10, 9, 19, 17, 4, 766, DateTimeKind.Local).AddTicks(7423), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 657, "Східний Буйтур", 1317, "Україна", new DateTime(2020, 7, 12, 18, 37, 12, 93, DateTimeKind.Local).AddTicks(6841), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 70, "Лисичанськ", 139, "Україна", new DateTime(2020, 10, 30, 8, 14, 33, 99, DateTimeKind.Local).AddTicks(8563), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 342, "Макіївка", 702, "Україна", new DateTime(2020, 7, 2, 22, 2, 1, 994, DateTimeKind.Local).AddTicks(6160), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 593, "Луганськ", 1193, "Україна", new DateTime(2021, 2, 18, 14, 22, 59, 788, DateTimeKind.Local).AddTicks(9101), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 719, "Південний Земислав", 1460, "Україна", new DateTime(2020, 11, 8, 4, 41, 54, 9, DateTimeKind.Local).AddTicks(6647), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 112, "Північний Валентин", 216, "Україна", new DateTime(2021, 1, 23, 12, 42, 42, 140, DateTimeKind.Local).AddTicks(9436), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 467, "Біла Церква", 945, "Україна", new DateTime(2020, 4, 11, 12, 4, 34, 181, DateTimeKind.Local).AddTicks(7211), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 713, "Південний Добромисл", 1440, "Україна", new DateTime(2020, 12, 20, 9, 16, 4, 526, DateTimeKind.Local).AddTicks(5639), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 733, "Південний Борис", 1487, "Україна", new DateTime(2020, 12, 19, 0, 32, 39, 642, DateTimeKind.Local).AddTicks(3580), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 7, "Західний Яромил", 15, "Україна", new DateTime(2020, 9, 5, 15, 24, 27, 383, DateTimeKind.Local).AddTicks(4899), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 29, "Східний Аркадій", 55, "Україна", new DateTime(2021, 1, 6, 19, 37, 15, 38, DateTimeKind.Local).AddTicks(1748), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 486, "Західний Алевтин", 985, "Україна", new DateTime(2020, 6, 16, 19, 4, 20, 344, DateTimeKind.Local).AddTicks(6839), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 98, "Бровари", 189, "Україна", new DateTime(2020, 7, 15, 23, 58, 55, 228, DateTimeKind.Local).AddTicks(1664), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 105, "Керч", 204, "Україна", new DateTime(2020, 3, 9, 13, 24, 47, 729, DateTimeKind.Local).AddTicks(7073), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 180, "Західний Семибор", 347, "Україна", new DateTime(2020, 7, 3, 2, 36, 32, 472, DateTimeKind.Local).AddTicks(4685), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 205, "Східний Родіон", 388, "Україна", new DateTime(2020, 12, 12, 5, 30, 2, 614, DateTimeKind.Local).AddTicks(7428), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 333, "Північний Любомир", 666, "Україна", new DateTime(2020, 10, 28, 2, 44, 18, 616, DateTimeKind.Local).AddTicks(2849), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 264, "Східний Славомир", 500, "Україна", new DateTime(2020, 8, 18, 15, 9, 22, 271, DateTimeKind.Local).AddTicks(1379), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 317, "Біла Церква", 630, "Україна", new DateTime(2020, 8, 1, 23, 50, 4, 476, DateTimeKind.Local).AddTicks(3122), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 488, "Північний Гліб", 987, "Україна", new DateTime(2020, 4, 18, 12, 44, 7, 338, DateTimeKind.Local).AddTicks(7961), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 59, "Кіровоград", 116, "Україна", new DateTime(2020, 10, 28, 6, 22, 29, 186, DateTimeKind.Local).AddTicks(9168), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 76, "Луганськ", 146, "Україна", new DateTime(2020, 4, 9, 9, 36, 41, 132, DateTimeKind.Local).AddTicks(4203), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 590, "Макіївка", 1184, "Україна", new DateTime(2020, 11, 5, 21, 32, 39, 711, DateTimeKind.Local).AddTicks(6367), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 578, "Слов’янськ", 1160, "Україна", new DateTime(2020, 4, 25, 16, 11, 20, 696, DateTimeKind.Local).AddTicks(3523), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 717, "Рівне", 1449, "Україна", new DateTime(2021, 1, 26, 19, 17, 22, 497, DateTimeKind.Local).AddTicks(5225), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 93, "Південний Велемир", 183, "Україна", new DateTime(2020, 10, 29, 19, 25, 27, 731, DateTimeKind.Local).AddTicks(4529), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 258, "Івано-Франківськ", 485, "Україна", new DateTime(2021, 3, 1, 13, 26, 14, 295, DateTimeKind.Local).AddTicks(2153), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 563, "Нікополь", 1128, "Україна", new DateTime(2021, 1, 15, 5, 55, 51, 356, DateTimeKind.Local).AddTicks(8246), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 568, "Макіївка", 1139, "Україна", new DateTime(2020, 4, 9, 12, 38, 46, 713, DateTimeKind.Local).AddTicks(2425), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 315, "Донецьк", 625, "Україна", new DateTime(2020, 8, 25, 2, 52, 12, 105, DateTimeKind.Local).AddTicks(1888), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 66, "Північний Устим", 125, "Україна", new DateTime(2020, 6, 18, 13, 54, 33, 496, DateTimeKind.Local).AddTicks(4532), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 536, "Північний Добромисл", 1083, "Україна", new DateTime(2020, 8, 26, 4, 20, 8, 81, DateTimeKind.Local).AddTicks(4231), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 682, "Красний Луч", 1370, "Україна", new DateTime(2020, 9, 9, 14, 5, 6, 136, DateTimeKind.Local).AddTicks(5971), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 34, "Лисичанськ", 62, "Україна", new DateTime(2020, 12, 9, 18, 21, 6, 983, DateTimeKind.Local).AddTicks(3546), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 694, "Полтава", 1394, "Україна", new DateTime(2020, 8, 14, 20, 58, 33, 135, DateTimeKind.Local).AddTicks(9689), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 209, "Алчевськ", 394, "Україна", new DateTime(2021, 1, 10, 12, 56, 15, 4, DateTimeKind.Local).AddTicks(5465), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 374, "Північний Болеслав", 770, "Україна", new DateTime(2020, 5, 25, 9, 48, 34, 129, DateTimeKind.Local).AddTicks(3133), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 251, "Алчевськ", 474, "Україна", new DateTime(2021, 1, 3, 3, 40, 13, 302, DateTimeKind.Local).AddTicks(9739), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 514, "Західний Доброслав", 1036, "Україна", new DateTime(2020, 12, 19, 4, 34, 8, 58, DateTimeKind.Local).AddTicks(364), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 564, "Північний Архип", 1129, "Україна", new DateTime(2020, 10, 2, 4, 51, 36, 891, DateTimeKind.Local).AddTicks(3121), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 605, "Південний Георгій", 1222, "Україна", new DateTime(2020, 7, 21, 5, 43, 23, 690, DateTimeKind.Local).AddTicks(6695), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 527, "Західний Звенислав", 1066, "Україна", new DateTime(2021, 2, 22, 21, 3, 35, 596, DateTimeKind.Local).AddTicks(7158), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 718, "Західний Євген", 1450, "Україна", new DateTime(2020, 8, 17, 21, 41, 1, 770, DateTimeKind.Local).AddTicks(5939), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 132, "Східний Лаврентій", 258, "Україна", new DateTime(2020, 9, 23, 22, 0, 44, 649, DateTimeKind.Local).AddTicks(8209), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 569, "Вінниця", 1142, "Україна", new DateTime(2020, 5, 12, 7, 9, 18, 656, DateTimeKind.Local).AddTicks(668), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 397, "Північний Ярема", 817, "Україна", new DateTime(2020, 12, 29, 18, 32, 40, 124, DateTimeKind.Local).AddTicks(4176), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 430, "Нікополь", 884, "Україна", new DateTime(2020, 11, 15, 2, 27, 57, 195, DateTimeKind.Local).AddTicks(2529), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 25, "Дніпродзержинськ", 46, "Україна", new DateTime(2020, 11, 10, 5, 5, 12, 46, DateTimeKind.Local).AddTicks(936), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 62, "Північний Яровид", 119, "Україна", new DateTime(2020, 10, 15, 18, 29, 35, 62, DateTimeKind.Local).AddTicks(2118), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 126, "Східний Златомир", 242, "Україна", new DateTime(2020, 11, 29, 11, 58, 29, 576, DateTimeKind.Local).AddTicks(2458), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 470, "Ялта", 950, "Україна", new DateTime(2020, 6, 30, 4, 16, 0, 122, DateTimeKind.Local).AddTicks(3871), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 651, "Північний Назар", 1299, "Україна", new DateTime(2021, 2, 21, 7, 45, 33, 214, DateTimeKind.Local).AddTicks(8534), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 49, "Південний Зоремир", 97, "Україна", new DateTime(2020, 9, 16, 0, 26, 12, 305, DateTimeKind.Local).AddTicks(3802), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 238, "Дніпропетровськ", 450, "Україна", new DateTime(2020, 11, 1, 4, 19, 55, 269, DateTimeKind.Local).AddTicks(955), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 588, "Східний Юхим", 1179, "Україна", new DateTime(2021, 1, 27, 4, 5, 37, 805, DateTimeKind.Local).AddTicks(8781), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 639, "Рівне", 1280, "Україна", new DateTime(2021, 2, 24, 12, 47, 9, 678, DateTimeKind.Local).AddTicks(2603), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 273, "Південний Олесь", 527, "Україна", new DateTime(2020, 9, 7, 15, 31, 17, 529, DateTimeKind.Local).AddTicks(6037), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 508, "Північний Славолюб", 1024, "Україна", new DateTime(2020, 7, 6, 6, 2, 47, 52, DateTimeKind.Local).AddTicks(3705), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 363, "Київ", 743, "Україна", new DateTime(2020, 8, 27, 5, 53, 39, 374, DateTimeKind.Local).AddTicks(7563), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 27, "Рівне", 48, "Україна", new DateTime(2020, 10, 27, 16, 17, 5, 872, DateTimeKind.Local).AddTicks(2383), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 91, "Південний Анастасій", 179, "Україна", new DateTime(2020, 10, 22, 0, 57, 25, 297, DateTimeKind.Local).AddTicks(1670), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 138, "Ізмаїл", 269, "Україна", new DateTime(2020, 9, 26, 16, 27, 32, 413, DateTimeKind.Local).AddTicks(4383), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 720, "Південний Денис", 1463, "Україна", new DateTime(2021, 2, 16, 0, 51, 11, 544, DateTimeKind.Local).AddTicks(4116), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 406, "Конотоп", 840, "Україна", new DateTime(2020, 8, 30, 11, 20, 49, 79, DateTimeKind.Local).AddTicks(8097), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 265, "Східний Арсеній", 501, "Україна", new DateTime(2020, 8, 10, 7, 32, 41, 613, DateTimeKind.Local).AddTicks(9242), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 253, "Артемівськ", 479, "Україна", new DateTime(2020, 7, 29, 5, 23, 18, 501, DateTimeKind.Local).AddTicks(6222), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 364, "Кіровоград", 749, "Україна", new DateTime(2020, 12, 7, 9, 13, 22, 414, DateTimeKind.Local).AddTicks(8189), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 46, "Північний Брячислав", 86, "Україна", new DateTime(2020, 12, 2, 23, 56, 44, 842, DateTimeKind.Local).AddTicks(5697), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 586, "Південний Корній", 1177, "Україна", new DateTime(2020, 6, 2, 18, 38, 31, 314, DateTimeKind.Local).AddTicks(1258), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 627, "Північний Антін", 1259, "Україна", new DateTime(2020, 12, 12, 8, 15, 9, 901, DateTimeKind.Local).AddTicks(3965), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 727, "Західний Дмитро", 1477, "Україна", new DateTime(2020, 11, 22, 15, 56, 50, 921, DateTimeKind.Local).AddTicks(5062), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 100, "Конотоп", 193, "Україна", new DateTime(2020, 12, 21, 15, 43, 6, 109, DateTimeKind.Local).AddTicks(1794), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 375, "Північний Любозар", 777, "Україна", new DateTime(2021, 1, 30, 16, 40, 36, 334, DateTimeKind.Local).AddTicks(8108), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 171, "Північний Тур", 329, "Україна", new DateTime(2021, 2, 27, 10, 29, 39, 831, DateTimeKind.Local).AddTicks(5133), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 256, "Львів", 482, "Україна", new DateTime(2020, 7, 19, 0, 54, 54, 407, DateTimeKind.Local).AddTicks(3290), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 547, "Південний Любомир", 1103, "Україна", new DateTime(2020, 5, 21, 19, 23, 9, 186, DateTimeKind.Local).AddTicks(2936), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 658, "Східний Дмитро", 1318, "Україна", new DateTime(2020, 3, 13, 10, 53, 51, 3, DateTimeKind.Local).AddTicks(9559), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 331, "Західний Яромир", 661, "Україна", new DateTime(2020, 3, 18, 4, 41, 37, 114, DateTimeKind.Local).AddTicks(5264), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 95, "Красний Луч", 186, "Україна", new DateTime(2020, 8, 27, 8, 50, 14, 140, DateTimeKind.Local).AddTicks(1883), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 416, "Південний Ілля", 858, "Україна", new DateTime(2020, 5, 18, 22, 55, 38, 116, DateTimeKind.Local).AddTicks(6081), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 523, "Північний Мстислав", 1059, "Україна", new DateTime(2020, 10, 10, 6, 44, 42, 421, DateTimeKind.Local).AddTicks(9542), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 724, "Мукачеве", 1471, "Україна", new DateTime(2020, 5, 6, 11, 0, 23, 560, DateTimeKind.Local).AddTicks(1104), "Vodafone" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 82, "Північний Ілля", 162, "Україна", new DateTime(2020, 3, 5, 3, 8, 11, 958, DateTimeKind.Local).AddTicks(5275), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 262, "Краматорськ", 497, "Україна", new DateTime(2020, 5, 11, 19, 28, 37, 799, DateTimeKind.Local).AddTicks(345), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 9, "Краматорськ", 18, "Україна", new DateTime(2020, 11, 19, 8, 56, 27, 880, DateTimeKind.Local).AddTicks(5091), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 58, "Єнакієве", 114, "Україна", new DateTime(2020, 5, 29, 21, 3, 15, 68, DateTimeKind.Local).AddTicks(315), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 517, "Єнакієве", 1041, "Україна", new DateTime(2020, 7, 18, 9, 2, 47, 291, DateTimeKind.Local).AddTicks(8125), "lifecell" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 663, "Північний Зборислав", 1324, "Україна", new DateTime(2020, 10, 12, 22, 43, 31, 490, DateTimeKind.Local).AddTicks(1658), "Укртелеком" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 150, "Ізмаїл", 288, "Україна", new DateTime(2020, 4, 5, 0, 29, 48, 528, DateTimeKind.Local).AddTicks(3437), "Kyivstar" });

            migrationBuilder.InsertData(
                table: "ContactInfos",
                columns: new[] { "Id", "City", "ContactId", "Country", "CreatedAt", "Provider" },
                values: new object[] { 684, "Тернопіль", 1373, "Україна", new DateTime(2020, 9, 4, 7, 59, 12, 408, DateTimeKind.Local).AddTicks(1585), "lifecell" });

            migrationBuilder.CreateIndex(
                name: "IX_ContactInfos_ContactId",
                table: "ContactInfos",
                column: "ContactId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_Contacts_UserId",
                table: "Contacts",
                column: "UserId");

            migrationBuilder.CreateIndex(
                name: "IX_Tags_UserId",
                table: "Tags",
                column: "UserId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "ContactInfos");

            migrationBuilder.DropTable(
                name: "Moderators");

            migrationBuilder.DropTable(
                name: "Tags");

            migrationBuilder.DropTable(
                name: "Contacts");

            migrationBuilder.DropTable(
                name: "Users");
        }
    }
}
